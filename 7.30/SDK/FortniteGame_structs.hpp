#pragma once

// Dumped with Dumper-7!

#ifdef _MSC_VER
	#pragma pack(push, 0x08)
#endif

namespace SDK
{
enum class EBuildingReplacementType : uint8
{
	BRT_None                       = 0,
	BRT_Edited                     = 1,
	BRT_Upgrade                    = 2,
	BRT_MAX                        = 3,
};
enum class EFortAIDirectorEvent : uint8
{
	PlayerAIEnemies                = 0,
	PlayerTakeDamage               = 1,
	PlayerHealth                   = 2,
	PlayerDeath                    = 3,
	PlayerLookAtAIEnemy            = 4,
	PlayerDamageAIEnemy            = 5,
	PlayerKillAIEnemy              = 6,
	PlayerHealingPotential         = 7,
	PlayerAmmoLight                = 8,
	PlayerAmmoMedium               = 9,
	PlayerAmmoHeavy                = 10,
	PlayerAmmoShells               = 11,
	PlayerAmmoEnergy               = 12,
	PlayerAINear                   = 13,
	PlayerMovement                 = 14,
	ObjectiveTakeDamage            = 15,
	ObjectiveHealth                = 16,
	ObjectiveDestroyed             = 17,
	TrapFired                      = 18,
	TrapDamagedAIEnemy             = 19,
	ObjectivePathCost              = 20,
	PlayerPathCost                 = 21,
	ObjectiveNearbyBuildingDamaged = 22,
	Max_None                       = 23,
	EFortAIDirectorEvent_MAX       = 24,
};
enum class EKeepDefenseState : uint8
{
	Inactive                       = 0,
	Warmup                         = 1,
	Defense                        = 2,
	LastAlive                      = 3,
	Max                            = 4,
};
enum class EFortDayPhase : uint8
{
	Morning                        = 0,
	Day                            = 1,
	Evening                        = 2,
	Night                          = 3,
	NumPhases                      = 4,
	EFortDayPhase_MAX              = 5,
};
enum class EFortCustomPartType : uint8
{
	Head                           = 0,
	Body                           = 1,
	Hat                            = 2,
	Backpack                       = 3,
	Charm                          = 4,
	Face                           = 5,
	NumTypes                       = 6,
	EFortCustomPartType_MAX        = 7,
};
enum class EFortInventoryType : uint8
{
	World                          = 0,
	Account                        = 1,
	Outpost                        = 2,
	MAX                            = 3,
};
enum class EOfferPurchaseError : uint8
{
	NoError                        = 0,
	PendingServerConfirmation      = 1,
	CannotAffordItem               = 2,
	InvalidOfferID                 = 3,
	InvalidPriceIndex              = 4,
	NoneLeft                       = 5,
	PurchaseAlreadyPending         = 6,
	NoConnection                   = 7,
	AccountNotEligible             = 8,
	CannotGiftItem                 = 9,
	MFANotEnabled                  = 10,
	EOfferPurchaseError_MAX        = 11,
};
enum class EFortAlteration : uint8
{
	AttributeSlot                  = 0,
	GameplaySlot                   = 1,
	ComplexCosmeticSlot            = 2,
	UserPickedCosmeticSlot         = 3,
	ColorSlot                      = 4,
	HeroSpecializationTier1Slot    = 5,
	HeroSpecializationTier2Slot    = 6,
	HeroSpecializationTier3Slot    = 7,
	HeroSpecializationTier4Slot    = 8,
	HeroSpecializationTier5Slot    = 9,
	EFortAlteration_MAX            = 10,
};
enum class EPlayerBanReasons : uint8
{
	Teaming                        = 0,
	Afk_Leeching                   = 1,
	Harassment                     = 2,
	TradeScamming                  = 3,
	Exploiting                     = 4,
	EPlayerBanReasons_MAX          = 5,
};
enum class EFortItemType : uint8
{
	WorldItem                      = 0,
	Ammo                           = 1,
	Badge                          = 2,
	BackpackPickup                 = 3,
	BuildingPiece                  = 4,
	CharacterPart                  = 5,
	Consumable                     = 6,
	Deco                           = 7,
	EditTool                       = 8,
	Ingredient                     = 9,
	ItemCache                      = 10,
	Food                           = 11,
	Gadget                         = 12,
	AthenaGadget                   = 13,
	HomebaseGadget                 = 14,
	HeroAbility                    = 15,
	MissionItem                    = 16,
	Trap                           = 17,
	Weapon                         = 18,
	WeaponMelee                    = 19,
	WeaponRanged                   = 20,
	WeaponHarvest                  = 21,
	WorldResource                  = 22,
	AccountItem                    = 23,
	AccountResource                = 24,
	CollectedResource              = 25,
	Alteration                     = 26,
	CardPack                       = 27,
	CharacterCosmetic              = 28,
	Currency                       = 29,
	Hero                           = 30,
	Schematic                      = 31,
	Worker                         = 32,
	Token                          = 33,
	DailyRewardScheduleToken       = 34,
	CodeToken                      = 35,
	Stat                           = 36,
	Buff                           = 37,
	BuffCredit                     = 38,
	Quest                          = 39,
	ChallengeBundle                = 40,
	ChallengeBundleSchedule        = 41,
	GameplayModifier               = 42,
	Outpost                        = 43,
	HomebaseNode                   = 44,
	Defender                       = 45,
	ConversionControl              = 46,
	DeployableBaseCloudSave        = 47,
	ConsumableAccountItem          = 48,
	Quota                          = 49,
	Expedition                     = 50,
	HomebaseBannerIcon             = 51,
	HomebaseBannerColor            = 52,
	AthenaSkyDiveContrail          = 53,
	PersonalVehicle                = 54,
	AthenaGlider                   = 55,
	AthenaPickaxe                  = 56,
	AthenaHat                      = 57,
	AthenaBackpack                 = 58,
	AthenaCharacter                = 59,
	AthenaDance                    = 60,
	AthenaConsumableEmote          = 61,
	AthenaLoadingScreen            = 62,
	AthenaBattleBus                = 63,
	AthenaVehicleCosmetic          = 64,
	AthenaItemWrap                 = 65,
	AthenaCallingCard              = 66,
	AthenaMapMarker                = 67,
	AthenaMusicPack                = 68,
	AthenaPetCosmetic              = 69,
	AthenaVictoryPose              = 70,
	AthenaSeasonTreasure           = 71,
	AthenaSeason                   = 72,
	EventDescription               = 73,
	MatchAward                     = 74,
	AthenaEventToken               = 75,
	EventPurchaseTracker           = 76,
	CosmeticVariantToken           = 77,
	Stamp                          = 78,
	CampaignHeroLoadout            = 79,
	Playset                        = 80,
	PrerollData                    = 81,
	CreativePlot                   = 82,
	SpecialItem                    = 83,
	Emote                          = 84,
	Stack                          = 85,
	CollectionBookPage             = 86,
	BGAConsumableWrapper           = 87,
	GiftBox                        = 88,
	Profile                        = 89,
	Max_None                       = 90,
	EFortItemType_MAX              = 91,
};
enum class EFortTeam : uint8
{
	HumanCampaign                  = 0,
	Monster                        = 1,
	HumanPvP_Team1                 = 2,
	HumanPvP_Team2                 = 3,
	HumanPvP_Team3                 = 4,
	HumanPvP_Team4                 = 5,
	HumanPvP_Team5                 = 6,
	HumanPvP_Team6                 = 7,
	HumanPvP_Team7                 = 8,
	HumanPvP_Team8                 = 9,
	HumanPvP_Team9                 = 10,
	HumanPvP_Team10                = 11,
	HumanPvP_Team11                = 12,
	HumanPvP_Team12                = 13,
	HumanPvP_Team13                = 14,
	HumanPvP_Team14                = 15,
	HumanPvP_Team15                = 16,
	HumanPvP_Team16                = 17,
	HumanPvP_Team17                = 18,
	HumanPvP_Team18                = 19,
	HumanPvP_Team19                = 20,
	HumanPvP_Team20                = 21,
	HumanPvP_Team21                = 22,
	HumanPvP_Team22                = 23,
	HumanPvP_Team23                = 24,
	HumanPvP_Team24                = 25,
	HumanPvP_Team25                = 26,
	HumanPvP_Team26                = 27,
	HumanPvP_Team27                = 28,
	HumanPvP_Team28                = 29,
	HumanPvP_Team29                = 30,
	HumanPvP_Team30                = 31,
	HumanPvP_Team31                = 32,
	HumanPvP_Team32                = 33,
	HumanPvP_Team33                = 34,
	HumanPvP_Team34                = 35,
	HumanPvP_Team35                = 36,
	HumanPvP_Team36                = 37,
	HumanPvP_Team37                = 38,
	HumanPvP_Team38                = 39,
	HumanPvP_Team39                = 40,
	HumanPvP_Team40                = 41,
	HumanPvP_Team41                = 42,
	HumanPvP_Team42                = 43,
	HumanPvP_Team43                = 44,
	HumanPvP_Team44                = 45,
	HumanPvP_Team45                = 46,
	HumanPvP_Team46                = 47,
	HumanPvP_Team47                = 48,
	HumanPvP_Team48                = 49,
	HumanPvP_Team49                = 50,
	HumanPvP_Team50                = 51,
	HumanPvP_Team51                = 52,
	HumanPvP_Team52                = 53,
	HumanPvP_Team53                = 54,
	HumanPvP_Team54                = 55,
	HumanPvP_Team55                = 56,
	HumanPvP_Team56                = 57,
	HumanPvP_Team57                = 58,
	HumanPvP_Team58                = 59,
	HumanPvP_Team59                = 60,
	HumanPvP_Team60                = 61,
	HumanPvP_Team61                = 62,
	HumanPvP_Team62                = 63,
	HumanPvP_Team63                = 64,
	HumanPvP_Team64                = 65,
	HumanPvP_Team65                = 66,
	HumanPvP_Team66                = 67,
	HumanPvP_Team67                = 68,
	HumanPvP_Team68                = 69,
	HumanPvP_Team69                = 70,
	HumanPvP_Team70                = 71,
	HumanPvP_Team71                = 72,
	HumanPvP_Team72                = 73,
	HumanPvP_Team73                = 74,
	HumanPvP_Team74                = 75,
	HumanPvP_Team75                = 76,
	HumanPvP_Team76                = 77,
	HumanPvP_Team77                = 78,
	HumanPvP_Team78                = 79,
	HumanPvP_Team79                = 80,
	HumanPvP_Team80                = 81,
	HumanPvP_Team81                = 82,
	HumanPvP_Team82                = 83,
	HumanPvP_Team83                = 84,
	HumanPvP_Team84                = 85,
	HumanPvP_Team85                = 86,
	HumanPvP_Team86                = 87,
	HumanPvP_Team87                = 88,
	HumanPvP_Team88                = 89,
	HumanPvP_Team89                = 90,
	HumanPvP_Team90                = 91,
	HumanPvP_Team91                = 92,
	HumanPvP_Team92                = 93,
	HumanPvP_Team93                = 94,
	HumanPvP_Team94                = 95,
	HumanPvP_Team95                = 96,
	HumanPvP_Team96                = 97,
	HumanPvP_Team97                = 98,
	HumanPvP_Team98                = 99,
	HumanPvP_Team99                = 100,
	HumanPvP_Team100               = 101,
	HumanPvP_Team101               = 102,
	Spectator                      = 103,
	MAX                            = 104,
};
enum class EAthenaTravelLogPlayerType : uint8
{
	Self                           = 0,
	Ally                           = 1,
	Enemy                          = 2,
	Invalid                        = 3,
	EAthenaTravelLogPlayerType_MAX = 4,
};
enum class EAthenaTravelEventType : uint8
{
	GroundMove                     = 0,
	AirMove                        = 1,
	BattleBusJump                  = 2,
	LaunchJump                     = 3,
	Landed                         = 4,
	OpenChest                      = 5,
	OpenAmmo                       = 6,
	GotAssist                      = 7,
	GotKnockdown                   = 8,
	GotKill                        = 9,
	PlayerDowned                   = 10,
	PlayerDied                     = 11,
	Won                            = 12,
	DealtDamage                    = 13,
	Healed                         = 14,
	Count                          = 15,
	EAthenaTravelEventType_MAX     = 16,
};
enum class ERewardSource : uint8
{
	Invalid                        = 0,
	MinutesPlayed                  = 1,
	FirstKill                      = 2,
	TeamKills                      = 3,
	FirstRevive                    = 4,
	AdditionalRevives              = 5,
	Placement                      = 6,
	Medals                         = 7,
	FirstWin                       = 8,
	SeasonLevelUp                  = 9,
	BookLevelUp                    = 10,
	MAX_COUNT                      = 11,
	ERewardSource_MAX              = 12,
};
enum class EAthenaMatchXpMultiplierSource : uint8
{
	Invalid                        = 0,
	BattlePassSelf                 = 1,
	BattlePassFriends              = 2,
	CosmeticSet                    = 3,
	AntiAddictionPenalty           = 4,
	BonusXpEvent                   = 5,
	MAX_COUNT                      = 6,
	EAthenaMatchXpMultiplierSource_MAX = 7,
};
enum class ECampaignCustomizationCategory : uint8
{
	None                           = 0,
	PersonalVehicle                = 1,
	ECampaignCustomizationCategory_MAX = 2,
};
enum class EVolumeState : uint8
{
	Uninitialized                  = 0,
	ReadOnly                       = 1,
	Initializing                   = 2,
	Ready                          = 3,
	EVolumeState_MAX               = 4,
};
enum class EAthenaScoringEvent : uint8
{
	None                           = 0,
	Elimination                    = 1,
	ChestOpened                    = 2,
	AmmoCanOpened                  = 3,
	SupplyDropOpened               = 4,
	SupplyLlamaOpened              = 5,
	ForagedItemConsumed            = 6,
	SurvivalInMinutes              = 7,
	CollectedCoinBronze            = 8,
	CollectedCoinSilver            = 9,
	CollectedCoinGold              = 10,
	AIKilled                       = 11,
	EAthenaScoringEvent_MAX        = 12,
};
enum class EFortVoteStatus : uint8
{
	Begin                          = 0,
	Update                         = 1,
	End                            = 2,
	BeginLockout                   = 3,
	EndLockout                     = 4,
	EFortVoteStatus_MAX            = 5,
};
enum class EFortVoteType : uint8
{
	SurvivalVote                   = 0,
	DifficultyIncrease             = 1,
	MissionActivation              = 2,
	ContinueOrExtract              = 3,
	EFortVoteType_MAX              = 4,
};
enum class EFortQuickBars : uint8
{
	Primary                        = 0,
	Secondary                      = 1,
	Max_None                       = 2,
	EFortQuickBars_MAX             = 3,
};
enum class EAthenaCustomizationCategory : uint8
{
	None                           = 0,
	Glider                         = 1,
	Pickaxe                        = 2,
	Hat                            = 3,
	Backpack                       = 4,
	Character                      = 5,
	LoadingScreen                  = 6,
	BattleBus                      = 7,
	VehicleDecoration              = 8,
	CallingCard                    = 9,
	MapMarker                      = 10,
	Dance                          = 11,
	ConsumableEmote                = 12,
	VictoryPose                    = 13,
	SkyDiveContrail                = 14,
	MusicPack                      = 15,
	ItemWrap                       = 16,
	PetSkin                        = 17,
	MAX                            = 18,
};
enum class EStatCategory : uint8
{
	Combat                         = 0,
	Building                       = 1,
	Utility                        = 2,
	Max_None                       = 3,
	EStatCategory_MAX              = 4,
};
enum class EFortResourceType : uint8
{
	Wood                           = 0,
	Stone                          = 1,
	Metal                          = 2,
	Permanite                      = 3,
	None                           = 4,
	EFortResourceType_MAX          = 5,
};
enum class ERichPresenceStateChange : uint8
{
	AutoUpdate                     = 0,
	Idle                           = 1,
	Active                         = 2,
	Busy                           = 3,
	NotBusy                        = 4,
	ERichPresenceStateChange_MAX   = 5,
};
enum class ESubGame : uint8
{
	Campaign                       = 0,
	Athena                         = 1,
	Invalid                        = 2,
	Count                          = 2,
	ESubGame_MAX                   = 3,
};
enum class ELockOnState : uint8
{
	NoTarget                       = 0,
	TargetAcquired                 = 1,
	LockingOnToTarget              = 2,
	TargetLockedOn                 = 3,
	Cooldown                       = 4,
	COUNT                          = 5,
	ELockOnState_MAX               = 6,
};
enum class EStatMod : uint8
{
	Delta                          = 0,
	Set                            = 1,
	Maximum                        = 2,
	EStatMod_MAX                   = 3,
};
enum class EFortDamageZone : uint8
{
	Light                          = 0,
	Normal                         = 1,
	Critical                       = 2,
	Vulnerability                  = 3,
	Max                            = 4,
};
enum class ETInteractionType : uint8
{
	IT_NoInteraction               = 0,
	IT_Simple                      = 1,
	IT_LongPress                   = 2,
	IT_BuildingEdit                = 3,
	IT_BuildingImprovement         = 4,
	IT_TrapPlacement               = 5,
	IT_MAX                         = 6,
};
enum class EFortItemTier : uint8
{
	No_Tier                        = 0,
	I                              = 1,
	II                             = 2,
	III                            = 3,
	IV                             = 4,
	V                              = 5,
	VI                             = 6,
	VII                            = 7,
	VIII                           = 8,
	IX                             = 9,
	X                              = 10,
	NumItemTierValues              = 11,
	EFortItemTier_MAX              = 12,
};
enum class EFortItemEntryState : uint8
{
	NoneState                      = 0,
	NewItemCount                   = 1,
	ShouldShowItemToast            = 2,
	DurabilityInitialized          = 3,
	DoNotShowSpawnParticles        = 4,
	FromRecoveredBackpack          = 5,
	FromGift                       = 6,
	PendingUpgradeCriteriaProgress = 7,
	OwnerBuildingHandle            = 8,
	FromDroppedPickup              = 9,
	JustCrafted                    = 10,
	CraftAndSlotTarget             = 11,
	GenericAttributeValueSet       = 12,
	EFortItemEntryState_MAX        = 13,
};
enum class EFortRequestedGameplayAction : uint8
{
	ContinuePlaying                = 0,
	StartPlaying                   = 1,
	StopPlaying                    = 2,
	EnterZone                      = 3,
	LeaveZone                      = 4,
	ReturnToMainMenu               = 5,
	QuitGame                       = 6,
	Invalid                        = 7,
	EFortRequestedGameplayAction_MAX = 8,
};
enum class EFortGameplayState : uint8
{
	NormalGameplay                 = 0,
	WaitingToStart                 = 1,
	EndOfZone                      = 2,
	EnteringZone                   = 3,
	LeavingZone                    = 4,
	Invalid                        = 5,
	EFortGameplayState_MAX         = 6,
};
enum class EFortCombatEvents : uint8
{
	HuskFollowing                  = 0,
	SmasherFollowing               = 1,
	TrollFollowing                 = 2,
	FlingerFollowing               = 3,
	TakerFollowing                 = 4,
	HuskCombatNearby               = 5,
	SmasherCombatNearby            = 6,
	TrollCombatNearby              = 7,
	FlingerCombatNearby            = 8,
	TakerCombatNearby              = 9,
	PlayerTakeDamage               = 10,
	PlayerHealth                   = 11,
	PlayerLookAtEnemy              = 12,
	PlayerDamageEnemy              = 13,
	PlayerKilledEnemy              = 14,
	AtlasTakeDamage                = 15,
	AtlasHealth                    = 16,
	AtlasDestroyed                 = 17,
	TrapFiring                     = 18,
	BuildingTakeDamage             = 19,
	FoodHealingPotential           = 20,
	PlayerAmmo                     = 21,
	EnemiesNear                    = 22,
	PlayerMovement                 = 23,
	BuildingDamagedNearObjective   = 24,
	TrapDamageEnemy                = 25,
	ObjectivePathCost              = 26,
	PlayerPathCost                 = 27,
	Max_None                       = 28,
	EFortCombatEvents_MAX          = 29,
};
enum class EBuildingHighlightType : uint8
{
	Primary                        = 0,
	Interact                       = 1,
	WillBeDestroyed                = 2,
	Quest                          = 3,
	MAX_None                       = 4,
	EBuildingHighlightType_MAX     = 5,
};
enum class EFortJumpStaminaCost : uint8
{
	None                           = 0,
	Trigger                        = 1,
	SprintTrigger                  = 2,
	SprintAir                      = 3,
	EFortJumpStaminaCost_MAX       = 4,
};
enum class EFortPCTutorialCompletedState : uint8
{
	Unknown                        = 0,
	Incomplete                     = 1,
	Complete                       = 2,
	EFortPCTutorialCompletedState_MAX = 3,
};
enum class EFortCompletionResult : uint8
{
	Win                            = 0,
	Loss                           = 1,
	Draw                           = 2,
	Undefined                      = 3,
	EFortCompletionResult_MAX      = 4,
};
enum class EFortRewardActivityType : uint8
{
	General                        = 0,
	MissionPrimary                 = 1,
	MissionSecondary               = 2,
	AccountLevelUp                 = 3,
	Max_None                       = 4,
	EFortRewardActivityType_MAX    = 5,
};
enum class EFortElementalDamageType : uint8
{
	None                           = 0,
	Fire                           = 1,
	Ice                            = 2,
	Lightning                      = 3,
	Energy                         = 4,
	MAX                            = 5,
};
enum class EFortDamageNumberType : uint8
{
	None                           = 0,
	Pawn                           = 1,
	Building                       = 2,
	Player                         = 3,
	Shield                         = 4,
	Score                          = 5,
	DBNO                           = 6,
	EFortDamageNumberType_MAX      = 7,
};
enum class EFortResourceLevel : uint8
{
	First                          = 0,
	Second                         = 1,
	Third                          = 2,
	Fourth                         = 3,
	Fifth                          = 4,
	Sixth                          = 5,
	NumLevels                      = 6,
	Invalid                        = 7,
	EFortResourceLevel_MAX         = 8,
};
enum class EFortCostInfoTypes : uint8
{
	Placement                      = 0,
	Repair                         = 1,
	Conversion                     = 2,
	Ability                        = 3,
	None                           = 4,
	EFortCostInfoTypes_MAX         = 5,
};
enum class EFortBuildPreviewMarkerOptionalAdjustment : uint8
{
	None                           = 0,
	FreeWallPieceOnTop             = 1,
	FreeWallPieceOnBottom          = 2,
	EFortBuildPreviewMarkerOptionalAdjustment_MAX = 3,
};
enum class EFortIsFinalXpUpdate : uint8
{
	Uninitialized                  = 0,
	NotFinal                       = 1,
	Final                          = 2,
	EFortIsFinalXpUpdate_MAX       = 3,
};
enum class EFortVoteArbitratorType : uint8
{
	Invalid                        = 0,
	Majority                       = 1,
	Unanimous                      = 2,
	EFortVoteArbitratorType_MAX    = 3,
};
enum class EAthenaGamePhase : uint8
{
	None                           = 0,
	Setup                          = 1,
	Warmup                         = 2,
	Aircraft                       = 3,
	SafeZones                      = 4,
	EndGame                        = 5,
	Count                          = 6,
	EAthenaGamePhase_MAX           = 7,
};
enum class EAthenaGamePhaseStep : uint8
{
	None                           = 0,
	Setup                          = 1,
	Warmup                         = 2,
	GetReady                       = 3,
	BusLocked                      = 4,
	BusFlying                      = 5,
	StormForming                   = 6,
	StormHolding                   = 7,
	StormShrinking                 = 8,
	Countdown                      = 9,
	FinalCountdown                 = 10,
	EndGame                        = 11,
	Count                          = 12,
	EAthenaGamePhaseStep_MAX       = 13,
};
enum class EAthenaStormCapState : uint8
{
	None                           = 0,
	Clear                          = 1,
	Warning                        = 2,
	Damaging                       = 3,
	EAthenaStormCapState_MAX       = 4,
};
enum class EAthenaGameMsgType : uint8
{
	None                           = 0,
	DefaultIntro                   = 1,
	DefaultMessage                 = 2,
	DefaultCriticalMessage         = 3,
	CommIntro                      = 4,
	CommMessage                    = 5,
	CommCriticalMessage            = 6,
	CornerIntro                    = 7,
	CornerMessage                  = 8,
	CornerCriticalMessage          = 9,
	RespawnTurningOffWarning       = 10,
	RespawnOffWarning              = 11,
	EAthenaGameMsgType_MAX         = 12,
};
enum class EWaveRules : uint8
{
	KillAllEnemies                 = 0,
	Timed                          = 1,
	KillPoints                     = 2,
	EWaveRules_MAX                 = 3,
};
enum class EAthenaAerialPhase : uint8
{
	None                           = 0,
	BusCantExit                    = 1,
	BusCanExit                     = 2,
	Skydiving                      = 3,
	Parachuting                    = 4,
	EAthenaAerialPhase_MAX         = 5,
};
enum class ESafeZoneStartUp : uint8
{
	UseDefaultGameBehavior         = 0,
	StartsWithWarmUp               = 1,
	StartsWithAirCraft             = 2,
	ESafeZoneStartUp_MAX           = 3,
};
enum class EFriendlyFireType : uint8
{
	Off                            = 0,
	On                             = 1,
	EFriendlyFireType_MAX          = 2,
};
enum class EAirCraftBehavior : uint8
{
	Default                        = 0,
	OpposingAirCraftForEachTeam    = 1,
	FlyTowardFirstCircleCenter     = 2,
	NoAircraft                     = 3,
	EAirCraftBehavior_MAX          = 4,
};
enum class EFortReportDayPhase : uint8
{
	Dawn                           = 0,
	Dusk                           = 1,
	ZoneFinished                   = 2,
	PlayerLogout                   = 3,
	EFortReportDayPhase_MAX        = 4,
};
enum class EForceKickAfterDeathMode : uint8
{
	Disabled                       = 0,
	KickAll                        = 1,
	KickPrivate                    = 2,
	EForceKickAfterDeathMode_MAX   = 3,
};
enum class ECapturePointState : uint8
{
	Idle                           = 0,
	Capturing                      = 1,
	Contested                      = 2,
	Resetting                      = 3,
	Captured                       = 4,
	Reset                          = 5,
	ECapturePointState_MAX         = 6,
};
enum class EPropertyOverrideTargetType : uint8
{
	None                           = 0,
	Default                        = 1,
	ImmutableTarget                = 2,
	EPropertyOverrideTargetType_MAX = 3,
};
enum class EHudVisibilityState : uint8
{
	FullyVisible                   = 0,
	FullyHidden                    = 1,
	GameOnly                       = 2,
	ReplayOnly                     = 3,
	MAX                            = 4,
};
enum class EFortReplayEventType : uint8
{
	Elimination                    = 0,
	Eliminated                     = 1,
	DBNO                           = 2,
	UserPlaced                     = 3,
	MAX                            = 4,
};
enum class ESpectatorCameraType : uint8
{
	ThirdPerson                    = 0,
	DroneFree                      = 1,
	Gameplay                       = 2,
	Arena                          = 3,
	Free                           = 4,
	ReverseShot                    = 5,
	FollowShot                     = 6,
	DroneFollow                    = 7,
	DroneAttach                    = 8,
	Projectile                     = 9,
	DroneAutoFrame                 = 10,
	MAX                            = 11,
};
enum class ECaptureState : uint8
{
	CS_Idle                        = 0,
	CS_Capturing                   = 1,
	CS_Contested                   = 2,
	CS_Resetting                   = 3,
	CS_Captured                    = 4,
	CS_Reset                       = 5,
	CS_MAX                         = 6,
};
enum class EFOBIOStatus : uint8
{
	Saving                         = 0,
	Loading                        = 1,
	Free                           = 2,
	EFOBIOStatus_MAX               = 3,
};
enum class ECollectionBookRewardType : uint8
{
	Uninitialized                  = 0,
	Book                           = 1,
	Page                           = 2,
	Section                        = 3,
	ECollectionBookRewardType_MAX  = 4,
};
enum class EBackupSaveState : uint8
{
	Ready                          = 0,
	InProgress                     = 1,
	OnCooldown                     = 2,
	EBackupSaveState_MAX           = 3,
};
enum class EFortPrototypingStatus : uint8
{
	Unknown                        = 0,
	Disabled                       = 1,
	Enabled                        = 2,
	EFortPrototypingStatus_MAX     = 3,
};
enum class EFortMinigameState : uint8
{
	PreGame                        = 0,
	Warmup                         = 1,
	InProgress                     = 2,
	PostGameEnd                    = 3,
	PostGameAbandon                = 4,
	EFortMinigameState_MAX         = 5,
};
enum class EFortObjectiveStatus : uint8
{
	Created                        = 0,
	InProgress                     = 1,
	Succeeded                      = 2,
	Failed                         = 3,
	NeutralCompletion              = 4,
	Max_None                       = 5,
	EFortObjectiveStatus_MAX       = 6,
};
enum class EFortMissionVisibilityOverride : uint8
{
	Visible                        = 0,
	Invisible                      = 1,
	Max_None                       = 2,
	EFortMissionVisibilityOverride_MAX = 3,
};
enum class EMatchmakingCompleteResult : uint8
{
	NotStarted                     = 0,
	UpdateNeeded                   = 1,
	OutpostNotFound                = 2,
	Cancelled                      = 3,
	NoResults                      = 4,
	Failure                        = 5,
	CreateFailure                  = 6,
	Success                        = 7,
	EMatchmakingCompleteResult_MAX = 8,
};
enum class EMatchmakingState : uint8
{
	NotMatchmaking                 = 0,
	CancelingMatchmaking           = 1,
	ReleasingLock                  = 2,
	AcquiringLock                  = 3,
	LockAcquistionFailure          = 4,
	FindingEmptyServer             = 5,
	FindingExistingSession         = 6,
	TestingEmptyServers            = 7,
	TestingExistingSessions        = 8,
	JoiningExistingSession         = 9,
	NoMatchesAvailable             = 10,
	CleaningUpExisting             = 11,
	HandlingFailure                = 12,
	JoinSuccess                    = 13,
	EMatchmakingState_MAX          = 14,
};
enum class EAthenaPartyMemberReadyType : uint8
{
	Ready                          = 0,
	NotReady                       = 1,
	Playing                        = 2,
	WatchingReplay                 = 3,
	EAthenaPartyMemberReadyType_MAX = 4,
};
enum class EFortFriendRequestStatus : uint8
{
	None                           = 0,
	Accepted                       = 1,
	PendingReceived                = 2,
	PendingSent                    = 3,
	EFortFriendRequestStatus_MAX   = 4,
};
enum class EFortPartyMemberLocation : uint8
{
	PreLobby                       = 0,
	ConnectingToLobby              = 1,
	Lobby                          = 2,
	JoiningGame                    = 3,
	ProcessingRejoin               = 4,
	InGame                         = 5,
	WatchingReplay                 = 6,
	ReturningToFrontEnd            = 7,
	EFortPartyMemberLocation_MAX   = 8,
};
enum class EFortPartyState : uint8
{
	Undetermined                   = 0,
	WorldView                      = 1,
	TheaterView                    = 2,
	Matchmaking                    = 3,
	PostMatchmaking                = 4,
	ReturningToFrontEnd            = 5,
	BattleRoyaleView               = 6,
	BattleRoyalePreloading         = 7,
	BattleRoyaleMatchmaking        = 8,
	BattleRoyalePostMatchmaking    = 9,
	EFortPartyState_MAX            = 10,
};
enum class EFortPartyMemberDisplayState : uint8
{
	Open                           = 0,
	Connecting                     = 1,
	Connected                      = 2,
	Max                            = 3,
};
enum class EFortRuntimeOptionTabState : uint8
{
	Default                        = 0,
	Disabled                       = 1,
	Hidden                         = 2,
	EFortRuntimeOptionTabState_MAX = 3,
};
enum class EFortSpectatorBlendType : uint8
{
	None                           = 0,
	Orbit                          = 1,
	Default                        = 2,
	EFortSpectatorBlendType_MAX    = 3,
};
enum class EFortDialogFeedbackType : uint8
{
	FriendRequestSent              = 0,
	FriendRequestReceived          = 1,
	FriendRequestAccepted          = 2,
	Default                        = 3,
	EFortDialogFeedbackType_MAX    = 4,
};
enum class EDualWeaponHand : uint8
{
	LEFT                           = 0,
	RIGHT                          = 1,
	MAX                            = 2,
};
enum class EFortEncounterDirection : uint8
{
	North                          = 0,
	NorthEast                      = 1,
	East                           = 2,
	SouthEast                      = 3,
	South                          = 4,
	SouthWest                      = 5,
	West                           = 6,
	NorthWest                      = 7,
	Max_None                       = 8,
	EFortEncounterDirection_MAX    = 9,
};
enum class EAIHotSpotAssignmentFilter : uint8
{
	All                            = 0,
	WithSlots                      = 1,
	WaitingList                    = 2,
	EAIHotSpotAssignmentFilter_MAX = 3,
};
enum class EAIHotSpotSlotFilter : uint8
{
	All                            = 0,
	AvailableOnly                  = 1,
	UnavailableOnly                = 2,
	EAIHotSpotSlotFilter_MAX       = 3,
};
enum class EAIHotSpotSlot : uint8
{
	Free                           = 0,
	Claimed                        = 1,
	Occupied                       = 2,
	Blocked                        = 3,
	Disabled                       = 4,
	EAIHotSpotSlot_MAX             = 5,
};
enum class EBoundingBoxSlotDirectionCalculation : uint8
{
	Auto                           = 0,
	FaceWall                       = 1,
	FaceAwayFromWall               = 2,
	FaceCenter                     = 3,
	EBoundingBoxSlotDirectionCalculation_MAX = 4,
};
enum class EBarrierFlagState : uint8
{
	FlagUp                         = 0,
	FlagDown                       = 1,
	EBarrierFlagState_MAX          = 2,
};
enum class EBarrierState : uint8
{
	BarrierUp                      = 0,
	BarrierComingDown              = 1,
	BarrierDown                    = 2,
	EBarrierState_MAX              = 3,
};
enum class EAthenaBroadcastKillFeedEntryType : uint8
{
	Elimination                    = 0,
	DBNO                           = 1,
	Storm                          = 2,
	FallDamage                     = 3,
	Explosion                      = 4,
	EAthenaBroadcastKillFeedEntryType_MAX = 5,
};
enum class ECapturePointUnlockRules : uint8
{
	Reset                          = 0,
	MaintainState                  = 1,
	ResetDeactivate                = 2,
	ECapturePointUnlockRules_MAX   = 3,
};
enum class EContentionRuleType : uint8
{
	MajorityWins                   = 0,
	OneTeamOnlyWins                = 1,
	EContentionRuleType_MAX        = 2,
};
enum class EEventTokenType : uint8
{
	Invite                         = 0,
	Creation                       = 1,
	EEventTokenType_MAX            = 2,
};
enum class EItemWrapMaterialType : uint8
{
	WeaponWrap                     = 0,
	VehicleWrap_Opaque             = 1,
	VehicleWrap_Masked             = 2,
	EItemWrapMaterialType_MAX      = 3,
};
enum class EAthenaQuickChatFilteringType : uint8
{
	AlwaysVisible                  = 0,
	ActiveMaterial                 = 1,
	FacingPickup                   = 2,
	ActiveHotbarItem               = 3,
	ActiveHotbarItemAmmo           = 4,
	FacingPickupOrActiveHotbarItem = 5,
	NoWeaponEquippedRequiringAmmo  = 6,
	WeaponEquippedOfAmmoType       = 7,
	EAthenaQuickChatFilteringType_MAX = 8,
};
enum class EAthenaSeasonRewardTrack : uint8
{
	Invalid                        = 0,
	SeasonProgressionTrack         = 1,
	CompendiumFreeTrack            = 2,
	CompendiumPaidTrack            = 3,
	EAthenaSeasonRewardTrack_MAX   = 4,
};
enum class EAthenaRewardItemType : uint8
{
	Normal                         = 0,
	HiddenReward                   = 1,
	NonExportedFakeReward          = 2,
	EAthenaRewardItemType_MAX      = 3,
};
enum class EAthenaChallengeTabVisibility : uint8
{
	Hide                           = 0,
	ShowAlways                     = 1,
	EAthenaChallengeTabVisibility_MAX = 2,
};
enum class EAthenaSeasonShopVisibility : uint8
{
	Hide                           = 0,
	ShowIfOffersAvailable          = 1,
	ShowAlways                     = 2,
	EAthenaSeasonShopVisibility_MAX = 3,
};
enum class EFortVehicleDecoType : uint8
{
	Unknown                        = 0,
	Flag                           = 1,
	HoodOrnament                   = 2,
	Wings                          = 3,
	EFortVehicleDecoType_MAX       = 4,
};
enum class EAutoFrameMode : uint8
{
	Off                            = 0,
	ManualOverride                 = 1,
	AutoFrame                      = 2,
	EAutoFrameMode_MAX             = 3,
};
enum class EBacchusHUDStateType : uint8
{
	DoNothing                      = 0,
	Hide                           = 1,
	Show                           = 2,
	FallbackToDefault              = 3,
	EBacchusHUDStateType_MAX       = 4,
};
enum class EAbilitySystemComponentCreationPolicy : uint8
{
	Never                          = 0,
	Lazy                           = 1,
	Always                         = 2,
	EAbilitySystemComponentCreationPolicy_MAX = 3,
};
enum class EAttributeInitLevelSource : uint8
{
	WorldDifficulty                = 0,
	PlayerBuildingSkill            = 1,
	AthenaPlaylist                 = 2,
	EAttributeInitLevelSource_MAX  = 3,
};
enum class EDynamicBuildingPlacementType : uint8
{
	CountsTowardsBounds            = 0,
	DestroyIfColliding             = 1,
	DestroyAnythingThatCollides    = 2,
	EDynamicBuildingPlacementType_MAX = 3,
};
enum class EUnlockRules : uint8
{
	UR_Reset                       = 0,
	UR_MaintainState               = 1,
	UR_ResetDeactivate             = 2,
	UR_MAX                         = 3,
};
enum class EContentionRules : uint8
{
	CR_MajorityWins                = 0,
	CR_OneTeamOnlyWins             = 1,
	CR_MAX                         = 2,
};
enum class EBinaryToggleValues : uint8
{
	BTV_Active                     = 0,
	BTV_Inactive                   = 1,
	BTV_Either                     = 2,
	BTV_MAX                        = 3,
};
enum class EAuxIndicatorStates : uint8
{
	AIS_GuidingArrow               = 0,
	AIS_ConfirmedArrow             = 1,
	AIS_Inactive                   = 2,
	AIS_Active                     = 3,
	AIS_MAX                        = 4,
};
enum class EFOBFileHeaderStatus : uint8
{
	NoExistingFile                 = 0,
	HasExistingFile                = 1,
	UnableToDetermine              = 2,
	EFOBFileHeaderStatus_MAX       = 3,
};
enum class EFOBInitStatus : uint8
{
	Successful                     = 0,
	Failure_CloudStorageDisabled   = 1,
	Failure_PreviouslyInitialized  = 2,
	Failure_DataOwner              = 3,
	Failure_CloudStorageError      = 4,
	Failure_MissingFileName        = 5,
	Failure_Generic                = 6,
	EFOBInitStatus_MAX             = 7,
};
enum class EFOBMode : uint8
{
	Uninitialized                  = 0,
	Creation                       = 1,
	Deployment                     = 2,
	EFOBMode_MAX                   = 3,
};
enum class EDynamicFoundationType : uint8
{
	Static                         = 0,
	StartEnabled_Stationary        = 1,
	StartEnabled_Dynamic           = 2,
	StartDisabled                  = 3,
	EDynamicFoundationType_MAX     = 4,
};
enum class EBuildingFoundationType : uint8
{
	BFT_3x3                        = 0,
	BFT_5x5                        = 1,
	BFT_5x10                       = 2,
	BFT_None                       = 3,
	BFT_MAX                        = 4,
};
enum class EFortItemCollectorTrackingType : uint8
{
	Player                         = 0,
	Team                           = 1,
	EFortItemCollectorTrackingType_MAX = 2,
};
enum class EFortItemCollectorBehavior : uint8
{
	FirstToGoal                    = 0,
	FreeForAll                     = 1,
	EFortItemCollectorBehavior_MAX = 2,
};
enum class EFortItemCollectorState : uint8
{
	CanInteract                    = 0,
	Active                         = 1,
	Inactive                       = 2,
	Captured                       = 3,
	Invalid                        = 4,
	EFortItemCollectorState_MAX    = 5,
};
enum class ELayoutRequirementStatus : uint8
{
	Inactive_Invisible             = 0,
	Active_Invisible               = 1,
	Active_Visible                 = 2,
	ELayoutRequirementStatus_MAX   = 3,
};
enum class ERiftCosmeticState : uint8
{
	None                           = 0,
	Intro                          = 1,
	Idle                           = 2,
	RampUp                         = 3,
	ShouldDie                      = 4,
	ERiftCosmeticState_MAX         = 5,
};
enum class EFortRiftSlotStatus : uint8
{
	Reserved                       = 0,
	Occupied                       = 1,
	Max_None                       = 2,
	EFortRiftSlotStatus_MAX        = 3,
};
enum class EBuildingNavObstacleType : uint8
{
	UnwalkableAll                  = 0,
	UnwalkableHuskOnly             = 1,
	SmashWhenLowHeight             = 2,
	SmashOnlyLowHeight             = 3,
	SmashSmasherOnly               = 4,
	SmashAll                       = 5,
	EBuildingNavObstacleType_MAX   = 6,
};
enum class EFortDamageVisualsState : uint8
{
	UnDamaged                      = 0,
	DamagedAndAnimating            = 1,
	DamagedAndStatic               = 2,
	EFortDamageVisualsState_MAX    = 3,
};
enum class EStructuralSupportCheck : uint8
{
	Stable                         = 0,
	Unstable                       = 1,
	Max_None                       = 2,
	EStructuralSupportCheck_MAX    = 3,
};
enum class EPlacementType : uint8
{
	Free                           = 0,
	Grid                           = 1,
	None                           = 2,
	EPlacementType_MAX             = 3,
};
enum class EBuildingAttachmentSide : uint8
{
	Front                          = 0,
	Back                           = 1,
	Any                            = 2,
	EBuildingAttachmentSide_MAX    = 3,
};
enum class EBuildingAttachmentSlot : uint8
{
	SLOT_Floor                     = 0,
	SLOT_Wall                      = 1,
	SLOT_Ceiling                   = 2,
	SLOT_None                      = 3,
	SLOT_MAX                       = 4,
};
enum class EBuildingAnim : uint8
{
	EBA_None                       = 0,
	EBA_Building                   = 1,
	EBA_Breaking                   = 2,
	EBA_Destruction                = 3,
	EBA_Placement                  = 4,
	EBA_DynamicLOD                 = 5,
	EBA_DynamicShrink              = 6,
	EBA_MAX                        = 7,
};
enum class EStructuralFloorPosition : uint8
{
	Top                            = 0,
	Bottom                         = 1,
	EStructuralFloorPosition_MAX   = 2,
};
enum class EStructuralWallPosition : uint8
{
	Left                           = 0,
	Right                          = 1,
	Front                          = 2,
	Back                           = 3,
	EStructuralWallPosition_MAX    = 4,
};
enum class EFortDefenderInteractionError : uint8
{
	None                           = 0,
	Obstructed                     = 1,
	NoEditPermission               = 2,
	UsedByAnotherPlayer            = 3,
	EFortDefenderInteractionError_MAX = 4,
};
enum class EFortBounceType : uint8
{
	Hit                            = 0,
	Interact                       = 1,
	EditPlaced                     = 2,
	EFortBounceType_MAX            = 3,
};
enum class EFortConnectivityCubeFace : uint8
{
	Front                          = 0,
	Left                           = 1,
	Back                           = 2,
	Right                          = 3,
	Upper                          = 4,
	Lower                          = 5,
	MAX                            = 6,
};
enum class EFortDecoPlacementQueryResults : uint8
{
	CanAdd                         = 0,
	ExistingTrap                   = 1,
	ExistingObject                 = 2,
	Obstructed                     = 3,
	NoLocation                     = 4,
	WrongType                      = 5,
	WrongShape                     = 6,
	BeingModified                  = 7,
	WrongTeam                      = 8,
	BlueprintFailure               = 9,
	AbilityFailure                 = 10,
	RequiresPlayerBuildableActor   = 11,
	NoEditPermission               = 12,
	WrongZone                      = 13,
	EFortDecoPlacementQueryResults_MAX = 14,
};
enum class EFortStructuralGridQueryResults : uint8
{
	CanAdd                         = 0,
	ExistingActor                  = 1,
	Obstructed                     = 2,
	NoStructuralSupport            = 3,
	InvalidActor                   = 4,
	ReachedLimit                   = 5,
	NoEditPermission               = 6,
	PatternNotPermittedByLayoutRequirement = 7,
	ResourceTypeNotPermittedByLayoutRequirement = 8,
	BuildingAtRequirementsDisabled = 9,
	BuildingOtherThanRequirementsDisabled = 10,
	EFortStructuralGridQueryResults_MAX = 11,
};
enum class EFortBuildingInitializationReason : uint8
{
	StaticallyPlaced               = 0,
	Spawned                        = 1,
	Replaced                       = 2,
	LoadedFromSave                 = 3,
	DynamicBuilderPlaced           = 4,
	PlacementTool                  = 5,
	TrapTool                       = 6,
	None                           = 7,
	EFortBuildingInitializationReason_MAX = 8,
};
enum class EFortBuildingPersistentState : uint8
{
	Default                        = 0,
	New                            = 1,
	Constructed                    = 2,
	Destroyed                      = 3,
	Searched                       = 4,
	None                           = 5,
	EFortBuildingPersistentState_MAX = 6,
};
enum class EFortBuildingState : uint8
{
	Placement                      = 0,
	EditMode                       = 1,
	None                           = 2,
	EFortBuildingState_MAX         = 3,
};
enum class EFortTextureDataSlot : uint8
{
	Primary                        = 0,
	Secondary                      = 1,
	Tertiary                       = 2,
	Fourth                         = 3,
	NumSlots                       = 4,
	EFortTextureDataSlot_MAX       = 5,
};
enum class EFortTextureDataType : uint8
{
	Any                            = 0,
	OuterWall                      = 1,
	InnerWall                      = 2,
	Corner                         = 3,
	Floor                          = 4,
	Ceiling                        = 5,
	Trim                           = 6,
	Roof                           = 7,
	Pillar                         = 8,
	Shingle                        = 9,
	None                           = 10,
	EFortTextureDataType_MAX       = 11,
};
enum class EBuildingAttachmentType : uint8
{
	ATTACH_Floor                   = 0,
	ATTACH_Wall                    = 1,
	ATTACH_Ceiling                 = 2,
	ATTACH_Corner                  = 3,
	ATTACH_All                     = 4,
	ATTACH_WallThenFloor           = 5,
	ATTACH_FloorAndStairs          = 6,
	ATTACH_CeilingAndStairs        = 7,
	ATTACH_None                    = 8,
	ATTACH_MAX                     = 9,
};
enum class EFortBuildingType : uint8
{
	Wall                           = 0,
	Floor                          = 1,
	Corner                         = 2,
	Deco                           = 3,
	Prop                           = 4,
	Stairs                         = 5,
	Roof                           = 6,
	Pillar                         = 7,
	SpawnedItem                    = 8,
	Container                      = 9,
	Trap                           = 10,
	GenericCenterCellActor         = 11,
	None                           = 12,
	EFortBuildingType_MAX          = 13,
};
enum class EAccessoryColorName : uint8
{
	EAccessoryColorName_AccessoryColor1 = 0,
	EAccessoryColorName_AccessoryColor2 = 1,
	EAccessoryColorName_AccessoryColor3 = 2,
	EAccessoryColorName_NumTypes   = 3,
	EAccessoryColorName_MAX        = 4,
};
enum class ECustomHatType : uint8
{
	ECustomHatType_None            = 0,
	ECustomHatType_Cap             = 1,
	ECustomHatType_Helmet          = 2,
	ECustomHatType_Mask            = 3,
	ECustomHatType_Hat             = 4,
	ECustomHatType_HeadReplacement = 5,
	ECustomHatType_MAX             = 6,
};
enum class EClothingColorName : uint8
{
	EClothingColorName_AccessoryColor1 = 0,
	EClothingColorName_AccessoryColor2 = 1,
	EClothingColorName_NumTypes    = 2,
	EClothingColorName_MAX         = 3,
};
enum class EColorSwatchType : uint8
{
	EColorSwatchType_Skin          = 0,
	EColorSwatchType_Hair          = 1,
	EColorSwatchType_BodyAccessory = 2,
	EColorSwatchType_Accessory     = 3,
	EColorSwatchType_NumTypes      = 4,
	EColorSwatchType_MAX           = 5,
};
enum class ECharacterColorSwatchType : uint8
{
	ECharacterColorSwatchType_Skin = 0,
	ECharacterColorSwatchType_Hair = 1,
	ECharacterColorSwatchType_NumTypes = 2,
	ECharacterColorSwatchType_MAX  = 3,
};
enum class EDeployableBaseConstructionStatus : uint8
{
	Constructing                   = 0,
	Destroying                     = 1,
	Finished                       = 2,
	EDeployableBaseConstructionStatus_MAX = 3,
};
enum class EDeployableBaseBuildingState : uint8
{
	Empty                          = 0,
	Built                          = 1,
	Unoccupied                     = 2,
	WaitingToBuild                 = 3,
	Building                       = 4,
	WaitingToDestroy               = 5,
	Destroying                     = 6,
	WaitingToReset                 = 7,
	Resetting                      = 8,
	EDeployableBaseBuildingState_MAX = 9,
};
enum class EDeployableBaseBoxType : uint8
{
	BuildSpace                     = 0,
	SaveSpace                      = 1,
	PlotSpace                      = 2,
	NumSpaceTypes                  = 3,
	EDeployableBaseBoxType_MAX     = 4,
};
enum class EFortSharedAnimationState : uint8
{
	Anim_Walk                      = 0,
	Anim_Run                       = 1,
	Anim_Turn                      = 2,
	Anim_Attack                    = 3,
	Anim_Death                     = 4,
	Anim_Knockback                 = 5,
	Anim_FullBodyHit               = 6,
	Anim_Pushed                    = 7,
	Anim_Dance                     = 8,
	Anim_Idle                      = 9,
	Anim_RangedAttack              = 10,
	Anim_MAX                       = 11,
};
enum class EFortStatDisplayType : uint8
{
	Category                       = 0,
	Buff                           = 1,
	Debuff                         = 2,
	Neutral                        = 3,
	DoNotDisplay                   = 4,
	EFortStatDisplayType_MAX       = 5,
};
enum class EFortAbilityTargetSelectionUsage : uint8
{
	BothTargetingAndCanHit         = 0,
	OnlyTargeting                  = 1,
	OnlyCanHit                     = 2,
	EFortAbilityTargetSelectionUsage_MAX = 3,
};
enum class EFortDirectedMovementSpace : uint8
{
	WorldSpace                     = 0,
	ActorLocRelative               = 1,
	ActorLocRotRelative            = 2,
	CameraRelative                 = 3,
	EFortDirectedMovementSpace_MAX = 4,
};
enum class EFortAbilityTargetDataPolicy : uint8
{
	ReplicateToServer              = 0,
	SimulateOnServer               = 1,
	EFortAbilityTargetDataPolicy_MAX = 2,
};
enum class EFortProximityBasedGEApplicationType : uint8
{
	ApplyOnProximityPulse          = 0,
	ApplyOnProximityTouch          = 1,
	ApplyOnlyDuringProximityTouch  = 2,
	EFortProximityBasedGEApplicationType_MAX = 3,
};
enum class EFortDeliveryInfoBuildingActorSpecification : uint8
{
	All                            = 0,
	PlayerBuildable                = 1,
	NonPlayerBuildable             = 2,
	EFortDeliveryInfoBuildingActorSpecification_MAX = 3,
};
enum class EDespawnAIType : uint8
{
	Relevancy                      = 0,
	Distance                       = 1,
	EDespawnAIType_MAX             = 2,
};
enum class EFortEncounterUtilityDesire : uint8
{
	Low                            = 0,
	Medium                         = 1,
	High                           = 2,
	VeryHigh                       = 3,
	Max_None                       = 4,
	EFortEncounterUtilityDesire_MAX = 5,
};
enum class EFortAIDirectorFactorContribution : uint8
{
	Direct                         = 0,
	Inverse                        = 1,
	EFortAIDirectorFactorContribution_MAX = 2,
};
enum class EFortAIDirectorEventContribution : uint8
{
	Increment                      = 0,
	Set                            = 1,
	EFortAIDirectorEventContribution_MAX = 2,
};
enum class EFortAIWaveProgressSection : uint8
{
	SectionOne                     = 0,
	SectionTwo                     = 1,
	Max_None                       = 2,
	EFortAIWaveProgressSection_MAX = 3,
};
enum class EFortEncounterState : uint8
{
	Uninitialized                  = 0,
	InitializingProperties         = 1,
	InitializingRiftManager        = 2,
	AwaitingActivation             = 3,
	Active                         = 4,
	ReplacingRifts                 = 5,
	Max_None                       = 6,
	EFortEncounterState_MAX        = 7,
};
enum class EFortEncounterPacingState : uint8
{
	Ramp                           = 0,
	Peak                           = 1,
	Fade                           = 2,
	Rest                           = 3,
	Max_None                       = 4,
	EFortEncounterPacingState_MAX  = 5,
};
enum class EFortEncounterSequenceResult : uint8
{
	Success                        = 0,
	FailedEncounterInProgress      = 1,
	Failed                         = 2,
	EFortEncounterSequenceResult_MAX = 3,
};
enum class EAssignmentCreationResult : uint8
{
	AssignmentNotFoundOrCreated    = 0,
	AssignmentCreated              = 1,
	AssignmentFound                = 2,
	EAssignmentCreationResult_MAX  = 3,
};
enum class ETagGoalScoringCategory : uint8
{
	Ignore                         = 0,
	HighInterest                   = 1,
	NumCategories                  = 2,
	ETagGoalScoringCategory_MAX    = 3,
};
enum class EFortAIPawnGender : uint8
{
	FAPG_Default                   = 0,
	FAPG_Female                    = 1,
	FAPG_Male                      = 2,
	FAPG_MAX                       = 3,
};
enum class EFortAILevelRatingDisplayType : uint8
{
	DisplayRatingBasedOnDifficulty = 0,
	DisplayAIDifficultyAsRating    = 1,
	DontDisplayRating              = 2,
	EFortAILevelRatingDisplayType_MAX = 3,
};
enum class EFortressAIType : uint8
{
	FAT_Dormant                    = 0,
	FAT_Cleaner                    = 1,
	FAT_DayWanderer                = 2,
	FAT_NightWanderer              = 3,
	FAT_DebugOnly                  = 4,
	FAT_Encounter                  = 5,
	FAT_MAX                        = 6,
};
enum class ECorePerceptionTypes : uint8
{
	Sight                          = 0,
	Hearing                        = 1,
	Damage                         = 2,
	Touch                          = 3,
	Team                           = 4,
	Prediction                     = 5,
	MAX                            = 6,
};
enum class ENavigationObstacleOverride : uint8
{
	UseMeshSettings                = 0,
	ForceEnabled                   = 1,
	ForceDisabled                  = 2,
	ENavigationObstacleOverride_MAX = 3,
};
enum class EFortPartialPathUsage : uint8
{
	Always                         = 0,
	OnlyGoalsOnDestructible        = 1,
	Never                          = 2,
	EFortPartialPathUsage_MAX      = 3,
};
enum class EHotspotTypeConfigMode : uint8
{
	AlwaysAdd                      = 0,
	WhenNotDefined                 = 1,
	WhenNotValid                   = 2,
	EHotspotTypeConfigMode_MAX     = 3,
};
enum class EFortHotSpotPreview : uint8
{
	None                           = 0,
	Smashing                       = 1,
	Shooting                       = 2,
	EFortHotSpotPreview_MAX        = 3,
};
enum class EFortHotSpotDirection : uint8
{
	PositiveX                      = 0,
	NegativeX                      = 1,
	PositiveY                      = 2,
	NegativeY                      = 3,
	PositiveZ                      = 4,
	NegativeZ                      = 5,
	Any                            = 6,
	EFortHotSpotDirection_MAX      = 7,
};
enum class EFortHotSpotSlot : uint8
{
	Melee                          = 0,
	MeleeHuge                      = 1,
	Ranged                         = 2,
	None                           = 3,
	EFortHotSpotSlot_MAX           = 4,
};
enum class EBuildingFloorRailing : uint8
{
	None                           = 0,
	Balcony                        = 1,
	EBuildingFloorRailing_MAX      = 2,
};
enum class EBuildingStairsRailing : uint8
{
	None                           = 0,
	Partial                        = 1,
	Full                           = 2,
	EBuildingStairsRailing_MAX     = 3,
};
enum class EBuildingWallArea : uint8
{
	Regular                        = 0,
	Flat                           = 1,
	Special                        = 2,
	EBuildingWallArea_MAX          = 3,
};
enum class EAssignmentType : uint8
{
	Invalid                        = 0,
	Encounter                      = 1,
	World                          = 2,
	Enemy                          = 3,
	NumAssignmentTypes             = 4,
	EAssignmentType_MAX            = 5,
};
enum class EFortAILODLevel : uint8
{
	Invalid                        = 0,
	Lowest                         = 1,
	Lower                          = 2,
	BelowNormal                    = 3,
	Normal                         = 4,
	AboveNormal                    = 5,
	MAX                            = 6,
};
enum class ESkydivingDirection : uint8
{
	Center                         = 0,
	Right                          = 1,
	Left                           = 2,
	Forward                        = 3,
	Back                           = 4,
	ESkydivingDirection_MAX        = 5,
};
enum class ESourceSelectionMode : uint8
{
	MaxDifference                  = 0,
	ESourceSelectionMode_MAX       = 1,
};
enum class ESpeedWarpingAxisMode : uint8
{
	IKFootRootLocalX               = 0,
	IKFootRootLocalY               = 1,
	IKFootRootLocalZ               = 2,
	WorldSpaceVectorInput          = 3,
	ComponentSpaceVectorInput      = 4,
	ActorSpaceVectorInput          = 5,
	ESpeedWarpingAxisMode_MAX      = 6,
};
enum class EMontageInterrupt : uint8
{
	Any                            = 0,
	RootMotionOnly                 = 1,
	None                           = 2,
	EMontageInterrupt_MAX          = 3,
};
enum class EDeimosAnimState : uint8
{
	Idle                           = 0,
	Running                        = 1,
	Attack                         = 2,
	Dance                          = 3,
	Dying                          = 4,
	Died                           = 5,
	FullBodyHitReact               = 6,
	AdditiveHitReact               = 7,
	ActiveIdle                     = 8,
	Falling                        = 9,
	Frozen                         = 10,
	RangedAttack                   = 11,
	EDeimosAnimState_MAX           = 12,
};
enum class EFortCardinalDirection : uint8
{
	North                          = 0,
	East                           = 1,
	South                          = 2,
	West                           = 3,
	EFortCardinalDirection_MAX     = 4,
};
enum class EPlaneDirection : uint8
{
	Center                         = 0,
	Right                          = 1,
	Left                           = 2,
	Up                             = 3,
	Down                           = 4,
	EPlaneDirection_MAX            = 5,
};
enum class EDoghouseControlMode : uint8
{
	GroundControls                 = 0,
	AirControls                    = 1,
	MaxCount                       = 2,
	EDoghouseControlMode_MAX       = 3,
};
enum class EFreelookMode : uint8
{
	None                           = 0,
	Mouse                          = 1,
	Analog                         = 2,
	EFreelookMode_MAX              = 3,
};
enum class EAileronRollDirection : uint8
{
	None                           = 0,
	Right                          = 1,
	Left                           = 2,
	EAileronRollDirection_MAX      = 3,
};
enum class EExitCraftState : uint8
{
	None                           = 0,
	Spawned                        = 1,
	Landed                         = 2,
	SpawnBalloon                   = 3,
	GettingIntoPosition            = 4,
	GettingIntoPosition_Simple     = 5,
	WaitingForPawns                = 6,
	Exiting                        = 7,
	EExitCraftState_MAX            = 8,
};
enum class EFortExitRequirements : uint8
{
	AnyPlayer                      = 0,
	WholeSquad                     = 1,
	EFortExitRequirements_MAX      = 2,
};
enum class EFortMutatorReturnValue : uint8
{
	Ignore                         = 0,
	Override                       = 1,
	OverrideReturn                 = 2,
	EFortMutatorReturnValue_MAX    = 3,
};
enum class EBarrierObjectiveDamageState : uint8
{
	Health_75                      = 0,
	Health_50                      = 1,
	Health_25                      = 2,
	Health_10                      = 3,
	Health_5                       = 4,
	Health_4                       = 5,
	Health_3                       = 6,
	Health_2                       = 7,
	Health_1                       = 8,
	MAX                            = 9,
};
enum class EBarrierFoodTeam : uint8
{
	Burger                         = 0,
	Tomato                         = 1,
	MAX                            = 2,
};
enum class EDBNOMutatorType : uint8
{
	Default                        = 0,
	On                             = 1,
	Off                            = 2,
	EDBNOMutatorType_MAX           = 3,
};
enum class EControlPointState : uint8
{
	None                           = 0,
	Disabled                       = 1,
	Enabled                        = 2,
	EControlPointState_MAX         = 3,
};
enum class EAthenaMutatorEvaluators : uint8
{
	NoOverride                     = 0,
	ForceOverride                  = 1,
	Add                            = 2,
	Multiply                       = 3,
	EAthenaMutatorEvaluators_MAX   = 4,
};
enum class EHeistExitCraftState : uint8
{
	None                           = 0,
	Incoming                       = 1,
	Spawned                        = 2,
	Exited                         = 3,
	EHeistExitCraftState_MAX       = 4,
};
enum class EAthenaInventorySpawnOverride : uint8
{
	NoOverride                     = 0,
	Always                         = 1,
	IntialSpawn                    = 2,
	EAthenaInventorySpawnOverride_MAX = 3,
};
enum class EAthenaLootDropOverride : uint8
{
	NoOverride                     = 0,
	ForceDrop                      = 1,
	ForceKeep                      = 2,
	EAthenaLootDropOverride_MAX    = 3,
};
enum class ERespawnRequirements : uint8
{
	RespawnOnly                    = 0,
	NoRespawnOnly                  = 1,
	Both                           = 2,
	ERespawnRequirements_MAX       = 3,
};
enum class EIndicatorDisplayMode : uint8
{
	Default                        = 0,
	Always                         = 1,
	Never                          = 2,
	EIndicatorDisplayMode_MAX      = 3,
};
enum class EOmahaTeam : uint8
{
	Home                           = 0,
	Away                           = 1,
	MAX                            = 2,
};
enum class EAthenaTimeOfDayOverride : uint8
{
	NoOverride                     = 0,
	ForceDay                       = 1,
	ForceNight                     = 2,
	Custom                         = 3,
	EAthenaTimeOfDayOverride_MAX   = 4,
};
enum class ECoastState : uint8
{
	Idle                           = 0,
	Mount                          = 1,
	Coasting                       = 2,
	Pedaling                       = 3,
	PreDismount                    = 4,
	Dismount                       = 5,
	EndCoast                       = 6,
	ECoastState_MAX                = 7,
};
enum class EVehicleSessionEndReason : uint8
{
	Invalid                        = 0,
	NoPassengers                   = 1,
	EVehicleSessionEndReason_MAX   = 2,
};
enum class EVehicleMovementMode : uint8
{
	OnGround                       = 0,
	InAir                          = 1,
	WipeOut                        = 2,
	MaxCount                       = 3,
	EVehicleMovementMode_MAX       = 4,
};
enum class EAthenaVehicleSeats : uint8
{
	Driver                         = 0,
	Passenger1                     = 1,
	Passenger2                     = 2,
	Passenger3                     = 3,
	Passenger4                     = 4,
	Passenger5                     = 5,
	MaxCount                       = 6,
	EAthenaVehicleSeats_MAX        = 7,
};
enum class EBounceCompressionState : uint8
{
	None                           = 0,
	Crouching                      = 1,
	Crouched                       = 2,
	Jumping                        = 3,
	Recoiling                      = 4,
	EBounceCompressionState_MAX    = 5,
};
enum class ENaturalSlideState : uint8
{
	None                           = 0,
	Entering                       = 1,
	InProgress                     = 2,
	Exiting                        = 3,
	ENaturalSlideState_MAX         = 4,
};
enum class EPowerSlideState : uint8
{
	None                           = 0,
	Entering                       = 1,
	InProgress                     = 2,
	Exiting                        = 3,
	EPowerSlideState_MAX           = 4,
};
enum class EFortFuelGadgetVisualType : uint8
{
	FuelMeter                      = 0,
	ChargeText                     = 1,
	Invalid                        = 2,
	EFortFuelGadgetVisualType_MAX  = 3,
};
enum class EFortAttributeDisplay : uint8
{
	BasicInt                       = 0,
	NegativeImpliesInfiniteInt     = 1,
	BasicFloat                     = 2,
	NegativeImpliesInfiniteFloat   = 3,
	BasicString                    = 4,
	NormalizedPercentage           = 5,
	StringArray                    = 6,
	SlateBrush                     = 7,
	DoNotDisplay                   = 8,
	None_Max                       = 9,
	EFortAttributeDisplay_MAX      = 10,
};
enum class EBannerUsageContext : uint8
{
	Unknown                        = 0,
	BannerIcon                     = 1,
	PhysicalBanner                 = 2,
	Spray                          = 3,
	EBannerUsageContext_MAX        = 4,
};
enum class ETargetDistanceComparisonType : uint8
{
	TwoDimensions                  = 0,
	ThreeDimensions                = 1,
	CollisionHalfHeightMultiplier  = 2,
	ETargetDistanceComparisonType_MAX = 3,
};
enum class EFortBuildingSoundType : uint8
{
	Construction                   = 0,
	GenericDestruction             = 1,
	PlayerBuiltDestruction         = 2,
	None                           = 3,
	EFortBuildingSoundType_MAX     = 4,
};
enum class EFortUICameraFrameTargetBoundingBehavior : uint8
{
	NoBounds                       = 0,
	AllBounds                      = 1,
	TopBoundOnly                   = 2,
	EFortUICameraFrameTargetBoundingBehavior_MAX = 3,
};
enum class ECameraOrigin : uint8
{
	ViewTargetTransform            = 0,
	BoneTransform                  = 1,
	ECameraOrigin_MAX              = 2,
};
enum class EChallengeBundleVisualStyle : uint8
{
	Normal                         = 0,
	BattlePassFree                 = 1,
	BattlePassPaid                 = 2,
	FreePassWeekly                 = 3,
	BattlePassWeekly               = 4,
	FNBirthday                     = 5,
	FNTomatoStyle                  = 6,
	FNSkullTrooperStyle            = 7,
	Fortnitemares                  = 8,
	FNHeist                        = 9,
	KoreaPCB_Neowiz                = 10,
	FoodFight                      = 11,
	FourteenDays                   = 12,
	EChallengeBundleVisualStyle_MAX = 13,
};
enum class EChallengeBundleQuestVisualStyle : uint8
{
	Free                           = 0,
	Premium                        = 1,
	FNBirthday                     = 2,
	FNTomatoStyle                  = 3,
	FNHeist                        = 4,
	FNSkullTrooperStyle            = 5,
	Fortnitemares                  = 6,
	KoreaPCB_Neowiz                = 7,
	FoodFight                      = 8,
	FourteenDays                   = 9,
	EChallengeBundleQuestVisualStyle_MAX = 10,
};
enum class EChallengeBundleQuestUnlockType : uint8
{
	GrantWithBundle                = 0,
	RequiresBattlePass             = 1,
	DaysFromEventStart             = 2,
	EChallengeBundleQuestUnlockType_MAX = 3,
};
enum class EChallengeScheduleUnlockType : uint8
{
	Manually                       = 0,
	OnScheduleGranted              = 1,
	DaysSinceEventStart            = 2,
	EChallengeScheduleUnlockType_MAX = 3,
};
enum class EFortCharacterCosmetic : uint8
{
	Head                           = 0,
	Texture                        = 1,
	Color                          = 2,
	Trinket                        = 3,
	Face                           = 4,
	Gadget                         = 5,
	Body                           = 6,
	ClassFlair                     = 7,
	Max_Invalid                    = 8,
	EFortCharacterCosmetic_MAX     = 9,
};
enum class EFortCustomMovement : uint8
{
	Default                        = 0,
	Driving                        = 1,
	Passenger                      = 2,
	Parachuting                    = 3,
	Skydiving                      = 4,
	Hover                          = 5,
	RemoteControl_Flying           = 6,
	Ziplining                      = 7,
	Ballooning                     = 8,
	EFortCustomMovement_MAX        = 9,
};
enum class EChatRoomJoinHelperState : uint8
{
	Ready                          = 0,
	AttemptingJoin                 = 1,
	Joined                         = 2,
	AttemptingLeave                = 3,
	EChatRoomJoinHelperState_MAX   = 4,
};
enum class EFortAnnouncementDisplayPreference : uint8
{
	Default_HUD                    = 0,
	QuestIntroduction              = 1,
	QuestJournal                   = 2,
	EFortAnnouncementDisplayPreference_MAX = 3,
};
enum class EFortAnnouncementChannel : uint8
{
	Primary                        = 0,
	Conversation                   = 1,
	Tutorial                       = 2,
	Max_None                       = 3,
	EFortAnnouncementChannel_MAX   = 4,
};
enum class EFortAnnouncementDelivery : uint8
{
	Created                        = 0,
	Received                       = 1,
	Ignored                        = 2,
	Active                         = 3,
	Stopped                        = 4,
	Max_None                       = 5,
	EFortAnnouncementDelivery_MAX  = 6,
};
enum class EFortAllowBackgroundAudioSetting : uint8
{
	Off                            = 0,
	NotificationsOnly              = 1,
	AllSounds                      = 2,
	Num                            = 3,
	EFortAllowBackgroundAudioSetting_MAX = 4,
};
enum class EAndroidAppStoreTypes : uint8
{
	Unset                          = 0,
	Epic                           = 1,
	Samsung                        = 2,
	EAndroidAppStoreTypes_MAX      = 3,
};
enum class EColorBlindMode : uint8
{
	Off                            = 0,
	Deuteranope                    = 1,
	Protanope                      = 2,
	Tritanope                      = 3,
	EColorBlindMode_MAX            = 4,
};
enum class ECloudFileState : uint8
{
	Unitialized                    = 0,
	Saving                         = 1,
	Loading                        = 2,
	Idle                           = 3,
	ECloudFileState_MAX            = 4,
};
enum class ECodeTokenPlatform : uint8
{
	PC                             = 0,
	PS4                            = 1,
	XBOX                           = 2,
	ECodeTokenPlatform_MAX         = 3,
};
enum class EFortCollectionBookState : uint8
{
	Active                         = 0,
	Completed                      = 1,
	Claimed                        = 2,
	EFortCollectionBookState_MAX   = 3,
};
enum class EFortPIDValueGraphElements : uint8
{
	Proportional                   = 0,
	Integral                       = 1,
	Max_None                       = 2,
	EFortPIDValueGraphElements_MAX = 3,
};
enum class EFortIntensityGraphElements : uint8
{
	ActualIntensity                = 0,
	DesiredIntensity               = 1,
	Max_None                       = 2,
	EFortIntensityGraphElements_MAX = 3,
};
enum class EFortContributionGraphElements : uint8
{
	ProportionalLine               = 0,
	IntegralLine                   = 1,
	TotalLine                      = 2,
	PendingLine                    = 3,
	ActionLine                     = 4,
	Max_None                       = 5,
	EFortContributionGraphElements_MAX = 6,
};
enum class EFortFactorContributionType : uint8
{
	CurrentValue_Direct            = 0,
	CurrentValue_Inverse           = 1,
	AverageValue_Direct            = 2,
	AverageValue_Inverse           = 3,
	EFortFactorContributionType_MAX = 4,
};
enum class EFortAIDirectorFactor : uint8
{
	PlayerDamageThreat             = 0,
	ObjectiveDamageThreat          = 1,
	ObjectivePathCost              = 2,
	PlayerPathCost                 = 3,
	PlayerMovement                 = 4,
	TrapsEffective                 = 5,
	PlayerWander                   = 6,
	NearbyEnemyPresence            = 7,
	OffensiveResources             = 8,
	DefensiveResources             = 9,
	Boredom                        = 10,
	ArtilleryVulnerability         = 11,
	Max_None                       = 12,
	EFortAIDirectorFactor_MAX      = 13,
};
enum class EFortCombatFactors : uint8
{
	PlayerDamageThreat             = 0,
	ObjectiveDamageThreat          = 1,
	ObjectivePathCost              = 2,
	PlayerPathCost                 = 3,
	PlayerMovement                 = 4,
	TrapsEffective                 = 5,
	PlayerWander                   = 6,
	NearbyEnemyPresence            = 7,
	OffensiveResources             = 8,
	DefensiveResources             = 9,
	Boredom                        = 10,
	ArtilleryVulnerability         = 11,
	Max_None                       = 12,
	EFortCombatFactors_MAX         = 13,
};
enum class EFortCombatEventContribution : uint8
{
	Linear                         = 0,
	Inverse                        = 1,
	Accumulator                    = 2,
	Max_None                       = 3,
	EFortCombatEventContribution_MAX = 4,
};
enum class EFortAIDirectorEventParticipant : uint8
{
	Target                         = 0,
	Source                         = 1,
	Either                         = 2,
	Max_None                       = 3,
	EFortAIDirectorEventParticipant_MAX = 4,
};
enum class EFortCombatThresholds : uint8
{
	Low                            = 0,
	Medium                         = 1,
	High                           = 2,
	Extreme                        = 3,
	Max_None                       = 4,
	EFortCombatThresholds_MAX      = 5,
};
enum class EFortBaseWeaponDamage : uint8
{
	Combat                         = 0,
	Environmental                  = 1,
	EFortBaseWeaponDamage_MAX      = 2,
};
enum class EFortWeaponCoreAnimation : uint8
{
	Melee                          = 0,
	Pistol                         = 1,
	Shotgun                        = 2,
	PaperBlueprint                 = 3,
	Rifle                          = 4,
	MeleeOneHand                   = 5,
	MachinePistol                  = 6,
	RocketLauncher                 = 7,
	GrenadeLauncher                = 8,
	GoingCommando                  = 9,
	AssaultRifle                   = 10,
	TacticalShotgun                = 11,
	SniperRifle                    = 12,
	TrapPlacement                  = 13,
	ShoulderLauncher               = 14,
	AbilityDecoTool                = 15,
	Crossbow                       = 16,
	C4                             = 17,
	RemoteControl                  = 18,
	DualWield                      = 19,
	AR_BullPup                     = 20,
	AR_ForwardGrip                 = 21,
	MedPackPaddles                 = 22,
	SMG_P90                        = 23,
	AR_DrumGun                     = 24,
	Consumable_Small               = 25,
	Consumable_Large               = 26,
	Balloon                        = 27,
	MountedTurret                  = 28,
	CreativeTool                   = 29,
	MAX                            = 30,
};
enum class EFortReloadFXState : uint8
{
	ReloadStart                    = 0,
	ReloadCartridge                = 1,
	ReloadEnd                      = 2,
	Max_None                       = 3,
	EFortReloadFXState_MAX         = 4,
};
enum class EFortWeaponSoundChannel : uint8
{
	NormalA                        = 0,
	NormalB                        = 1,
	LowAmmo                        = 2,
	Degraded                       = 3,
	Max_None                       = 4,
	EFortWeaponSoundChannel_MAX    = 5,
};
enum class EFortWeaponSoundState : uint8
{
	Normal                         = 0,
	LowAmmo                        = 1,
	Degraded                       = 2,
	Max_None                       = 3,
	EFortWeaponSoundState_MAX      = 4,
};
enum class EFortMontageInputType : uint8
{
	WindowClickOrHold              = 0,
	WindowHoldOnly                 = 1,
	InstantClick                   = 2,
	EFortMontageInputType_MAX      = 3,
};
enum class EFortAbilityTargetingSource : uint8
{
	Camera                         = 0,
	PawnForward                    = 1,
	PawnTowardsFocus               = 2,
	WeaponForward                  = 3,
	WeaponTowardsFocus             = 4,
	Custom                         = 5,
	Max_None                       = 6,
	EFortAbilityTargetingSource_MAX = 7,
};
enum class EFortAmmoType : uint8
{
	Pistol                         = 0,
	Shotgun                        = 1,
	Assault                        = 2,
	Sniper                         = 3,
	Energy                         = 4,
	EFortAmmoType_MAX              = 5,
};
enum class EFortEncryptionStatus : uint8
{
	ENCRYPTED                      = 0,
	RELEASED                       = 1,
	EFortEncryptionStatus_MAX      = 2,
};
enum class EFortSentenceAudioPreference : uint8
{
	AudioAsset                     = 0,
	FeedbackBank                   = 1,
	EFortSentenceAudioPreference_MAX = 2,
};
enum class ECreativePortalManagerValidityResult : uint8
{
	Valid                          = 0,
	Invalid                        = 1,
	ECreativePortalManagerValidityResult_MAX = 2,
};
enum class EFortCreativePlotPermission : uint8
{
	Private                        = 0,
	Public                         = 1,
	EFortCreativePlotPermission_MAX = 2,
};
enum class ERealEstateOffsetType : uint8
{
	CustomOffsetFromCorner         = 0,
	Center                         = 1,
	ERealEstateOffsetType_MAX      = 2,
};
enum class ETimespanAsTextFormat : uint8
{
	DaysHoursMinutesSeconds        = 0,
	Colons                         = 1,
	Approximate                    = 2,
	ETimespanAsTextFormat_MAX      = 3,
};
enum class EFortDefenderSubtype : uint8
{
	AssaultRifle                   = 0,
	Pistol                         = 1,
	Melee                          = 2,
	Sniper                         = 3,
	Shotgun                        = 4,
	Invalid                        = 5,
	EFortDefenderSubtype_MAX       = 6,
};
enum class EHordeTierStartStatus : uint8
{
	ReadyToStart                   = 0,
	WaitingForPlayer               = 1,
	WaitingForDBM                  = 2,
	GenericNotReadyToStart         = 3,
	EHordeTierStartStatus_MAX      = 4,
};
enum class EHordeWaveStingerType : uint8
{
	WaveSuccess                    = 0,
	WaveFailure                    = 1,
	WaveIncoming                   = 2,
	WaveStarted                    = 3,
	EHordeWaveStingerType_MAX      = 4,
};
enum class EQueueActionType : uint8
{
	Plot                           = 0,
	ZoneCleanup                    = 1,
	EnvironmentActorRestoration    = 2,
	EQueueActionType_MAX           = 3,
};
enum class EAthenaPIEStartupMode : uint8
{
	UseDefaults                    = 0,
	Warmup                         = 1,
	WarmupPaused                   = 2,
	Aircraft                       = 3,
	AircraftPaused                 = 4,
	Gameplay                       = 5,
	EAthenaPIEStartupMode_MAX      = 6,
};
enum class EFDynamicBuildOrder : uint8
{
	X                              = 0,
	Y                              = 1,
	Z                              = 2,
	None                           = 3,
	FDynamicBuildOrder_MAX         = 4,
};
enum class EFortFeedbackBroadcastFilter : uint8
{
	FFBF_Speaker                   = 0,
	FFBF_SpeakerTeam               = 1,
	FFBF_SpeakerAdressee           = 2,
	FFBF_HumanPvP_Team1            = 3,
	FFBF_HumanPvP_Team2            = 4,
	FFBF_None_Max                  = 5,
	FFBF_MAX                       = 6,
};
enum class EFortFeedbackSelectionMethod : uint8
{
	FFSM_Instigator                = 0,
	FFSM_Recipient                 = 1,
	FFSM_TeamWitness               = 2,
	FFSM_EnemyWitness              = 3,
	FFSM_Random                    = 4,
	FFSM_Priority_IRTE             = 5,
	FFSM_AllPawns                  = 6,
	FFSM_Announcer                 = 7,
	FFSM_MAX                       = 8,
};
enum class EFortFeedbackAddressee : uint8
{
	FFA_Instigator                 = 0,
	FFA_Recipient                  = 1,
	FFA_All                        = 2,
	FFA_MAX                        = 3,
};
enum class EFortFeedbackContext : uint8
{
	FFC_Instigator                 = 0,
	FFC_Recipient                  = 1,
	FFC_TeamWitness                = 2,
	FFC_EnemyWitness               = 3,
	FFC_AllPawns                   = 4,
	FFC_Announcer                  = 5,
	FFC_None_Max                   = 6,
	FFC_MAX                        = 7,
};
enum class EFortFootstepPosition : uint8
{
	Parallel                       = 0,
	Above                          = 1,
	Below                          = 2,
	AboveOrBelowAndVisible         = 3,
	Max_None                       = 4,
	EFortFootstepPosition_MAX      = 5,
};
enum class EFortFootstepSurfaceType : uint8
{
	Default                        = 0,
	Wood                           = 1,
	Stone                          = 2,
	Metal                          = 3,
	Water                          = 4,
	Snow                           = 5,
	Ice                            = 6,
	Lava                           = 7,
	Max_None                       = 8,
	EFortFootstepSurfaceType_MAX   = 9,
};
enum class EFortFootstepAudioType : uint8
{
	Crouch                         = 0,
	CrouchSprint                   = 1,
	Walk                           = 2,
	Sprint                         = 3,
	Jump                           = 4,
	Land                           = 5,
	LandHard                       = 6,
	Max_None                       = 7,
	EFortFootstepAudioType_MAX     = 8,
};
enum class ESubGameAccessReason : uint8
{
	NoAccess                       = 0,
	OpenAccess                     = 1,
	TokenItemAccess                = 2,
	XboxHomeSharingAccess          = 3,
	XboxServiceOutageAccess        = 4,
	LimitedAccess                  = 5,
	ESubGameAccessReason_MAX       = 6,
};
enum class EPartyFeedbackType : uint8
{
	PartyInProgressPlayerJoined    = 0,
	PartyInProgressPlayerLeft      = 1,
	Default                        = 2,
	EPartyFeedbackType_MAX         = 3,
};
enum class EFriendFeedbackType : uint8
{
	FriendRequestSent              = 0,
	FriendRequestReceived          = 1,
	FriendRequestAccepted          = 2,
	Default                        = 3,
	EFriendFeedbackType_MAX        = 4,
};
enum class EClampType : uint8
{
	Minimum                        = 0,
	Maximum                        = 1,
	EClampType_MAX                 = 2,
};
enum class EDynamicSoundOverride : uint8
{
	Cue                            = 0,
	Wave                           = 1,
	EDynamicSoundOverride_MAX      = 2,
};
enum class EPlayerQueueType : uint8
{
	Player                         = 0,
	Spectator                      = 1,
	Broadcaster                    = 2,
	EPlayerQueueType_MAX           = 3,
};
enum class EFortInputFilterLevel : uint8
{
	None                           = 0,
	Touch                          = 1,
	Gamepad                        = 2,
	Mouse                          = 3,
	EFortInputFilterLevel_MAX      = 4,
};
enum class EEventTournamentType : uint8
{
	Online                         = 0,
	Onsite                         = 1,
	Unknown                        = 2,
	EEventTournamentType_MAX       = 3,
};
enum class EAircraftLaunchReason : uint8
{
	StdTimerAllPlayers             = 0,
	EarlyTimerAllPlayers           = 1,
	StdTimerMostPlayers            = 2,
	EarlyTimerMostPlayers          = 3,
	StdTimerFewPlayers             = 4,
	EAircraftLaunchReason_MAX      = 5,
};
enum class EFortAbilityCostSource : uint8
{
	Stamina                        = 0,
	Durability                     = 1,
	AmmoMagazine                   = 2,
	AmmoPrimary                    = 3,
	Item                           = 4,
	EFortAbilityCostSource_MAX     = 5,
};
enum class EFortGameplayAbilityActivation : uint8
{
	Passive                        = 0,
	Triggered                      = 1,
	Active                         = 2,
	EFortGameplayAbilityActivation_MAX = 3,
};
enum class EFortAIWeaponUsage : uint8
{
	NoWeaponUsage                  = 0,
	UsesRangedWeapon               = 1,
	UsesMeleeWeapon                = 2,
	EFortAIWeaponUsage_MAX         = 3,
};
enum class EFortGameplayAbilityMontageSectionToPlay : uint8
{
	FirstSection                   = 0,
	RandomSection                  = 1,
	TestedRandomSection            = 2,
	EFortGameplayAbilityMontageSectionToPlay_MAX = 3,
};
enum class EJumpBoostPackState : uint8
{
	Idle                           = 0,
	Boost                          = 1,
	Hovering                       = 2,
	Falling                        = 3,
	None                           = 4,
	EJumpBoostPackState_MAX        = 5,
};
enum class EMedicPackState : uint8
{
	Idle                           = 0,
	Active                         = 1,
	None                           = 2,
	EMedicPackState_MAX            = 3,
};
enum class EFortGameplayCueSourceCondition : uint8
{
	AnySource                      = 0,
	LocalPlayerSource              = 1,
	NonLocalPlayerSource           = 2,
	EFortGameplayCueSourceCondition_MAX = 3,
};
enum class EFortGameplayCueAttachType : uint8
{
	AttachToTarget                 = 0,
	DoNotAttach                    = 1,
	EFortGameplayCueAttachType_MAX = 2,
};
enum class EPvPGameEndReasons : uint8
{
	PVPGER_TeamScoreLimit          = 0,
	PVPGER_LastManStanding         = 1,
	PVPGER_TimeExpired             = 2,
	PVPGER_MissionCompletion       = 3,
	PVPGER_MAX                     = 4,
};
enum class EFortServerGameMode : uint8
{
	Idle                           = 0,
	LobbyPvE                       = 1,
	LobbyPvP                       = 2,
	ZonePvP                        = 3,
	ZonePvE                        = 4,
	EFortServerGameMode_MAX        = 5,
};
enum class EFortBanHammerNotificationAction : uint8
{
	BanAndKick                     = 0,
	Kick                           = 1,
	EFortBanHammerNotificationAction_MAX = 2,
};
enum class ETeamChatRoomState : uint8
{
	NotCreated                     = 0,
	Creating                       = 1,
	Created                        = 2,
	Timeout                        = 3,
	ETeamChatRoomState_MAX         = 4,
};
enum class EFortScalabilityMode : uint8
{
	LowPower                       = 0,
	Frontend                       = 1,
	EFortScalabilityMode_MAX       = 2,
};
enum class ESavedAccountType : uint8
{
	None                           = 0,
	Facebook                       = 1,
	Google                         = 2,
	Epic                           = 3,
	Device                         = 4,
	Headless                       = 5,
	Refresh                        = 6,
	ESavedAccountType_MAX          = 7,
};
enum class EFortMobileFPSMode : uint8
{
	Mode_20Fps                     = 0,
	Mode_30Fps                     = 1,
	Mode_60Fps                     = 2,
	Mode_MAX                       = 3,
};
enum class EFortConsoleFPSMode : uint8
{
	Mode_30Fps                     = 0,
	Mode_30Fps_Unlocked            = 1,
	Mode_60Fps                     = 2,
	Mode_MAX                       = 3,
};
enum class EFortGiftWrapType : uint8
{
	System                         = 0,
	UserFree                       = 1,
	UserUnlock                     = 2,
	UserConsumable                 = 3,
	Message                        = 4,
	EFortGiftWrapType_MAX          = 5,
};
enum class EFortGlobalAction : uint8
{
	TrapConfirm                    = 0,
	TrapPicker                     = 1,
	BuildConfirm                   = 2,
	PerformBuildingEditInteraction = 3,
	PerformBuildingImprovementInteraction = 4,
	SwitchQuickBar                 = 5,
	Use                            = 6,
	Reload                         = 7,
	InventoryOrChatHold            = 8,
	GamepadChangeMaterialOrHarvestHold = 9,
	GamepadNextWeaponOrHarvestHold = 10,
	ChangeMaterial                 = 11,
	Fire                           = 12,
	RotatePrimitiveClockwise       = 13,
	Gadget1                        = 14,
	Gadget2                        = 15,
	Ability1                       = 16,
	Ability2                       = 17,
	Ability3                       = 18,
	ToggleFullScreenMap            = 19,
	ToggleInventory                = 20,
	Jump                           = 21,
	Crouch                         = 22,
	VehicleExit                    = 23,
	ShoppingCartCoast              = 24,
	VehicleJump                    = 25,
	GolfCartEBrake                 = 26,
	VehicleChangeSeat              = 27,
	GolfCartForward                = 28,
	GolfCartReverse                = 29,
	GolfCartHonk                   = 30,
	Count                          = 31,
	EFortGlobalAction_MAX          = 32,
};
enum class EChunkInstallState : uint8
{
	NotInstalled                   = 0,
	Pending                        = 1,
	Installed                      = 2,
	Unknown                        = 3,
	EChunkInstallState_MAX         = 4,
};
enum class EFortAccountLinkingUIConfig : uint8
{
	Disabled                       = 0,
	Default                        = 1,
	ExternalViewerOnly             = 2,
	FullExternal                   = 3,
	EFortAccountLinkingUIConfig_MAX = 4,
};
enum class EFortHelpContentLocation : uint8
{
	Top                            = 0,
	Bottom                         = 1,
	Max                            = 2,
};
enum class EFortHelpItemType : uint8
{
	Header                         = 0,
	Entry                          = 1,
	Max                            = 2,
};
enum class ESpecializationType : uint8
{
	Tier1                          = 0,
	Tier2                          = 1,
	Tier3                          = 2,
	Tier4                          = 3,
	NumTiers                       = 4,
	ESpecializationType_MAX        = 5,
};
enum class EFortHeroLoadoutPerkType : uint8
{
	Commander                      = 0,
	Leader                         = 1,
	Standard                       = 2,
	EFortHeroLoadoutPerkType_MAX   = 3,
};
enum class EFortSupportBonusType : uint8
{
	Normal                         = 0,
	Tactical                       = 1,
	Max_None                       = 2,
	EFortSupportBonusType_MAX      = 3,
};
enum class EFortHexTileAdjacency : uint8
{
	North                          = 0,
	NorthEast                      = 1,
	SouthEast                      = 2,
	South                          = 3,
	SouthWest                      = 4,
	NorthWest                      = 5,
	Max_None                       = 6,
	EFortHexTileAdjacency_MAX      = 7,
};
enum class ESquadSlotType : uint8
{
	HeroSquadPrimary               = 0,
	HeroSquadSupport               = 1,
	HeroSquadTactical              = 2,
	HeroSquadMissionDefender       = 3,
	SurvivorSquadLeadSurvivor      = 4,
	SurvivorSquadSurvivor          = 5,
	DefenderSquadMember            = 6,
	ExpeditionSquadMember          = 7,
	ESquadSlotType_MAX             = 8,
};
enum class EFortHomebaseSquadSlotType : uint8
{
	GroundSlot                     = 0,
	SupportSlot                    = 1,
	TacticalSlot                   = 2,
	Max_None                       = 3,
	EFortHomebaseSquadSlotType_MAX = 4,
};
enum class EFortHomebaseSquadType : uint8
{
	AttributeSquad                 = 0,
	CombatSquad                    = 1,
	DefenderSquad                  = 2,
	ExpeditionSquad                = 3,
	Max_None                       = 4,
	EFortHomebaseSquadType_MAX     = 5,
};
enum class EHomebaseNodeType : uint8
{
	Gadget                         = 0,
	Utility                        = 1,
	Hidden                         = 2,
	EHomebaseNodeType_MAX          = 3,
};
enum class EFortHuskAnimType : uint8
{
	Basic                          = 0,
	Dwarf                          = 1,
	BlasterBig                     = 2,
	Weak                           = 3,
	TinyHead                       = 4,
	Beehive                        = 5,
	Husky                          = 6,
	Sploder                        = 7,
	Zapper                         = 8,
	EFortHuskAnimType_MAX          = 9,
};
enum class EFortInputGameMode : uint8
{
	SaveTheWorld                   = 0,
	Athena                         = 1,
	EFortInputGameMode_MAX         = 2,
};
enum class EFortIntensityCurveSequenceType : uint8
{
	Sequence                       = 0,
	Loop                           = 1,
	Random                         = 2,
	Max_None                       = 3,
	EFortIntensityCurveSequenceType_MAX = 4,
};
enum class EItemEvolutionRestrictionReason : uint8
{
	NoEvolutions                   = 0,
	BelowMaximumLevel              = 1,
	VaultOverflow                  = 2,
	MissingCatalyst                = 3,
	MissingCosts                   = 4,
	NoRarityUpgrade                = 5,
	InUseByCrafting                = 6,
	EItemEvolutionRestrictionReason_MAX = 7,
};
enum class EItemUpgradeRestrictionReason : uint8
{
	NoAdditionalLevels             = 0,
	MaximumLevelAchieved           = 1,
	VaultOverflow                  = 2,
	EItemUpgradeRestrictionReason_MAX = 3,
};
enum class EFortTemplateAccess : uint8
{
	Normal                         = 0,
	Trusted                        = 1,
	Private                        = 2,
	EFortTemplateAccess_MAX        = 3,
};
enum class EItemProfileType : uint8
{
	Common                         = 0,
	Campaign                       = 1,
	Athena                         = 2,
	EItemProfileType_MAX           = 3,
};
enum class EFortKickReason : uint8
{
	NotKicked                      = 0,
	GenericKick                    = 1,
	WasBanned                      = 2,
	EncryptionRequired             = 3,
	CrossPlayRestriction           = 4,
	ClientIdRestriction            = 5,
	EFortKickReason_MAX            = 6,
};
enum class ELobbyMissionGeneratorDetailsRequirement : uint8
{
	Unknown                        = 0,
	NotRequired                    = 1,
	Required                       = 2,
	ELobbyMissionGeneratorDetailsRequirement_MAX = 3,
};
enum class ELootQuotaLevel : uint8
{
	Unlimited                      = 0,
	Level1                         = 1,
	Level2                         = 2,
	Level3                         = 3,
	Level4                         = 4,
	Level5                         = 5,
	Level6                         = 6,
	Level7                         = 7,
	Level8                         = 8,
	Level9                         = 9,
	Level10                        = 10,
	Level11                        = 11,
	Level12                        = 12,
	Level13                        = 13,
	Level14                        = 14,
	Level15                        = 15,
	Level16                        = 16,
	Level17                        = 17,
	NumLevels                      = 18,
	ELootQuotaLevel_MAX            = 19,
};
enum class EFortMatchmakingType : uint8
{
	Gathering                      = 0,
	CriticalMission                = 1,
	QuickPlay                      = 2,
	Session                        = 3,
	EFortMatchmakingType_MAX       = 4,
};
enum class EFortSessionHelperJoinResult : uint8
{
	NoResult                       = 0,
	ReservationSuccess             = 1,
	ReservationFailure_PartyLimitReached = 2,
	ReservationFailure_IncorrectPlayerCount = 3,
	ReservationFailure_RequestTimedOut = 4,
	ReservationFailure_ReservationNotFound = 5,
	ReservationFailure_ReservationDenied = 6,
	ReservationFailure_ReservationDenied_Banned = 7,
	ReservationFailure_ReservationRequestCanceled = 8,
	ReservationFailure_ReservationInvalid = 9,
	ReservationFailure_BadSessionId = 10,
	ReservationFailure_ReservationDenied_ContainsExistingPlayers = 11,
	ReservationFailure_GeneralError = 12,
	ReservationFailure_NoSubsystem = 13,
	ReservationFailure_NoIdentity  = 14,
	ReservationFailure_InvalidSession = 15,
	ReservationFailure_InvalidUser = 16,
	ReservationFailure_EncryptionKey = 17,
	ReservationFailure_RefreshAuth = 18,
	ReservationFailure_AlreadyJoiningDuringReserve = 19,
	ReservationFailure_AlreadyJoiningDuringSkip = 20,
	JoinSessionSuccess             = 21,
	JoinSessionFailure_SessionIsFull = 22,
	JoinSessionFailure_SessionDoesNotExist = 23,
	JoinSessionFailure_CouldNotRetrieveAddress = 24,
	JoinSessionFailure_AlreadyInSession = 25,
	JoinSessionFailure_UnknownError = 26,
	JoinSessionFailure_InvalidSession = 27,
	JoinSessionFailure_InvalidSearchResultIndex = 28,
	JoinSessionFailure_AlreadyJoiningDuringJoin = 29,
	SearchPassFailure_NoSessionHelper = 30,
	SearchPassFailure_InvalidUser  = 31,
	SearchPassFailure_NoIdentity   = 32,
	SearchPassFailure_InvalidSearchResult = 33,
	SearchPassFailure_InvalidSearchResultIndex = 34,
	JoinSessionCanceled            = 35,
	EFortSessionHelperJoinResult_MAX = 36,
};
enum class EFortMatchmakingPool : uint8
{
	Any                            = 0,
	Desktop                        = 1,
	PS4                            = 2,
	XboxOne                        = 3,
	Mobile                         = 4,
	Test                           = 5,
	Switch                         = 6,
	All                            = 7,
	EFortMatchmakingPool_MAX       = 8,
};
enum class EFortMatchmakingPrivacyConfiguration : uint8
{
	UserPartyConfigured            = 0,
	ForcePrivate                   = 1,
	ForcePublic                    = 2,
	EFortMatchmakingPrivacyConfiguration_MAX = 3,
};
enum class EMatchmakingFlags : uint8
{
	None                           = 0,
	CreateNewOnly                  = 1,
	NoReservation                  = 2,
	Private                        = 4,
	UseWorldDataOwner              = 8,
	EMatchmakingFlags_MAX          = 9,
};
enum class EMatchmakingStartLocation : uint8
{
	Lobby                          = 0,
	Game                           = 1,
	CreateNew                      = 2,
	FindSingle                     = 3,
	EMatchmakingStartLocation_MAX  = 4,
};
enum class EMatchmakingCancelReasonV2 : uint8
{
	Explicit                       = 0,
	JoinedParty                    = 1,
	LeftParty                      = 2,
	PartyMemberJoined              = 3,
	PartyMemberLeft                = 4,
	PartyMemberCanceled            = 5,
	PlayReplay                     = 6,
	UIDestroyed                    = 7,
	PCDestroyed                    = 8,
	AppBackgrounded                = 9,
	HotfixOutdated                 = 10,
	TournamentOver                 = 11,
	NotInParty                     = 12,
	CrossplayBlocked               = 13,
	TournamentCrossplayBlocked     = 14,
	AccountLevelTooLow             = 15,
	Unknown                        = 16,
	EMatchmakingCancelReasonV2_MAX = 17,
};
enum class EMatchmakingErrorV2 : int32
{
	Success                        = 0,
	Canceled                       = 1,
	NeedUpdate                     = 2,
	VersionMismatch                = 3,
	NotLoggedIn                    = 4,
	NoIdentityInterface            = 5,
	NoSessionInterface             = 6,
	AlreadyInSession               = 7,
	FindSessionFailure             = 8,
	FailedToQueryEncryptionKey     = 9,
	FailedToRefreshAuthToken       = 10,
	FailedToCleanupSession         = 11,
	FailedToJoinSession            = 12,
	FailedToTravelToSession        = 13,
	Unauthorized                   = 14,
	BannedFromAthena               = 15,
	BannedFromAthenaForExploit     = 16,
	BannedFromAthenaForTeaming     = 17,
	BannedFromAthenaForTeamKilling = 18,
	InvalidCustomMatchKey          = 19,
	FailedToContactGameServices    = 20,
	FailedToConnectToMMS           = 21,
	MMSCommunicationIssue          = 22,
	ServiceReturnedError           = 23,
	PlaylistNoLongerAvailable      = 24,
	CrossplayUnsetWithInputDevicePoolShift = 25,
	CrossplayNeededForTournamentMatch = 26,
	MatchmakingDisabled            = 27,
	AccountLevelTooLow             = 28,
	UnknownError                   = 29,
	EMatchmakingErrorV2_MAX        = 30,
};
enum class EAthenaFilterDisplayType : uint8
{
	UseCategoryName                = 0,
	ShowFilterString               = 1,
	EAthenaFilterDisplayType_MAX   = 2,
};
enum class ESocialImportPanelPlatform : uint8
{
	Facebook                       = 0,
	VK                             = 1,
	Steam                          = 2,
	Xbox                           = 3,
	Playstation                    = 4,
	Switch                         = 5,
	ESocialImportPanelPlatform_MAX = 6,
};
enum class ETwitchViewerStatusType : uint8
{
	TwitchViewerStatus_Unknown     = 0,
	TwitchViewerStatus_Nonsubscriber = 1,
	TwitchViewerStatus_Subscriber  = 2,
	TwitchViewerStatus_Broadcaster = 3,
	TwitchViewerStatus_Max         = 4,
};
enum class EMegaStormState : uint8
{
	GatheringActorList             = 0,
	DamagingActors                 = 1,
	EMegaStormState_MAX            = 2,
};
enum class EFortMinigameWarmupType : uint8
{
	Stasis                         = 0,
	Respawn                        = 1,
	EFortMinigameWarmupType_MAX    = 2,
};
enum class EFortMinigameExec : uint8
{
	Yes                            = 0,
	No                             = 1,
	EFortMinigameExec_MAX          = 2,
};
enum class EFortMinigamePostGameSpawnLocationSetting : uint8
{
	IslandStart                    = 0,
	PreGameLocation                = 1,
	EFortMinigamePostGameSpawnLocationSetting_MAX = 2,
};
enum class EFortMinigamePlayerSpawnLocationSetting : uint8
{
	SpawnPads                      = 0,
	Air                            = 1,
	EFortMinigamePlayerSpawnLocationSetting_MAX = 2,
};
enum class EMinigameCaptureObjectiveState : uint8
{
	NotCaptured                    = 0,
	Captured                       = 1,
	EMinigameCaptureObjectiveState_MAX = 2,
};
enum class EMinigameScoreType : uint8
{
	Time                           = 0,
	PointTotal                     = 1,
	EMinigameScoreType_MAX         = 2,
};
enum class EFortMinigameStatOperation : uint8
{
	Equal                          = 0,
	Less                           = 1,
	Greater                        = 2,
	LessOrEqual                    = 3,
	GreaterOrEqual                 = 4,
	EFortMinigameStatOperation_MAX = 5,
};
enum class EFortMinigameStatScope : uint8
{
	Group                          = 0,
	Team                           = 1,
	Player                         = 2,
	EFortMinigameStatScope_MAX     = 3,
};
enum class EFortMiniMapIconRotation : uint8
{
	EFMMIR_None                    = 0,
	EFMMIR_Absolute                = 1,
	EFMMIR_Relative                = 2,
	EFMMIR_MAX                     = 3,
};
enum class EFortMiniMapContext : uint8
{
	EFMC_MiniMap                   = 0,
	EFMC_FullScreenMap             = 1,
	EFMC_MAX                       = 2,
};
enum class EFortMiniMapHeight : uint8
{
	EFMH_Equal                     = 0,
	EFMH_Below                     = 1,
	EFMH_Above                     = 2,
	EFMH_MAX                       = 3,
};
enum class EFortCheatMissionGenType : uint8
{
	NewGeneration                  = 0,
	OldGeneration                  = 1,
	Max_None                       = 2,
	EFortCheatMissionGenType_MAX   = 3,
};
enum class EFortOptionGenerationResult : uint8
{
	NoOptionsGenerated             = 0,
	NewOptionsGenerated            = 1,
	ExistingOptionsGenerated       = 2,
	EFortOptionGenerationResult_MAX = 3,
};
enum class EPollActorsInVolumeTypes : uint8
{
	DesignerPlacedOnly             = 0,
	PlayerBuiltOnly                = 1,
	All                            = 2,
	EPollActorsInVolumeTypes_MAX   = 3,
};
enum class EMissionReplyTypes : uint8
{
	Handled                        = 0,
	NotHandled                     = 1,
	EMissionReplyTypes_MAX         = 2,
};
enum class EMissionStormShieldState : uint8
{
	IDLE                           = 0,
	GROWING                        = 1,
	SHRINKING                      = 2,
	MAX                            = 3,
};
enum class ETimerOverrideSetting : uint8
{
	DefaultBehavior                = 0,
	ForceShow                      = 1,
	ForceHide                      = 2,
	ShowAtEnd                      = 3,
	ETimerOverrideSetting_MAX      = 4,
};
enum class EFortMtxPlatform : uint8
{
	Epic                           = 0,
	PSN                            = 1,
	Live                           = 2,
	Shared                         = 3,
	EpicPC                         = 4,
	EpicPCKorea                    = 5,
	IOSAppStore                    = 6,
	EpicAndroid                    = 7,
	Nintendo                       = 8,
	WeGame                         = 9,
	Samsung                        = 10,
	EFortMtxPlatform_MAX           = 11,
};
enum class EFortMusicSectionType : uint8
{
	Intro                          = 0,
	Loop                           = 1,
	Outro                          = 2,
	Max_None                       = 3,
	EFortMusicSectionType_MAX      = 4,
};
enum class EFortMusicSectionStopBehavior : uint8
{
	Crossfade                      = 0,
	AllowFadeOut                   = 1,
	EFortMusicSectionStopBehavior_MAX = 2,
};
enum class EFortMusicCombatIntensity : uint8
{
	Low                            = 0,
	Medium                         = 1,
	High                           = 2,
	VeryHigh                       = 3,
	Max_None                       = 4,
	EFortMusicCombatIntensity_MAX  = 5,
};
enum class EMusicChannel : uint8
{
	VoiceA                         = 0,
	VoiceB                         = 1,
	Max_None                       = 2,
	EMusicChannel_MAX              = 3,
};
enum class EMusicFadeStyles : uint8
{
	CrossFade                      = 0,
	FadeOutThenIn                  = 1,
	Max_None                       = 2,
	EMusicFadeStyles_MAX           = 3,
};
enum class EFortAreaFlag : uint8
{
	Default                        = 0,
	Obstacle                       = 1,
	Smashable                      = 2,
	Unwalkable                     = 3,
	Interactable                   = 4,
	EFortAreaFlag_MAX              = 5,
};
enum class EFortNavLinkPattern : uint8
{
	Floor                          = 0,
	Stairs                         = 1,
	Roof                           = 2,
	Manual                         = 3,
	EFortNavLinkPattern_MAX        = 4,
};
enum class EFortNamedNavmesh : uint8
{
	Husk                           = 0,
	Smasher                        = 1,
	MAX                            = 2,
};
enum class EPathUndermineEvent : uint8
{
	Predicted                      = 0,
	Started                        = 1,
	Finished                       = 2,
	EPathUndermineEvent_MAX        = 3,
};
enum class EPathObstacleAction : uint8
{
	Melee                          = 0,
	Ignore                         = 1,
	AbortMoveAsFailed              = 2,
	FinishMoveAsSucceeded          = 3,
	EPathObstacleAction_MAX        = 4,
};
enum class EWardAffectType : uint8
{
	AffectsBothStartAndEndPoints   = 0,
	AffectsOnlyStartPoints         = 1,
	AffectsOnlyEndPoints           = 2,
	EWardAffectType_MAX            = 3,
};
enum class EFortControlRecoveryBehavior : uint8
{
	DefaultControl                 = 0,
	LimitedControl                 = 1,
	ChainControl                   = 2,
	EFortControlRecoveryBehavior_MAX = 3,
};
enum class EFortPawnPushSize : uint8
{
	FFPS_Normal                    = 0,
	FPPS_Player                    = 1,
	FPPS_Large                     = 2,
	FPPS_SuperLarge                = 3,
	EFortPawnPushSize_MAX          = 4,
};
enum class EFortAnnouncerTeamVocalChords : uint8
{
	Team1                          = 0,
	Team2                          = 1,
	Max_None                       = 2,
	EFortAnnouncerTeamVocalChords_MAX = 3,
};
enum class EFortBadMatchTeamSize : uint8
{
	Unspecified                    = 0,
	SmallTeam                      = 1,
	LargeTeam                      = 2,
	EFortBadMatchTeamSize_MAX      = 3,
};
enum class EFortBadMatchTriggerOperation : uint8
{
	LessThan                       = 0,
	LessThanOrEqual                = 1,
	Equal                          = 2,
	GreaterThan                    = 3,
	GreaterThanOrEqual             = 4,
	EFortBadMatchTriggerOperation_MAX = 5,
};
enum class EFortRewardType : uint8
{
	Default                        = 0,
	Missed                         = 1,
	Max_None                       = 2,
	EFortRewardType_MAX            = 3,
};
enum class EFortReplicatedStat : uint8
{
	MonsterKills                   = 0,
	MonsterDamagePoints            = 1,
	PlayerKills                    = 2,
	WoodGathered                   = 3,
	StoneGathered                  = 4,
	MetalGathered                  = 5,
	Deaths                         = 6,
	BuildingsBuilt                 = 7,
	BuildingsBuilt_Wood            = 8,
	BuildingsBuilt_Stone           = 9,
	BuildingsBuilt_Metal           = 10,
	BuildingsUpgraded_Wood2        = 11,
	BuildingsUpgraded_Wood3        = 12,
	BuildingsUpgraded_Stone2       = 13,
	BuildingsUpgraded_Stone3       = 14,
	BuildingsUpgraded_Metal2       = 15,
	BuildingsUpgraded_Metal3       = 16,
	BuildingsDestroyed             = 17,
	Repair_Wood                    = 18,
	Repair_Stone                   = 19,
	Repair_Metal                   = 20,
	FlagsCaptured                  = 21,
	FlagsReturned                  = 22,
	ContainersLooted               = 23,
	CraftingPoints                 = 24,
	TrapPlacementPoints            = 25,
	TrapActivationPoints           = 26,
	TotalScore                     = 27,
	OldTotalScore                  = 28,
	CombatScore                    = 29,
	BuildingScore                  = 30,
	UtilityScore                   = 31,
	BadgesScore                    = 32,
	None                           = 33,
	MAX                            = 34,
};
enum class EFortReplenishmentType : uint8
{
	Restricted                     = 0,
	ClampMin                       = 1,
	Add                            = 2,
	Ability                        = 3,
	EFortReplenishmentType_MAX     = 4,
};
enum class EFortPickupTossState : uint8
{
	NotTossed                      = 0,
	InProgress                     = 1,
	AtRest                         = 2,
	EFortPickupTossState_MAX       = 3,
};
enum class EFortPickupSpawnSource : uint8
{
	Unset                          = 0,
	PlayerElimination              = 1,
	Chest                          = 2,
	SupplyDrop                     = 3,
	AmmoBox                        = 4,
	EFortPickupSpawnSource_MAX     = 5,
};
enum class EFortPickupSourceTypeFlag : uint8
{
	Other                          = 0,
	Player                         = 1,
	Destruction                    = 2,
	Container                      = 4,
	AI                             = 8,
	Tossed                         = 16,
	FloorLoot                      = 32,
	EFortPickupSourceTypeFlag_MAX  = 33,
};
enum class EFortPlayerAnimBodyType : uint8
{
	Small                          = 0,
	Medium                         = 1,
	Large                          = 2,
	EFortPlayerAnimBodyType_MAX    = 3,
};
enum class EQuickbarSlots : uint8
{
	HarvestingTool                 = 0,
	Weapon1                        = 1,
	Weapon2                        = 2,
	Weapon3                        = 3,
	Gadget1                        = 4,
	Gadget2                        = 5,
	Ability1                       = 6,
	Ability2                       = 7,
	Ability3                       = 8,
	EQuickbarSlots_MAX             = 9,
};
enum class EFortPickerToDisplay : uint8
{
	TrapPicker                     = 0,
	WeaponPicker                   = 1,
	SocialPicker                   = 2,
	ChatPicker                     = 3,
	NotePicker                     = 4,
	EmotePicker                    = 5,
	SquadQuickChatPicker           = 6,
	EFortPickerToDisplay_MAX       = 7,
};
enum class EMapZoomingMode : uint8
{
	None                           = 0,
	ZoomingIn                      = 1,
	ZoomingOut                     = 2,
	EMapZoomingMode_MAX            = 3,
};
enum class ECameraStateRestoreReason : uint8
{
	Unknown                        = 0,
	ChangedFollowTarget            = 1,
	ChangedCameraType              = 2,
	InvokedHotKey                  = 3,
	Scrubbed                       = 4,
	Restored                       = 5,
	MAX                            = 6,
};
enum class EFollow : uint8
{
	NextTeammate                   = 0,
	PreviousTeammate               = 1,
	SpecialActor                   = 2,
	EFollow_MAX                    = 3,
};
enum class EFortMotionYawAxis : uint8
{
	Yaw                            = 0,
	Roll                           = 1,
	EFortMotionYawAxis_MAX         = 2,
};
enum class EFortInputActionGroup : uint8
{
	AllModes                       = 0,
	Combat                         = 1,
	Building                       = 2,
	Movement                       = 3,
	Edit                           = 4,
	Death                          = 5,
	Cinematic                      = 6,
	Picker                         = 7,
	Other                          = 8,
	Vehicle                        = 9,
	ShoppingCart                   = 10,
	GolfCart                       = 11,
	QuadCrasher                    = 12,
	Biplane                        = 13,
	Jackal                         = 14,
	Hamsterball                    = 15,
	Spectating                     = 16,
	FullscreenMap                  = 17,
	CreativeMoveToolEquipped       = 18,
	CreativeMoveObjectsFreely      = 19,
	CreativeMoveBuildingsOnGrid    = 20,
	CreativeFlying                 = 21,
	CombatAndBuilding              = 22,
	EFortInputActionGroup_MAX      = 23,
};
enum class EFortInputActionType : uint8
{
	Press                          = 0,
	Click                          = 1,
	Hold                           = 2,
	Release                        = 3,
	EFortInputActionType_MAX       = 4,
};
enum class EFortInputDevice : uint8
{
	Mouse                          = 0,
	Keyboard                       = 1,
	Gamepad                        = 2,
	Touch                          = 3,
	EFortInputDevice_MAX           = 4,
};
enum class EItemInteractionStatus : uint8
{
	Interrupted                    = 0,
	Completed                      = 1,
	TimedOut                       = 2,
	EItemInteractionStatus_MAX     = 3,
};
enum class EItemInteractionType : uint8
{
	Search                         = 0,
	LockOnSearch                   = 1,
	None                           = 2,
	EItemInteractionType_MAX       = 3,
};
enum class EFortPawnStasisMode : uint8
{
	None                           = 0,
	NoMovement                     = 1,
	NoMovementOrTurning            = 2,
	NoMovementOrFalling            = 3,
	EFortPawnStasisMode_MAX        = 4,
};
enum class EBackpackType : uint8
{
	Jetpack                        = 0,
	Medic                          = 1,
	StormTracker                   = 2,
	Glider                         = 3,
	EBackpackType_MAX              = 4,
};
enum class ETrustedPlatformType : uint8
{
	Unknown                        = 0,
	Untrusted                      = 1,
	PS4                            = 2,
	XboxOne                        = 3,
	Switch                         = 4,
	ETrustedPlatformType_MAX       = 5,
};
enum class ETeamMemberState : uint8
{
	None                           = 0,
	FIRST_CHAT_MESSAGE             = 1,
	NeedAmmoHeavy                  = 1,
	NeedAmmoLight                  = 2,
	NeedAmmoMedium                 = 3,
	NeedAmmoShells                 = 4,
	NeedAmmoRocket                 = 5,
	ChatBubble                     = 6,
	EnemySpotted                   = 7,
	NeedBandages                   = 8,
	NeedMaterials                  = 9,
	NeedShields                    = 10,
	NeedWeapon                     = 11,
	LAST_CHAT_MESSAGE              = 11,
	MAX                            = 12,
};
enum class EFortPawnState : uint8
{
	Default                        = 0,
	InCombat                       = 1,
	DBNO                           = 2,
	IsReviving                     = 4,
	BeingRevived                   = 8,
	Dead                           = 16,
	EFortPawnState_MAX             = 17,
};
enum class EVehicleTrickType : uint8
{
	None                           = 0,
	RollIncrement                  = 1,
	ReverseRollIncrement           = 2,
	YawIncrement                   = 3,
	ReverseYawIncrement            = 4,
	PitchIncrement                 = 5,
	ReversePitchIncrement          = 6,
	HeightIncrement                = 7,
	DistanceIncrement              = 8,
	AirTimeIncrement               = 9,
	ShoppingCart_Flying            = 10,
	ShoppingCart_Stooping          = 11,
	StartedLanding                 = 12,
	FailedLanding                  = 13,
	Cancelled                      = 14,
	StuckLanding                   = 15,
	Count                          = 16,
	EVehicleTrickType_MAX          = 17,
};
enum class EVehicleTrickAxis : uint8
{
	X                              = 0,
	XNeg                           = 1,
	Y                              = 2,
	YNeg                           = 3,
	Z                              = 4,
	ZNeg                           = 5,
	Count                          = 6,
	EVehicleTrickAxis_MAX          = 7,
};
enum class EDBNOType : uint8
{
	On                             = 0,
	Off                            = 1,
	NotWhenRespawning              = 2,
	EDBNOType_MAX                  = 3,
};
enum class ERewardPlacementBonusType : uint8
{
	Solo                           = 0,
	Duo                            = 1,
	Squad                          = 2,
	LargeTeam                      = 3,
	None                           = 4,
	TwoTeam                        = 5,
	MediumTeam                     = 6,
	QuickSolo                      = 7,
	QuickDuo                       = 8,
	QuickSquad                     = 9,
	QuickLargeTeam                 = 10,
	QuickTwoTeam                   = 11,
	QuickMediumTeam                = 12,
	SinglePlacement                = 13,
	ERewardPlacementBonusType_MAX  = 14,
};
enum class ERewardTimePlayedType : uint8
{
	Default                        = 0,
	NoReward                       = 1,
	FlatValue                      = 2,
	ERewardTimePlayedType_MAX      = 3,
};
enum class EPlaylistUIExtensionSlot : uint8
{
	Primary                        = 0,
	TopRightCorner                 = 1,
	GameInfoBox                    = 2,
	EPlaylistUIExtensionSlot_MAX   = 3,
};
enum class EAthenaVictoryUIType : uint8
{
	Default                        = 0,
	Heist                          = 1,
	LTM                            = 2,
	Domination                     = 3,
	EAthenaVictoryUIType_MAX       = 4,
};
enum class EAthenaWinCondition : uint8
{
	LastManStanding                = 0,
	LastManStandingIncludingAllies = 1,
	TimedTeamFinalFight            = 2,
	FirstToGoalScore               = 3,
	TimedLastMenStanding           = 4,
	MutatorControlled              = 5,
	MutatorControlledGoalScore     = 6,
	EAthenaWinCondition_MAX        = 7,
};
enum class EAthenaRespawnLocation : uint8
{
	LastDeath                      = 0,
	CreativePlayerStart            = 1,
	EAthenaRespawnLocation_MAX     = 2,
};
enum class EAthenaRespawnType : uint8
{
	None                           = 0,
	InfiniteRespawn                = 1,
	InfiniteRespawnExceptStorm     = 2,
	EAthenaRespawnType_MAX         = 3,
};
enum class EPlaylistAdvertisementType : uint8
{
	None                           = 0,
	New                            = 1,
	Updated                        = 2,
	EPlaylistAdvertisementType_MAX = 3,
};
enum class EPlaysetOffsetType : uint8
{
	CustomOffsetFromCorner         = 0,
	Center                         = 1,
	EPlaysetOffsetType_MAX         = 2,
};
enum class EProfileGoState : uint8
{
	None                           = 0,
	SettlingLocation               = 1,
	RunningCommands                = 2,
	CompletedScenario              = 3,
	Summary                        = 4,
	Completed                      = 5,
	EProfileGoState_MAX            = 6,
};
enum class EFortPointsFromNavGraphGoalPathDistanceFilterOperator : uint8
{
	AllGoalsInRange                = 0,
	AnyGoalInRange                 = 1,
	EFortPointsFromNavGraphGoalPathDistanceFilterOperator_MAX = 2,
};
enum class EFortTestGoalActorDot : uint8
{
	Dot3D                          = 0,
	Dot2D                          = 1,
	EFortTestGoalActorDot_MAX      = 2,
};
enum class EDistanceMode : uint8
{
	DistItemToContext              = 0,
	DistItemGoalActorToContext     = 1,
	DistItemToItemGoalActor        = 2,
	EDistanceMode_MAX              = 3,
};
enum class ECountAIAssignedToType : uint8
{
	Goal                           = 0,
	Actor                          = 1,
	Assignment                     = 2,
	ECountAIAssignedToType_MAX     = 3,
};
enum class ETwoPointSolverRotationA : uint8
{
	PointAToQuerier                = 0,
	QuerierToPointA                = 1,
	PointAToQuerierWithRandomOffset = 2,
	QuerierToPointAWithRandomOffset = 3,
	Custom                         = 4,
	ETwoPointSolverRotationA_MAX   = 5,
};
enum class EObjectiveStatusUpdateType : uint8
{
	Always                         = 0,
	OnPercent                      = 1,
	OnComplete                     = 2,
	Never                          = 3,
	EObjectiveStatusUpdateType_MAX = 4,
};
enum class EFortQuestRewardType : uint8
{
	BasicRewards                   = 0,
	BasicPlusSingleChoice          = 1,
	EFortQuestRewardType_MAX       = 2,
};
enum class EQuestVisualStyle : uint8
{
	Normal                         = 0,
	Hard                           = 1,
	EQuestVisualStyle_MAX          = 2,
};
enum class EFortQuestType : uint8
{
	Task                           = 0,
	Optional                       = 1,
	DailyQuest                     = 2,
	TransientQuest                 = 3,
	SurvivorQuest                  = 4,
	Achievement                    = 5,
	Onboarding                     = 6,
	StreamBroadcaster              = 7,
	StreamViewer                   = 8,
	StreamSubscriber               = 9,
	Athena                         = 10,
	AthenaDailyQuest               = 11,
	AthenaEvent                    = 12,
	AthenaChallengeBundleQuest     = 13,
	All                            = 14,
	EFortQuestType_MAX             = 15,
};
enum class ECosmeticType : uint8
{
	Image                          = 0,
	Widget                         = 1,
	ECosmeticType_MAX              = 2,
};
enum class EFortQuestMapNodeLabelPosition : uint8
{
	Top                            = 0,
	Bottom                         = 1,
	EFortQuestMapNodeLabelPosition_MAX = 2,
};
enum class EFortQuestMapNodeType : uint8
{
	MandatoryQuest                 = 0,
	SideQuest                      = 1,
	EFortQuestMapNodeType_MAX      = 2,
};
enum class EFortQuestObjectiveItemEvent : uint8
{
	Craft                          = 0,
	Collect                        = 1,
	Acquire                        = 2,
	Consume                        = 3,
	OpenCardPack                   = 4,
	PurchaseCardPack               = 5,
	Convert                        = 6,
	Upgrade                        = 7,
	UpgradeRarity                  = 8,
	QuestComplete                  = 9,
	AssignWorker                   = 10,
	LevelUpCollectionBook          = 11,
	LevelUpAthenaSeason            = 12,
	LevelUpBattlePass              = 13,
	GainAthenaSeasonXp             = 14,
	HasItem                        = 15,
	HasAccumulatedItem             = 16,
	SlotInCollection               = 17,
	AlterationRespec               = 18,
	AlterationUpgrade              = 19,
	HasCompletedQuest              = 20,
	HasAssignedWorker              = 21,
	HasUpgraded                    = 22,
	HasConverted                   = 23,
	HasUpgradedRarity              = 24,
	HasLeveledUpCollectionBook     = 25,
	HasLeveledUpAthenaSeason       = 26,
	HasLeveledUpBattlePass         = 27,
	HasGainedAthenaSeasonXp        = 28,
	MinigameTime                   = 29,
	Max_None                       = 30,
	EFortQuestObjectiveItemEvent_MAX = 31,
};
enum class EFortQuestObjectiveStatEvent : uint8
{
	Kill                           = 0,
	TeamKill                       = 1,
	KillContribution               = 2,
	Damage                         = 3,
	Visit                          = 4,
	Land                           = 5,
	Emote                          = 6,
	Spray                          = 7,
	Toy                            = 8,
	Build                          = 9,
	BuildingEdit                   = 10,
	BuildingRepair                 = 11,
	BuildingUpgrade                = 12,
	PlaceTrap                      = 13,
	Complete                       = 14,
	Craft                          = 15,
	Collect                        = 16,
	Win                            = 17,
	Interact                       = 18,
	TeamInteract                   = 19,
	Destroy                        = 20,
	Ability                        = 21,
	WaveComplete                   = 22,
	Custom                         = 23,
	ComplexCustom                  = 24,
	Client                         = 25,
	AthenaRank                     = 26,
	AthenaOutlive                  = 27,
	RevivePlayer                   = 28,
	Heal                           = 29,
	EarnVehicleTrickPoints         = 30,
	VehicleAirTime                 = 31,
	TimeElapsed                    = 32,
	NumGameplayEvents              = 33,
	Acquire                        = 34,
	Consume                        = 35,
	OpenCardPack                   = 36,
	PurchaseCardPack               = 37,
	Convert                        = 38,
	Upgrade                        = 39,
	UpgradeRarity                  = 40,
	QuestComplete                  = 41,
	AssignWorker                   = 42,
	CollectExpedition              = 43,
	CollectSuccessfulExpedition    = 44,
	LevelUpCollectionBook          = 45,
	LevelUpAthenaSeason            = 46,
	LevelUpBattlePass              = 47,
	GainAthenaSeasonXp             = 48,
	HasItem                        = 49,
	HasAccumulatedItem             = 50,
	SlotInCollection               = 51,
	AlterationRespec               = 52,
	AlterationUpgrade              = 53,
	HasCompletedQuest              = 54,
	HasAssignedWorker              = 55,
	HasUpgraded                    = 56,
	HasConverted                   = 57,
	HasUpgradedRarity              = 58,
	HasLeveledUpCollectionBook     = 59,
	HasLeveledUpAthenaSeason       = 60,
	HasLeveledUpBattlePass         = 61,
	HasGainedAthenaSeasonXp        = 62,
	MinigameDynamicEvent           = 63,
	MinigameComplete               = 64,
	MinigameDeath                  = 65,
	MinigameAssist                 = 66,
	Max_None                       = 67,
	EFortQuestObjectiveStatEvent_MAX = 68,
};
enum class EFortChallengeBundleInfoLockedReasonCode : uint8
{
	Unlocked                       = 0,
	NoKnownUnlockMethod            = 1,
	PurchaseTheBattlePass          = 2,
	ReachSpecificTier              = 3,
	TimeLeftBeforeUnlock           = 4,
	EFortChallengeBundleInfoLockedReasonCode_MAX = 5,
};
enum class EFortQuestState : uint8
{
	Inactive                       = 0,
	Active                         = 1,
	Completed                      = 2,
	Claimed                        = 3,
	EFortQuestState_MAX            = 4,
};
enum class ERegisteredPlayerUnregistrationStatus : uint8
{
	Registered                     = 0,
	UnregistrationStarting         = 1,
	UnregistrationWaitingForInitialLock = 2,
	UnregistrationWaitingForScoreSave = 3,
	UnregistrationWaitingForFinalSave = 4,
	UnregistrationWaitingForProfileUnlock = 5,
	UnregistrationComplete         = 6,
	ERegisteredPlayerUnregistrationStatus_MAX = 7,
};
enum class EEventMatchScreen : uint8
{
	None                           = 0,
	ActivePlayerGrid               = 1,
	EliminatedPlayerGrid           = 2,
	MatchStatus                    = 3,
	Scoreboard                     = 4,
	EEventMatchScreen_MAX          = 5,
};
enum class EDroneFollowMode : uint8
{
	None                           = 0,
	ForceFacingLocation            = 1,
	ForceFacingFollowedPlayer      = 2,
	TetherToFollowedPlayer         = 3,
	MAX                            = 4,
};
enum class EClassRepNodeMapping : uint8
{
	NotRouted                      = 0,
	RelevantAllConnections         = 1,
	Spatialize_Static              = 2,
	Spatialize_Dynamic             = 3,
	Spatialize_Dormancy            = 4,
	EClassRepNodeMapping_MAX       = 5,
};
enum class EFortSafeZoneState : uint8
{
	None                           = 0,
	Starting                       = 1,
	Holding                        = 2,
	Shrinking                      = 3,
	EFortSafeZoneState_MAX         = 4,
};
enum class EFortUIScoreType : uint8
{
	Combat                         = 0,
	Building                       = 1,
	Utility                        = 2,
	Badges                         = 3,
	Bonus                          = 4,
	Total                          = 5,
	Max_None                       = 6,
	EFortUIScoreType_MAX           = 7,
};
enum class EFortScriptedActionEnvironment : uint8
{
	FrontEnd                       = 0,
	GameServer                     = 1,
	GameClient                     = 2,
	Max_None                       = 3,
	EFortScriptedActionEnvironment_MAX = 4,
};
enum class EFortScriptedActionSource : uint8
{
	Quest                          = 0,
	Token                          = 1,
	Manual                         = 2,
	Max_None                       = 3,
	EFortScriptedActionSource_MAX  = 4,
};
enum class EServerManifestOutputFormat : uint8
{
	FlatFile                       = 0,
	Json                           = 1,
	HTTP                           = 2,
	EServerManifestOutputFormat_MAX = 3,
};
enum class EServerManifestCommandType : uint8
{
	Move                           = 0,
	Copy                           = 1,
	Unknown                        = 2,
	EServerManifestCommandType_MAX = 3,
};
enum class EFortSessionHelperJoinState : uint8
{
	NotJoining                     = 0,
	RequestingReservation          = 1,
	FailedReservation              = 2,
	WaitingOnGame                  = 3,
	AttemptingJoin                 = 4,
	JoiningSession                 = 5,
	FailedJoin                     = 6,
	CanceledJoin                   = 7,
	EFortSessionHelperJoinState_MAX = 8,
};
enum class EFortSoundIndicatorTypes : uint8
{
	Generic                        = 0,
	FootStep                       = 1,
	Gunshot                        = 2,
	Chest                          = 3,
	Glider                         = 4,
	Vehicle                        = 5,
	COUNT                          = 6,
	EFortSoundIndicatorTypes_MAX   = 7,
};
enum class EFortSpawnActorTime : uint8
{
	PostPlaylistLoad               = 0,
	StartOfStormHoldTime           = 1,
	EFortSpawnActorTime_MAX        = 2,
};
enum class EFortEventConditionType : uint8
{
	EFEC_StatCompare               = 0,
	EFEC_CanCraft                  = 1,
	EFEC_MAX                       = 2,
};
enum class EFortCompare : uint8
{
	EFC_LessThan                   = 0,
	EFC_LessThanOrEqual            = 1,
	EFC_GreaterThan                = 2,
	EFC_GreaterThanOrEqual         = 3,
	EFC_Equals                     = 4,
	EFC_MAX                        = 5,
};
enum class EFortEventRepeat : uint8
{
	EFER_Inactive                  = 0,
	EFER_Always                    = 1,
	EFER_OncePerPlayer             = 2,
	EFER_OncePerCampaign           = 3,
	EFER_OncePerMap                = 4,
	EFER_MAX                       = 5,
};
enum class EFortStatType : uint8
{
	Fortitude                      = 0,
	Offense                        = 1,
	Resistance                     = 2,
	Technology                     = 3,
	Fortitude_Team                 = 4,
	Offense_Team                   = 5,
	Resistance_Team                = 6,
	Technology_Team                = 7,
	Invalid                        = 8,
	EFortStatType_MAX              = 9,
};
enum class ESupplyDropItemTrackType : uint8
{
	SpecialActors                  = 0,
	ESupplyDropItemTrackType_MAX   = 1,
};
enum class ESupplyDropSpawnType : uint8
{
	SafeZoneDriven                 = 0,
	ItemDeliveryManagement         = 1,
	ESupplyDropSpawnType_MAX       = 2,
};
enum class EFortAutoTestState : uint8
{
	InitialLoad                    = 0,
	Login                          = 1,
	FrontendLoad                   = 2,
	FrontendPvELoad                = 3,
	FrontendPvETest                = 4,
	PvEMatchmaking                 = 5,
	ZoneLoad                       = 6,
	ZoneTest                       = 7,
	Finished                       = 8,
	MAX                            = 9,
};
enum class EReplaySmokeTestStep : uint8
{
	Setup                          = 0,
	TogglePause                    = 1,
	StepForward                    = 2,
	StepBackward                   = 3,
	StepToEnd                      = 4,
	StepToBeginning                = 5,
	SpeedUpPlayback                = 6,
	SlowDownPlayback               = 7,
	ToggleHideTimeline             = 8,
	IterateCameraModes             = 9,
	TogglePlayerOutlines           = 10,
	ToggleNamePlates               = 11,
	ToggleReplayRegion             = 12,
	ZoomIn                         = 13,
	ZoomOut                        = 14,
	ToggleAutoFollowThirdPerson    = 15,
	IncreaseExposure               = 16,
	DecreaseExposure               = 17,
	SetAutoExposure                = 18,
	IncreaseAperture               = 19,
	DecreaseAperture               = 20,
	IncreaseFocalLength            = 21,
	DecreaseFocalLength            = 22,
	IncreaseFocusDistance          = 23,
	DecreaseFocusDistance          = 24,
	SetAutoFocus                   = 25,
	ToggleDamageEffects            = 26,
	ToggleHideUI                   = 27,
	ToggleMap                      = 28,
	Reset                          = 29,
	MAX                            = 30,
};
enum class EFortTheaterType : uint8
{
	Standard                       = 0,
	Elder                          = 1,
	PvP                            = 2,
	PvP2                           = 3,
	Tutorial                       = 4,
	TutorialGate                   = 5,
	Max_None                       = 6,
	EFortTheaterType_MAX           = 7,
};
enum class EFortTheaterMapTileType : uint8
{
	Normal                         = 0,
	CriticalMission                = 1,
	AlwaysActive                   = 2,
	Outpost                        = 3,
	NonMission                     = 4,
	PvPFOB                         = 5,
	EFortTheaterMapTileType_MAX    = 6,
};
enum class EFortMapNavigationDirection : uint8
{
	North                          = 0,
	NorthEast                      = 1,
	East                           = 2,
	SouthEast                      = 3,
	South                          = 4,
	SouthWest                      = 5,
	West                           = 6,
	NorthWest                      = 7,
	Invalid                        = 8,
	EFortMapNavigationDirection_MAX = 9,
};
enum class EFortMissionQuestValidityResult : uint8
{
	Invalid                        = 0,
	InvalidNotPlayable             = 1,
	ValidLinked                    = 2,
	ValidObjectiveCondition        = 3,
	ValidFallback                  = 4,
	EFortMissionQuestValidityResult_MAX = 5,
};
enum class ECollectionSelectionMethod : uint8
{
	TierAsIndex                    = 0,
	TierAsIndexOverflowToLastValid = 1,
	Modulo                         = 2,
	Random                         = 3,
	None                           = 4,
	ECollectionSelectionMethod_MAX = 5,
};
enum class EMessageFeedSubject : uint8
{
	ToyOwner                       = 0,
	OtherPlayerInteractingWithToy  = 1,
	EMessageFeedSubject_MAX        = 2,
};
enum class EMessageFeedRelationshipFilter : uint8
{
	Anyone                         = 0,
	SquadAndTeamMembers            = 1,
	SquadMembersOnly               = 2,
	SelfOnly                       = 3,
	EMessageFeedRelationshipFilter_MAX = 4,
};
enum class ETrackVerticality : uint8
{
	Floor                          = 0,
	Ramp                           = 1,
	GradualRamp                    = 2,
	Max_None                       = 3,
	ETrackVerticality_MAX          = 4,
};
enum class ETrackIncline : uint8
{
	NoNeighbor                     = 0,
	Flat                           = 1,
	Up                             = 2,
	Down                           = 3,
	GradualUp                      = 4,
	GradualDown                    = 5,
	Max_None                       = 6,
	ETrackIncline_MAX              = 7,
};
enum class ETrackPieceType : uint8
{
	None                           = 0,
	Straight                       = 1,
	Turn                           = 2,
	TShape                         = 3,
	Cross                          = 4,
	Max_None                       = 5,
	ETrackPieceType_MAX            = 6,
};
enum class ETrackDirection : uint8
{
	YNegative                      = 0,
	XPositive                      = 1,
	YPositive                      = 2,
	XNegative                      = 3,
	Max_None                       = 4,
	ETrackDirection_MAX            = 5,
};
enum class EFortCreativeAdColorPreset : uint8
{
	Default                        = 0,
	Emphasized                     = 1,
	Common                         = 2,
	Uncommon                       = 3,
	Rare                           = 4,
	Epic                           = 5,
	Legendary                      = 6,
	EFortCreativeAdColorPreset_MAX = 7,
};
enum class EFortCreativeAdType : uint8
{
	Default                        = 0,
	Playset                        = 1,
	Toy                            = 2,
	Game                           = 3,
	Island                         = 4,
	Knob                           = 5,
	EFortCreativeAdType_MAX        = 6,
};
enum class EFortLobbyType : uint8
{
	Default                        = 0,
	Tournament                     = 1,
	Creative                       = 2,
	EFortLobbyType_MAX             = 3,
};
enum class EFortMatchmakingViolatorStyle : uint8
{
	None                           = 0,
	Basic                          = 1,
	HighStakes                     = 2,
	Showdown                       = 3,
	EFortMatchmakingViolatorStyle_MAX = 4,
};
enum class EFortMatchmakingTileStyle : uint8
{
	None                           = 0,
	Special                        = 1,
	HighStakes                     = 2,
	Showdown                       = 3,
	EFortMatchmakingTileStyle_MAX  = 4,
};
enum class EFortErrorSeverity : uint8
{
	Unspecified                    = 0,
	Silent                         = 1,
	Passive                        = 2,
	Blocking                       = 3,
	SevereBlocking                 = 4,
	EFortErrorSeverity_MAX         = 5,
};
enum class EFortPickerMode : uint8
{
	BuildingCategory               = 0,
	TrapCategory                   = 1,
	WeaponCategory                 = 2,
	SocialCategory                 = 3,
	Building                       = 4,
	Trap                           = 5,
	TrapRadial                     = 6,
	Weapon                         = 7,
	Social                         = 8,
	DirectPickEmote                = 9,
	DirectPickSpray                = 10,
	SquadQuickChat                 = 11,
	WeaponsSlotted                 = 12,
	EFortPickerMode_MAX            = 13,
};
enum class EPTTState : uint8
{
	Enabled                        = 0,
	MicDisabled                    = 1,
	AllSoundDisabled               = 2,
	EPTTState_MAX                  = 3,
};
enum class EFortPlayerRole : int32
{
	Player                         = 0,
	LiveSpectator                  = 1,
	ReplaySpectator                = 2,
	EFortPlayerRole_MAX            = 3,
};
enum class EMobileInteractionIconTypes : uint8
{
	Interact                       = 0,
	Swap                           = 1,
	Revive                         = 2,
	Blocked                        = 3,
	MAX                            = 4,
};
enum class EAthenaPickerType : uint8
{
	EditMode                       = 0,
	Interact                       = 1,
	MAX                            = 2,
};
enum class EFortGliderType : uint8
{
	Glider                         = 0,
	Umbrella                       = 1,
	EFortGliderType_MAX            = 2,
};
enum class EItemTileViewDisplayType : uint8
{
	World                          = 0,
	Outpost                        = 1,
	Account                        = 2,
	DeployableBase                 = 3,
	Max                            = 4,
};
enum class EOutpostBuildings : uint8
{
	StormShield                    = 0,
	CraftingTable                  = 1,
	Fabricator                     = 2,
	HarvestingOptimizer            = 3,
	StorageVault                   = 4,
	POST                           = 5,
	EOutpostBuildings_MAX          = 6,
};
enum class EFortClientAnnouncementQueueType : uint8
{
	Toasts                         = 0,
	Stickies                       = 1,
	Max                            = 2,
};
enum class EFortNotificationQueueType : uint8
{
	Toasts                         = 0,
	Stickies                       = 1,
	Messages                       = 2,
	Max                            = 3,
};
enum class EFortDialogResult : uint8
{
	Confirmed                      = 0,
	Declined                       = 1,
	Ignored                        = 2,
	Killed                         = 3,
	TimedOut                       = 4,
	Unknown                        = 5,
	EFortDialogResult_MAX          = 6,
};
enum class ETutorialType : uint8
{
	None                           = 0,
	Callout                        = 1,
	GuardScreen                    = 2,
	WidgetIntro                    = 3,
	Highlight                      = 4,
	ETutorialType_MAX              = 5,
};
enum class EFortBangType : uint8
{
	Invalid                        = 0,
	Custom                         = 1,
	PlayTab                        = 2,
	HeroesTab                      = 3,
	VaultTab                       = 4,
	StoreTab                       = 5,
	FriendsButton                  = 6,
	PartyInviteButton              = 7,
	SubGameAccessChanged           = 8,
	DailyRewardsButton             = 9,
	QuestsButton                   = 10,
	CompletedExpeditions           = 11,
	MainMenu                       = 12,
	HelpMenu                       = 13,
	VaultSchematics                = 14,
	VaultLeadSurvivors             = 15,
	VaultSurvivors                 = 16,
	VaultHeroes                    = 17,
	VaultDefenders                 = 18,
	VaultResources                 = 19,
	VaultMelee                     = 20,
	VaultRanged                    = 21,
	VaultConsumables               = 22,
	VaultIngredients               = 23,
	VaultTraps                     = 24,
	CosmeticsTab                   = 25,
	CosmeticsOutfit                = 26,
	CosmeticGlider                 = 27,
	CosmeticContrail               = 28,
	CosmeticBattleBus              = 29,
	CosmeticVehicle                = 30,
	CosmeticItemWrap               = 31,
	CosmeticCallingCard            = 32,
	CosmeticMapMarker              = 33,
	CosmeticMusicPack              = 34,
	CosmeticPetSkin                = 35,
	CosmeticLoadingScreen          = 36,
	CosmeticBackpack               = 37,
	CosmeticHat                    = 38,
	CosmeticPickaxe                = 39,
	CosmeticDance                  = 40,
	AthenaDirectedAcquisitionTab   = 41,
	PlayerBanners                  = 42,
	STWCommand                     = 43,
	STWCommand_Heroes              = 44,
	STWCommand_Heroes_Manage       = 45,
	STWCommand_Heroes_HeroLoadout  = 46,
	STWCommand_Heroes_Defenders    = 47,
	STWCommand_Heroes_Expeditions  = 48,
	STWCommand_Survivors           = 49,
	STWCommand_Survivors_Manage    = 50,
	STWCommand_Survivors_Squads    = 51,
	STWCommand_Upgrades            = 52,
	STWCommand_Research            = 53,
	STWCommand_AccountXP           = 54,
	STWArmory                      = 55,
	STWArmory_Schematics           = 56,
	STWArmory_Backpack             = 57,
	STWArmory_Storage              = 58,
	STWArmory_CollectionBook       = 59,
	STWArmory_Transform            = 60,
	STWArmory_Resources            = 61,
	EFortBangType_MAX              = 62,
};
enum class EFortEventNameType : uint8
{
	Mission                        = 0,
	Client                         = 1,
	EFortEventNameType_MAX         = 2,
};
enum class EFortCraftFailCause : uint8
{
	Unknown                        = 0,
	NotEnoughResources             = 1,
	InventoryFull                  = 2,
	InsufficientTeamLevel          = 3,
	CraftingQueueFull              = 4,
	CurrentlyLocked                = 5,
	OverflowSchematic              = 6,
	EFortCraftFailCause_MAX        = 7,
};
enum class EKeepContainerType : uint8
{
	Base                           = 0,
	Storeroom                      = 1,
	FirstAid                       = 2,
	Armory                         = 3,
	Workshop                       = 4,
	AmmoStash                      = 5,
	Max                            = 6,
};
enum class EFortIndicatorState : uint8
{
	Hidden                         = 0,
	OnlyFriendsVisible             = 1,
	Visible                        = 2,
	EFortIndicatorState_MAX        = 3,
};
enum class EReadyCheckState : uint8
{
	CheckStarted                   = 0,
	Ready                          = 1,
	NotReady                       = 2,
	EReadyCheckState_MAX           = 3,
};
enum class EFortTeamAffiliation : uint8
{
	Friendly                       = 0,
	Neutral                        = 1,
	Hostile                        = 2,
	EFortTeamAffiliation_MAX       = 3,
};
enum class EFortAIUtility : uint8
{
	KillPlayersMelee               = 0,
	KillPlayersRanged              = 1,
	KillPlayersArtillery           = 2,
	DestroyBuildingsMelee          = 3,
	DestroyBuildingsRanged         = 4,
	DestroyBuildingsArtillery      = 5,
	DestroyTraps                   = 6,
	Tank                           = 7,
	Infiltrate                     = 8,
	Mob                            = 9,
	Support                        = 10,
	Kiting                         = 11,
	AreaOfDenial                   = 12,
	DisableTraps                   = 13,
	Dormant                        = 14,
	Assassin                       = 15,
	MAX                            = 16,
};
enum class EFortTileEdgeType : uint8
{
	Undefined                      = 0,
	Outer_1                        = 1,
	Transition_2                   = 2,
	Inner_3                        = 3,
	Border_4                       = 4,
	BorderTransitionSingle_5       = 5,
	BorderTransitionDouble_6       = 6,
	MAX                            = 7,
};
enum class EFortMovementUrgency : uint8
{
	None                           = 0,
	Low                            = 1,
	Medium                         = 2,
	High                           = 3,
	NumLevels                      = 4,
	EFortMovementUrgency_MAX       = 5,
};
enum class EFortMovementStyle : uint8
{
	Running                        = 0,
	Walking                        = 1,
	Charging                       = 2,
	Sprinting                      = 3,
	PersonalVehicle                = 4,
	Flying                         = 5,
	EFortMovementStyle_MAX         = 6,
};
enum class EFortWeaponReloadType : uint8
{
	ReloadWholeClip                = 0,
	ReloadIndividualBullets        = 1,
	ReloadBasedOnAmmoCostPerFire   = 2,
	ReloadBasedOnCartridgePerFire  = 3,
	EFortWeaponReloadType_MAX      = 4,
};
enum class EFortWeaponTriggerType : uint8
{
	OnPress                        = 0,
	Automatic                      = 1,
	OnRelease                      = 2,
	OnPressAndRelease              = 3,
	EFortWeaponTriggerType_MAX     = 4,
};
enum class EFortDayPhasePrio : uint8
{
	Default                        = 0,
	DailySummary                   = 1,
	EFortDayPhasePrio_MAX          = 2,
};
enum class EFortCustomBodyType : uint8
{
	Small                          = 1,
	Medium                         = 2,
	MediumAndSmall                 = 3,
	Large                          = 4,
	LargeAndSmall                  = 5,
	LargeAndMedium                 = 6,
	All                            = 7,
	Deprecated                     = 8,
	EFortCustomBodyType_MAX        = 9,
};
enum class EFortDisplayGender : uint8
{
	Unknown                        = 0,
	Male                           = 1,
	Female                         = 2,
	NumTypes                       = 3,
	EFortDisplayGender_MAX         = 4,
};
enum class EFortCustomGender : uint8
{
	Invalid                        = 0,
	Male                           = 1,
	Female                         = 2,
	Both                           = 3,
	EFortCustomGender_MAX          = 4,
};
enum class EFortPvPGameResult : uint8
{
	Win                            = 0,
	Loss                           = 1,
	Draw                           = 2,
	EFortPvPGameResult_MAX         = 3,
};
enum class EFortQuality : uint8
{
	Common                         = 0,
	Uncommon                       = 1,
	Rare                           = 2,
	NumQualityValues               = 3,
	EFortQuality_MAX               = 4,
};
enum class EFortRarity : uint8
{
	Handmade                       = 0,
	Ordinary                       = 1,
	Sturdy                         = 2,
	Quality                        = 3,
	Fine                           = 4,
	Elegant                        = 5,
	Masterwork                     = 6,
	Epic                           = 7,
	Badass                         = 8,
	Legendary                      = 9,
	NumRarityValues                = 10,
	EFortRarity_MAX                = 11,
};
enum class EFortTargetSelectionFilter : uint8
{
	Damageable                     = 0,
	Everything                     = 1,
	Pawns                          = 2,
	Buildings                      = 3,
	Walls                          = 4,
	Traps                          = 5,
	Players                        = 6,
	AIPawns                        = 7,
	Instigator                     = 8,
	WeakSpots                      = 9,
	World                          = 10,
	Max                            = 11,
};
enum class EFortWeaponType : uint8
{
	None                           = 0,
	RangedAny                      = 1,
	Pistol                         = 2,
	Shotgun                        = 3,
	Rifle                          = 4,
	SMG                            = 5,
	Sniper                         = 6,
	GrenadeLauncher                = 7,
	RocketLauncher                 = 8,
	Bow                            = 9,
	Minigun                        = 10,
	LMG                            = 11,
	BiplaneGun                     = 12,
	MeleeAny                       = 13,
	MAX                            = 14,
};
enum class EFortTargetSelectionTestType : uint8
{
	Overlap                        = 0,
	Swept                          = 1,
	Ballistic                      = 2,
	EFortTargetSelectionTestType_MAX = 3,
};
enum class EFortTargetSelectionShape : uint8
{
	Sphere                         = 0,
	Cone                           = 1,
	Box                            = 2,
	Capsule                        = 3,
	Line                           = 4,
	Cylinder                       = 5,
	Custom                         = 6,
	CustomOnSource                 = 7,
	EFortTargetSelectionShape_MAX  = 8,
};
enum class EFortBrushSize : uint8
{
	VeryVerySmall                  = 0,
	VerySmall                      = 1,
	Small                          = 2,
	Medium                         = 3,
	Large                          = 4,
	VeryLarge                      = 5,
	EFortBrushSize_MAX             = 6,
};
enum class ESpecialActorStatType : uint8
{
	NumEliminationsNearby          = 0,
	TimeInWorld                    = 1,
	PickupNumSpawns                = 2,
	PickupNumDespawns              = 3,
	PickupNumDropped               = 4,
	PickupNumTaken                 = 5,
	PlayerWon                      = 6,
	PlayerNumEliminations          = 7,
	PlayerNum                      = 8,
	TotalStats                     = 9,
	ESpecialActorStatType_MAX      = 10,
};
enum class EEndOfMatchReason : uint8
{
	LastManStanding                = 0,
	ScoreReached                   = 1,
	TimeRanOut                     = 2,
	WinEventOccurred               = 3,
	AllLoggedOut                   = 4,
	AllEliminated                  = 5,
	EEndOfMatchReason_MAX          = 6,
};
enum class EFortItemViewRotationMode : uint8
{
	None                           = 0,
	BoundsPivot                    = 1,
	World                          = 2,
	Relative                       = 3,
	EFortItemViewRotationMode_MAX  = 4,
};
enum class EFortInventoryCustomFilter : uint8
{
	Mythic                         = 0,
	Legendary                      = 1,
	Epic                           = 2,
	Rare                           = 3,
	Uncommon                       = 4,
	Common                         = 5,
	EFortInventoryCustomFilter_MAX = 6,
};
enum class EInventoryContentSortType : uint8
{
	ByName                         = 0,
	ByRating                       = 1,
	ByLevel                        = 2,
	ByCategory                     = 3,
	ByRarity                       = 4,
	ByLocation                     = 5,
	ByPersonality                  = 6,
	ByBonus                        = 7,
	BySubtype                      = 8,
	EInventoryContentSortType_MAX  = 9,
};
enum class EFortFrontendInventoryFilter : uint8
{
	Schematics                     = 0,
	WorldItems                     = 1,
	WorldItemsInGame               = 2,
	WorldItemsStorage              = 3,
	WorldItemsTransfer             = 4,
	ConsumablesAndAccountResources = 5,
	Heroes                         = 6,
	Defenders                      = 7,
	Survivors                      = 8,
	AthenaCharacter                = 9,
	AthenaBackpack                 = 10,
	AthenaPickaxe                  = 11,
	AthenaGliders                  = 12,
	AthenaContrails                = 13,
	AthenaEmotes                   = 14,
	AthenaItemWraps                = 15,
	AthenaLoadingScreens           = 16,
	AthenaLobbyMusic               = 17,
	Invisible                      = 18,
	Max_None                       = 19,
	EFortFrontendInventoryFilter_MAX = 20,
};
enum class EFortInventoryFilter : uint8
{
	WeaponMelee                    = 0,
	WeaponRanged                   = 1,
	Ammo                           = 2,
	Traps                          = 3,
	Consumables                    = 4,
	Ingredients                    = 5,
	Gadget                         = 6,
	Decorations                    = 7,
	Badges                         = 8,
	Heroes                         = 9,
	LeadSurvivors                  = 10,
	Survivors                      = 11,
	Defenders                      = 12,
	Resources                      = 13,
	ConversionControl              = 14,
	AthenaCosmetics                = 15,
	Playset                        = 16,
	CreativePlot                   = 17,
	Workers                        = 18,
	Invisible                      = 19,
	Max_None                       = 20,
	EFortInventoryFilter_MAX       = 21,
};
enum class EFortItemCategoryOrdinal : uint8
{
	Primary                        = 0,
	Secondary                      = 1,
	Tertiary                       = 2,
	EFortItemCategoryOrdinal_MAX   = 3,
};
enum class ESubGameMatchmakingStatus : uint8
{
	Disabled                       = 0,
	Enabled                        = 1,
	ESubGameMatchmakingStatus_MAX  = 2,
};
enum class ESubGameAccessStatus : uint8
{
	Disabled                       = 0,
	LimitedAccess                  = 1,
	OpenAccess                     = 2,
	ESubGameAccessStatus_MAX       = 3,
};
enum class EDeathCause : uint8
{
	OutsideSafeZone                = 0,
	FallDamage                     = 1,
	Pistol                         = 2,
	Shotgun                        = 3,
	Rifle                          = 4,
	SMG                            = 5,
	Sniper                         = 6,
	SniperNoScope                  = 7,
	Melee                          = 8,
	InfinityBlade                  = 9,
	Grenade                        = 10,
	C4                             = 11,
	GrenadeLauncher                = 12,
	RocketLauncher                 = 13,
	Minigun                        = 14,
	Bow                            = 15,
	Trap                           = 16,
	DBNOTimeout                    = 17,
	Banhammer                      = 18,
	RemovedFromGame                = 19,
	MassiveMelee                   = 20,
	MassiveDiveBomb                = 21,
	MassiveRanged                  = 22,
	Vehicle                        = 23,
	ShoppingCart                   = 24,
	ATK                            = 25,
	QuadCrasher                    = 26,
	Biplane                        = 27,
	BiplaneGun                     = 28,
	LMG                            = 29,
	GasGrenade                     = 30,
	InstantEnvironmental           = 31,
	Turret                         = 32,
	Cube                           = 33,
	Balloon                        = 34,
	StormSurge                     = 35,
	BasicFiend                     = 36,
	EliteFiend                     = 37,
	RangedFiend                    = 38,
	BasicBrute                     = 39,
	EliteBrute                     = 40,
	MegaBrute                      = 41,
	LoggedOut                      = 42,
	TeamSwitchSuicide              = 43,
	WonMatch                       = 44,
	Unspecified                    = 45,
	EDeathCause_MAX                = 46,
};
enum class EFortUIFriendNotificationType : uint8
{
	Default                        = 0,
	FriendRequest                  = 1,
	PartyInvite                    = 2,
	AutoImportFriendSuggestion     = 3,
	EFortUIFriendNotificationType_MAX = 4,
};
enum class EFortNotificationPriority : uint8
{
	Vote                           = 0,
	Friend                         = 1,
	BoostedXP                      = 2,
	TwitchHigh                     = 3,
	GeneralSendNotification        = 4,
	TwitchLow                      = 10,
	Max                            = 11,
};
enum class EFortNotificationType : uint8
{
	Default                        = 0,
	Power                          = 1,
	HealthWarning                  = 2,
	Error                          = 3,
	Max                            = 4,
};
enum class EFortContextualReticleTypes : uint8
{
	FCR_GenericFailure             = 0,
	FCR_Upgrade                    = 1,
	FCR_Repair                     = 2,
	FCR_Locked                     = 3,
	FCR_Placement                  = 4,
	FCR_Edit                       = 5,
	FCR_NoTarget                   = 6,
	FCR_InProgress                 = 7,
	FCR_None                       = 8,
	FCR_MAX                        = 9,
};
enum class EFortUserCloudRequestResult : uint8
{
	Success                        = 0,
	Failure_CloudStorageDisabled   = 1,
	Failure_CloudStorageError      = 2,
	Failure_FileNotFoundInUserFileList = 3,
	Failure_SavingNotAllowedForSpecifiedUser = 4,
	EFortUserCloudRequestResult_MAX = 5,
};
enum class EFortUserCloudRequestType : uint8
{
	LoadCloudFile                  = 0,
	SaveCloudFile                  = 1,
	EFortUserCloudRequestType_MAX  = 2,
};
enum class EVehicleAudioTriggerDir : uint8
{
	Forward                        = 0,
	Backward                       = 1,
	EVehicleAudioTriggerDir_MAX    = 2,
};
enum class EVehicleAudioInterpolationType : uint8
{
	None                           = 0,
	CustomCurve                    = 1,
	Linear                         = 2,
	EVehicleAudioInterpolationType_MAX = 3,
};
enum class EFortVisibilityBehavior : uint8
{
	Proximity                      = 0,
	OnceSeenAlwaysSeen             = 1,
	AlwaysSeen                     = 2,
	Invalid                        = 3,
	EFortVisibilityBehavior_MAX    = 4,
};
enum class ECreativeItemCategory : uint8
{
	Prefabs                        = 0,
	Devices                        = 1,
	Weapons                        = 2,
	Consumables                    = 3,
	ECreativeItemCategory_MAX      = 4,
};
enum class EVolumeValidityResult : uint8
{
	Valid                          = 0,
	Invalid                        = 1,
	EVolumeValidityResult_MAX      = 2,
};
enum class EFortReloadMontageSection : uint8
{
	Intro                          = 0,
	Loop                           = 1,
	Outro                          = 2,
	EFortReloadMontageSection_MAX  = 3,
};
enum class EFortDisplayTier : uint8
{
	Invalid                        = 0,
	Handmade                       = 1,
	Copper                         = 2,
	Silver                         = 3,
	Malachite                      = 4,
	Obsidian                       = 5,
	Brightcore                     = 6,
	Spectrolite                    = 7,
	Shadowshard                    = 8,
	Sunbeam                        = 9,
	Moonglow                       = 10,
	EFortDisplayTier_MAX           = 11,
};
enum class EFortWeaponOverheatState : uint8
{
	None                           = 0,
	Heating                        = 1,
	Cooling                        = 2,
	Overheated                     = 3,
	EFortWeaponOverheatState_MAX   = 4,
};
enum class EWorldItemDropBehavior : uint8
{
	DropAsPickup                   = 0,
	DestroyOnDrop                  = 1,
	DropAsPickupDestroyOnEmpty     = 2,
	EWorldItemDropBehavior_MAX     = 3,
};
enum class EFortWorldManagerState : uint8
{
	WMS_Created                    = 0,
	WMS_QueryingWorld              = 1,
	WMS_WorldQueryComplete         = 2,
	WMS_CreatingNewWorld           = 3,
	WMS_LoadingExistingWorld       = 4,
	WMS_Running                    = 5,
	WMS_Failed                     = 6,
	WMS_MAX                        = 7,
};
enum class EFortLevelStreamingState : uint8
{
	LSS_Unloaded                   = 0,
	LSS_Loaded                     = 1,
	LSS_UnconditionalFoundationsUpdated = 2,
	LSS_AllFoundationsUpdated      = 3,
	LSS_NewActorsCreatedButNotUpdated = 4,
	LSS_AllUpdated                 = 5,
	LSS_Ready                      = 6,
	LSS_MAX                        = 7,
};
enum class EFortQueuedActionUserStatus : uint8
{
	Succeeded                      = 0,
	Failed                         = 1,
	WaitingForCloudRequest         = 2,
	WaitingForProfileSave          = 3,
	EFortQueuedActionUserStatus_MAX = 4,
};
enum class EFortWorldRecordState : uint8
{
	StartProcessing                = 0,
	WaitingForResponse             = 1,
	RetrievingTheaterInformation   = 2,
	RetrievingZoneInformation      = 3,
	LoadingWorldRecord             = 4,
	LoadingZoneRecord              = 5,
	SavingZoneRecord               = 6,
	SavingPlayerProfiles           = 7,
	SavingPlayerDeployableBases    = 8,
	Succeeded                      = 9,
	Failed                         = 10,
	Max_None                       = 11,
	EFortWorldRecordState_MAX      = 12,
};
enum class EFortWorldRecordAction : uint8
{
	LoadWorldOnly                  = 0,
	SaveWorldOnly                  = 1,
	SaveZoneAndWorld               = 2,
	LoadZoneAndWorld               = 3,
	SaveDeployableBasesAndWorld    = 4,
	Max_None                       = 5,
	EFortWorldRecordAction_MAX     = 6,
};
enum class EDeployableBaseUseType : uint8
{
	Neighborhood                   = 0,
	PvECombat                      = 1,
	EDeployableBaseUseType_MAX     = 2,
};
enum class EFortZoneType : uint8
{
	PVE                            = 0,
	PVP                            = 1,
	Keep                           = 2,
	SingleZone                     = 3,
	Max_None                       = 4,
	EFortZoneType_MAX              = 5,
};
enum class EFrontEndCamera : uint8
{
	Invalid                        = 0,
	Command                        = 1,
	Command_HeroLoadout            = 2,
	LegacyHeroLoadout              = 3,
	Cosmetics                      = 4,
	Expeditions                    = 5,
	FrontendDefault                = 6,
	Heroes                         = 7,
	HeroSelect                     = 8,
	HeroLoadout                    = 9,
	Home                           = 10,
	HomeBase                       = 11,
	Login                          = 12,
	Manage1                        = 13,
	Manage2                        = 14,
	Manage3                        = 15,
	Manage4                        = 16,
	MissionControl                 = 17,
	Party                          = 18,
	Play                           = 19,
	Research                       = 20,
	SkillTrees                     = 21,
	SmallCosmetics                 = 22,
	SpecialEvent                   = 23,
	Store                          = 24,
	StoreItemInspect               = 25,
	StwFrontendDefault             = 26,
	SurvivorSquadBuilding1         = 27,
	SurvivorSquadBuilding2         = 28,
	SurvivorSquadBuilding3         = 29,
	SurvivorSquadBuilding4         = 30,
	TutorialPhaseOne               = 31,
	TutorialPhaseTwo               = 32,
	TutorialPhaseThree             = 33,
	Upgrades                       = 34,
	Vault                          = 35,
	WorldMap                       = 36,
	LobbyCentered                  = 37,
	EFrontEndCamera_MAX            = 38,
};
enum class EDroneFacingLocationMode : uint8
{
	NotFacingLocation              = 0,
	FindingPoint                   = 1,
	TrackingPoint                  = 2,
	EDroneFacingLocationMode_MAX   = 3,
};
enum class EFireModeType : uint8
{
	Unset                          = 0,
	TapToShoot                     = 1,
	FireButton                     = 2,
	AutoFire                       = 3,
	ForceTouch                     = 4,
	Custom                         = 5,
	MAX                            = 6,
};
enum class ELayoutPropertyType : uint8
{
	PropertyType_Float             = 0,
	PropertyType_Integer           = 1,
	PropertyType_Bool              = 2,
	PropertyType_Rotator           = 3,
	PropertyType_MAX               = 4,
};
enum class ELayoutDataType : uint8
{
	Custom                         = 0,
	DefaultToolLayout              = 1,
	DefaultGameLayout              = 2,
	MAX                            = 3,
};
enum class EFortEncounterSpawnLimitType : uint8
{
	NoLimit                        = 0,
	NumPawnsLimit                  = 1,
	SpawnPointLimit                = 2,
	UserDefined                    = 3,
	MAX                            = 4,
};
enum class EFortEncounterUtilitiesMode : uint8
{
	LockedOnly                     = 0,
	LockedAndFree                  = 1,
	EFortEncounterUtilitiesMode_MAX = 2,
};
enum class EFortEncounterSpawnLocationManagementMode : uint8
{
	Spawn                          = 0,
	Search                         = 1,
	EFortEncounterSpawnLocationManagementMode_MAX = 2,
};
enum class EFortEncounterSpawnLocationPlacementMode : uint8
{
	Directional                    = 0,
	Ring                           = 1,
	Volume                         = 2,
	Custom                         = 3,
	Max_None                       = 4,
	EFortEncounterSpawnLocationPlacementMode_MAX = 5,
};
enum class EFortEncounterPacingMode : uint8
{
	SpawnPointsPercentageCurve     = 0,
	IntensityCurve                 = 1,
	Burst                          = 2,
	EFortEncounterPacingMode_MAX   = 3,
};
enum class EFortMissionAudibility : uint8
{
	UseVisibility                  = 0,
	Audible                        = 1,
	Inaudible                      = 2,
	EFortMissionAudibility_MAX     = 3,
};
enum class EFortMissionType : uint8
{
	Primary                        = 0,
	Secondary                      = 1,
	Max_None                       = 2,
	EFortMissionType_MAX           = 3,
};
enum class EFortObjectiveRequirement : uint8
{
	Optional                       = 0,
	Required                       = 1,
	RequiredButCanFail             = 2,
	EFortObjectiveRequirement_MAX  = 3,
};
enum class EFortMissionStatus : uint8
{
	Created                        = 0,
	InProgress                     = 1,
	Succeeded                      = 2,
	Failed                         = 3,
	NeutralCompletion              = 4,
	Quit                           = 5,
	Max_None                       = 6,
	EFortMissionStatus_MAX         = 7,
};
enum class EMissionGenerationCategory : uint8
{
	Primary                        = 0,
	Secondary                      = 1,
	Tertiary                       = 2,
	Survivor                       = 3,
	Max_None                       = 4,
	EMissionGenerationCategory_MAX = 5,
};
enum class EPlayerNameFlags : uint8
{
	None                           = 0,
	Killer                         = 1,
	Teammate                       = 2,
	Spectating                     = 4,
	EPlayerNameFlags_MAX           = 5,
};
enum class EStatRecordingPeriod : uint8
{
	Minute                         = 0,
	AthenaSafeZonePhase            = 1,
	Life                           = 2,
	Map                            = 3,
	Campaign                       = 4,
	Persistent                     = 5,
	Max                            = 6,
};
enum class EFortStrategicBuildingLevelCriteriaDisplayRepresentation : uint8
{
	Integer                        = 0,
	Float                          = 1,
	EFortStrategicBuildingLevelCriteriaDisplayRepresentation_MAX = 2,
};
enum class EFortStrategicBuildingCategory : uint8
{
	Defensive                      = 0,
	Offensive                      = 1,
	Utility                        = 2,
	EFortStrategicBuildingCategory_MAX = 3,
};
enum class EFortThreatDeactivationType : uint8
{
	Off                            = 0,
	Dormant                        = 1,
	EFortThreatDeactivationType_MAX = 2,
};
enum class EWrapPreviewGridLockerMode : uint8
{
	IgnoreLockerConfiguration      = 0,
	SupportedWeaponsOnly           = 1,
	UnsupportedWeaponsOnly         = 2,
	EWrapPreviewGridLockerMode_MAX = 3,
};
// 0x28 (0x28 - 0x0)
// ScriptStruct FortniteGame.ProjectileEventData
struct FProjectileEventData
{
public:
	class AFortProjectileBase*                   SpawnedProjectile;                                 // 0x0(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FHitResult>                    Hits;                                              // 0x8(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	TArray<class AActor*>                        ExplodedActors;                                    // 0x18(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x30 (0x30 - 0x0)
// ScriptStruct FortniteGame.AsyncTaskResult
struct FAsyncTaskResult
{
public:
	bool                                         bSucceeded;                                        // 0x0(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_231B[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                ErrorCode;                                         // 0x8(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FText                                  ErrorMessage;                                      // 0x18(0x18)(BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
};

// 0x20 (0x20 - 0x0)
// ScriptStruct FortniteGame.FortAIDirectorEvent
struct FFortAIDirectorEvent
{
public:
	enum class EFortAIDirectorEvent              Event;                                             // 0x0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_231C[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UObject*                               EventSource;                                       // 0x8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                               EventTarget;                                       // 0x10(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        EventValue;                                        // 0x18(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_231D[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.PurchasedItemInfo
struct FPurchasedItemInfo
{
public:
	class UFortItem*                             Item;                                              // 0x0(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Quantity;                                          // 0x8(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_231E[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x24 (0x24 - 0x0)
// ScriptStruct FortniteGame.AthenaLevelInfo
struct FAthenaLevelInfo
{
public:
	int32                                        AccountLevel;                                      // 0x0(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Level;                                             // 0x4(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaxLevel;                                          // 0x8(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        LevelXp;                                           // 0xC(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        LevelXpForLevel;                                   // 0x10(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        BookLevel;                                         // 0x14(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        BookMaxLevel;                                      // 0x18(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        BookLevelXp;                                       // 0x1C(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        BookLevelXpForLevel;                               // 0x20(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x34 (0x34 - 0x0)
// ScriptStruct FortniteGame.FortPublicAccountInfo
struct FFortPublicAccountInfo
{
public:
	int32                                        Level;                                             // 0x0(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaxLevel;                                          // 0x4(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        LevelXp;                                           // 0x8(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        LevelXpForLevel;                                   // 0xC(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAthenaLevelInfo                      BattleRoyaleLevel;                                 // 0x10(0x24)(BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
};

// 0x4 (0x38 - 0x34)
// ScriptStruct FortniteGame.FortPrivateAccountInfo
struct FFortPrivateAccountInfo : public FFortPublicAccountInfo
{
public:
	int32                                        MtxBalance;                                        // 0x34(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.FortItemInstanceQuantityPair
struct FFortItemInstanceQuantityPair
{
public:
	class UFortItem*                             Item;                                              // 0x0(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortInventoryType                InventoryType;                                     // 0x8(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_231F[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        Quantity;                                          // 0xC(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x2 (0x2 - 0x0)
// ScriptStruct FortniteGame.McpPrivacySettings
struct FMcpPrivacySettings
{
public:
	bool                                         OptOutOfPublicLeaderboards;                        // 0x0(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         OptOutOfFriendsLeaderboards;                       // 0x1(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x30 (0x30 - 0x0)
// ScriptStruct FortniteGame.McpBanInfo
struct FMcpBanInfo
{
public:
	bool                                         bRequiresUserAck;                                  // 0x0(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2320[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<enum class EPlayerBanReasons>         BanReasons;                                        // 0x8(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                         bBanHasStarted;                                    // 0x18(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2321[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FDateTime                             BanStartTimeUtc;                                   // 0x20(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BanDurationDays;                                   // 0x28(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2322[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x8 (0x8 - 0x0)
// ScriptStruct FortniteGame.FortCampaignLoadout
struct FFortCampaignLoadout
{
public:
	class UFortPersonalVehicleItem*              PersonalVehicle;                                   // 0x0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x20 (0x20 - 0x0)
// ScriptStruct FortniteGame.FriendCode
struct FFriendCode
{
public:
	class FString                                Code;                                              // 0x0(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                CodeType;                                          // 0x10(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x40 (0x40 - 0x0)
// ScriptStruct FortniteGame.FortHomeBaseInfo
struct FFortHomeBaseInfo
{
public:
	class FString                                BannerIconId;                                      // 0x0(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                BannerColorId;                                     // 0x10(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                  Name;                                              // 0x20(0x18)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	bool                                         ValidData;                                         // 0x38(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2323[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.CosmeticVariantInfo
struct FCosmeticVariantInfo
{
public:
	struct FGameplayTag                          VariantChannelTag;                                 // 0x0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          ActiveVariantTag;                                  // 0x8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x28 (0x38 - 0x10)
// ScriptStruct FortniteGame.McpVariantChannelInfo
struct FMcpVariantChannelInfo : public FCosmeticVariantInfo
{
public:
	struct FGameplayTagContainer                 OwnedVariantTags;                                  // 0x10(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class UFortItemDefinition*                   ItemVariantIsUsedFor;                              // 0x30(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0xD8 (0xD8 - 0x0)
// ScriptStruct FortniteGame.FortAthenaLoadout
struct FFortAthenaLoadout
{
public:
	class FString                                BannerIconId;                                      // 0x0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                BannerColorId;                                     // 0x10(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAthenaSkyDiveContrailItemDefinition*  SkyDiveContrail;                                   // 0x20(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAthenaGliderItemDefinition*           Glider;                                            // 0x28(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAthenaPickaxeItemDefinition*          Pickaxe;                                           // 0x30(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsDefaultCharacter;                               // 0x38(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2324[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UAthenaCharacterItemDefinition*        Character;                                         // 0x40(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FMcpVariantChannelInfo>        CharacterVariantChannels;                          // 0x48(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                         bForceUpdateVariants;                              // 0x58(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2325[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UAthenaHatItemDefinition*              Hat;                                               // 0x60(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAthenaBackpackItemDefinition*         Backpack;                                          // 0x68(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAthenaLoadingScreenItemDefinition*    LoadingScreen;                                     // 0x70(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAthenaBattleBusItemDefinition*        BattleBus;                                         // 0x78(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAthenaVehicleCosmeticItemDefinition*  VehicleDecoration;                                 // 0x80(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAthenaCallingCardItemDefinition*      CallingCard;                                       // 0x88(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAthenaMapMarkerItemDefinition*        MapMarker;                                         // 0x90(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UAthenaDanceItemDefinition*>    Dances;                                            // 0x98(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	class UAthenaVictoryPoseItemDefinition*      VictoryPose;                                       // 0xA8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAthenaMusicPackItemDefinition*        MusicPack;                                         // 0xB0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAthenaItemWrapDefinition*             ItemWrapOverride;                                  // 0xB8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UAthenaItemWrapDefinition*>     ItemWraps;                                         // 0xC0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	class UAthenaPetItemDefinition*              PetSkin;                                           // 0xD0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
};

// 0x20 (0x20 - 0x0)
// ScriptStruct FortniteGame.FriendCodeLocString
struct FFriendCodeLocString
{
public:
	class FString                                Lang;                                              // 0x0(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                Text;                                              // 0x10(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x200 (0x200 - 0x0)
// ScriptStruct FortniteGame.FortTeamMemberInfo
struct FFortTeamMemberInfo
{
public:
	struct FUniqueNetIdRepl                      MemberUniqueId;                                    // 0x0(0x28)(BlueprintVisible, BlueprintReadOnly, Transient, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FUniqueNetIdRepl                      PartyLeaderUniqueId;                               // 0x28(0x28)(BlueprintVisible, BlueprintReadOnly, Transient, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FUniqueNetIdRepl                      ConsoleUniqueId;                                   // 0x50(0x28)(BlueprintVisible, BlueprintReadOnly, Transient, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                Platform;                                          // 0x78(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                  PlayerName;                                        // 0x88(0x18)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	bool                                         bPartyLeader;                                      // 0xA0(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsInZone;                                         // 0xA1(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bHasBoostXp;                                       // 0xA2(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bHasRestXp;                                        // 0xA3(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2326[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                BannerIconId;                                      // 0xA8(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                BannerColorId;                                     // 0xB8(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bBattlePassPurchased;                              // 0xC8(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2327[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        BattlePassLevel;                                   // 0xCC(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        BattlePassSelfXpBoost;                             // 0xD0(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        BattlePassFriendXpBoost;                           // 0xD4(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        NumPlayersInParty;                                 // 0xD8(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        PlayerIndex;                                       // 0xDC(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortTeam                         TeamAffiliation;                                   // 0xE0(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2328[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  HeroClass;                                         // 0xE8(0x18)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class FText                                  HeroLevel;                                         // 0x100(0x18)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	int32                                        HeroXP;                                            // 0x118(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2329[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UFortItem*                             HeroItem;                                          // 0x120(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UFortItem*>                     SelectedGadgetItems;                               // 0x128(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	struct FSlateBrush                           HeroIcon;                                          // 0x138(0x88)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FFortHomeBaseInfo                     HomeBaseInfo;                                      // 0x1C0(0x40)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
};

// 0x30 (0x30 - 0x0)
// ScriptStruct FortniteGame.AthenaTravelLogEntry
struct FAthenaTravelLogEntry
{
public:
	float                                        Time;                                              // 0x0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               Position;                                          // 0x4(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EAthenaTravelEventType            Type;                                              // 0x10(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_232A[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  InstigatorName;                                    // 0x14(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EAthenaTravelLogPlayerType        InstigatorPlayerType;                              // 0x1C(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_232B[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  ReceiverName;                                      // 0x20(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EAthenaTravelLogPlayerType        ReceiverPlayerType;                                // 0x28(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_232C[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        Value;                                             // 0x2C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.AthenaMatchLootReward
struct FAthenaMatchLootReward
{
public:
	class FString                                TemplateId;                                        // 0x0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Amount;                                            // 0x10(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_232D[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x20 (0x20 - 0x0)
// ScriptStruct FortniteGame.AthenaMatchXpReward
struct FAthenaMatchXpReward
{
public:
	class FText                                  Text;                                              // 0x0(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	int32                                        Amount;                                            // 0x18(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_232E[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.AthenaTravelRecord
struct FAthenaTravelRecord
{
public:
	TArray<struct FAthenaTravelLogEntry>         Log;                                               // 0x0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x8 (0x8 - 0x0)
// ScriptStruct FortniteGame.AthenaMatchXpMultiplierGroup
struct FAthenaMatchXpMultiplierGroup
{
public:
	enum class EAthenaMatchXpMultiplierSource    Source;                                            // 0x0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_232F[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        Amount;                                            // 0x4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x28 (0x28 - 0x0)
// ScriptStruct FortniteGame.AthenaAwardGroup
struct FAthenaAwardGroup
{
public:
	enum class ERewardSource                     RewardSource;                                      // 0x0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2330[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FMcpLootEntry>                 Items;                                             // 0x8(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	int32                                        Score;                                             // 0x18(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SeasonXp;                                          // 0x1C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        BookXp;                                            // 0x20(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2331[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x40 (0x40 - 0x0)
// ScriptStruct FortniteGame.AthenaRewardResult
struct FAthenaRewardResult
{
public:
	int32                                        LevelsGained;                                      // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        BookLevelsGained;                                  // 0x4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        TotalSeasonXpGained;                               // 0x8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        TotalBookXpGained;                                 // 0xC(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        PrePenaltySeasonXpGained;                          // 0x10(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2332[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FAthenaMatchXpMultiplierGroup> XpMultipliers;                                     // 0x18(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FAthenaAwardGroup>             Rewards;                                           // 0x28(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	float                                        AntiAddictionMultiplier;                           // 0x38(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2333[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x8 (0x8 - 0x0)
// ScriptStruct FortniteGame.AthenaMatchTeamStats
struct FAthenaMatchTeamStats
{
public:
	int32                                        Place;                                             // 0x0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        TotalPlayers;                                      // 0x4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x48 (0x48 - 0x0)
// ScriptStruct FortniteGame.AthenaWeaponStats
struct FAthenaWeaponStats
{
public:
	class FString                                WeaponId;                                          // 0x0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        Stats;                                             // 0x10(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2334[0x34];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0xA0 (0xA0 - 0x0)
// ScriptStruct FortniteGame.AthenaMatchStats
struct FAthenaMatchStats
{
public:
	class FString                                StatBucket;                                        // 0x0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FString                                MatchID;                                           // 0x10(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FString                                MatchEndTime;                                      // 0x20(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FString                                MatchPlatform;                                     // 0x30(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        Stats;                                             // 0x40(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2335[0x4C];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FAthenaWeaponStats>            WeaponStats;                                       // 0x90(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
};

// 0x28 (0x28 - 0x0)
// ScriptStruct FortniteGame.FortQuestObjectiveCompletion
struct FFortQuestObjectiveCompletion
{
public:
	class FString                                StatName;                                          // 0x0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Count;                                             // 0x10(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2336[0x14];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.FortSubgameClientSettings
struct FFortSubgameClientSettings
{
public:
	TArray<class FString>                        PinnedQuestInstances;                              // 0x0(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.AccountIdAndScore
struct FAccountIdAndScore
{
public:
	class FString                                AccountId;                                         // 0x0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        TotalScore;                                        // 0x10(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bCriticalMatchBonus;                               // 0x14(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2337[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.FortQuestEarnedBadgeData
struct FFortQuestEarnedBadgeData
{
public:
	class FString                                TemplateId;                                        // 0x0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Count;                                             // 0x10(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2338[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x20 (0x20 - 0x0)
// ScriptStruct FortniteGame.FortPlacedBuilding
struct FFortPlacedBuilding
{
public:
	class FString                                BuildingTag;                                       // 0x0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                PlacedTag;                                         // 0x10(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x20 (0x20 - 0x0)
// ScriptStruct FortniteGame.FortOutpostCoreInfo
struct FFortOutpostCoreInfo
{
public:
	TArray<struct FFortPlacedBuilding>           PlacedBuildings;                                   // 0x0(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class FString>                        AccountsWithEditPermission;                        // 0x10(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.FortCloudSaveRecordInfo
struct FFortCloudSaveRecordInfo
{
public:
	int32                                        RecordIndex;                                       // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        ArchiveNumber;                                     // 0x4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                RecordFilename;                                    // 0x8(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.FortCloudSaveInfo
struct FFortCloudSaveInfo
{
public:
	int32                                        SaveCount;                                         // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2339[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FFortCloudSaveRecordInfo>      SavedRecords;                                      // 0x8(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x178 (0x178 - 0x0)
// ScriptStruct FortniteGame.AccountIdAndMatchEndData
struct FAccountIdAndMatchEndData
{
public:
	class FString                                AccountId;                                         // 0x0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FFortQuestObjectiveCompletion> Advance;                                           // 0x10(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FFortQuestEarnedBadgeData>     EarnedBadgeData;                                   // 0x20(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class FString>                        EarnedItemCaches;                                  // 0x30(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	int32                                        TotalScore;                                        // 0x40(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bCriticalMatchBonus;                               // 0x44(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_233A[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        NumMissionPoints;                                  // 0x48(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        TheaterNum;                                        // 0x4C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMcpProfileChangeRequest              TheaterItemUpdate;                                 // 0x50(0x58)(NativeAccessSpecifierPublic)
	int32                                        OutpostNum;                                        // 0xA8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_233B[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FMcpProfileChangeRequest              OutpostItemUpdate;                                 // 0xB0(0x58)(NativeAccessSpecifierPublic)
	class FString                                OutpostId;                                         // 0x108(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFortOutpostCoreInfo                  OutpostInfo;                                       // 0x118(0x20)(NativeAccessSpecifierPublic)
	class FString                                DeployableBaseItemId;                              // 0x138(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFortCloudSaveInfo                    CloudSaveInfo;                                     // 0x148(0x18)(NativeAccessSpecifierPublic)
	class FString                                LockCode;                                          // 0x160(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bAbandoning;                                       // 0x170(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_233C[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x70 (0x70 - 0x0)
// ScriptStruct FortniteGame.EndZoneScoreAndAwards
struct FEndZoneScoreAndAwards
{
public:
	bool                                         bResultsPendingSave;                               // 0x0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_233D[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        TotalScore;                                        // 0x4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bCriticalMatchBonus;                               // 0x8(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_233E[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FFortQuestEarnedBadgeData>     EarnedBadgeData;                                   // 0x10(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class FString>                        EarnedItemCaches;                                  // 0x20(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	int32                                        NumMissionPoints;                                  // 0x30(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_233F[0x3C];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.FortPersistentGameplayStatValue
struct FFortPersistentGameplayStatValue
{
public:
	class FString                                StatName;                                          // 0x0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        StatValue;                                         // 0x10(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2340[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x20 (0x20 - 0x0)
// ScriptStruct FortniteGame.FortSavedModeLoadout
struct FFortSavedModeLoadout
{
public:
	class FString                                LoadoutName;                                       // 0x0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FString>                        SelectedGadgets;                                   // 0x10(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0xC (0xC - 0x0)
// ScriptStruct FortniteGame.VolumePerformanceMetrics
struct FVolumePerformanceMetrics
{
public:
	int32                                        PerformanceValue;                                  // 0x0(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        PerformanceMaxValue;                               // 0x4(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        PreviewDeltaValue;                                 // 0x8(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x38 (0x38 - 0x0)
// ScriptStruct FortniteGame.Voter
struct FVoter
{
public:
	int32                                        VoteDecision;                                      // 0x0(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        LastVoteDecision;                                  // 0x4(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FUniqueNetIdRepl                      NetId;                                             // 0x8(0x28)(BlueprintVisible, BlueprintReadOnly, Transient, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        NumVotesCast;                                      // 0x30(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2341[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x50 (0x50 - 0x0)
// ScriptStruct FortniteGame.ChoiceDataEntry
struct FChoiceDataEntry
{
public:
	class FText                                  ButtonText;                                        // 0x0(0x18)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	class FText                                  ButtonDescription;                                 // 0x18(0x18)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	class FText                                  ConfirmText;                                       // 0x30(0x18)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	bool                                         bEnabled;                                          // 0x48(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bRequireConfirmation;                              // 0x49(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bCloseAfterSelection;                              // 0x4A(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2342[0x5];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x30 (0x30 - 0x0)
// ScriptStruct FortniteGame.ChoiceData
struct FChoiceData
{
public:
	int32                                        MenuIdentifier;                                    // 0x0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShowCloseButton;                                  // 0x4(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2343[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  Title;                                             // 0x8(0x18)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	TArray<struct FChoiceDataEntry>              Items;                                             // 0x20(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x20 (0x20 - 0x0)
// ScriptStruct FortniteGame.AttributeModifierInfo
struct FAttributeModifierInfo
{
public:
	uint8                                        Pad_2344[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UGameplayEffect*                       InstantGEs;                                        // 0x8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2345[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x38 (0x38 - 0x0)
// ScriptStruct FortniteGame.BuildingWeakSpotData
struct FBuildingWeakSpotData
{
public:
	TWeakObjectPtr<class ABuildingSMActor>       ParentBuilding;                                    // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector_NetQuantizeNormal             Normal;                                            // 0x8(0xC)(NoDestructor, NativeAccessSpecifierPublic)
	struct FVector_NetQuantize10                 Position;                                          // 0x14(0xC)(NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_2346[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x58 (0x58 - 0x0)
// ScriptStruct FortniteGame.FortRequirementsInfo
struct FFortRequirementsInfo
{
public:
	int32                                        CommanderLevel;                                    // 0x0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        PersonalPowerRating;                               // 0x4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaxPersonalPowerRating;                            // 0x8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        PartyPowerRating;                                  // 0xC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaxPartyPowerRating;                               // 0x10(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2347[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UFortQuestItemDefinition*              ActiveQuestDefinition;                             // 0x18(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFortQuestItemDefinition*              QuestDefinition;                                   // 0x20(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDataTableRowHandle                   ObjectiveStatHandle;                               // 0x28(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	class UFortQuestItemDefinition*              UncompletedQuestDefinition;                        // 0x38(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFortItemDefinition*                   ItemDefinition;                                    // 0x40(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                EventFlag;                                         // 0x48(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.BuildingClassData
struct FBuildingClassData
{
public:
	TSubclassOf<class ABuildingActor>            BuildingClass;                                     // 0x0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        PreviousBuildingLevel;                             // 0x8(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        UpgradeLevel;                                      // 0xC(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.FortItemEntryStateValue
struct FFortItemEntryStateValue
{
public:
	int32                                        IntValue;                                          // 0x0(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  NameValue;                                         // 0x4(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	enum class EFortItemEntryState               StateType;                                         // 0xC(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2348[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x8 (0x8 - 0x0)
// ScriptStruct FortniteGame.FortCombatManagerEvent
struct FFortCombatManagerEvent
{
public:
	float                                        EventValue;                                        // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortCombatEvents                 Event;                                             // 0x4(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2349[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x38 (0x38 - 0x0)
// ScriptStruct FortniteGame.LockOnInfo
struct FLockOnInfo
{
public:
	enum class ELockOnState                      State;                                             // 0x0(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_234A[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TWeakObjectPtr<class AFortWeapon>            Weapon;                                            // 0x4(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class AActor>                 LockOnTarget;                                      // 0xC(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                              CamRotAtTargetAcquisiton;                          // 0x14(0xC)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FVector2D                             LockOnCoords;                                      // 0x20(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TargetAcquisitionTime;                             // 0x28(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TargetLockOnTime;                                  // 0x2C(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TargetOutOfSightTime;                              // 0x30(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CooldownStartTime;                                 // 0x34(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.FortPersistentGameplayStatContainer
struct FFortPersistentGameplayStatContainer
{
public:
	TArray<struct FFortPersistentGameplayStatValue> GameplayStats;                                     // 0x0(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.FortUpdatedObjectiveStat
struct FFortUpdatedObjectiveStat
{
public:
	class UFortQuestItemDefinition*              Quest;                                             // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  BackendName;                                       // 0x8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        StatValue;                                         // 0x10(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_234B[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x28 (0x28 - 0x0)
// ScriptStruct FortniteGame.FortGiftingInfo
struct FFortGiftingInfo
{
public:
	class FString                                PlayerName;                                        // 0x0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFortHeroType*                         HeroType;                                          // 0x10(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_234C[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x114 (0x120 - 0xC)
// ScriptStruct FortniteGame.FortItemEntry
struct FFortItemEntry : public FFastArraySerializerItem
{
public:
	int32                                        Count;                                             // 0xC(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        PreviousCount;                                     // 0x10(0x4)(ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_234D[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UFortItemDefinition*                   ItemDefinition;                                    // 0x18(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        Durability;                                        // 0x20(0x4)(ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        Level;                                             // 0x24(0x4)(ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        LoadedAmmo;                                        // 0x28(0x4)(ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_234E[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class FString>                        AlterationDefinitions;                             // 0x30(0x10)(ZeroConstructor, SaveGame, NativeAccessSpecifierPrivate)
	class FString                                ItemSource;                                        // 0x40(0x10)(ZeroConstructor, SaveGame, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGuid                                 ItemGuid;                                          // 0x50(0x10)(ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         Inventory_overflow_date;                           // 0x60(0x1)(ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bIsReplicatedCopy;                                 // 0x61(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bIsDirty;                                          // 0x62(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_234F[0x5];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FFortGiftingInfo                      GiftingInfo;                                       // 0x68(0x28)(NativeAccessSpecifierPrivate)
	TArray<struct FFortItemEntryStateValue>      StateValues;                                       // 0x90(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	TWeakObjectPtr<class AFortInventory>         ParentInventory;                                   // 0xA0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGameplayAbilitySpecHandle            GameplayAbilitySpecHandle;                         // 0xA8(0x4)(Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2350[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UFortAlterationItemDefinition*> AlterationInstances;                               // 0xB0(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	TArray<float>                                GenericAttributeValues;                            // 0xC0(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2351[0x50];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x78 (0x78 - 0x0)
// ScriptStruct FortniteGame.FortRewardActivity
struct FFortRewardActivity
{
public:
	enum class EFortRewardActivityType           ActivityType;                                      // 0x0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2352[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGuid                                 ActivityGuid;                                      // 0x4(0x10)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2353[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  TitleText;                                         // 0x18(0x18)(NativeAccessSpecifierPublic)
	class FText                                  DescriptionText;                                   // 0x30(0x18)(NativeAccessSpecifierPublic)
	float                                        RewardDisplayTime;                                 // 0x48(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2354[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FFortItemEntry>                RewardItems;                                       // 0x50(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FFortItemEntry>                MissedRewardItems;                                 // 0x60(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	enum class EFortCompletionResult             ActivityCompletionResult;                          // 0x70(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2355[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        AdditionalCompletionMissionPoints;                 // 0x74(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x70 (0x70 - 0x0)
// ScriptStruct FortniteGame.FortRewardReport
struct FFortRewardReport
{
public:
	class FText                                  MissionName;                                       // 0x0(0x18)(NativeAccessSpecifierPublic)
	class FText                                  TheaterName;                                       // 0x18(0x18)(NativeAccessSpecifierPublic)
	class FText                                  Difficulty;                                        // 0x30(0x18)(NativeAccessSpecifierPublic)
	float                                        DifficultyValue;                                   // 0x48(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2356[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FFortRewardActivity>           RewardActivities;                                  // 0x50(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                         bIsFinalized;                                      // 0x60(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2357[0xF];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x88 (0x88 - 0x0)
// ScriptStruct FortniteGame.FortDamageNumberInfo
struct FFortDamageNumberInfo
{
public:
	struct FVector                               WorldLocation;                                     // 0x0(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               HitNormal;                                         // 0xC(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsCriticalDamage;                                 // 0x18(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2358[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        Damage;                                            // 0x1C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortDamageNumberType             DamageNumberType;                                  // 0x20(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2359[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        VisualDamageScale;                                 // 0x24(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortElementalDamageType          ElementalDamageType;                               // 0x28(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EStatCategory                     ScoreType;                                         // 0x29(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bAttachScoreNumberToPlayer;                        // 0x2A(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_235A[0x5];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UStaticMeshComponent*                  StaticMeshComponent;                               // 0x30(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UMaterialInstanceDynamic*>      MeshMIDs;                                          // 0x38(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<int32>                                DamageNumberArray;                                 // 0x48(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                 DamagedActorTags;                                  // 0x58(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class AActor>                 DamagedActor;                                      // 0x78(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class APawn>                  DamageCauser;                                      // 0x80(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.LastBuildableState
struct FLastBuildableState
{
public:
	class UBuildingEditModeMetadata*             LastBuildableMetaData;                             // 0x0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         LastBuildableMirrored;                             // 0x8(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_235B[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        LastBuildableRotationIterations;                   // 0xC(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x28 (0x28 - 0x0)
// ScriptStruct FortniteGame.AIDirectorDebugInfo
struct FAIDirectorDebugInfo
{
public:
	float                                        Timestamp;                                         // 0x0(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_235C[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<float>                                DebugGraphData;                                    // 0x8(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	uint8                                        Pad_235D[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x148 (0x148 - 0x0)
// ScriptStruct FortniteGame.VehicleTrickInfo
struct FVehicleTrickInfo
{
public:
	float                                        LastOnGroundTime;                                  // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bInAirTrick;                                       // 0x4(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bCreditTrick;                                      // 0x5(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bTrickDeactivated;                                 // 0x6(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bStuckLanding;                                     // 0x7(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        TrickScore;                                        // 0x8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_235E[0x90];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        TrickAxisCount;                                    // 0x9C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_235F[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bDoingRotationTrick;                               // 0xB8(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2360[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        AirControlsAlpha;                                  // 0xBC(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AirDistance;                                       // 0xC0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AirDistanceSqrd;                                   // 0xC4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AirTime;                                           // 0xC8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AirHeight;                                         // 0xCC(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TimeAtLaunch;                                      // 0xD0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               LocationAtLaunch;                                  // 0xD4(0xC)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               ForwardVectorAtLaunch;                             // 0xE0(0xC)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               UpVectorAtLaunch;                                  // 0xEC(0xC)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               FlatForwardVectorAtLaunch;                         // 0xF8(0xC)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               PrevForwardVec;                                    // 0x104(0xC)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               PrevRightVec;                                      // 0x110(0xC)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               PrevUpVec;                                         // 0x11C(0xC)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        PeterPanCount;                                     // 0x128(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        StoopingSquirrelCount;                             // 0x12C(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bDidPeterPan : 1;                                  // Mask : 0x1 0x130(0x1)(BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bDidStoopingSquirrel : 1;                          // Mask : 0x2 0x130(0x1)(BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2361[0x17];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.GhostModeRepData
struct FGhostModeRepData
{
public:
	bool                                         bInGhostMode;                                      // 0x0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2362[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UFortWorldItemDefinition*              GhostModeItemDef;                                  // 0x8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        PreviousFocusedSlot;                               // 0x10(0x4)(ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TimeExitedGhostMode;                               // 0x14(0x4)(ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x50 (0x50 - 0x0)
// ScriptStruct FortniteGame.FortPlayerDeathReport
struct FFortPlayerDeathReport
{
public:
	float                                        ServerTimeForRespawn;                              // 0x0(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ServerTimeForResurrect;                            // 0x4(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LethalDamage;                                      // 0x8(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2363[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AFortPlayerState*                      KillerPlayerState;                                 // 0x10(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AFortPawn*                             KillerPawn;                                        // 0x18(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                DamageCauser;                                      // 0x20(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bDroppedBackpack : 1;                              // Mask : 0x1 0x28(0x1)(BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bNotifyUI : 1;                                     // Mask : 0x2 0x28(0x1)(BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2364[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGameplayTagContainer                 Tags;                                              // 0x30(0x20)(BlueprintVisible, BlueprintReadOnly, Transient, NativeAccessSpecifierPublic)
};

// 0x24 (0x24 - 0x0)
// ScriptStruct FortniteGame.FortExperienceDelta
struct FFortExperienceDelta
{
public:
	int32                                        Level;                                             // 0x0(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Xp;                                                // 0x4(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        BaseXPEarned;                                      // 0x8(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        BonusXPEarned;                                     // 0xC(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        BoostXPEarned;                                     // 0x10(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        BoostXPMissed;                                     // 0x14(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        RestXPEarned;                                      // 0x18(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        GroupBoostXPEarned;                                // 0x1C(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortIsFinalXpUpdate              IsFinalXpUpdate;                                   // 0x20(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2365[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x8 (0x8 - 0x0)
// ScriptStruct FortniteGame.ReplicatedStatValues
struct FReplicatedStatValues
{
public:
	int32                                        StatValue;                                         // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        ScoreValue;                                        // 0x4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x298 (0x298 - 0x0)
// ScriptStruct FortniteGame.FortPlayerScoreReport
struct FFortPlayerScoreReport
{
public:
	struct FUniqueNetIdRepl                      PlayerID;                                          // 0x0(0x28)(BlueprintVisible, BlueprintReadOnly, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                PlayerName;                                        // 0x28(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class AFortPlayerState>       PlayerState;                                       // 0x38(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortTeam                         PlayerTeam;                                        // 0x40(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2366[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FReplicatedStatValues                 ReplicatedStats_Campaign;                          // 0x44(0x8)(NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_2367[0x108];                                   // Fixing Size After Last Property  [ Dumper-7 ]
	struct FReplicatedStatValues                 ReplicatedStats_Zone;                              // 0x154(0x8)(NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_2368[0x108];                                   // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        InitialLevel;                                      // 0x264(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        InitialExperienceAmount;                           // 0x268(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFortExperienceDelta                  ExperienceInfoDelta;                               // 0x26C(0x24)(NoDestructor, NativeAccessSpecifierPublic)
	int32                                        LastExperienceDeltaAmount;                         // 0x290(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        LastScoreDeltaAmount;                              // 0x294(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x14 (0x14 - 0x0)
// ScriptStruct FortniteGame.FortVoteConfig
struct FFortVoteConfig
{
public:
	int32                                        NumVoteOptions;                                    // 0x0(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        VoteDuration;                                      // 0x4(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FailedVoteLockOutDuration;                         // 0x8(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaxVotesAllowedPerPlayer;                          // 0xC(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortVoteArbitratorType           VoteArbitratorType;                                // 0x10(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2369[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x28 (0x28 - 0x0)
// ScriptStruct FortniteGame.FortAbilitySetHandle
struct FFortAbilitySetHandle
{
public:
	TWeakObjectPtr<class UAbilitySystemComponent> TargetAbilitySystemComponent;                      // 0x0(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FGameplayAbilitySpecHandle>    GrantedAbilityHandles;                             // 0x8(0x10)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	TArray<struct FActiveGameplayEffectHandle>   AppliedEffectHandles;                              // 0x18(0x10)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
};

// 0x38 (0x38 - 0x0)
// ScriptStruct FortniteGame.AthenaGameMessageData
struct FAthenaGameMessageData
{
public:
	enum class EAthenaGameMsgType                MsgType;                                           // 0x0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_236A[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  MsgText;                                           // 0x8(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class USoundCue*                             MsgSound;                                          // 0x20(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MsgDelay;                                          // 0x28(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsTeamBased;                                      // 0x2C(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_236B[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        TeamIndex;                                         // 0x30(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DisplayTime;                                       // 0x34(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x20 (0x20 - 0x0)
// ScriptStruct FortniteGame.EndOfDayRecap
struct FEndOfDayRecap
{
public:
	int32                                        DayNumber;                                         // 0x0(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        TeamScoreAtStartOfDay;                             // 0x4(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        TeamScoreAtEndOfDay;                               // 0x8(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_236C[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FFortPlayerScoreReport>        ScoreReports;                                      // 0x10(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x30 (0x30 - 0x0)
// ScriptStruct FortniteGame.AppliedHomebaseData
struct FAppliedHomebaseData
{
public:
	class UAbilitySystemComponent*               Source;                                            // 0x0(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAbilitySystemComponent*               Target;                                            // 0x8(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FActiveGameplayEffectHandle>   AppliedEffects;                                    // 0x10(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	TArray<struct FFortAbilitySetHandle>         AppliedAbilitySets;                                // 0x20(0x10)(ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.TeamChangeRequest
struct FTeamChangeRequest
{
public:
	class AFortPlayerController*                 RequestingController;                              // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortTeam                         DesiredTeam;                                       // 0x8(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_236D[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x30 (0x30 - 0x0)
// ScriptStruct FortniteGame.OnTimeHitInfo
struct FOnTimeHitInfo
{
public:
	UDelegateProperty_                           TimeCallback;                                      // 0x0(0x10)(ZeroConstructor, InstancedReference, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_236E[0x20];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x1B0 (0x1B0 - 0x0)
// ScriptStruct FortniteGame.TieredWaveSetData
struct FTieredWaveSetData
{
public:
	int32                                        EDOIdx;                                            // 0x0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BreatherBetweenWaves;                              // 0x4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EWaveRules                        WaveRules;                                         // 0x8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_236F[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        WaveLengthMod;                                     // 0xC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        NumKillsMod;                                       // 0x10(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        KillPointsMod;                                     // 0x14(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DifficultyAddMod;                                  // 0x18(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDeferTemporaryModifiers;                          // 0x1C(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2370[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftClassPtr<class UFortDifficultyOptionEncounter_SpawnPointsMultiplier> OverrideSpawnPointsMultiplier;                     // 0x20(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class UFortDifficultyOptionEncounter_SpawnPointsCurve> OverrideSpawnPointsCurve;                          // 0x48(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class UFortDifficultyOptionEncounter_SpawnGroupProgression> OverrideSpawnProgression;                          // 0x70(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class UFortDifficultyOptionEncounter_UtilitiesAdjustment> OverrideUtilitiesAdjustment;                       // 0x98(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class UFortDifficultyOptionEncounter_UtilitiesFree> OverrideUtilitiesFree;                             // 0xC0(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class UFortDifficultyOptionEncounter_UtilitiesLocked> OverrideUtilitiesLocked;                           // 0xE8(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class UFortDifficultyOptionEncounter_Distance> OverrideDistance;                                  // 0x110(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class UFortDifficultyOptionEncounter_DirectionNumber> OverrideDirectionNumber;                           // 0x138(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class UFortDifficultyOptionEncounter_ModifierTags> OverrideModifierTags;                              // 0x160(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class UFortDifficultyOptionEncounter_TimedModifierTags> OverrideTimedModifierTags;                         // 0x188(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x4 (0x4 - 0x0)
// ScriptStruct FortniteGame.ActiveGameplayModifierHandle
struct FActiveGameplayModifierHandle
{
public:
	int32                                        Handle;                                            // 0x0(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x80 (0x80 - 0x0)
// ScriptStruct FortniteGame.VoteData
struct FVoteData
{
public:
	enum class EFortVoteType                     VoteType;                                          // 0x0(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2371[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FUniqueNetIdRepl                      VoteInstigatorNetId;                               // 0x8(0x28)(Transient, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFortVoteConfig                       VoteConfig;                                        // 0x30(0x14)(Transient, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_2372[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FDateTime                             VoteStartTime;                                     // 0x48(0x8)(ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDateTime                             VoteEndTime;                                       // 0x50(0x8)(ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FVoter>                        Voters;                                            // 0x58(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	int32                                        NumVotersWithMaxVotes;                             // 0x68(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2373[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTimerHandle                          EndVoteTimerHandle;                                // 0x70(0x8)(Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortVoteStatus                   VoteStatus;                                        // 0x78(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2374[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.PlayerBuildableClassContainer
struct FPlayerBuildableClassContainer
{
public:
	TArray<TSubclassOf<class ABuildingSMActor>>  BuildingClasses;                                   // 0x0(0x10)(ZeroConstructor, Transient, UObjectWrapper, NativeAccessSpecifierPublic)
};

// 0x40 (0x40 - 0x0)
// ScriptStruct FortniteGame.FortItemQuantityPair
struct FFortItemQuantityPair
{
public:
	struct FPrimaryAssetId                       ItemPrimaryAssetId;                                // 0x0(0x10)(Edit, ZeroConstructor, SaveGame, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class UFortItemDefinition>    ItemDefinition;                                    // 0x10(0x28)(Deprecated, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        Quantity;                                          // 0x38(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2375[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x30 (0x30 - 0x0)
// ScriptStruct FortniteGame.FortZoneMissionAlertData
struct FFortZoneMissionAlertData
{
public:
	TArray<struct FFortItemQuantityPair>         MissionAlertRewards;                               // 0x0(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	class FString                                MissionAlertCategoryName;                          // 0x10(0x10)(ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                MissionAlertID;                                    // 0x20(0x10)(ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.FortZoneDifficultyIncreaseRewardData
struct FFortZoneDifficultyIncreaseRewardData
{
public:
	TArray<struct FFortItemQuantityPair>         Rewards;                                           // 0x0(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0xCC (0xD8 - 0xC)
// ScriptStruct FortniteGame.ActiveGameplayModifier
struct FActiveGameplayModifier : public FFastArraySerializerItem
{
public:
	uint8                                        Pad_2376[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UFortGameplayModifierItemDefinition*   ModifierDef;                                       // 0x10(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FActiveGameplayModifierHandle         ModifierHandle;                                    // 0x18(0x4)(Transient, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2377[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class AFortGameplayMutator*>          Mutators;                                          // 0x20(0x10)(ZeroConstructor, Transient, RepSkip, NativeAccessSpecifierPublic)
	int32                                        Expiration;                                        // 0x30(0x4)(ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2378[0xA4];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x28 (0xD8 - 0xB0)
// ScriptStruct FortniteGame.ActiveGameplayModifierArray
struct FActiveGameplayModifierArray : public FFastArraySerializer
{
public:
	TArray<struct FActiveGameplayModifier>       Items;                                             // 0xB0(0x10)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	TArray<struct FActiveGameplayModifier>       DeferredGameplayModifiers;                         // 0xC0(0x10)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	int32                                        ModifierHandleGenerator;                           // 0xD0(0x4)(ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bSupportRuntimeModifierShutdown;                   // 0xD4(0x1)(ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2379[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.ReplicatedMontageIndexPair
struct FReplicatedMontageIndexPair
{
public:
	class UAnimMontage*                          Montage;                                           // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Index;                                             // 0x8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_237A[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.ReplicatedMontageMap
struct FReplicatedMontageMap
{
public:
	TArray<struct FReplicatedMontageIndexPair>   Mappings;                                          // 0x0(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	uint8                                        Pad_237B[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x3 (0x3 - 0x0)
// ScriptStruct FortniteGame.MeshNetworkStatus
struct FMeshNetworkStatus
{
public:
	bool                                         bEnabled;                                          // 0x0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bConnectedToRoot;                                  // 0x1(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EMeshNetworkNodeType              GameServerNodeType;                                // 0x2(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x1C (0x28 - 0xC)
// ScriptStruct FortniteGame.GameplayMutatorObjectData
struct FGameplayMutatorObjectData : public FFastArraySerializerItem
{
public:
	uint8                                        Pad_237C[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UObject*                               TheObject;                                         // 0x10(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        ObjectId;                                          // 0x18(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        ObjectValue1;                                      // 0x1C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        ObjectValue2;                                      // 0x20(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_237D[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x10 (0xC0 - 0xB0)
// ScriptStruct FortniteGame.GameplayMutatorObjectDataArray
struct FGameplayMutatorObjectDataArray : public FFastArraySerializer
{
public:
	TArray<struct FGameplayMutatorObjectData>    ObjectDataList;                                    // 0xB0(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.GameplayMutatorEventData
struct FGameplayMutatorEventData
{
public:
	int32                                        EventId;                                           // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        EventParam1;                                       // 0x4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        EventParam2;                                       // 0x8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        EventParam3;                                       // 0xC(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x34 (0x40 - 0xC)
// ScriptStruct FortniteGame.PropertyOverride
struct FPropertyOverride : public FFastArraySerializerItem
{
public:
	uint8                                        Pad_237E[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                PropertyScope;                                     // 0x10(0x10)(ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                PropertyName;                                      // 0x20(0x10)(ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                PropertyData;                                      // 0x30(0x10)(ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.PropertyOverrideScope
struct FPropertyOverrideScope
{
public:
	TArray<struct FPropertyOverride>             PropertyOverrides;                                 // 0x0(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPublic)
};

// 0xE0 (0x190 - 0xB0)
// ScriptStruct FortniteGame.PlaylistPropertyArray
struct FPlaylistPropertyArray : public FFastArraySerializer
{
public:
	TArray<struct FPropertyOverride>             PropertyOverrides;                                 // 0xB0(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	int32                                        PlaylistReplicationKey;                            // 0xC0(0x4)(ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_237F[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UFortPlaylistAthena*                   BasePlaylist;                                      // 0xC8(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UFortPlaylistAthena*                   OverridePlaylist;                                  // 0xD0(0x8)(ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TMap<class FString, struct FPropertyOverrideScope> PropertyOverrideScopes;                            // 0xD8(0x50)(ZeroConstructor, Transient, RepSkip, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2380[0x68];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0xA0 (0xA0 - 0x0)
// ScriptStruct FortniteGame.DynamicLandData
struct FDynamicLandData
{
public:
	class FName                                  Name;                                              // 0x0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               WorldPosition;                                     // 0x8(0xC)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2381[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FSlateBrush                           LandBrush;                                         // 0x18(0x88)(Edit, NativeAccessSpecifierPublic)
};

// 0x28 (0x28 - 0x0)
// ScriptStruct FortniteGame.AircraftFlightInfo
struct FAircraftFlightInfo
{
public:
	struct FVector_NetQuantize100                FlightStartLocation;                               // 0x0(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	struct FRotator                              FlightStartRotation;                               // 0xC(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	float                                        FlightSpeed;                                       // 0x18(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TimeTillFlightEnd;                                 // 0x1C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TimeTillDropStart;                                 // 0x20(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TimeTillDropEnd;                                   // 0x24(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x4 (0x4 - 0x0)
// ScriptStruct FortniteGame.FortWinnerPlayerData
struct FFortWinnerPlayerData
{
public:
	int32                                        PlayerID;                                          // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x40 (0x40 - 0x0)
// ScriptStruct FortniteGame.QuickBarSlotData
struct FQuickBarSlotData
{
public:
	TArray<enum class EFortItemType>             AcceptedItemTypes;                                 // 0x0(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                         bStaticSlot;                                       // 0x10(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2382[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftObjectPtr<class UFortWorldItemDefinition> DefaultItem;                                       // 0x18(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.QuickBarData
struct FQuickBarData
{
public:
	TArray<struct FQuickBarSlotData>             QuickbarSlots;                                     // 0x0(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.CumulativeFrameTimeWithoutSleepLimits
struct FCumulativeFrameTimeWithoutSleepLimits
{
public:
	double                                       FrameTimeWithoutSleep;                             // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	double                                       MaxCumulativeFrameTimeAboveThreshold;              // 0x8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	double                                       MaxNumberOfFramesAboveThreshold;                   // 0x10(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.ItemAndCount
struct FItemAndCount
{
public:
	int32                                        Count;                                             // 0x0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2383[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UFortItemDefinition*                   Item;                                              // 0x8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x30 (0x30 - 0x0)
// ScriptStruct FortniteGame.CachedPlayerFOBInformation
struct FCachedPlayerFOBInformation
{
public:
	struct FUniqueNetIdRepl                      PlayerID;                                          // 0x0(0x28)(Transient, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortTeam                         Team;                                              // 0x28(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2384[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x28 (0x28 - 0x0)
// ScriptStruct FortniteGame.TeamFOBRequiredTags
struct FTeamFOBRequiredTags
{
public:
	struct FGameplayTagContainer                 RequiredFOBSpawnTags;                              // 0x0(0x20)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	enum class EFortTeam                         Team;                                              // 0x20(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2385[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x20 (0x20 - 0x0)
// ScriptStruct FortniteGame.FortSpawnActorData
struct FFortSpawnActorData
{
public:
	class UFortSpawnActorInfo*                   SpawnActorInfo;                                    // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        NumSpawnsRemaining;                                // 0x8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TimeUntilNextSpawn;                                // 0xC(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class AActor*>                        SpawnedFortSpawnActors;                            // 0x10(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x50 (0x50 - 0x0)
// ScriptStruct FortniteGame.AthenaVehicleOverride
struct FAthenaVehicleOverride
{
public:
	TSoftClassPtr<class AFortAthenaVehicle>      DefaultVehicleClass;                               // 0x0(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class AFortAthenaVehicle>      OverrideVehicleClass;                              // 0x28(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x8 (0x8 - 0x0)
// ScriptStruct FortniteGame.ExitCraftSpawnData
struct FExitCraftSpawnData
{
public:
	class UFortAthenaExitCraftInfo*              ExitCraftInfo;                                     // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x28 (0x28 - 0x0)
// ScriptStruct FortniteGame.SupplyDropZoneBasedSpawnData
struct FSupplyDropZoneBasedSpawnData
{
public:
	TArray<class AFortAthenaSupplyDrop*>         SpawnedSupplyDrops;                                // 0x0(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	int32                                        NumDropsRemainingInWave;                           // 0x10(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        NextWaveSpawnTime;                                 // 0x14(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        NextSpawnTime;                                     // 0x18(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EAthenaGamePhase                  CurrGamePhase;                                     // 0x1C(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2386[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        CurrSubPhase;                                      // 0x20(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        TotalSupplyDropsSpawnedInSubPhase;                 // 0x24(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x20 (0x20 - 0x0)
// ScriptStruct FortniteGame.SupplyDropItemDeliverySpawnData
struct FSupplyDropItemDeliverySpawnData
{
public:
	int32                                        NumItemsToDeliver;                                 // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2387[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<float>                                QueuedSpawnTimes;                                  // 0x8(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	float                                        NextSpawnTime;                                     // 0x18(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        NumInitialSpawns;                                  // 0x1C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x50 (0x50 - 0x0)
// ScriptStruct FortniteGame.SupplyDropSpawnData
struct FSupplyDropSpawnData
{
public:
	class UFortSupplyDropInfo*                   SupplyDropInfo;                                    // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSupplyDropZoneBasedSpawnData         ZoneBasedData;                                     // 0x8(0x28)(NativeAccessSpecifierPublic)
	struct FSupplyDropItemDeliverySpawnData      ItemDeliveryData;                                  // 0x30(0x20)(NativeAccessSpecifierPublic)
};

// 0xE0 (0xE0 - 0x0)
// ScriptStruct FortniteGame.ScorePlacementTable
struct FScorePlacementTable
{
public:
	TArray<float>                                Solo;                                              // 0x0(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<float>                                Duos;                                              // 0x10(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<float>                                Squads;                                            // 0x20(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<float>                                FiftyFifty;                                        // 0x30(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<float>                                LargeTeam;                                         // 0x40(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<float>                                MediumTeam;                                        // 0x50(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<float>                                QuickSolo;                                         // 0x60(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<float>                                QuickDuo;                                          // 0x70(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<float>                                QuickSquad;                                        // 0x80(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<float>                                QuickLargeTeam;                                    // 0x90(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<float>                                QuickTwoTeam;                                      // 0xA0(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<float>                                QuickMediumTeam;                                   // 0xB0(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<float>                                SinglePlacement;                                   // 0xC0(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<float>                                Default;                                           // 0xD0(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.GCSettingsOverride
struct FGCSettingsOverride
{
public:
	class FName                                  PlaylistName;                                      // 0x0(0x8)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnableGCOnServerDuringMatch;                      // 0x8(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2388[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        GCFrequency;                                       // 0xC(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.TimeOfDayOverride
struct FTimeOfDayOverride
{
public:
	class FName                                  PlaylistName;                                      // 0x0(0x8)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TimeOfDay;                                         // 0x8(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TimeOfDaySpeed;                                    // 0xC(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x4C (0x58 - 0xC)
// ScriptStruct FortniteGame.PropertyOverrideMk2
struct FPropertyOverrideMk2 : public FFastArraySerializerItem
{
public:
	uint8                                        Pad_2389[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                PropertyScope;                                     // 0x10(0x10)(Edit, ZeroConstructor, EditConst, SaveGame, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                PropertyName;                                      // 0x20(0x10)(Edit, ZeroConstructor, EditConst, SaveGame, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                PropertyData;                                      // 0x30(0x10)(Edit, ZeroConstructor, EditConst, SaveGame, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                DefaultPropertyData;                               // 0x40(0x10)(Edit, ZeroConstructor, Transient, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_238A[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x28 (0xD8 - 0xB0)
// ScriptStruct FortniteGame.PropertyOverrideData
struct FPropertyOverrideData : public FFastArraySerializer
{
public:
	TArray<struct FPropertyOverrideMk2>          PropertyOverrides;                                 // 0xB0(0x10)(Edit, ZeroConstructor, EditConst, SaveGame, NativeAccessSpecifierPublic)
	int32                                        TargetObjectReplicationKey;                        // 0xC0(0x4)(ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	enum class EPropertyOverrideTargetType       OverrideMode;                                      // 0xC4(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_238B[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UObject*                               BaseObject;                                        // 0xC8(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UObject*                               MutableObject;                                     // 0xD0(0x8)(ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};

// 0x14 (0x14 - 0x0)
// ScriptStruct FortniteGame.FortReplayFXState
struct FFortReplayFXState
{
public:
	bool                                         IsHighQualityFX;                                   // 0x0(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_238C[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        DefaultParticleLODBias;                            // 0x4(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        DefaultDepthOfFieldQuality;                        // 0x8(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        OverrideParticleLODBias;                           // 0xC(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        OverrideDepthOfFieldQuality;                       // 0x10(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.FortSelectableRewardOption
struct FFortSelectableRewardOption
{
public:
	TArray<struct FFortItemQuantityPair>         Rewards;                                           // 0x0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0xC (0xC - 0x0)
// ScriptStruct FortniteGame.FortHiddenRewardQuantityPair
struct FFortHiddenRewardQuantityPair
{
public:
	class FName                                  TemplateId;                                        // 0x0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Quantity;                                          // 0x8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x30 (0x30 - 0x0)
// ScriptStruct FortniteGame.FortRewardInfo
struct FFortRewardInfo
{
public:
	TArray<struct FFortSelectableRewardOption>   SelectableRewards;                                 // 0x0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FFortItemQuantityPair>         StandardRewards;                                   // 0x10(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FFortHiddenRewardQuantityPair> HiddenRewards;                                     // 0x20(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x68 (0x68 - 0x0)
// ScriptStruct FortniteGame.FortCollectionBookRewards
struct FFortCollectionBookRewards
{
public:
	enum class ECollectionBookRewardType         RewardType;                                        // 0x0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_238D[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  PageId;                                            // 0x4(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  SectionId;                                         // 0xC(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        XpRequired;                                        // 0x14(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                  Description;                                       // 0x18(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	bool                                         bIsMajorReward;                                    // 0x30(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_238E[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FFortRewardInfo                       Rewards;                                           // 0x38(0x30)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
};

// 0x54 (0x60 - 0xC)
// ScriptStruct FortniteGame.MinigameScoreEntry
struct FMinigameScoreEntry : public FFastArraySerializerItem
{
public:
	uint8                                        Pad_238F[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FUniqueNetIdRepl                      UniqueId;                                          // 0x10(0x28)(HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                PlayerName;                                        // 0x38(0x10)(Edit, BlueprintVisible, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Score;                                             // 0x48(0x4)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2390[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FDateTime                             TimeRecorded;                                      // 0x50(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bHasScore : 1;                                     // Mask : 0x1 0x58(0x1)(RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2391[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0xC (0xC - 0x0)
// ScriptStruct FortniteGame.RuntimeOptionTabStateInfo
struct FRuntimeOptionTabStateInfo
{
public:
	class FName                                  TabName;                                           // 0x0(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortRuntimeOptionTabState        TabState;                                          // 0x8(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2392[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x20 (0x20 - 0x0)
// ScriptStruct FortniteGame.RuntimeOptionLocalizableStringEntry
struct FRuntimeOptionLocalizableStringEntry
{
public:
	class FString                                Culture;                                           // 0x0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                Text;                                              // 0x10(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.RuntimeOptionLocalizableString
struct FRuntimeOptionLocalizableString
{
public:
	TArray<struct FRuntimeOptionLocalizableStringEntry> Entries;                                           // 0x0(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x14 (0x14 - 0x0)
// ScriptStruct FortniteGame.RuntimeOptionReviewPromptCriteria
struct FRuntimeOptionReviewPromptCriteria
{
public:
	int32                                        MinutesPlayed;                                     // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        GamesPlayed;                                       // 0x4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        BestResult;                                        // 0x8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        KillCount;                                         // 0xC(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         RequireAll;                                        // 0x10(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2393[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x120 (0x120 - 0x0)
// ScriptStruct FortniteGame.SavedSpectatorCameraState
struct FSavedSpectatorCameraState
{
public:
	bool                                         bDataIsValid;                                      // 0x0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ESpectatorCameraType              CameraType;                                        // 0x1(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2394[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FUniqueNetIdRepl                      FollowedPlayerUniqueId;                            // 0x8(0x28)(HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FCameraFilmbackSettings               FilmbackSettings;                                  // 0x30(0xC)(NoDestructor, NativeAccessSpecifierPublic)
	struct FCameraLensSettings                   LensSettings;                                      // 0x3C(0x18)(ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_2395[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FCameraFocusSettings                  FocusSettings;                                     // 0x58(0x58)(NativeAccessSpecifierPublic)
	float                                        CurrentFocalLength;                                // 0xB0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CurrentAperture;                                   // 0xB4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bManualFocusControl;                               // 0xB8(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2396[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        CurrentFocusDistance;                              // 0xBC(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bManualExposureControl;                            // 0xC0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2397[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        ManualExposureBias;                                // 0xC4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        ArenaCamIndex;                                     // 0xC8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2398[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTransform                            Transform;                                         // 0xD0(0x30)(IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FRotator                              ControlRotation;                                   // 0x100(0xC)(ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	float                                        ThirdPersonNormalizedDistance;                     // 0x10C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bThirdPersonAutoFollow;                            // 0x110(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bThirdPersonLazyFollow;                            // 0x111(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2399[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        DroneSpeedIndex;                                   // 0x114(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ReplayPlaybackSpeed;                               // 0x118(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bNameplatesEnabled;                                // 0x11C(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bPlayerOutlinesEnabled;                            // 0x11D(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_239A[0x2];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x130 (0x130 - 0x0)
// ScriptStruct FortniteGame.SavedSpectatorCameraShot
struct FSavedSpectatorCameraShot
{
public:
	struct FSavedSpectatorCameraState            CameraState;                                       // 0x0(0x120)(NativeAccessSpecifierPublic)
	bool                                         bIsShotStart;                                      // 0x120(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_239B[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        Timestamp;                                         // 0x124(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ShotLength;                                        // 0x128(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_239C[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.SavedSpectatorCameras
struct FSavedSpectatorCameras
{
public:
	TArray<struct FSavedSpectatorCameraShot>     Shots;                                             // 0x0(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x50 (0x50 - 0x0)
// ScriptStruct FortniteGame.SavedPlayerSpectatorCameraData
struct FSavedPlayerSpectatorCameraData
{
public:
	TMap<struct FUniqueNetIdRepl, struct FSavedSpectatorCameraState> PlayerToCameraStateMap;                            // 0x0(0x50)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x50 (0x50 - 0x0)
// ScriptStruct FortniteGame.SpectatorOwnedCameraComponentRecord
struct FSpectatorOwnedCameraComponentRecord
{
public:
	TMap<class AActor*, class UFortSpectatorCameraComponent*> ViewTargetToComponentMap;                          // 0x0(0x50)(ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
};

// 0x130 (0x130 - 0x0)
// ScriptStruct FortniteGame.FortDialogDescription
struct FFortDialogDescription
{
public:
	struct FSlateBrush                           Icon;                                              // 0x0(0x88)(BlueprintVisible, NativeAccessSpecifierPublic)
	class FText                                  MessageHeader;                                     // 0x88(0x18)(BlueprintVisible, NativeAccessSpecifierPublic)
	class FText                                  MessageBody;                                       // 0xA0(0x18)(BlueprintVisible, NativeAccessSpecifierPublic)
	class FText                                  AcceptButtonText;                                  // 0xB8(0x18)(BlueprintVisible, NativeAccessSpecifierPublic)
	class FText                                  IgnoreButtonText;                                  // 0xD0(0x18)(BlueprintVisible, NativeAccessSpecifierPublic)
	class FText                                  DismissButtonText;                                 // 0xE8(0x18)(BlueprintVisible, NativeAccessSpecifierPublic)
	float                                        DisplayTime;                                       // 0x100(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_239D[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UUserWidget*                           AdditionalContent;                                 // 0x108(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortDialogFeedbackType           FeedBackType;                                      // 0x110(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         Dismissable;                                       // 0x111(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_239E[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UFortNotificationHandler*              NotificationHandler;                               // 0x118(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_239F[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x68 (0x68 - 0x0)
// ScriptStruct FortniteGame.FortEncounterSettings
struct FFortEncounterSettings
{
public:
	TArray<enum class EFortEncounterDirection>   ForbiddenSpawnDirections;                          // 0x0(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                         bRiftsDestroyPlayerBuiltBuildings;                 // 0x10(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bMustFindSpawnPoints;                              // 0x11(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bTrackCombatParticipation;                         // 0x12(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDisplayThreatVisuals;                             // 0x13(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BurstSpawnThreatVisualsEndDelayOverride;           // 0x14(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        NumRiftsToUseOverride;                             // 0x18(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bUseEQSQueryToFindAISpawnLocations;                // 0x1C(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bRelevantForTotalAICap;                            // 0x1D(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_23A0[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        PreSpawnRequeryTime;                               // 0x20(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_23A1[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UEnvQuery*                             RiftSelectionQuery;                                // 0x28(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class AActor*>                        ScriptedSpawnPoints;                               // 0x30(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TSubclassOf<class ABuildingRift>             RiftClassOverride;                                 // 0x40(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class AActor*>                        WorkingScriptedSpawnPoints;                        // 0x48(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	TArray<class UFortDifficultyOptionCategoryEncounter*> InjectedOverrideCategories;                        // 0x58(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPublic)
};

// 0x0 (0x8 - 0x8)
// ScriptStruct FortniteGame.FortStatManagerTag
struct FFortStatManagerTag : public FGameplayTag
{
public:
};

// 0x330 (0x330 - 0x0)
// ScriptStruct FortniteGame.FortMultiSizeBrush
struct FFortMultiSizeBrush
{
public:
	struct FSlateBrush                           Brush_XXS;                                         // 0x0(0x88)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FSlateBrush                           Brush_XS;                                          // 0x88(0x88)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FSlateBrush                           Brush_S;                                           // 0x110(0x88)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FSlateBrush                           Brush_M;                                           // 0x198(0x88)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FSlateBrush                           Brush_L;                                           // 0x220(0x88)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FSlateBrush                           Brush_XL;                                          // 0x2A8(0x88)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
};

// 0x28 (0x28 - 0x0)
// ScriptStruct FortniteGame.FortItemViewSettings
struct FFortItemViewSettings
{
public:
	bool                                         UsesPlacementActor;                                // 0x0(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         UsesFixedCamera;                                   // 0x1(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         SupportsZooming;                                   // 0x2(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_23A2[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        DefaultZoomLevel;                                  // 0x4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFloatRange                           ZoomRange;                                         // 0x8(0x10)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortItemViewRotationMode         RotationMode;                                      // 0x18(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_23A3[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FRotator                              CameraRotationOffset;                              // 0x1C(0xC)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
};

// 0xC8 (0xC8 - 0x0)
// ScriptStruct FortniteGame.ConfirmationDialogAction
struct FConfirmationDialogAction
{
public:
	class FText                                  DisplayName;                                       // 0x0(0x18)(BlueprintVisible, NativeAccessSpecifierPublic)
	class FText                                  HoverText;                                         // 0x18(0x18)(BlueprintVisible, NativeAccessSpecifierPublic)
	class FName                                  ResultName;                                        // 0x30(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSlateBrush                           Icon;                                              // 0x38(0x88)(BlueprintVisible, NativeAccessSpecifierPublic)
	class FName                                  ActionName;                                        // 0xC0(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x118 (0x118 - 0x0)
// ScriptStruct FortniteGame.FortDialogDescription_NUI
struct FFortDialogDescription_NUI
{
public:
	struct FSlateBrush                           Icon;                                              // 0x0(0x88)(BlueprintVisible, NativeAccessSpecifierPublic)
	class FText                                  MessageHeader;                                     // 0x88(0x18)(BlueprintVisible, NativeAccessSpecifierPublic)
	class FText                                  MessageBody;                                       // 0xA0(0x18)(BlueprintVisible, NativeAccessSpecifierPublic)
	TArray<struct FConfirmationDialogAction>     ConfirmButtonInputActions;                         // 0xB8(0x10)(BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	class FName                                  DeclineButtonInputAction;                          // 0xC8(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bMultipleConfirmButtons;                           // 0xD0(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_23A4[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UWidget*                               AdditionalContent;                                 // 0xD8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidget*                               LeftAdditionalContent;                             // 0xE0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DisplayTime;                                       // 0xE8(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         Dismissable;                                       // 0xEC(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShouldWaitForLatentActionOnConfirmAction;         // 0xED(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_23A5[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UFortNotificationHandler*              NotificationHandler;                               // 0xF0(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_23A6[0x20];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x4 (0x4 - 0x0)
// ScriptStruct FortniteGame.FortDialogExternalLatentActionHandle
struct FFortDialogExternalLatentActionHandle
{
public:
	int32                                        Handle;                                            // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};

// 0x48 (0x50 - 0x8)
// ScriptStruct FortniteGame.FortCollectionBookSlotData
struct FFortCollectionBookSlotData : public FTableRowBase
{
public:
	class FName                                  SlotXpWeightName;                                  // 0x8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  SlotSourceId;                                      // 0x10(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  SlotSourceId2;                                     // 0x18(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<TSoftObjectPtr<class UFortItemDefinition>> AllowedItems;                                      // 0x20(0x10)(Edit, ZeroConstructor, EditConst, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<struct FGameplayTag>                  AllowedWorkerPersonalities;                        // 0x30(0x10)(Edit, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
	struct FDataTableRowHandle                   PurchaseCosts;                                     // 0x40(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
};

// 0xC (0xC - 0x0)
// ScriptStruct FortniteGame.SpecialActorSingleStatData
struct FSpecialActorSingleStatData
{
public:
	enum class ESpecialActorStatType             StatType;                                          // 0x0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_23A7[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        Value;                                             // 0x4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        StatLogicValue;                                    // 0x8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x1F4 (0x200 - 0xC)
// ScriptStruct FortniteGame.SpecialActorRepData
struct FSpecialActorRepData : public FFastArraySerializerItem
{
public:
	class FName                                  SpecialActorID;                                    // 0xC(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          CategoryTag;                                       // 0x14(0x8)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_23A8[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AActor*                                SpecialActor;                                      // 0x20(0x8)(ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class APlayerState*                          PlayerState;                                       // 0x28(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ReplicationInterval;                               // 0x30(0x4)(ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ReplicationIntervalDeviation;                      // 0x34(0x4)(ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        NextReplicationTime;                               // 0x38(0x4)(ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LastActorNotRelevantTime;                          // 0x3C(0x4)(ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bActorIsRelevant;                                  // 0x40(0x1)(ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bWasActorRelevantLastUpdate;                       // 0x41(0x1)(ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_23A9[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               CurrentLocation;                                   // 0x44(0xC)(ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CurrentYaw;                                        // 0x50(0x4)(ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_23AA[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FSlateBrush                           MainIconBrush;                                     // 0x58(0x88)(NativeAccessSpecifierPublic)
	struct FVector2D                             MinimapScale;                                      // 0xE0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSlateBrush                           CompassIconBrush;                                  // 0xE8(0x88)(NativeAccessSpecifierPublic)
	struct FVector2D                             CompassScale;                                      // 0x170(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CurrentHealth;                                     // 0x178(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxHealth;                                         // 0x17C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CurrentShield;                                     // 0x180(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxShield;                                         // 0x184(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                  DisplayName;                                       // 0x188(0x18)(NativeAccessSpecifierPublic)
	float                                        AddedToClientTime;                                 // 0x1A0(0x4)(ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_23AB[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FSpecialActorSingleStatData>   TrackedStats;                                      // 0x1A8(0x10)(ZeroConstructor, RepSkip, NativeAccessSpecifierPublic)
	float                                        LastLocationReplicationTime;                       // 0x1B8(0x4)(ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        PrevLocationReplicatedTime;                        // 0x1BC(0x4)(ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FVector_NetQuantize100                LastRepLocation;                                   // 0x1C0(0xC)(NoDestructor, NativeAccessSpecifierPrivate)
	struct FVector_NetQuantize100                PrevRepLocation;                                   // 0x1CC(0xC)(RepSkip, NoDestructor, NativeAccessSpecifierPrivate)
	struct FVector                               LerpStartLocation;                                 // 0x1D8(0xC)(ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        LastYawReplicationTime;                            // 0x1E4(0x4)(ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        PrevYawReplicatedTime;                             // 0x1E8(0x4)(ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        LastRepYaw;                                        // 0x1EC(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        PrevRepYaw;                                        // 0x1F0(0x4)(ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        LerpStartYaw;                                      // 0x1F4(0x4)(ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bReplicateHealth;                                  // 0x1F8(0x1)(ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bReplicateShield;                                  // 0x1F9(0x1)(ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_23AC[0x6];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.FortBroadcastInfoPerPlayer
struct FFortBroadcastInfoPerPlayer
{
public:
	class AFortPlayerStateAthena*                PlayerState;                                       // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        ResourceCount;                                     // 0x8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_23AD[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0xC (0xC - 0x0)
// ScriptStruct FortniteGame.FortGlobalActionDetails
struct FFortGlobalActionDetails
{
public:
	class FName                                  ActionName;                                        // 0x0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         HoldStatus;                                        // 0x8(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_23AE[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x1 (0x1 - 0x0)
// ScriptStruct FortniteGame.FortGlobalActionDetailsFunctionContext
struct FFortGlobalActionDetailsFunctionContext
{
public:
	enum class ECommonInputType                  OverrideInputType;                                 // 0x0(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x20 (0x20 - 0x0)
// ScriptStruct FortniteGame.FortInputActionDetails
struct FFortInputActionDetails
{
public:
	enum class EFortInputActionType              InputActionType;                                   // 0x0(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_23AF[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FKey                                  ActionKey;                                         // 0x8(0x18)(BlueprintVisible, BlueprintReadOnly, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.GameSummaryInfo
struct FGameSummaryInfo
{
public:
	class FString                                GameSessionId;                                     // 0x0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         Completed;                                         // 0x10(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_23B0[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x50 (0x58 - 0x8)
// ScriptStruct FortniteGame.Recipe
struct FRecipe : public FTableRowBase
{
public:
	TArray<struct FFortItemQuantityPair>         RecipeResults;                                     // 0x8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                         bIsConsumed;                                       // 0x18(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_23B1[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FFortItemQuantityPair>         RecipeCosts;                                       // 0x20(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                 RequiredCatalysts;                                 // 0x30(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	int32                                        Score;                                             // 0x50(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_23B2[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x28 (0x28 - 0x0)
// ScriptStruct FortniteGame.HeroSpecializationAttributeRequirement
struct FHeroSpecializationAttributeRequirement
{
public:
	struct FGameplayAttribute                    Attribute;                                         // 0x0(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinimumValue;                                      // 0x20(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_23B3[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x88 (0x88 - 0x0)
// ScriptStruct FortniteGame.FortSpecializationSlot
struct FFortSpecializationSlot
{
public:
	TSoftObjectPtr<class UFortAbilityKit>        GrantedAbilityKit;                                 // 0x0(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UFortAbilityKit>        RemovedAbilityKit;                                 // 0x28(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FHeroSpecializationAttributeRequirement> AttributeRequirements;                             // 0x50(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                 RequiredTags;                                      // 0x60(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	int32                                        MinimumHeroLevel;                                  // 0x80(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_23B4[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x8 (0x10 - 0x8)
// ScriptStruct FortniteGame.TransmogSacrifice
struct FTransmogSacrifice : public FTableRowBase
{
public:
	int32                                        TransmogSacrificePoints;                           // 0x8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_23B5[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x1 (0x1 - 0x0)
// ScriptStruct FortniteGame.FortClientAnnouncementData
struct FFortClientAnnouncementData
{
public:
	uint8                                        Pad_23B6[0x1];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0xE7 (0xE8 - 0x1)
// ScriptStruct FortniteGame.FortClientAnnouncementData_Basic
struct FFortClientAnnouncementData_Basic : public FFortClientAnnouncementData
{
public:
	//struct FSlateBrush                         Icon;                                              // 0x0(0x88)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	uint8                                        Pad_23B7[0x87];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  TitleText;                                         // 0x88(0x18)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	class FText                                  DetailText;                                        // 0xA0(0x18)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	class FText                                  GamepadDetailText;                                 // 0xB8(0x18)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	int32                                        Priority;                                          // 0xD0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_23B8[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        DisplayTime;                                       // 0xD8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_23B9[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class USoundBase*                            OnStartSound;                                      // 0xE0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x50 (0x138 - 0xE8)
// ScriptStruct FortniteGame.FortClientAnnouncementData_Tutorial
struct FFortClientAnnouncementData_Tutorial : public FFortClientAnnouncementData_Basic
{
public:
	float                                        AutoContinueDelay;                                 // 0xE8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_23BA[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  NameText;                                          // 0xF0(0x18)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	class FText                                  SystemText;                                        // 0x108(0x18)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	bool                                         bButtonEnabled;                                    // 0x120(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bLightboxEnabled;                                  // 0x121(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bLightboxDisableInputOnly;                         // 0x122(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_23BB[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FMargin                               Padding;                                           // 0x124(0x10)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	enum class EVerticalAlignment                VAlign;                                            // 0x134(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EHorizontalAlignment              HAlign;                                            // 0x135(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_23BC[0x2];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x30 (0x30 - 0x0)
// ScriptStruct FortniteGame.HomebaseSquadAttributeBonus
struct FHomebaseSquadAttributeBonus
{
public:
	struct FGameplayAttribute                    AttributeGranted;                                  // 0x0(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FCurveTableRowHandle                  BonusCurve;                                        // 0x20(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x68 (0x68 - 0x0)
// ScriptStruct FortniteGame.HomebaseSquadSlot
struct FHomebaseSquadSlot
{
public:
	class FText                                  DisplayName;                                       // 0x0(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	TArray<enum class EFortItemType>             ValidSlottableItemTypes;                           // 0x18(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                 TagFilter;                                         // 0x28(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	TArray<struct FHomebaseSquadAttributeBonus>  SlottingBonuses;                                   // 0x48(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	class UCurveTable*                           PersonalityMatchBonusTable;                        // 0x58(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ESquadSlotType                    SlotType;                                          // 0x60(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_23BD[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x80 (0x88 - 0x8)
// ScriptStruct FortniteGame.HomebaseSquad
struct FHomebaseSquad : public FTableRowBase
{
public:
	class FText                                  DisplayName;                                       // 0x8(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class FText                                  ShortDisplayName;                                  // 0x20(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	enum class EFortHomebaseSquadType            SquadType;                                         // 0x38(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_23BE[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGameplayTag                          ManagerSynergyTag;                                 // 0x3C(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_23BF[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FHomebaseSquadSlot>            CrewSlots;                                         // 0x48(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                 RequiredTheaterTags;                               // 0x58(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	int32                                        MaxNumDefendersAllowedInLevel;                     // 0x78(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaxNumDefendersAllowedInGroupLevel;                // 0x7C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bConsiderNumPlayersForMaxNumDefenders;             // 0x80(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bAlwaysRemoveOldestDefenderWhenReplacing;          // 0x81(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_23C0[0x6];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x14 (0x20 - 0xC)
// ScriptStruct FortniteGame.FortClientObservedStat
struct FFortClientObservedStat : public FFastArraySerializerItem
{
public:
	class FName                                  StatName;                                          // 0xC(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        StatValue;                                         // 0x14(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_23C1[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x30 (0xE0 - 0xB0)
// ScriptStruct FortniteGame.FortClientObservedStatArray
struct FFortClientObservedStatArray : public FFastArraySerializer
{
public:
	class UStatManager*                          MyStatManager;                                     // 0xB0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FFortClientObservedStat>       ObservedStats;                                     // 0xB8(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_23C2[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x1C (0x1C - 0x0)
// ScriptStruct FortniteGame.AIHotSpotSlotConfig
struct FAIHotSpotSlotConfig
{
public:
	struct FVector                               Offset;                                            // 0x0(0xC)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               Direction;                                         // 0xC(0xC)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortHotSpotSlot                  SlotType;                                          // 0x18(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_23C3[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.AIHotSpotSlotInfo
struct FAIHotSpotSlotInfo
{
public:
	class AAIHotSpot*                            HotSpot;                                           // 0x0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        SlotIndex;                                         // 0x8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_23C4[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.DroppingAgentData
struct FDroppingAgentData
{
public:
	class AAthenaAIController*                   AIController;                                      // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ABuildingActor*                        MovementBase;                                      // 0x8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_23C5[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x248 (0x248 - 0x0)
// ScriptStruct FortniteGame.BarrierFlagDisplayData
struct FBarrierFlagDisplayData
{
public:
	class UStaticMesh*                           HeadMesh;                                          // 0x0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSlateBrush                           MiniMap_EnabledBrush;                              // 0x8(0x88)(Edit, NativeAccessSpecifierPublic)
	struct FSlateBrush                           MiniMap_DisabledBrush;                             // 0x90(0x88)(Edit, NativeAccessSpecifierPublic)
	struct FSlateBrush                           Compass_EnabledBrush;                              // 0x118(0x88)(Edit, NativeAccessSpecifierPublic)
	struct FSlateBrush                           Compass_DisabledBrush;                             // 0x1A0(0x88)(Edit, NativeAccessSpecifierPublic)
	struct FVector2D                             MapSize;                                           // 0x228(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             CompassSize;                                       // 0x230(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               MeshScale;                                         // 0x238(0xC)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_23C6[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x30 (0x30 - 0x0)
// ScriptStruct FortniteGame.BarrierObjectiveDisplayData
struct FBarrierObjectiveDisplayData
{
public:
	class UStaticMesh*                           HeadMesh;                                          // 0x0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               MeshScale;                                         // 0x8(0xC)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               MeshRelativeOffset;                                // 0x14(0xC)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UMaterialInterface*>            MaterialsToSwap;                                   // 0x20(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x50 (0x50 - 0x0)
// ScriptStruct FortniteGame.AthenaBroadcastKillFeedEntryInfo
struct FAthenaBroadcastKillFeedEntryInfo
{
public:
	uint8                                        Pad_23C7[0x50];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0xC (0xC - 0x0)
// ScriptStruct FortniteGame.FortCosmeticAdaptiveStatPair
struct FFortCosmeticAdaptiveStatPair
{
public:
	struct FFortStatManagerTag                   StatTag;                                           // 0x0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        StatValue;                                         // 0x8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x28 (0x28 - 0x0)
// ScriptStruct FortniteGame.FortCosmeticAdaptiveStatPreview
struct FFortCosmeticAdaptiveStatPreview
{
public:
	class FText                                  UnlockCondition;                                   // 0x0(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	TArray<struct FFortCosmeticAdaptiveStatPair> StatValues;                                        // 0x18(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.FortCosmeticVariantPreviewElement
struct FFortCosmeticVariantPreviewElement
{
public:
	TArray<struct FMcpVariantChannelInfo>        VariantOptions;                                    // 0x0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	class UAthenaCosmeticItemDefinition*         Item;                                              // 0x10(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x40 (0x40 - 0x0)
// ScriptStruct FortniteGame.FortCosmeticVariantPreview
struct FFortCosmeticVariantPreview
{
public:
	class FText                                  UnlockCondition;                                   // 0x0(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	float                                        PreviewTime;                                       // 0x18(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_23C8[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FMcpVariantChannelInfo>        VariantOptions;                                    // 0x20(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FFortCosmeticVariantPreviewElement> AdditionalItems;                                   // 0x30(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x38 (0x38 - 0x0)
// ScriptStruct FortniteGame.AthenaCosmeticMaterialOverride
struct FAthenaCosmeticMaterialOverride
{
public:
	class FName                                  ComponentName;                                     // 0x0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaterialOverrideIndex;                             // 0x8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_23C9[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftObjectPtr<class UMaterialInterface>     OverrideMaterial;                                  // 0x10(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x38 (0x38 - 0x0)
// ScriptStruct FortniteGame.GameplayTagMessage
struct FGameplayTagMessage
{
public:
	struct FGameplayTagContainer                 Tags;                                              // 0x0(0x20)(Edit, NativeAccessSpecifierPublic)
	class FText                                  Text;                                              // 0x20(0x18)(Edit, NativeAccessSpecifierPublic)
};

// 0x20 (0x28 - 0x8)
// ScriptStruct FortniteGame.AthenaLevelUpData
struct FAthenaLevelUpData : public FTableRowBase
{
public:
	int32                                        Level;                                             // 0x8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        XpToNextLevel;                                     // 0xC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        XpTotal;                                           // 0x10(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        CurrencyReward;                                    // 0x14(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                ChaseRewardTemplateId;                             // 0x18(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.PetStimuliResponse
struct FPetStimuliResponse
{
public:
	struct FGameplayTag                          ResponseTag;                                       // 0x0(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ResponseDuration;                                  // 0x8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ResponseWeight;                                    // 0xC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x14 (0x14 - 0x0)
// ScriptStruct FortniteGame.AthenaQuickChatActiveEntry
struct FAthenaQuickChatActiveEntry
{
public:
	TWeakObjectPtr<class UAthenaQuickChatBank>   Bank;                                              // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class UObject>                ContextObject;                                     // 0x8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int16                                        ContextValue;                                      // 0x10(0x2)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int8                                         Index;                                             // 0x12(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_23CA[0x1];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0xD8 (0xD8 - 0x0)
// ScriptStruct FortniteGame.AthenaQuickChatLeafEntry
struct FAthenaQuickChatLeafEntry
{
public:
	class FText                                  Label;                                             // 0x0(0x18)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FText                                  FullChatMessage;                                   // 0x18(0x18)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FSlateBrush                           Brush;                                             // 0x30(0x88)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	bool                                         bPopulateBrushFromContextObject;                   // 0xB8(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EAthenaQuickChatFilteringType     FilterType;                                        // 0xB9(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_23CB[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UAthenaEmojiItemDefinition*            EmojiItemDefinition;                               // 0xC0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETeamMemberState                  TeamCommType;                                      // 0xC8(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_23CC[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGameplayTag                          OptionGameplayTag;                                 // 0xCC(0x8)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_23CD[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x70 (0x70 - 0x0)
// ScriptStruct FortniteGame.AthenaRewardItemReference
struct FAthenaRewardItemReference
{
public:
	TSoftObjectPtr<class UFortItemDefinition>    ItemDefinition;                                    // 0x0(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                TemplateId;                                        // 0x28(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Quantity;                                          // 0x38(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_23CE[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftObjectPtr<class UFortGiftBoxItemDefinition> GiftBoxToUse;                                      // 0x40(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsChaseReward;                                     // 0x68(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EAthenaRewardItemType             RewardType;                                        // 0x69(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_23CF[0x6];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x20 (0x20 - 0x0)
// ScriptStruct FortniteGame.AthenaSeasonRewardLevelInfo
struct FAthenaSeasonRewardLevelInfo
{
public:
	enum class EAthenaSeasonRewardTrack          Track;                                             // 0x0(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_23D0[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        Level;                                             // 0x4(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        XpToNextLevel;                                     // 0x8(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_23D1[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FAthenaRewardItemReference>    Rewards;                                           // 0x10(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x50 (0x50 - 0x0)
// ScriptStruct FortniteGame.AthenaSeasonBannerLevel
struct FAthenaSeasonBannerLevel
{
public:
	TSoftObjectPtr<class UTexture2D>             SurroundImage;                                     // 0x0(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UMaterialInterface>     BannerMaterial;                                    // 0x28(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.AthenaSeasonBannerLevelSchedule
struct FAthenaSeasonBannerLevelSchedule
{
public:
	TArray<struct FAthenaSeasonBannerLevel>      Levels;                                            // 0x0(0x10)(Edit, EditFixedSize, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.AthenaRewardScheduleLevel
struct FAthenaRewardScheduleLevel
{
public:
	TArray<struct FAthenaRewardItemReference>    Rewards;                                           // 0x0(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.AthenaRewardSchedule
struct FAthenaRewardSchedule
{
public:
	TArray<struct FAthenaRewardScheduleLevel>    Levels;                                            // 0x0(0x10)(Edit, EditFixedSize, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x10 (0x18 - 0x8)
// ScriptStruct FortniteGame.AthenaSeasonalXPCurveEntry
struct FAthenaSeasonalXPCurveEntry : public FTableRowBase
{
public:
	int32                                        Level;                                             // 0x8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        XpToNextLevel;                                     // 0xC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        XpTotal;                                           // 0x10(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_23D2[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x58 (0x58 - 0x0)
// ScriptStruct FortniteGame.AthenaWeaponAlterationRule
struct FAthenaWeaponAlterationRule
{
public:
	struct FGameplayTagQuery                     MatchCriteria;                                     // 0x0(0x48)(Edit, NativeAccessSpecifierPublic)
	TArray<class UCosmeticOnlyAlterationItemDefinition*> Alterations;                                       // 0x48(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.BacchusActionIconMapping
struct FBacchusActionIconMapping
{
public:
	class FName                                  Action;                                            // 0x0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPaperSprite*                          Sprite;                                            // 0x8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x20 (0x20 - 0x0)
// ScriptStruct FortniteGame.BuildingActorHotSpotDirection
struct FBuildingActorHotSpotDirection
{
public:
	class UAIHotSpotConfig*                      HotSpotConfig;                                     // 0x0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               Offset;                                            // 0x8(0xC)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bMirrorX : 1;                                      // Mask : 0x1 0x14(0x1)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bMirrorY : 1;                                      // Mask : 0x2 0x14(0x1)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_23D3[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	enum class EFortHotSpotDirection             Direction;                                         // 0x18(0x1)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EHotspotTypeConfigMode            TypeConfigUsage;                                   // 0x19(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_23D4[0x6];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.FortSearchBounceData
struct FFortSearchBounceData
{
public:
	struct FVector                               BounceNormal;                                      // 0x0(0xC)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint32                                       SearchAnimationCount;                              // 0xC(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0xC0 (0xC0 - 0x0)
// ScriptStruct FortniteGame.ConnectivityCube
struct FConnectivityCube
{
public:
	uint8                                        Pad_23D5[0xC0];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x20 (0x20 - 0x0)
// ScriptStruct FortniteGame.AuxiliaryEditTileMeshData
struct FAuxiliaryEditTileMeshData
{
public:
	class UStaticMesh*                           TileMesh;                                          // 0x0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                            TileTexture;                                       // 0x8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                              RelativeRot;                                       // 0x10(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_23D6[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.EditModeState
struct FEditModeState
{
public:
	TSubclassOf<class ABuildingSMActor>          EditClass;                                         // 0x0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        RotationIterations;                                // 0x8(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bMirrored;                                         // 0xC(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bCurrentlyValid;                                   // 0xD(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_23D7[0x2];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.TileCompInterpData
struct FTileCompInterpData
{
public:
	struct FVector                               InitialTranslation;                                // 0x0(0xC)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               DesiredTranslation;                                // 0xC(0xC)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x2C (0x38 - 0xC)
// ScriptStruct FortniteGame.FOBCoreChoice
struct FFOBCoreChoice : public FFastArraySerializerItem
{
public:
	uint8                                        Pad_23D8[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UFortFOBCoreDecoItemDefinition*        FOBCoreDef;                                        // 0x10(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFOBFileHeaderStatus              FileHeaderStatus;                                  // 0x18(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_23D9[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                CoreFilename;                                      // 0x20(0x10)(ZeroConstructor, Transient, RepSkip, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFortBuildingInstructions*             BuildingInstructions;                              // 0x30(0x8)(ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0xC0 - 0xB0)
// ScriptStruct FortniteGame.FOBCoreChoiceArray
struct FFOBCoreChoiceArray : public FFastArraySerializer
{
public:
	TArray<struct FFOBCoreChoice>                Items;                                             // 0xB0(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
};

// 0x30 (0x30 - 0x0)
// ScriptStruct FortniteGame.BuildingFoundationLODActorData
struct FBuildingFoundationLODActorData
{
public:
	TWeakObjectPtr<class ALODActor>              LODActor;                                          // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_23DA[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UMaterialInstanceDynamic*              VisibilityMaterial;                                // 0x20(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2DDynamic*                     VisibilityTexture;                                 // 0x28(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x58 (0x58 - 0x0)
// ScriptStruct FortniteGame.BuildingFoundationStreamingData
struct FBuildingFoundationStreamingData
{
public:
	class FName                                  FoundationName;                                    // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               FoundationLocation;                                // 0x8(0xC)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FBox                                  BoundingBox;                                       // 0x14(0x1C)(ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	TArray<TLazyObjectPtr<class AFortHLODSMActor>> ProxyInfo;                                         // 0x30(0x10)(ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<int32>                                ChildStreamingDataIndices;                         // 0x40(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	uint8                                        PersistentHLODLevelIndex;                          // 0x50(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_23DB[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x98 (0x98 - 0x0)
// ScriptStruct FortniteGame.FortDeliveryInfoRequirementsFilter
struct FFortDeliveryInfoRequirementsFilter
{
public:
	struct FGameplayTagRequirements              SourceTagRequirements;                             // 0x0(0x40)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FGameplayTagRequirements              TargetTagRequirements;                             // 0x40(0x40)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	enum class EFortTeamAffiliation              ApplicableTeamAffiliation;                         // 0x80(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_23DC[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	uint8                                        bConsiderTeamAffiliationToInstigator : 1;          // Mask : 0x1 0x84(0x1)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_23DD[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	enum class EFortTeam                         ApplicableTeam;                                    // 0x88(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_23DE[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	uint8                                        bConsiderTeam : 1;                                 // Mask : 0x1 0x8C(0x1)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bApplyToPlayerPawns : 1;                           // Mask : 0x2 0x8C(0x1)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bApplyToAIPawns : 1;                               // Mask : 0x4 0x8C(0x1)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bApplyToBuildingActors : 1;                        // Mask : 0x8 0x8C(0x1)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_23DF[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	enum class EFortDeliveryInfoBuildingActorSpecification BuildingActorSpecification;                        // 0x90(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_23E0[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	uint8                                        bApplyToGlobalEnvironmentAbilityActor : 1;         // Mask : 0x1 0x94(0x1)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_23E1[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x30 (0x30 - 0x0)
// ScriptStruct FortniteGame.GameplayEffectApplicationInfo
struct FGameplayEffectApplicationInfo
{
public:
	TSoftClassPtr<class UGameplayEffect>         GameplayEffect;                                    // 0x0(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Level;                                             // 0x28(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_23E2[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0xB0 (0xB0 - 0x0)
// ScriptStruct FortniteGame.ProximityBasedGEDeliveryInfo
struct FProximityBasedGEDeliveryInfo
{
public:
	struct FFortDeliveryInfoRequirementsFilter   DeliveryRequirements;                              // 0x0(0x98)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TArray<struct FGameplayEffectApplicationInfo> EffectsToApply;                                    // 0x98(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	enum class EFortProximityBasedGEApplicationType ProximityApplicationType;                          // 0xA8(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_23E3[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0xA8 (0xA8 - 0x0)
// ScriptStruct FortniteGame.FortAbilitySetDeliveryInfo
struct FFortAbilitySetDeliveryInfo
{
public:
	struct FFortDeliveryInfoRequirementsFilter   DeliveryRequirements;                              // 0x0(0x98)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TArray<TSoftObjectPtr<class UFortAbilitySet>> AbilitySets;                                       // 0x98(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
};

// 0x90 (0x90 - 0x0)
// ScriptStruct FortniteGame.BuildingGameplayActorAbilityDeliveryBucket
struct FBuildingGameplayActorAbilityDeliveryBucket
{
public:
	struct FGameplayTag                          Tag;                                               // 0x0(0x8)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FProximityBasedGEDeliveryInfo> ProximityBasedEffectBuckets;                       // 0x8(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TArray<struct FFortAbilitySetDeliveryInfo>   PawnPersistentAbilitySetBuckets;                   // 0x18(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TArray<struct FFortAbilitySetHandle>         PersistentlyAppliedAbilitySets;                    // 0x28(0x10)(ZeroConstructor, Transient, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	uint8                                        bEnabled : 1;                                      // Mask : 0x1 0x38(0x1)(Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bEnabledByDefault : 1;                             // Mask : 0x2 0x38(0x1)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bHasGEsToApplyOnTouch : 1;                         // Mask : 0x4 0x38(0x1)(NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bHasGEsToApplyOnPulseTimer : 1;                    // Mask : 0x8 0x38(0x1)(NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bHasPersistentEffects : 1;                         // Mask : 0x10 0x38(0x1)(NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_23E4[0x57];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x48 (0x48 - 0x0)
// ScriptStruct FortniteGame.BuildingGameplayActorAbilityDeliveryInfo
struct FBuildingGameplayActorAbilityDeliveryInfo
{
public:
	TArray<struct FBuildingGameplayActorAbilityDeliveryBucket> DeliveryBuckets;                                   // 0x0(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	float                                        ProximityPulseInterval;                            // 0x10(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bHasGEsToApplyOnTouch : 1;                         // Mask : 0x1 0x14(0x1)(NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bHasGEsToApplyOnPulseTimer : 1;                    // Mask : 0x2 0x14(0x1)(NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bHasPersistentEffects : 1;                         // Mask : 0x4 0x14(0x1)(NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_23E5[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class ABuildingGameplayActor*                OwningActor;                                       // 0x18(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class AActor*>                        DeferredTouchActorsToProcess;                      // 0x20(0x10)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_23E6[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x48 (0x48 - 0x0)
// ScriptStruct FortniteGame.FortMapData
struct FFortMapData
{
public:
	TSoftObjectPtr<class UWorld>                 BuildingWorld;                                     // 0x0(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGameplayTagContainer                 BuildingLevelTags;                                 // 0x28(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
};

// 0x18 (0x20 - 0x8)
// ScriptStruct FortniteGame.ItemCollectorOverrideItemRow
struct FItemCollectorOverrideItemRow : public FTableRowBase
{
public:
	struct FPrimaryAssetId                       ItemPrimaryAssetId;                                // 0x8(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Quantity;                                          // 0x18(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_23E7[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x18 (0x20 - 0x8)
// ScriptStruct FortniteGame.ItemCollectorRow
struct FItemCollectorRow : public FTableRowBase
{
public:
	class UDataTable*                            OverrideItemsTable;                                // 0x8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortRarity                       OverrideRarity;                                    // 0x10(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_23E8[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        OverrideGoal;                                      // 0x14(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        bOverrideLootRules;                                // 0x18(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        bUseOverrideRarity;                                // 0x1C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x20 (0x20 - 0x0)
// ScriptStruct FortniteGame.CollectorTrackedData
struct FCollectorTrackedData
{
public:
	enum class EFortTeam                         Team;                                              // 0x0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_23E9[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AFortPlayerState*                      Player;                                            // 0x8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_23EA[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.CollectedItemValue
struct FCollectedItemValue
{
public:
	class UFortWorldItemDefinition*              CollectedItem;                                     // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        DepositAmount;                                     // 0x8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        DepositGoal;                                       // 0xC(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        CaptureCount;                                      // 0x10(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_23EB[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0xA8 (0xA8 - 0x0)
// ScriptStruct FortniteGame.FortGameplayEffectDeliveryInfo
struct FFortGameplayEffectDeliveryInfo
{
public:
	struct FFortDeliveryInfoRequirementsFilter   DeliveryRequirements;                              // 0x0(0x98)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TArray<struct FGameplayEffectApplicationInfo> GameplayEffects;                                   // 0x98(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
};

// 0x108 (0x108 - 0x0)
// ScriptStruct FortniteGame.CollectorUnitInfo
struct FCollectorUnitInfo
{
public:
	class UFortWorldItemDefinition*              InputItem;                                         // 0x0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FScalableFloat                        InputCount;                                        // 0x8(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class UTexture*                              OverrideInputItemTexture;                          // 0x28(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bUseDefinedOutputItem : 1;                         // Mask : 0x1 0x30(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_23EC[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UFortWorldItemDefinition*              OutputItem;                                        // 0x38(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FFortItemEntry>                OutputItemEntry;                                   // 0x40(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	class FName                                  OverrideOutputItemLootTierGroupName;               // 0x50(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFortGameplayEffectDeliveryInfo       OutputGameplayEffect;                              // 0x58(0xA8)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class UTexture*                              OverrideOutputItemTexture;                         // 0x100(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x4 (0x4 - 0x0)
// ScriptStruct FortniteGame.FortRiftReservationHandle
struct FFortRiftReservationHandle
{
public:
	int32                                        RiftReservationID;                                 // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};

// 0x8 (0x8 - 0x0)
// ScriptStruct FortniteGame.FortRiftReservation
struct FFortRiftReservation
{
public:
	uint8                                        bDesiredVisible : 1;                               // Mask : 0x1 0x0(0x1)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bDesiredActive : 1;                                // Mask : 0x2 0x0(0x1)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_23ED[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FFortRiftReservationHandle            ReservationHandle;                                 // 0x4(0x4)(NoDestructor, NativeAccessSpecifierPublic)
};

// 0x20 (0x20 - 0x0)
// ScriptStruct FortniteGame.FortSpawnSlotData
struct FFortSpawnSlotData
{
public:
	struct FVector                               SpawnSlotLocation;                                 // 0x0(0xC)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_23EE[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AFortAIPawn*                           OccupyingAI;                                       // 0x10(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortRiftSlotStatus               SlotStatus;                                        // 0x18(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_23EF[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x20 (0x20 - 0x0)
// ScriptStruct FortniteGame.ProxyGameplayCueDamagePhysical
struct FProxyGameplayCueDamagePhysical
{
public:
	float                                        ProxyGameplayCueDamagePhysicalMagnitude;           // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_23F0[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGameplayEffectContextHandle          EffectContext;                                     // 0x8(0x18)(NativeAccessSpecifierPublic)
};

// 0x4 (0x4 - 0x0)
// ScriptStruct FortniteGame.QuantizedBuildingAttribute
struct FQuantizedBuildingAttribute
{
public:
	float                                        Value;                                             // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.BuildingActorMinimalReplicationProxy
struct FBuildingActorMinimalReplicationProxy
{
public:
	uint8                                        Pad_23F1[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FQuantizedBuildingAttribute           BuildTime;                                         // 0x8(0x4)(NoDestructor, NativeAccessSpecifierPublic)
	struct FQuantizedBuildingAttribute           RepairTime;                                        // 0xC(0x4)(NoDestructor, NativeAccessSpecifierPublic)
	int16                                        Health;                                            // 0x10(0x2)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int16                                        MaxHealth;                                         // 0x12(0x2)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_23F2[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x28 (0x28 - 0x0)
// ScriptStruct FortniteGame.BuildingDuplicationData
struct FBuildingDuplicationData
{
public:
	class UClass*                                ClassData;                                         // 0x0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBuildingTextureData*                  TextureData;                                       // 0x8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_23F3[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x30 (0x30 - 0x0)
// ScriptStruct FortniteGame.EditorOnlyBuildingInstanceMaterialParameters
struct FEditorOnlyBuildingInstanceMaterialParameters
{
public:
	TArray<struct FScalarParameterValue>         ScalarParams;                                      // 0x0(0x10)(Edit, ZeroConstructor, DisableEditOnTemplate, Protected, NativeAccessSpecifierProtected)
	TArray<struct FVectorParameterValue>         VectorParams;                                      // 0x10(0x10)(Edit, ZeroConstructor, DisableEditOnTemplate, Protected, NativeAccessSpecifierProtected)
	TArray<struct FTextureParameterValue>        TextureParams;                                     // 0x20(0x10)(Edit, ZeroConstructor, DisableEditOnTemplate, Protected, NativeAccessSpecifierProtected)
};

// 0x40 (0x40 - 0x0)
// ScriptStruct FortniteGame.RandomDayphaseFX
struct FRandomDayphaseFX
{
public:
	class UParticleSystem*                       ParticleSystem;                                    // 0x0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UParticleSystem*>               AltParticleSystems;                                // 0x8(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<enum class EFortDayPhase>             RequiredDayphases;                                 // 0x18(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	float                                        ChanceToSpawnFX;                                   // 0x28(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EDetailMode                       DetailMode;                                        // 0x2C(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_23F4[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        MaxDrawDistance;                                   // 0x30(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bRandomSelectionAlreadyHappened;                   // 0x34(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_23F5[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UParticleSystemComponent*              SpawnedComponent;                                  // 0x38(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x20 (0x20 - 0x0)
// ScriptStruct FortniteGame.BuildingNavObstacle
struct FBuildingNavObstacle
{
public:
	struct FBox                                  LocalBounds;                                       // 0x0(0x1C)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	enum class EBuildingNavObstacleType          ObstacleType;                                      // 0x1C(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_23F6[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0xC (0xC - 0x0)
// ScriptStruct FortniteGame.ChosenQuotaInfo
struct FChosenQuotaInfo
{
public:
	int32                                        LootTier;                                          // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  LootTierKey;                                       // 0x4(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.AnimatingMaterialPair
struct FAnimatingMaterialPair
{
public:
	class UMaterialInterface*                    Original;                                          // 0x0(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInterface*                    Override;                                          // 0x8(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x60 (0x60 - 0x0)
// ScriptStruct FortniteGame.MeshSet
struct FMeshSet
{
public:
	float                                        Weight;                                            // 0x0(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortResourceType                 ResourceType;                                      // 0x4(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bDoNotBlockBuildings : 1;                          // Mask : 0x1 0x5(0x1)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bDestroyOnPlayerBuildingPlacement : 1;             // Mask : 0x2 0x5(0x1)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bNeedsDamageOverlay : 1;                           // Mask : 0x4 0x5(0x1)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_23F7[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UStaticMesh*                           BaseMesh;                                          // 0x8(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystem*                       BreakEffect;                                       // 0x10(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystem*                       DeathParticles;                                    // 0x18(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  DeathParticleSocketName;                           // 0x20(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundBase*                            DeathSound;                                        // 0x28(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystem*                       ConstructedEffect;                                 // 0x30(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMesh*                           SearchedMesh;                                      // 0x38(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FCurveTableRowHandle                  SearchSpeed;                                       // 0x40(0x10)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LootNoiseRange;                                    // 0x50(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               LootSpawnLocation;                                 // 0x54(0xC)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.TierMeshSets
struct FTierMeshSets
{
public:
	int32                                        Tier;                                              // 0x0(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_23F8[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FMeshSet>                      MeshSets;                                          // 0x8(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// 0xA8 (0xA8 - 0x0)
// ScriptStruct FortniteGame.LogicalBuilding
struct FLogicalBuilding
{
public:
	uint8                                        Pad_23F9[0xA8];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x1 (0x1 - 0x0)
// ScriptStruct FortniteGame.BuildingNavigationCellInfo
struct FBuildingNavigationCellInfo
{
public:
	uint8                                        Pad_23FA[0x1];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0xC (0xC - 0x0)
// ScriptStruct FortniteGame.BuildingSupportCellIndex
struct FBuildingSupportCellIndex
{
public:
	int32                                        X;                                                 // 0x0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Y;                                                 // 0x4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Z;                                                 // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.NeighboringWallInfo
struct FNeighboringWallInfo
{
public:
	TWeakObjectPtr<class ABuildingSMActor>       NeighboringActor;                                  // 0x0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FBuildingSupportCellIndex             NeighboringCellIdx;                                // 0x8(0xC)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EStructuralWallPosition           WallPosition;                                      // 0x14(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_23FB[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x14 (0x14 - 0x0)
// ScriptStruct FortniteGame.NeighboringCenterCellInfo
struct FNeighboringCenterCellInfo
{
public:
	TWeakObjectPtr<class ABuildingSMActor>       NeighboringActor;                                  // 0x0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FBuildingSupportCellIndex             NeighboringCellIdx;                                // 0x8(0xC)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.NeighboringFloorInfo
struct FNeighboringFloorInfo
{
public:
	TWeakObjectPtr<class ABuildingSMActor>       NeighboringActor;                                  // 0x0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FBuildingSupportCellIndex             NeighboringCellIdx;                                // 0x8(0xC)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EStructuralFloorPosition          FloorPosition;                                     // 0x14(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_23FC[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x30 (0x30 - 0x0)
// ScriptStruct FortniteGame.BuildingNeighboringActorInfo
struct FBuildingNeighboringActorInfo
{
public:
	TArray<struct FNeighboringWallInfo>          NeighboringWallInfos;                              // 0x0(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FNeighboringFloorInfo>         NeighboringFloorInfos;                             // 0x10(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FNeighboringCenterCellInfo>    NeighboringCenterCellInfos;                        // 0x20(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x4 (0x4 - 0x0)
// ScriptStruct FortniteGame.BuildingGridActorFilter
struct FBuildingGridActorFilter
{
public:
	bool                                         bIncludeWalls;                                     // 0x0(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIncludeFloors;                                    // 0x1(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIncludeFloorInTop;                                // 0x2(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIncludeCenterCell;                                // 0x3(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x1C (0x1C - 0x0)
// ScriptStruct FortniteGame.BuildingValueRules
struct FBuildingValueRules
{
public:
	int32                                        CellsAbove;                                        // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        CellsBelow;                                        // 0x4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        CellHorizontalRadius;                              // 0x8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DistanceFromObjectiveWeight;                       // 0xC(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AttackWeight;                                      // 0x10(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        StructuralWeight;                                  // 0x14(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TrapWeight;                                        // 0x18(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.TimeOfDayBlueprintDefaultVariables
struct FTimeOfDayBlueprintDefaultVariables
{
public:
	bool                                         bDisableTODLightsAndMaterialEmissiveValues;        // 0x0(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDisableStaticMeshShadowCastingWhenLightsAreActive; // 0x1(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bUseAnAlternateShadowMeshWhenTheLightIsOff;        // 0x2(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_23FD[0x5];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UStaticMesh*                           AlternateShadowStaticMesh;                         // 0x8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        VolumetricLightScatteringIntensity;                // 0x10(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bCastVolumetricShadows;                            // 0x14(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_23FE[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.PointConfiguration
struct FPointConfiguration
{
public:
	TArray<struct FVector>                       PointLocations;                                    // 0x0(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NativeAccessSpecifierPublic)
};

// 0x8 (0x8 - 0x0)
// ScriptStruct FortniteGame.WaypointIndex
struct FWaypointIndex
{
public:
	int32                                        WaypointGroup;                                     // 0x0(0x4)(ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        WaypointIndex;                                     // 0x4(0x4)(ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0xC (0xC - 0x0)
// ScriptStruct FortniteGame.MOBATurretPrioritySetting
struct FMOBATurretPrioritySetting
{
public:
	int32                                        AIPriority;                                        // 0x0(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        PlayerPriority;                                    // 0x4(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        BuildingPriority;                                  // 0x8(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x30 (0x30 - 0x0)
// ScriptStruct FortniteGame.FortBounceData
struct FFortBounceData
{
public:
	float                                        StartTime;                                         // 0x0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BounceValue;                                       // 0x4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Radius;                                            // 0x8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          DeformationVector;                                 // 0xC(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          DeformationCenter;                                 // 0x1C(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortBounceType                   BounceType;                                        // 0x2C(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bLocalInstigator;                                  // 0x2D(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_23FF[0x2];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x28 (0x28 - 0x0)
// ScriptStruct FortniteGame.ClimbLinkData
struct FClimbLinkData
{
public:
	uint8                                        Pad_2400[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	uint32                                       UniqueLinkId;                                      // 0x20(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2401[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x30 (0x30 - 0x0)
// ScriptStruct FortniteGame.CustomPartMaterialOverrideData
struct FCustomPartMaterialOverrideData
{
public:
	int32                                        MaterialOverrideIndex;                             // 0x0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2402[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftObjectPtr<class UMaterialInterface>     OverrideMaterial;                                  // 0x8(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x1C (0x1C - 0x0)
// ScriptStruct FortniteGame.CustomPartVectorParameter
struct FCustomPartVectorParameter
{
public:
	int32                                        MaterialIndexForVectorParameter;                   // 0x0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  VectorParameterNameForMaterial;                    // 0x4(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          VectorOverride;                                    // 0xC(0x10)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.CustomPartScalarParameter
struct FCustomPartScalarParameter
{
public:
	int32                                        MaterialIndexForScalarParameter;                   // 0x0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  ScalarParameterNameForMaterial;                    // 0x4(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ScalarOverride;                                    // 0xC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x38 (0x38 - 0x0)
// ScriptStruct FortniteGame.CustomPartTextureParameter
struct FCustomPartTextureParameter
{
public:
	int32                                        MaterialIndexForTextureParameter;                  // 0x0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  TextureParameterNameForMaterial;                   // 0x4(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2403[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftObjectPtr<class UTexture>               TextureOverride;                                   // 0x10(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};

// 0x50 (0x50 - 0x0)
// ScriptStruct FortniteGame.GameplayTagAnimationData
struct FGameplayTagAnimationData
{
public:
	struct FGameplayTagContainer                 GameplayTags;                                      // 0x0(0x20)(Edit, NativeAccessSpecifierPrivate)
	enum class EFortCustomGender                 ValidGenders;                                      // 0x20(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2404[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftObjectPtr<class UAnimMontage>           AnimMontage;                                       // 0x28(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.GameplayTagAnimations
struct FGameplayTagAnimations
{
public:
	TArray<struct FGameplayTagAnimationData>     GameplayTagAnimData;                               // 0x0(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
};

// 0x20 (0x20 - 0x0)
// ScriptStruct FortniteGame.BlackWidowLegSinAnimationScalar
struct FBlackWidowLegSinAnimationScalar
{
public:
	bool                                         bUseConstantValue;                                 // 0x0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2405[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        ConstantValue;                                     // 0x4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TimeOffset;                                        // 0x8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FrequencyOffset;                                   // 0xC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SinOffset;                                         // 0x10(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ResultMultiplier;                                  // 0x14(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             MappedRangeOutput;                                 // 0x18(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x60 (0x60 - 0x0)
// ScriptStruct FortniteGame.BlackWidowLegSinAnimationRotator
struct FBlackWidowLegSinAnimationRotator
{
public:
	struct FBlackWidowLegSinAnimationScalar      RollAnimation;                                     // 0x0(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	struct FBlackWidowLegSinAnimationScalar      PitchAnimation;                                    // 0x20(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	struct FBlackWidowLegSinAnimationScalar      YawAnimation;                                      // 0x40(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.ColorSwatchPair
struct FColorSwatchPair
{
public:
	class FName                                  ColorName;                                         // 0x0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          ColorValue;                                        // 0x8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x40 (0x40 - 0x0)
// ScriptStruct FortniteGame.DeferredActorData
struct FDeferredActorData
{
public:
	class ABuildingActor*                        BuildingActor;                                     // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        ActorRecordIndex;                                  // 0x8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2406[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTransform                            BuildingTransform;                                 // 0x10(0x30)(IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
};

// 0x24 (0x24 - 0x0)
// ScriptStruct FortniteGame.ViewOffsetData
struct FViewOffsetData
{
public:
	struct FVector                               OffsetHigh;                                        // 0x0(0xC)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               OffsetMid;                                         // 0xC(0xC)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               OffsetLow;                                         // 0x18(0xC)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x20 (0x20 - 0x0)
// ScriptStruct FortniteGame.PenetrationAvoidanceFeeler
struct FPenetrationAvoidanceFeeler
{
public:
	struct FRotator                              AdjustmentRot;                                     // 0x0(0xC)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	float                                        WorldWeight;                                       // 0xC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PawnWeight;                                        // 0x10(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Extent;                                            // 0x14(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        TraceInterval;                                     // 0x18(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        FramesUntilNextTrace;                              // 0x1C(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x28 (0x28 - 0x0)
// ScriptStruct FortniteGame.AbilityToolSpawnParameters
struct FAbilityToolSpawnParameters
{
public:
	TSubclassOf<class ABuildingActor>            SpawnClass;                                        // 0x0(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               Location;                                          // 0x8(0xC)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                              Rotation;                                          // 0x14(0xC)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	class ABuildingSMActor*                      AttachedToActor;                                   // 0x20(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.AbilityKitItem
struct FAbilityKitItem
{
public:
	class UFortItemDefinition*                   Item;                                              // 0x0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Quantity;                                          // 0x8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortReplenishmentType            Replenishment;                                     // 0xC(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2407[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.GameplayEffectApplicationInfoHard
struct FGameplayEffectApplicationInfoHard
{
public:
	TSubclassOf<class UGameplayEffect>           GameplayEffect;                                    // 0x0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Level;                                             // 0x8(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2408[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.DebugNativeActionInfo
struct FDebugNativeActionInfo
{
public:
	uint8                                        Pad_2409[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x2 (0x2 - 0x0)
// ScriptStruct FortniteGame.GameplayAbilityRepSharedAnim_Base
struct FGameplayAbilityRepSharedAnim_Base
{
public:
	enum class EFortSharedAnimationState         AnimState;                                         // 0x0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        MontageSectionToPlay;                              // 0x1(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x6 (0x8 - 0x2)
// ScriptStruct FortniteGame.GameplayAbilityRepSharedAnim_Index
struct FGameplayAbilityRepSharedAnim_Index : public FGameplayAbilityRepSharedAnim_Base
{
public:
	uint8                                        Pad_240A[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        MontageIndex;                                      // 0x4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0xE (0x10 - 0x2)
// ScriptStruct FortniteGame.GameplayAbilityRepSharedAnim
struct FGameplayAbilityRepSharedAnim : public FGameplayAbilityRepSharedAnim_Base
{
public:
	uint8                                        Pad_240B[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UAnimMontage*                          AnimMontage;                                       // 0x8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x28 (0x28 - 0x0)
// ScriptStruct FortniteGame.ReplicatedMontagePair
struct FReplicatedMontagePair
{
public:
	class UAnimMontage*                          Montage1;                                          // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                          Montage2;                                          // 0x8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  Section1;                                          // 0x10(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  Section2;                                          // 0x18(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int8                                         RepIndex;                                          // 0x20(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_240C[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.AttributeInfo
struct FAttributeInfo
{
public:
	uint8                                        Pad_240D[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x28 (0x28 - 0x0)
// ScriptStruct FortniteGame.TokenAttributePair
struct FTokenAttributePair
{
public:
	struct FGameplayTag                          Token;                                             // 0x0(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayAttribute                    Attribute;                                         // 0x8(0x20)(Edit, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x40 (0x40 - 0x0)
// ScriptStruct FortniteGame.FortGameplayEffectModifierDescription
struct FFortGameplayEffectModifierDescription
{
public:
	struct FGameplayAttribute                    ModAttribute;                                      // 0x0(0x20)(HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                  ModDescription;                                    // 0x20(0x18)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	bool                                         bIsBuff;                                           // 0x38(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortAttributeDisplay             MagnitudeFormat;                                   // 0x39(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortStatDisplayType              DisplayType;                                       // 0x3A(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_240E[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        Magnitude;                                         // 0x3C(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x50 (0x50 - 0x0)
// ScriptStruct FortniteGame.FortGameplayEffectDescription
struct FFortGameplayEffectDescription
{
public:
	class FText                                  EffectDisplayName;                                 // 0x0(0x18)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class FText                                  EffectWrittenDescription;                          // 0x18(0x18)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	TArray<struct FFortGameplayEffectModifierDescription> ModDescriptions;                                   // 0x30(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class FText>                          GrantedTagDescriptions;                            // 0x40(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x48 (0x48 - 0x0)
// ScriptStruct FortniteGame.FortAbilityTagRelationship
struct FFortAbilityTagRelationship
{
public:
	struct FGameplayTag                          AbilityTag;                                        // 0x0(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                 AbilityTagsToBlock;                                // 0x8(0x20)(Edit, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                 AbilityTagsToCancel;                               // 0x28(0x20)(Edit, NativeAccessSpecifierPublic)
};

// 0x40 (0x40 - 0x0)
// ScriptStruct FortniteGame.FortTargetFilter
struct FFortTargetFilter
{
public:
	enum class EFortTargetSelectionFilter        ActorTypeFilter;                                   // 0x0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_240F[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UClass*                                ActorClassFilter;                                  // 0x8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bExcludeInstigator : 1;                            // Mask : 0x1 0x10(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bUseTrapsOwningPawnAsInstigator : 1;               // Mask : 0x2 0x10(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bExcludeRequester : 1;                             // Mask : 0x4 0x10(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bExcludeAllAttachedToInstigator : 1;               // Mask : 0x8 0x10(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bExcludeAthenaVehicleOfInstigator : 1;             // Mask : 0x10 0x10(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bExcludeAllAttachedToRequester : 1;                // Mask : 0x20 0x10(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bExcludePawnFriends : 1;                           // Mask : 0x40 0x10(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bExcludeFriendlyAI : 1;                            // Mask : 0x80 0x10(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bExcludePawnEnemies : 1;                           // Mask : 0x1 0x11(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bExcludeNonPawnFriends : 1;                        // Mask : 0x2 0x11(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bExcludeNonPawnEnemies : 1;                        // Mask : 0x4 0x11(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bConsiderFriendlyFireWhenExcludingFriends : 1;     // Mask : 0x8 0x11(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bExcludeDBNOPawns : 1;                             // Mask : 0x10 0x11(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bExcludeWaterVolumes : 1;                          // Mask : 0x20 0x11(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bExcludeAthenaVehicle : 1;                         // Mask : 0x40 0x11(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bExcludeAthenaVehicleFromObstructionChecks : 1;    // Mask : 0x80 0x11(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bExcludeWithoutNavigationCorridor : 1;             // Mask : 0x1 0x12(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bExcludeNonPlayerBuiltPieces : 1;                  // Mask : 0x2 0x12(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bExcludePlayerBuiltPieces : 1;                     // Mask : 0x4 0x12(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bExcludeNonBGABuildings : 1;                       // Mask : 0x8 0x12(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bExcludeNonBlockingHits : 1;                       // Mask : 0x10 0x12(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bExcludeProjectiles : 1;                           // Mask : 0x20 0x12(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bTraceComplexCollision : 1;                        // Mask : 0x40 0x12(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2410[0x5];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGameplayTagContainer                 ExclusionGameplayTags;                             // 0x18(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	uint8                                        bPropagateToVehiclePassengers : 1;                 // Mask : 0x1 0x38(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2411[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x100 (0x100 - 0x0)
// ScriptStruct FortniteGame.FortAbilityTargetSelection
struct FFortAbilityTargetSelection
{
public:
	enum class EFortTargetSelectionShape         Shape;                                             // 0x0(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2412[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                CustomShapeComponentName;                          // 0x8(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortTargetSelectionTestType      TestType;                                          // 0x18(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortAbilityTargetingSource       PrimarySource;                                     // 0x19(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortAbilityTargetingSource       SecondarySource;                                   // 0x1A(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2413[0x5];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FScalableFloat                        Range;                                             // 0x20(0x20)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FVector                               HalfExtents;                                       // 0x40(0xC)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2414[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FScalableFloat                        ConeYawAngle;                                      // 0x50(0x20)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FScalableFloat                        ConePitchAngle;                                    // 0x70(0x20)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FScalableFloat                        ConeMinRadius;                                     // 0x90(0x20)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FFortTargetFilter                     TargetFilter;                                      // 0xB0(0x40)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	bool                                         bExcludeObstructedByWorld;                         // 0xF0(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShouldAttachedActorsObstructTarget;               // 0xF1(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bCreateHitResultWhenNoTargetsFound;                // 0xF2(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bUseProjectileRotationForDamageZones;              // 0xF3(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortAbilityTargetSelectionUsage  TargetSelectionUsage;                              // 0xF4(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2415[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        MaxTargets;                                        // 0xF8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2416[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x20 (0x20 - 0x0)
// ScriptStruct FortniteGame.FortAbilityTargetSelectionList
struct FFortAbilityTargetSelectionList
{
public:
	TArray<struct FFortAbilityTargetSelection>   List;                                              // 0x0(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	uint8                                        bStopAtFirstSuccess : 1;                           // Mask : 0x1 0x10(0x1)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bKeepCheckingListOnIndestructibleHit : 1;          // Mask : 0x2 0x10(0x1)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bUseWeaponRanges : 1;                              // Mask : 0x4 0x10(0x1)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bUseMaxYawAngleToTarget : 1;                       // Mask : 0x8 0x10(0x1)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2417[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        MaxYawAngleToTarget;                               // 0x14(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2418[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.VisibilityTestPoint
struct FVisibilityTestPoint
{
public:
	struct FVector                               Location;                                          // 0x0(0xC)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2419[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UPrimitiveComponent*                   Component;                                         // 0x10(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.FortAbilityCanHitParameters
struct FFortAbilityCanHitParameters
{
public:
	uint8                                        Pad_241A[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x20 (0x20 - 0x0)
// ScriptStruct FortniteGame.AbilityTrackedActorSettings
struct FAbilityTrackedActorSettings
{
public:
	struct FScalableFloat                        MaximumTrackedActors;                              // 0x0(0x20)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// 0xC (0xC - 0x0)
// ScriptStruct FortniteGame.AbilityTrackedActorEntry
struct FAbilityTrackedActorEntry
{
public:
	uint8                                        Pad_241B[0xC];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x8 (0x98 - 0x90)
// ScriptStruct FortniteGame.FortGameplayAbilityTargetData_SingleTargetHit
struct FFortGameplayAbilityTargetData_SingleTargetHit : public FGameplayAbilityTargetData_SingleTargetHit
{
public:
	int32                                        CartridgeID;                                       // 0x90(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        WeaponInfo;                                        // 0x94(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x40 (0x40 - 0x0)
// ScriptStruct FortniteGame.FortConditionalIncludeTags
struct FFortConditionalIncludeTags
{
public:
	struct FGameplayTagContainer                 ConditionTags;                                     // 0x0(0x20)(Edit, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                 IncludeTags;                                       // 0x20(0x20)(Edit, NativeAccessSpecifierPublic)
};

// 0x58 (0xC8 - 0x70)
// ScriptStruct FortniteGame.FortGameplayEffectContext
struct FFortGameplayEffectContext : public FGameplayEffectContext
{
public:
	bool                                         bIsFatalHit;                                       // 0x70(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsCriticalHit;                                    // 0x71(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsDiceCritical;                                   // 0x72(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsFullBodyHit;                                    // 0x73(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        KnockbackMagnitude;                                // 0x74(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        KnockbackZAngle;                                   // 0x78(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        StunTime;                                          // 0x7C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ChargeMagnitude;                                   // 0x80(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_241C[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGameplayTagContainer                 TooltipTags;                                       // 0x88(0x20)(NativeAccessSpecifierPublic)
	int32                                        CartridgeID;                                       // 0xA8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGuid                                 ItemGuid;                                          // 0xAC(0x10)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class UObject>                DamageSourceObject;                                // 0xBC(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SourceLevel;                                       // 0xC4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
};

// 0x28 (0x28 - 0x0)
// ScriptStruct FortniteGame.GoalSelectionQueryInfo
struct FGoalSelectionQueryInfo
{
public:
	class UEnvQuery*                             GoalSelectionQuery;                                // 0x0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                 RequiredGameplayTags;                              // 0x8(0x20)(Edit, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.AIPawnUpdateInfo
struct FAIPawnUpdateInfo
{
public:
	class AFortAIPawn*                           AIPawn;                                            // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_241D[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x50 (0x50 - 0x0)
// ScriptStruct FortniteGame.FortAIEncounterRequirements
struct FFortAIEncounterRequirements
{
public:
	enum class EFortMissionType                  AssociatedMissionType;                             // 0x0(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_241E[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGameplayTagQuery                     TagQuery;                                          // 0x8(0x48)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
};

// 0x60 (0x60 - 0x0)
// ScriptStruct FortniteGame.FortAILootDropModifiers
struct FFortAILootDropModifiers
{
public:
	struct FFortAIEncounterRequirements          Requirements;                                      // 0x0(0x50)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<struct FDataTableRowHandle>           LootDropModifierRows;                              // 0x50(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// 0x30 (0x38 - 0x8)
// ScriptStruct FortniteGame.FortAILootDropModifierRow
struct FFortAILootDropModifierRow : public FTableRowBase
{
public:
	int32                                        Priority;                                          // 0x8(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ItemDropChanceMultiplier;                          // 0xC(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  WorldItemLootTierGroup;                            // 0x10(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                 AITagsContainer;                                   // 0x18(0x20)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// 0x40 (0x48 - 0x8)
// ScriptStruct FortniteGame.FortAIBaseLootDropRow
struct FFortAIBaseLootDropRow : public FTableRowBase
{
public:
	int32                                        Priority;                                          // 0x8(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ItemDropChance;                                    // 0xC(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  WorldItemLootTierGroup;                            // 0x10(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  WorldItemInstancedLootTierGroup;                   // 0x18(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  AccountItemLootTierGroup;                          // 0x20(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                 AITagsContainer;                                   // 0x28(0x20)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.FortPendingStoppedEncounterData
struct FFortPendingStoppedEncounterData
{
public:
	class UFortAIEncounterInfo*                  Encounter;                                         // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortObjectiveStatus              ObjectiveStatus;                                   // 0x8(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bForceDestroyAI;                                   // 0x9(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEncounterCompletedSuccessfully;                   // 0xA(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_241F[0x5];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x58 (0x58 - 0x0)
// ScriptStruct FortniteGame.FortAIEncounterPawnDifficultyLevelModifier
struct FFortAIEncounterPawnDifficultyLevelModifier
{
public:
	struct FGameplayTagQuery                     EncounterTagRequirementsQuery;                     // 0x0(0x48)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FCurveTableRowHandle                  DifficultyLevelModifierCurve;                      // 0x48(0x10)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x60 (0x60 - 0x0)
// ScriptStruct FortniteGame.FortAISpawnGroupUpgradeData
struct FFortAISpawnGroupUpgradeData
{
public:
	TSubclassOf<class UFortAISpawnGroupUpgrade>  SpawnGroupUpgrade;                                 // 0x0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UFortAISpawnGroupUpgradeProbabilities> UpgradeProbabilities;                              // 0x8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UFortAISpawnGroupCapsCategorySet> SpawnGroupCapsCategories;                          // 0x10(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTagQuery                     EncounterTagRequirementsQuery;                     // 0x18(0x48)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
};

// 0x48 (0x48 - 0x0)
// ScriptStruct FortniteGame.FortAIPawnUpgradeData
struct FFortAIPawnUpgradeData
{
public:
	struct FCurveTableRowHandle                  SpawnPointsMultiplierCurve;                        // 0x0(0x10)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FCurveTableRowHandle                  LifespanMultiplierCurve;                           // 0x10(0x10)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FCurveTableRowHandle                  ScoreMultiplierCurve;                              // 0x20(0x10)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFortGameplayModifierItemDefinition*   ModifierDefinition;                                // 0x30(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UFortGameplayModifierItemDefinition*> AdditionalModifiers;                               // 0x38(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
};

// 0x58 (0x58 - 0x0)
// ScriptStruct FortniteGame.FortAIPawnUpgrade
struct FFortAIPawnUpgrade
{
public:
	struct FGameplayTagQuery                     TagQuery;                                          // 0x0(0x48)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<struct FFortAIPawnUpgradeData>        PawnUpgradeDataPerPlayerCount;                     // 0x48(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// 0x58 (0x58 - 0x0)
// ScriptStruct FortniteGame.FortAIPawnUpgradeProbability
struct FFortAIPawnUpgradeProbability
{
public:
	struct FGameplayTagQuery                     TagQuery;                                          // 0x0(0x48)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FCurveTableRowHandle                  UpgradeProbability;                                // 0x48(0x10)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x40 (0x40 - 0x0)
// ScriptStruct FortniteGame.FortAIEncounterSpawnPointsProfile
struct FFortAIEncounterSpawnPointsProfile
{
public:
	struct FGameplayTagContainer                 EncounterTypeTags;                                 // 0x0(0x20)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<struct FCurveTableRowHandle>          MaxSpawnPointsPerPlayerCount;                      // 0x20(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<struct FCurveTableRowHandle>          MinSpawnPointsPerPlayerCount;                      // 0x30(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// 0x20 (0x20 - 0x0)
// ScriptStruct FortniteGame.FortAIEncounterSpawnGroupCap
struct FFortAIEncounterSpawnGroupCap
{
public:
	struct FCurveTableRowHandle                  MinSpawnGroupNumberCap;                            // 0x0(0x10)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FCurveTableRowHandle                  MaxSpawnGroupNumberCap;                            // 0x10(0x10)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x140 (0x140 - 0x0)
// ScriptStruct FortniteGame.FortAIEncounterSpawnGroupCapsCategory
struct FFortAIEncounterSpawnGroupCapsCategory
{
public:
	struct FGameplayTagQuery                     TagQuery;                                          // 0x0(0x48)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	bool                                         bApplyGroupPopulationCurveToCategoryMax;           // 0x48(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2420[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FCurveTableRowHandle                  InitialSpawnGroupAvailabilityDelaySeconds;         // 0x50(0x10)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FCurveTableRowHandle                  SpawnGroupAvailabilityDelaySeconds;                // 0x60(0x10)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTagQuery                     UnlockingTagQuery;                                 // 0x70(0x48)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<struct FFortAIEncounterSpawnGroupCap> SpawnGroupCapsPerPlayerCount;                      // 0xB8(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	float                                        InitialSpawnGroupAvailabilityTime;                 // 0xC8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        NumActiveCategorySpawnGroups;                      // 0xCC(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<float>                                SpawnGroupAvailabilityTimes;                       // 0xD0(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	int32                                        NumSpawnGroupAvailable;                            // 0xE0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2421[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UObject*                               CategorySource;                                    // 0xE8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2422[0x50];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x30 (0x30 - 0x0)
// ScriptStruct FortniteGame.FortAIEncounterSpawnGroupCapsProfile
struct FFortAIEncounterSpawnGroupCapsProfile
{
public:
	struct FGameplayTagContainer                 EncounterTypeTags;                                 // 0x0(0x20)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<struct FFortAIEncounterSpawnGroupCapsCategory> PopulationCategories;                              // 0x20(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.FortEncounterPawnNumberCaps
struct FFortEncounterPawnNumberCaps
{
public:
	bool                                         bApplyPawnNumberCaps;                              // 0x0(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2423[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FCurveTableRowHandle>          PawnCapsPerPlayerCount;                            // 0x8(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// 0x40 (0x40 - 0x0)
// ScriptStruct FortniteGame.FortPlayerPerformanceEstimateSettings
struct FFortPlayerPerformanceEstimateSettings
{
public:
	struct FCurveTableRowHandle                  PlayerPerformanceEstimateTransformMin;             // 0x0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FCurveTableRowHandle                  PlayerPerformanceEstimateTransformOrigin;          // 0x10(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FCurveTableRowHandle                  PlayerPerformanceEstimateTransformMax;             // 0x20(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        EncounterPlayerPerformanceWeight;                  // 0x30(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PreviousWavePlayerPerformanceWeight;               // 0x34(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CampaignPlayerPerformanceWeight;                   // 0x38(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2424[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x68 (0x68 - 0x0)
// ScriptStruct FortniteGame.FortAIEncounterPIDController
struct FFortAIEncounterPIDController
{
public:
	float                                        ProportionalGain;                                  // 0x0(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        IntegralGain;                                      // 0x4(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DerivativeGain;                                    // 0x8(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2425[0x5C];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x30 (0x30 - 0x0)
// ScriptStruct FortniteGame.FortAIEncounterPIDControllerSettings
struct FFortAIEncounterPIDControllerSettings
{
public:
	struct FCurveTableRowHandle                  ProportionalGain;                                  // 0x0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FCurveTableRowHandle                  IntegralGain;                                      // 0x10(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FCurveTableRowHandle                  DerivativeGain;                                    // 0x20(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0xC (0xC - 0x0)
// ScriptStruct FortniteGame.UtilityContribution
struct FUtilityContribution
{
public:
	enum class EFortCombatFactors                ContributingFactor;                                // 0x0(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortAIDirectorFactor             ContributingAIDirectorFactor;                      // 0x1(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2426[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        MaxContribution;                                   // 0x4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortFactorContributionType       ContributionType;                                  // 0x8(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2427[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x40 (0x40 - 0x0)
// ScriptStruct FortniteGame.UtilityData
struct FUtilityData
{
public:
	TArray<struct FUtilityContribution>          ContributingFactors;                               // 0x0(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	float                                        ContributionsTotal;                                // 0x10(0x4)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bApplyRecentSelectionPenalty;                      // 0x14(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2428[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        RecentlySelectedPenaltyPercentage;                 // 0x18(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PenaltyFallOffRate;                                // 0x1C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                DebugGraphName;                                    // 0x20(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          DebugGraphColor;                                   // 0x30(0x10)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x8 (0x8 - 0x0)
// ScriptStruct FortniteGame.UtilityTypeFloatPair
struct FUtilityTypeFloatPair
{
public:
	enum class EFortAIUtility                    Utility;                                           // 0x0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2429[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        Value;                                             // 0x4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x48 (0x48 - 0x0)
// ScriptStruct FortniteGame.IntensityContribution
struct FIntensityContribution
{
public:
	enum class EFortCombatFactors                CombatFactor;                                      // 0x0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortAIDirectorFactor             ContributingAIDirectorFactor;                      // 0x1(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_242A[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        MaxContribution;                                   // 0x4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bModifyContributionByCompletionPercentage;         // 0x8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_242B[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FCurveTableRowHandle                  CompletionPercentageInitialMultiplier;             // 0x10(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FCurveTableRowHandle                  CompletionPercentageToStartReducingMultiplier;     // 0x20(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FCurveTableRowHandle                  CompletionPercentageToStopReducingMultiplier;      // 0x30(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bModifyByNumberOfCriticalEncounterGoals;           // 0x40(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_242C[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x30 (0x30 - 0x0)
// ScriptStruct FortniteGame.IntensityData
struct FIntensityData
{
public:
	TArray<struct FIntensityContribution>        ContributingFactors;                               // 0x0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	float                                        ContributionsTotal;                                // 0x10(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_242D[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UBuildingEditModeMetadata*>     ExceptionEditModes;                                // 0x18(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	float                                        ExceptionEditModeWeight;                           // 0x28(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_242E[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0xB8 (0xB8 - 0x0)
// ScriptStruct FortniteGame.FortAISpawnGroupUpgradeUIData
struct FFortAISpawnGroupUpgradeUIData
{
public:
	bool                                         bAlwaysDisplayHealthBar;                           // 0x0(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bOverrideHealthBarColor;                           // 0x1(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_242F[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FSlateBrush                           UpgradeIcon;                                       // 0x8(0x88)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FLinearColor                          HealthBarColorOverride;                            // 0x90(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                  UpgradeName;                                       // 0xA0(0x18)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// 0x1C (0x1C - 0x0)
// ScriptStruct FortniteGame.FortAIPawnLootDropData
struct FFortAIPawnLootDropData
{
public:
	float                                        LootDropChance;                                    // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  WorldItemTierGroup;                                // 0x4(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  WorldItemInstancedTierGroup;                       // 0xC(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  AccountItemTierGroup;                              // 0x14(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x190 (0x190 - 0x0)
// ScriptStruct FortniteGame.PendingSpawnInfo
struct FPendingSpawnInfo
{
public:
	TSubclassOf<class AFortAIPawn>               PawnClassToSpawn;                                  // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                SpawnPoint;                                        // 0x8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               SpawnLocation;                                     // 0x10(0xC)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                              SpawnRotation;                                     // 0x1C(0xC)(ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	class AActor*                                SpawnSource;                                       // 0x28(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bSpawnedFromExternalSpawner;                       // 0x30(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2430[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        SpawnSetIndex;                                     // 0x34(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortressAIType                   AIType;                                            // 0x38(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2431[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AFortPlayerController*                 TargetPlayer;                                      // 0x40(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFortAIEncounterInfo*                  EncounterInfo;                                     // 0x48(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DifficultyLevel;                                   // 0x50(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2432[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UFortAISpawnGroup*                     SpawnGroup;                                        // 0x58(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGuid                                 SpawnGroupGuid;                                    // 0x60(0x10)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        EnemyIndexInSpawnGroup;                            // 0x70(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TimeToSpawn;                                       // 0x74(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGuid                                 PendingSpawnInfoGuid;                              // 0x78(0x10)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIgnoreCollision;                                  // 0x88(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bKillBuildingActorsAtSpawnLocation;                // 0x89(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2433[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        EncounterAILifespan;                               // 0x8C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ScoreMultiplier;                                   // 0x90(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDebugSpawnedAI;                                   // 0x94(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2434[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UFortAbilitySet*>               AbilitySetsToGrantOnSpawn;                         // 0x98(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class UFortGameplayModifierItemDefinition*> ModifiersToApplyOnSpawn;                           // 0xA8(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	struct FFortAISpawnGroupUpgradeUIData        UpgradeUIData;                                     // 0xB8(0xB8)(NativeAccessSpecifierPublic)
	struct FFortAIPawnLootDropData               LootDropData;                                      // 0x170(0x1C)(NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_2435[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0xC (0xC - 0x0)
// ScriptStruct FortniteGame.FortAIDirectorFactorContribution
struct FFortAIDirectorFactorContribution
{
public:
	enum class EFortAIDirectorEvent              AIDirectorEvent;                                   // 0x0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2436[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        MaxContribution;                                   // 0x4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortAIDirectorFactorContribution ContributionType;                                  // 0x8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2437[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x20 (0x20 - 0x0)
// ScriptStruct FortniteGame.FortAIDirectorFactorData
struct FFortAIDirectorFactorData
{
public:
	enum class EFortAIDirectorFactor             AIDirectorFactor;                                  // 0x0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2438[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FFortAIDirectorFactorContribution> ContributingEvents;                                // 0x8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	float                                        MaxValue;                                          // 0x18(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2439[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x30 (0x30 - 0x0)
// ScriptStruct FortniteGame.AIDirectorEventData
struct FAIDirectorEventData
{
public:
	enum class EFortAIDirectorEvent              Event;                                             // 0x0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_243A[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FCurveTableRowHandle                  DataMax;                                           // 0x8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FCurveTableRowHandle                  CoolDownRate;                                      // 0x18(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortAIDirectorEventContribution  ContributionType;                                  // 0x28(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortAIDirectorEventParticipant   OwnerParticipantType;                              // 0x29(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_243B[0x6];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.FortGoalActorEncounterDataManagerPair
struct FFortGoalActorEncounterDataManagerPair
{
public:
	class AActor*                                GoalActor;                                         // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AFortAIDirectorDataManager*            EncounterDataManager;                              // 0x8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x1C (0x1C - 0x0)
// ScriptStruct FortniteGame.FortAIEncounterWaveProgressEstimation
struct FFortAIEncounterWaveProgressEstimation
{
public:
	float                                        SectionProgressEstimate;                           // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SectionStartTime;                                  // 0x4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LastWaveProgressUpdateTime;                        // 0x8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PeakAndFadeWavePercentage;                         // 0xC(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxAdjustmentPerSecond;                            // 0x10(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortAIWaveProgressSection        CurrentSection;                                    // 0x14(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_243C[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        NumberOfWaveSegments;                              // 0x18(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x28 (0x28 - 0x0)
// ScriptStruct FortniteGame.EncounterEnvironmentQueryInfo
struct FEncounterEnvironmentQueryInfo
{
public:
	class UEnvQuery*                             EnvironmentQuery;                                  // 0x0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FEnvNamedValue>                QueryParams;                                       // 0x8(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_243D[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bIsDirectional;                                    // 0x20(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_243E[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x58 (0x58 - 0x0)
// ScriptStruct FortniteGame.EncounterEnvironmentQueryInstance
struct FEncounterEnvironmentQueryInstance
{
public:
	struct FEncounterEnvironmentQueryInfo        EnvironmentQueryInfo;                              // 0x0(0x28)(NativeAccessSpecifierPublic)
	int32                                        QueryID;                                           // 0x28(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsWaitingForQueryResults;                         // 0x2C(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortEncounterDirection           ChosenDirection;                                   // 0x2D(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_243F[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FVector>                       QueryLocations;                                    // 0x30(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class ABuildingRift*>                 FoundRifts;                                        // 0x40(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	int32                                        NumTimesUsed;                                      // 0x50(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2440[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0xC (0xC - 0x0)
// ScriptStruct FortniteGame.FortEncounterAIDirectorFactor
struct FFortEncounterAIDirectorFactor
{
public:
	float                                        CurrentValue;                                      // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AccumulatedPeriodValue;                            // 0x4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TotalPeriodTime;                                   // 0x8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x50 (0x50 - 0x0)
// ScriptStruct FortniteGame.FortSpawnAIRequest
struct FFortSpawnAIRequest
{
public:
	struct FGuid                                 SpawnGroupInstanceGuid;                            // 0x0(0x10)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        EnemyIndex;                                        // 0x10(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               SpawnLocation;                                     // 0x14(0xC)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                              SpawnRotation;                                     // 0x20(0xC)(ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_2441[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AActor*                                SpawnPoint;                                        // 0x30(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UFortAbilitySet*>               AbilitySetsToGrantOnSpawn;                         // 0x38(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                         bIgnoreCollisionWhenSpawning;                      // 0x48(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2442[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x60 (0x60 - 0x0)
// ScriptStruct FortniteGame.FortAISpawnerData
struct FFortAISpawnerData
{
public:
	struct FGuid                                 SpawnGroupInstanceGuid;                            // 0x0(0x10)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFortSpawnAIRequest                   ReservedSpawnRequest;                              // 0x10(0x50)(NativeAccessSpecifierPublic)
};

// 0x140 (0x140 - 0x0)
// ScriptStruct FortniteGame.SpawnGroupInstanceInfo
struct FSpawnGroupInstanceInfo
{
public:
	class UFortAISpawnGroup*                     SpawnGroup;                                        // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        NumActiveAlive;                                    // 0x8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        TotalGroupCost;                                    // 0xC(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        SpawnPointsUsed;                                   // 0x10(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        NumEngaged;                                        // 0x14(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bReadyToSpawn;                                     // 0x18(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bFinishedSpawning;                                 // 0x19(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2443[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGuid                                 GroupGuid;                                         // 0x1C(0x10)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        EnemySpawnDataIndex;                               // 0x2C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TimeSelected;                                      // 0x30(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        NextEnemyToSpawnIndex;                             // 0x34(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                 UpgradeTags;                                       // 0x38(0x20)(NativeAccessSpecifierPublic)
	struct FFortAISpawnGroupUpgradeUIData        UpgradeUIData;                                     // 0x58(0xB8)(NativeAccessSpecifierPublic)
	TArray<struct FFortAIPawnUpgradeData>        PawnUpgrades;                                      // 0x110(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class UFortGameplayModifierItemDefinition*> ModifiersForAllPawns;                              // 0x120(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class AFortAIPawn*>                   PawnList;                                          // 0x130(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x4 (0x4 - 0x0)
// ScriptStruct FortniteGame.FortCurveSequenceInstanceInfo
struct FFortCurveSequenceInstanceInfo
{
public:
	uint8                                        Pad_2444[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0xC (0x10 - 0x4)
// ScriptStruct FortniteGame.FortIntensityCurveSequenceInstanceInfo
struct FFortIntensityCurveSequenceInstanceInfo : public FFortCurveSequenceInstanceInfo
{
public:
	uint8                                        Pad_2445[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UFortIntensityCurveSequence*           IntensityCurveSequence;                            // 0x8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};

// 0xC (0x10 - 0x4)
// ScriptStruct FortniteGame.FortSpawnPointsPercentageCurveSequenceInstanceInfo
struct FFortSpawnPointsPercentageCurveSequenceInstanceInfo : public FFortCurveSequenceInstanceInfo
{
public:
	uint8                                        Pad_2446[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UFortSpawnPointsPercentageCurveSequence* SpawnPointsPercentageCurveSequence;                // 0x8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};

// 0x38 (0x38 - 0x0)
// ScriptStruct FortniteGame.CurrentIntensityAnalyticsBucket
struct FCurrentIntensityAnalyticsBucket
{
public:
	uint8                                        Pad_2447[0x38];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x38 (0x40 - 0x8)
// ScriptStruct FortniteGame.FortIntensityCurve
struct FFortIntensityCurve : public FTableRowBase
{
public:
	class UCurveTable*                           IntensityCurveTable;                               // 0x8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  IntensityCurveTableRow;                            // 0x10(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        LowPlayerPerformancePeakIntensityThreshold;        // 0x18(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        NormalPlayerPerformancePeakIntensityThreshold;     // 0x1C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        HighPlayerPerformancePeakIntensityThreshold;       // 0x20(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MaxRampTime;                                       // 0x24(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        FadeEndIntensityThreshold;                         // 0x28(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        StartIntensityOffsetFloor;                         // 0x2C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        EndIntensityOffsetFloor;                           // 0x30(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        StartIntensityOffsetCeiling;                       // 0x34(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        EndIntensityOffsetCeiling;                         // 0x38(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2448[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x18 (0x20 - 0x8)
// ScriptStruct FortniteGame.FortSpawnPointsPercentageCurve
struct FFortSpawnPointsPercentageCurve : public FTableRowBase
{
public:
	class UCurveTable*                           SpawnPointsPercentageCurveTable;                   // 0x8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  SpawnPointsPercentageCurveTableRow;                // 0x10(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MaxRampTime;                                       // 0x18(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2449[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.AIEncounterSpawnGroupWeights
struct FAIEncounterSpawnGroupWeights
{
public:
	uint8                                        Pad_244A[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x8 (0x8 - 0x0)
// ScriptStruct FortniteGame.SpawnGroupProgression
struct FSpawnGroupProgression
{
public:
	class UFortAISpawnGroup*                     SpawnGroup;                                        // 0x0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x48 (0x48 - 0x0)
// ScriptStruct FortniteGame.FortAIEncounterQueryDirectionTracker
struct FFortAIEncounterQueryDirectionTracker
{
public:
	bool                                         bHasTriedPreviousDirections;                       // 0x0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_244B[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<enum class EFortEncounterDirection>   PreviousQueryDirections;                           // 0x8(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<enum class EFortEncounterDirection>   ChosenDirections;                                  // 0x18(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<enum class EFortEncounterDirection>   FailedDirections;                                  // 0x28(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<enum class EFortEncounterDirection>   AvailableDirections;                               // 0x38(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0xD0 (0xD0 - 0x0)
// ScriptStruct FortniteGame.FortAIEncounterRiftManagerInitializationData
struct FFortAIEncounterRiftManagerInitializationData
{
public:
	class UFortAIEncounterInfo*                  EncounterInfo;                                     // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFortEncounterSettings                EncounterSettings;                                 // 0x8(0x68)(NativeAccessSpecifierPublic)
	struct FEncounterEnvironmentQueryInfo        CurrentEnvironmentQueryInfo;                       // 0x70(0x28)(NativeAccessSpecifierPublic)
	struct FEncounterEnvironmentQueryInfo        FallbackEnvironmentQueryInfo;                      // 0x98(0x28)(NativeAccessSpecifierPublic)
	TSubclassOf<class ABuildingRift>             RiftClassTemplate;                                 // 0xC0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        NumRiftsToUse;                                     // 0xC8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MinRiftsToUse;                                     // 0xCC(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x20 (0x20 - 0x0)
// ScriptStruct FortniteGame.FortAIEncounterRift
struct FFortAIEncounterRift
{
public:
	int32                                        QueryID;                                           // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               RiftLocation;                                      // 0x4(0xC)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ABuildingRift*                         RiftActor;                                         // 0x10(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFortRiftReservationHandle            RiftReservationHandle;                             // 0x18(0x4)(NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_244C[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x48 (0x48 - 0x0)
// ScriptStruct FortniteGame.FortAIEncounterSpawnArea
struct FFortAIEncounterSpawnArea
{
public:
	TArray<struct FEncounterEnvironmentQueryInstance> QueryInstances;                                    // 0x0(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FFortAIEncounterRift>          PendingRifts;                                      // 0x10(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FFortAIEncounterRift>          Rifts;                                             // 0x20(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class UFortPathCostEstimator*>        PathEstimators;                                    // 0x30(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                         bIsActive;                                         // 0x40(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bUsingFallbackQuery;                               // 0x41(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortEncounterSpawnLocationManagementMode SpawnLocationManagementMode;                       // 0x42(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_244D[0x5];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.FortAIGoalInfo
struct FFortAIGoalInfo
{
public:
	TWeakObjectPtr<class AActor>                 Actor;                                             // 0x0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               Location;                                          // 0x8(0xC)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bActorAlwaysPerceived;                             // 0x14(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_244E[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x10 (0x28 - 0x18)
// ScriptStruct FortniteGame.FortAIGoal
struct FFortAIGoal : public FFortAIGoalInfo
{
public:
	TArray<class AFortAIController*>             ControllersAssignedToGoal;                         // 0x18(0x10)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
};

// 0x80 (0x80 - 0x0)
// ScriptStruct FortniteGame.AIAssignmentInfo
struct FAIAssignmentInfo
{
public:
	TWeakObjectPtr<class UFortAIAssignment>      CurrentAssignment;                                 // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FFortAIGoalInfo                       CurrentGoal;                                       // 0x8(0x18)(NoDestructor, NativeAccessSpecifierPrivate)
	float                                        TimeCurrentGoalWasChosen;                          // 0x20(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        TimeExitedLastAssignmentOfType;                    // 0x24(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_244F[0xC];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TWeakObjectPtr<class UFortAIAssignment>      PreviousAssignment;                                // 0x34(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FFortAIGoalInfo                       PreviousGoal;                                      // 0x3C(0x18)(NoDestructor, NativeAccessSpecifierPrivate)
	bool                                         bWaitingForQueryResponse;                          // 0x54(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bSuppressGoalUpdates;                              // 0x55(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bReportEnemyGoalSelection;                         // 0x56(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2450[0x29];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x28 (0x28 - 0x0)
// ScriptStruct FortniteGame.AIDiscouragedGoalTimer
struct FAIDiscouragedGoalTimer
{
public:
	struct FFortAIGoalInfo                       DiscouragedGoalInfo;                               // 0x0(0x18)(NoDestructor, NativeAccessSpecifierPublic)
	double                                       ExpirationTime;                                    // 0x18(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint32                                       NumberOfTimesMarkedForDiscouragement;              // 0x20(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2451[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x8 (0x8 - 0x0)
// ScriptStruct FortniteGame.GoalSelectionCriteria
struct FGoalSelectionCriteria
{
public:
	class UEnvQuery*                             GoalSelectionQuery;                                // 0x0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x50 (0x50 - 0x0)
// ScriptStruct FortniteGame.PawnGoalSelectionCriteria
struct FPawnGoalSelectionCriteria
{
public:
	struct FGameplayTagContainer                 IncludeEnemiesWithTags;                            // 0x0(0x20)(Edit, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                 ExcludeEnemiesWithTags;                            // 0x20(0x20)(Edit, NativeAccessSpecifierPublic)
	TArray<struct FGoalSelectionCriteria>        GoalSelectionCriteria;                             // 0x40(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x70 (0x70 - 0x0)
// ScriptStruct FortniteGame.PawnGoalSelectionTableEntry
struct FPawnGoalSelectionTableEntry
{
public:
	struct FGameplayTagContainer                 RequiredGameplayTags;                              // 0x0(0x20)(Edit, NativeAccessSpecifierPublic)
	struct FPawnGoalSelectionCriteria            PawnGoalSelectionCriteria;                         // 0x20(0x50)(Edit, NativeAccessSpecifierPublic)
};

// 0x28 (0x28 - 0x0)
// ScriptStruct FortniteGame.EncounterGoalSelectionTableEntry
struct FEncounterGoalSelectionTableEntry
{
public:
	struct FGameplayTagContainer                 RequiredGameplayTags;                              // 0x0(0x20)(Edit, NativeAccessSpecifierPublic)
	struct FGoalSelectionCriteria                GoalSelectionCriteria;                             // 0x20(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
};

// 0x10 (0x20 - 0x10)
// ScriptStruct FortniteGame.AutoAcquireSlot
struct FAutoAcquireSlot : public FAIHotSpotSlotInfo
{
public:
	uint8                                        Pad_2452[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x44 (0x44 - 0x0)
// ScriptStruct FortniteGame.FortAISharedRepMovement
struct FFortAISharedRepMovement
{
public:
	struct FRepMovement                          RepMovement;                                       // 0x0(0x34)(Transient, NoDestructor, NativeAccessSpecifierPublic)
	float                                        RepTimeStamp;                                      // 0x34(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        RepMovementMode;                                   // 0x38(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortAILODLevel                   RepCurrentFortAILODLevel;                          // 0x39(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2453[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGameplayAbilityRepSharedAnim_Index   RepSharedAnimInfo;                                 // 0x3C(0x8)(Transient, NoDestructor, NativeAccessSpecifierPublic)
};

// 0x20 (0x20 - 0x0)
// ScriptStruct FortniteGame.FortAIBatchedDamageCues
struct FFortAIBatchedDamageCues
{
public:
	bool                                         bImpact;                                           // 0x0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bImpactWeapon;                                     // 0x1(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDamage;                                           // 0x2(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDamageShields;                                    // 0x3(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDamageWeapon;                                     // 0x4(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bFatal;                                            // 0x5(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bWeaponActivated;                                  // 0x6(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2454[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector_NetQuantize10                 HitLocation;                                       // 0x8(0xC)(NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_2455[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AActor*                                TargetActor;                                       // 0x18(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x4 (0x4 - 0x0)
// ScriptStruct FortniteGame.FortAIAttributeReplicationProxy
struct FFortAIAttributeReplicationProxy
{
public:
	int16                                        Health;                                            // 0x0(0x2)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int16                                        MaxHealth;                                         // 0x2(0x2)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.DamagerInfoAnalytics
struct FDamagerInfoAnalytics
{
public:
	class FString                                DamageCauser;                                      // 0x0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        DamageAmount;                                      // 0x10(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2456[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0xA0 (0xA8 - 0x8)
// ScriptStruct FortniteGame.FortPawnStats
struct FFortPawnStats : public FTableRowBase
{
public:
	float                                        MaximumHealth;                                     // 0x8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SpeedWalk;                                         // 0xC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SpeedRun;                                          // 0x10(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SpeedSprint;                                       // 0x14(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SpeedFly;                                          // 0x18(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SpeedCrouchedRun;                                  // 0x1C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SpeedCrouchedSprint;                               // 0x20(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SpeedBackwardsMultiplier;                          // 0x24(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SpeedDBNO;                                         // 0x28(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        AccelerationStrafeMultiplierSprint;                // 0x2C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MinAnalogWalkSpeed;                                // 0x30(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        GroundFriction;                                    // 0x34(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        BrakingDecelerationWalking;                        // 0x38(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        BrakingDecelerationFalling;                        // 0x3C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        BrakingDecelerationFlying;                         // 0x40(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        BrakingFrictionFactor;                             // 0x44(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MaxAcceleration;                                   // 0x48(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MaxAccelerationFlying;                             // 0x4C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        JumpZVelocity;                                     // 0x50(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2457[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UCurveTable*                           FallingDamageTable;                                // 0x58(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  FallingDamageTableRow;                             // 0x60(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCurveTable*                           VehicleEjectDamageTable;                           // 0x68(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        HealthRegenRate;                                   // 0x70(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        HealthRegenDelay;                                  // 0x74(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        HealthRegenThreshold;                              // 0x78(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MaxShield;                                         // 0x7C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ShieldRegenRate;                                   // 0x80(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ShieldRegenDelay;                                  // 0x84(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ShieldRegenThreshold;                              // 0x88(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MaxControlResistance;                              // 0x8C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ControlResistanceRegenRate;                        // 0x90(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ControlResistanceRegenDelay;                       // 0x94(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ControlResistanceRegenThreshold;                   // 0x98(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        KnockbackMultiplier;                               // 0x9C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        KnockbackThreshold;                                // 0xA0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bAllowChainStun;                                   // 0xA4(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EFortControlRecoveryBehavior      ControlRecoveryBehavior;                           // 0xA5(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2458[0x2];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x58 (0x100 - 0xA8)
// ScriptStruct FortniteGame.FortAIPawnStats
struct FFortAIPawnStats : public FFortPawnStats
{
public:
	int32                                        ScoreValue;                                        // 0xA8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DormantSightRadius;                                // 0xAC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DormantHearingThreshold;                           // 0xB0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DormantLOSHearingThreshold;                        // 0xB4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DormantPeripheralVisionAngle;                      // 0xB8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        AlertSightRadius;                                  // 0xBC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        AlertHearingThreshold;                             // 0xC0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        AlertLOSHearingThreshold;                          // 0xC4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        AlertPeripheralVisionAngle;                        // 0xC8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        AutoSuccessRangeFromLastSeenLocation;              // 0xCC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCurveTable*                           HealthScalingTable;                                // 0xD0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  HealthScalingTableRow;                             // 0xD8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCurveTable*                           ControlResistanceScalingTable;                     // 0xE0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  ControlResistanceScalingTableRow;                  // 0xE8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCurveTable*                           DifficultyRatingTable;                             // 0xF0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  DifficultyRatingTableRow;                          // 0xF8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
};

// 0x60 (0x60 - 0x0)
// ScriptStruct FortniteGame.FortAIAppearanceOverrideEntry
struct FFortAIAppearanceOverrideEntry
{
public:
	class FName                                  AppearanceName;                                    // 0x0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsFemale;                                         // 0x8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2459[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftObjectPtr<class USkeletalMesh>          SkeletalMesh;                                      // 0x10(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class UFortFeedbackBank>      FeedbackBank;                                      // 0x38(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};

// 0x30 (0x30 - 0x0)
// ScriptStruct FortniteGame.MinimapGoalByTagColorsData
struct FMinimapGoalByTagColorsData
{
public:
	struct FGameplayTagContainer                 GoalTags;                                          // 0x0(0x20)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FLinearColor                          MinimapColor;                                      // 0x20(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0xC (0xC - 0x0)
// ScriptStruct FortniteGame.RunVariationData
struct FRunVariationData
{
public:
	TWeakObjectPtr<class AFortAIPawn>            FortAIPawn;                                        // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Distance;                                          // 0x8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x8 (0x10 - 0x8)
// ScriptStruct FortniteGame.FortVariantSpawnPoints
struct FFortVariantSpawnPoints : public FTableRowBase
{
public:
	int32                                        BudgetPoints;                                      // 0x8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_245A[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x68 (0x68 - 0x0)
// ScriptStruct FortniteGame.FortAIPawnVariantDefinition
struct FFortAIPawnVariantDefinition
{
public:
	TSubclassOf<class AFortAIPawn>               PawnClass;                                         // 0x0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FCurveTableRowHandle                  VariantWeightCurve;                                // 0x8(0x10)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CurrentWeight;                                     // 0x18(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_245B[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGameplayTagQuery                     RequiredTagsQuery;                                 // 0x20(0x48)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// 0x40 (0x40 - 0x0)
// ScriptStruct FortniteGame.FortSpawnGroupEncounterTypeData
struct FFortSpawnGroupEncounterTypeData
{
public:
	struct FGameplayTagContainer                 EncounterTypeTags;                                 // 0x0(0x20)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FCurveTableRowHandle                  MaxGroupCategoryPopulationDensityCurve;            // 0x20(0x10)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FCurveTableRowHandle                  RespawnDelayCurve;                                 // 0x30(0x10)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.SpawnGroupEnemy
struct FSpawnGroupEnemy
{
public:
	TSubclassOf<class UFortAIPawnVariant>        EnemyVariantClass;                                 // 0x0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bOverrideVariantSpawnPointValue;                   // 0x8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_245C[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        SpawnValue;                                        // 0xC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x28 (0x28 - 0x0)
// ScriptStruct FortniteGame.FortMoveConfig
struct FFortMoveConfig
{
public:
	uint8                                        Pad_245D[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class AActor*                                FocusTarget;                                       // 0x18(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class AFortPawn>                 PushPawnClassOnBump;                               // 0x20(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x8 (0x18 - 0x10)
// ScriptStruct FortniteGame.AIHotSpotUseInfo
struct FAIHotSpotUseInfo : public FAIHotSpotSlotInfo
{
public:
	uint8                                        Pad_245E[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x8 (0x8 - 0x0)
// ScriptStruct FortniteGame.FortNavLinkPattern
struct FFortNavLinkPattern
{
public:
	int32                                        PatternBits;                                       // 0x0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        WildcardBits;                                      // 0x4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x4 (0x4 - 0x0)
// ScriptStruct FortniteGame.BuildingActorNavArea
struct FBuildingActorNavArea
{
public:
	int32                                        AreaBits;                                          // 0x0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x30 (0x30 - 0x0)
// ScriptStruct FortniteGame.FortAIAssignmentIdentifier
struct FFortAIAssignmentIdentifier
{
public:
	enum class EAssignmentType                   AssignmentType;                                    // 0x0(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_245F[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGameplayTagContainer                 AssignmentGameplayTags;                            // 0x8(0x20)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	enum class EFortTeam                         AssignmentTeam;                                    // 0x28(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2460[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x38 (0x38 - 0x0)
// ScriptStruct FortniteGame.AlterationOption
struct FAlterationOption
{
public:
	TSoftObjectPtr<class UFortAlterationItemDefinition> AlterationDef;                                     // 0x0(0x28)(UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FFortItemQuantityPair>         Costs;                                             // 0x28(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x24 (0x24 - 0x0)
// ScriptStruct FortniteGame.AlterationSlot
struct FAlterationSlot
{
public:
	int32                                        UnlockLevel;                                       // 0x0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortRarity                       UnlockRarity;                                      // 0x4(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2461[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  SlotDefinitionRow;                                 // 0x8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bRespeccable;                                      // 0x10(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2462[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  SlotRarityInitRow;                                 // 0x14(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortRarity                       SlotInitMin;                                       // 0x1C(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortRarity                       SlotInitMax;                                       // 0x1D(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2463[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        SlotInitIndex;                                     // 0x20(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x18 - 0x8)
// ScriptStruct FortniteGame.AlterationSlotsLoadout
struct FAlterationSlotsLoadout : public FTableRowBase
{
public:
	TArray<struct FAlterationSlot>               AlterationSlots;                                   // 0x8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x50 (0x58 - 0x8)
// ScriptStruct FortniteGame.AlterationSlotRarity
struct FAlterationSlotRarity : public FTableRowBase
{
public:
	TMap<enum class EFortRarity, int32>          RarityWeights;                                     // 0x8(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x18 (0x20 - 0x8)
// ScriptStruct FortniteGame.AlterationSlotDefinition
struct FAlterationSlotDefinition : public FTableRowBase
{
public:
	class FName                                  InitTierGroup;                                     // 0x8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FFortItemQuantityPair>         BaseRespecCosts;                                   // 0x10(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x28 (0x28 - 0x0)
// ScriptStruct FortniteGame.AlterationWeightData
struct FAlterationWeightData
{
public:
	class FString                                AID;                                               // 0x0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        InitialRollWeight;                                 // 0x10(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2464[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class FString>                        ExclusionNames;                                    // 0x18(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.AlterationWeightSet
struct FAlterationWeightSet
{
public:
	TArray<struct FAlterationWeightData>         WeightData;                                        // 0x0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x50 (0x58 - 0x8)
// ScriptStruct FortniteGame.AlterationGroup
struct FAlterationGroup : public FTableRowBase
{
public:
	TMap<enum class EFortRarity, struct FAlterationWeightSet> RarityMapping;                                     // 0x8(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x10 (0x18 - 0x8)
// ScriptStruct FortniteGame.AlterationNamedExclusions
struct FAlterationNamedExclusions : public FTableRowBase
{
public:
	TArray<class FString>                        ExclusionNames;                                    // 0x8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x10 (0x18 - 0x8)
// ScriptStruct FortniteGame.AlterationIntrinsicMapping
struct FAlterationIntrinsicMapping : public FTableRowBase
{
public:
	class FString                                NewAlteration;                                     // 0x8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x20 (0x28 - 0x8)
// ScriptStruct FortniteGame.AlterationMapping
struct FAlterationMapping : public FTableRowBase
{
public:
	class FString                                NewAlteration;                                     // 0x8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                AdditionalAlteration;                              // 0x18(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x558 (0x558 - 0x0)
// ScriptStruct FortniteGame.FortCosmeticModification
struct FFortCosmeticModification
{
public:
	TSoftObjectPtr<class UMaterialInterface>     CosmeticMaterial;                                  // 0x0(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UParticleSystem>        AmbientParticleSystem;                             // 0x28(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UParticleSystem>        MuzzleParticleSystem;                              // 0x50(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UParticleSystem>        ReloadParticleSystem;                              // 0x78(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UParticleSystem>        BeamParticleSystem;                                // 0xA0(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UParticleSystem>        ImpactPhysicalSurfaceEffects;                      // 0xC8(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2465[0x3E8];                                   // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftClassPtr<class AFortTracerBase>         TracerTemplate;                                    // 0x4D8(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bModifyColor;                                      // 0x500(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2466[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FLinearColor                          ColorAlteration;                                   // 0x504(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  ColorParameterName;                                // 0x514(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bModifyDecalColour;                                // 0x51C(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2467[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FLinearColor                          DecalColourAlterationStart;                        // 0x520(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          DecalColourAlterationEnd;                          // 0x530(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bModifyShellColour;                                // 0x540(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2468[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FLinearColor                          ShellColourAlteration;                             // 0x544(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2469[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x578 (0x578 - 0x0)
// ScriptStruct FortniteGame.FortConditionalCosmeticModification
struct FFortConditionalCosmeticModification
{
public:
	struct FFortCosmeticModification             CosmeticModification;                              // 0x0(0x558)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                 ConditionalTags;                                   // 0x558(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
};

// 0x84 (0x84 - 0x0)
// ScriptStruct FortniteGame.FortAnimInput_SkydivingExternalForce
struct FFortAnimInput_SkydivingExternalForce
{
public:
	bool                                         bUseSkydivingVectorForce;                          // 0x0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_246A[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               SkydivingVectorForce;                              // 0x4(0xC)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               HeadToPelvisDirection;                             // 0x10(0xC)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               FloatingMultiplier;                                // 0x1C(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               FloatingAdditive;                                  // 0x28(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               DivingMultiplier;                                  // 0x34(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               DivingAdditive;                                    // 0x40(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               ParachutingMultiplier;                             // 0x4C(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               ParachutingAdditive;                               // 0x58(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bUseNoisyClothGravity;                             // 0x64(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_246B[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        PerlinRangedOutMinX;                               // 0x68(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PerlinRangedOutMaxX;                               // 0x6C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PerlinRangedOutMinY;                               // 0x70(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PerlinRangedOutMaxY;                               // 0x74(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PerlinRangedOutMinZ;                               // 0x78(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PerlinRangedOutMaxZ;                               // 0x7C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_246C[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.FortAnimInput_AdjustedAimOffset
struct FFortAnimInput_AdjustedAimOffset
{
public:
	float                                        YawOffset;                                         // 0x0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PitchOffset;                                       // 0x4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TargetingYawOffset;                                // 0x8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TargetingPitchOffset;                              // 0xC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0xC8 (0xC8 - 0x0)
// ScriptStruct FortniteGame.FortAnimInput_PlayerAnimAsset
struct FFortAnimInput_PlayerAnimAsset
{
public:
	bool                                         bShouldApplyAimOffsetFullBody;                     // 0x0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_246D[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        FullBodyAimOffsetAlpha;                            // 0x4(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        UpperBodyAimOffsetAlpha;                           // 0x8(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_246E[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UAnimSequence*                         TargetingPose;                                     // 0x10(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAimOffsetBlendSpace*                  TargetingAimOffset;                                // 0x18(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                         NonTargetingPose;                                  // 0x20(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAimOffsetBlendSpace*                  NonTargetingAimOffset;                             // 0x28(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                         RelaxedPose;                                       // 0x30(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                         RelaxedPoseLevel2;                                 // 0x38(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAimOffsetBlendSpace*                  RelaxedAimOffset;                                  // 0x40(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBlendSpaceBase*                       JogAdditiveBlendSpace;                             // 0x48(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBlendSpaceBase*                       JogAdditiveBlendSpaceRelaxed;                      // 0x50(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBlendSpaceBase*                       JogAdditiveBlendSpaceRelaxedLevel2;                // 0x58(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                         SprintAnimation;                                   // 0x60(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                         CrouchTargetingPose;                               // 0x68(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                         CrouchNonTargetingPose;                            // 0x70(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                         CrouchRelaxedPose;                                 // 0x78(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBlendSpaceBase*                       CrouchWalkAdditiveBlendSpace;                      // 0x80(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBlendSpaceBase*                       CrouchJogAdditiveBlendSpace;                       // 0x88(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBlendSpaceBase*                       CrouchJogAdditiveBlendSpaceRelaxed;                // 0x90(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                         CrouchSprintAnimation;                             // 0x98(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                         IdleNoise;                                         // 0xA0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                         IdleNoise_AR_DownSights;                           // 0xA8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bOverridePitchAndYawOffsets;                       // 0xB0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_246F[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FFortAnimInput_AdjustedAimOffset      AnimSetOffsets;                                    // 0xB4(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_2470[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x48 (0x48 - 0x0)
// ScriptStruct FortniteGame.FortAnimInput_Skydiving
struct FFortAnimInput_Skydiving
{
public:
	uint8                                        bIsSkydivingFromLaunchPad : 1;                     // Mask : 0x1 0x0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsSkydivingFromBus : 1;                           // Mask : 0x2 0x0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsInVortex : 1;                                   // Mask : 0x4 0x0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsUsingUmbrella : 1;                              // Mask : 0x8 0x0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsActivelyStrafingInAir : 1;                      // Mask : 0x10 0x0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsDiving : 1;                                     // Mask : 0x20 0x0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsDivingUpInVortex : 1;                           // Mask : 0x40 0x0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsParachuteOpen : 1;                              // Mask : 0x80 0x0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsSkydiving : 1;                                  // Mask : 0x1 0x1(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsParachuteLeaning : 1;                           // Mask : 0x2 0x1(0x1)(Edit, BlueprintVisible, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsSkydiveLeaning : 1;                             // Mask : 0x4 0x1(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsLeaning : 1;                                    // Mask : 0x8 0x1(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsSkydiveDiveMode : 1;                            // Mask : 0x10 0x1(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bParachuteLeanTransition : 1;                      // Mask : 0x20 0x1(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bPlayedParachuteLeanTransition : 1;                // Mask : 0x40 0x1(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bPlaySkydiveDrift : 1;                             // Mask : 0x80 0x1(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bSkydiveDriftDelayActive : 1;                      // Mask : 0x1 0x2(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bSkydiveDriftAnimAllowed : 1;                      // Mask : 0x2 0x2(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2471[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        LocalAccelForward;                                 // 0x4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LocalAccelRight;                                   // 0x8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LocalVelocityRight;                                // 0xC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SkydiveAimPitch;                                   // 0x10(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SkydiveAimPitchInterpSpeed;                        // 0x14(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SkydiveAimYaw;                                     // 0x18(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DeployChuteAnimRate;                               // 0x1C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SkydiveDriftAnimRate;                              // 0x20(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SkydiveDriftAnimRateCurrent;                       // 0x24(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SkydiveFidgetAnimRate;                             // 0x28(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SkydiveFidgetAnimRateCurrent;                      // 0x2C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SkydiveAdditiveAlpha;                              // 0x30(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SkydiveDriftDelay;                                 // 0x34(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        SkydiveDriftAnim;                                  // 0x38(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        SkydiveDriftAnimMax;                               // 0x3C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        LaunchpadAnim;                                     // 0x40(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ESkydivingDirection               LocalAccelDir;                                     // 0x44(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ESkydivingDirection               DirectionLast;                                     // 0x45(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2472[0x2];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x200 (0x200 - 0x0)
// ScriptStruct FortniteGame.FortAnimInput_AdjustedAim
struct FFortAnimInput_AdjustedAim
{
public:
	struct FFortAnimInput_AdjustedAimOffset      WeaponOffsets;                                     // 0x0(0x10)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_2473[0x1D0];                                   // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        YawOffset;                                         // 0x1E0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PitchOffset;                                       // 0x1E4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        YawScale;                                          // 0x1E8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PitchScale;                                        // 0x1EC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ResultingYaw;                                      // 0x1F0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ResultingPitch;                                    // 0x1F4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  ZeroOutPitchWeightCurveName;                       // 0x1F8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x58 (0x58 - 0x0)
// ScriptStruct FortniteGame.FortAnimInput_TurnInPlace
struct FFortAnimInput_TurnInPlace
{
public:
	struct FCachedAnimStateArray                 TurnInitiatingStates;                              // 0x0(0x18)(Edit, NativeAccessSpecifierPublic)
	struct FCachedAnimStateArray                 TurnTransitionStates;                              // 0x18(0x18)(Edit, NativeAccessSpecifierPublic)
	class FName                                  TurnRotationAmountCurveName;                       // 0x30(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  AllowTurnInPlaceCurveName;                         // 0x38(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TurnThreshold90;                                   // 0x40(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxAllowedRootYawOffset;                           // 0x44(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RootYawOffset;                                     // 0x48(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RootYawOffsetAlpha;                                // 0x4C(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bWantsToTurn : 1;                                  // Mask : 0x1 0x50(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bWantsToTurnInVehicle : 1;                         // Mask : 0x2 0x50(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bWantsToTurnAgain : 1;                             // Mask : 0x4 0x50(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bTurningLeft : 1;                                  // Mask : 0x8 0x50(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2474[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        LastTurnRotationAmount;                            // 0x54(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x20 (0x20 - 0x0)
// ScriptStruct FortniteGame.FortAnimInput_SpeedWarping
struct FFortAnimInput_SpeedWarping
{
public:
	class UCurveFloat*                           PlayRateAdjustmentCurve;                           // 0x0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             SpeedWarpingLimits;                                // 0x8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             SpeedWarpingLimitsAddlRateScale;                   // 0x10(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SpeedWarpingAmount;                                // 0x18(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PlayRate;                                          // 0x1C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x1 (0x1 - 0x0)
// ScriptStruct FortniteGame.FortAnimInput_CommonWeapon
struct FFortAnimInput_CommonWeapon
{
public:
	uint8                                        bIsWeaponEquipped : 1;                             // Mask : 0x1 0x0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bForceUpperBodyTargeting : 1;                      // Mask : 0x2 0x0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0xC (0xC - 0x0)
// ScriptStruct FortniteGame.FortAnimInput_CommonVehicle
struct FFortAnimInput_CommonVehicle
{
public:
	uint8                                        bIsUsingVehicle : 1;                               // Mask : 0x1 0x0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsJumpingVehicle : 1;                             // Mask : 0x2 0x0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2475[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	uint8                                        bIsJumping : 1;                                    // Mask : 0x1 0x8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsOnGround : 1;                                   // Mask : 0x2 0x8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bCanDriverAimWeapon : 1;                           // Mask : 0x4 0x8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2476[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x5C (0x5C - 0x0)
// ScriptStruct FortniteGame.FortAnimInput_ShoppingCart
struct FFortAnimInput_ShoppingCart
{
public:
	uint8                                        bIsUsingShoppingCart : 1;                          // Mask : 0x1 0x0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ECoastState                       CoastState;                                        // 0x1(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsCoastStatePedaling : 1;                         // Mask : 0x1 0x2(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsCoastStateCoasting : 1;                         // Mask : 0x2 0x2(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsCoastStateDismount : 1;                         // Mask : 0x4 0x2(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsCoastStateIdle : 1;                             // Mask : 0x8 0x2(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsInAir : 1;                                      // Mask : 0x10 0x2(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsCoasting : 1;                                   // Mask : 0x20 0x2(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsPedaling : 1;                                   // Mask : 0x40 0x2(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsReadyToPedal : 1;                               // Mask : 0x80 0x2(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2477[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        IsReadyToPedal;                                    // 0x4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bWantsToCoast : 1;                                 // Mask : 0x1 0x8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsCoastIdling : 1;                                // Mask : 0x2 0x8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsStartCoasting : 1;                              // Mask : 0x4 0x8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsEndCoasting : 1;                                // Mask : 0x8 0x8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsDismountingFromCoast : 1;                       // Mask : 0x10 0x8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsCoastingOrDismountingFromCoast : 1;             // Mask : 0x20 0x8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsStandingInPlace : 1;                            // Mask : 0x40 0x8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsSprinting : 1;                                  // Mask : 0x80 0x8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsSprintingAndMovingForward : 1;                  // Mask : 0x1 0x9(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsMovingForwardNotSprinting : 1;                  // Mask : 0x2 0x9(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsBraking : 1;                                    // Mask : 0x4 0x9(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsReversing : 1;                                  // Mask : 0x8 0x9(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsMoving : 1;                                     // Mask : 0x10 0x9(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsMovingForward : 1;                              // Mask : 0x20 0x9(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsMovingBackwards : 1;                            // Mask : 0x40 0x9(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsMovingOrTurningInPlace : 1;                     // Mask : 0x80 0x9(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsInAirSteady : 1;                                // Mask : 0x1 0xA(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsOnSlope : 1;                                    // Mask : 0x2 0xA(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bAimFWD : 1;                                       // Mask : 0x4 0xA(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bAimBWD : 1;                                       // Mask : 0x8 0xA(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bAimLFT : 1;                                       // Mask : 0x10 0xA(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bAimRGT : 1;                                       // Mask : 0x20 0xA(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2478[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        ForwardVelocity;                                   // 0xC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ForwardSpeedKmH;                                   // 0x10(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CurrentBrakeForce;                                 // 0x14(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RunForwardAlpha;                                   // 0x18(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsAcceleratingForward : 1;                        // Mask : 0x1 0x1C(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsAccelBreakingOrReversing : 1;                   // Mask : 0x2 0x1C(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2479[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        SteerAngle;                                        // 0x20(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SteerAngleInterpSpeed;                             // 0x24(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CoastSteerAngleInterpSpeed;                        // 0x28(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        IsReadyToPedalInterpSpeed;                         // 0x2C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        StandingInPlaceSteerAngle;                         // 0x30(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SlopePitchDegreeAngle;                             // 0x34(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SlopeRollDegreeAngle;                              // 0x38(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PawnToVehicleDeltaYawAngleDegrees;                 // 0x3C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AimCardDirDeadZoneAngleDegrees;                    // 0x40(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AimCardDirAngleOffsetDegrees;                      // 0x44(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AimFWDDeltaAngleDegrees;                           // 0x48(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AimBWDDeltaAngleDegrees;                           // 0x4C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AimLFTDeltaAngleDegrees;                           // 0x50(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AimRGTDeltaAngleDegrees;                           // 0x54(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        LastCardDirIndex;                                  // 0x58(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x64 (0x64 - 0x0)
// ScriptStruct FortniteGame.FortAnimInput_FerretVehicle
struct FFortAnimInput_FerretVehicle
{
public:
	uint8                                        bIsUsingFerretVehicle : 1;                         // Mask : 0x1 0x0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsDriver : 1;                                     // Mask : 0x2 0x0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsFrontPassenger : 1;                             // Mask : 0x4 0x0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsBackLeftPassenger : 1;                          // Mask : 0x8 0x0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsBackRightPassenger : 1;                         // Mask : 0x10 0x0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsFrontPassengerAndLeaning : 1;                   // Mask : 0x20 0x0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsBackPassengerAndLeaning : 1;                    // Mask : 0x40 0x0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsDrifting : 1;                                   // Mask : 0x80 0x0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsBoosting : 1;                                   // Mask : 0x1 0x1(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsReversing : 1;                                  // Mask : 0x2 0x1(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsBraking : 1;                                    // Mask : 0x4 0x1(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsMoving : 1;                                     // Mask : 0x8 0x1(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsMovingForward : 1;                              // Mask : 0x10 0x1(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsLeaning : 1;                                    // Mask : 0x20 0x1(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsLeaningOrBouncing : 1;                          // Mask : 0x40 0x1(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsBounceCrouching : 1;                            // Mask : 0x80 0x1(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsBounceCrouched : 1;                             // Mask : 0x1 0x2(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsBounceJumping : 1;                              // Mask : 0x2 0x2(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsBounceRecoiling : 1;                            // Mask : 0x4 0x2(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsSteeringRight;                                  // 0x3(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsSteeringLeft;                                   // 0x4(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsShooting;                                       // 0x5(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsFerretPassengerRotating;                        // 0x6(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_247A[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        RunForwardAlpha;                                   // 0x8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BounceCompression;                                 // 0xC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               LeanPosition;                                      // 0x10(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LeanPositionX;                                     // 0x1C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LeanPositionY;                                     // 0x20(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LeanPositionZ;                                     // 0x24(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bAimFWD : 1;                                       // Mask : 0x1 0x28(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bAimBWD : 1;                                       // Mask : 0x2 0x28(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bAimLFT : 1;                                       // Mask : 0x4 0x28(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bAimRGT : 1;                                       // Mask : 0x8 0x28(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_247B[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        PawnToVehicleDeltaYawAngleDegrees;                 // 0x2C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AimCardDirDeadZoneAngleDegrees;                    // 0x30(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AimCardDirAngleOffsetDegrees;                      // 0x34(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        LastCardDirIndex;                                  // 0x38(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AimFWDDeltaAngleDegrees;                           // 0x3C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AimBWDDeltaAngleDegrees;                           // 0x40(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AimLFTDeltaAngleDegrees;                           // 0x44(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AimRGTDeltaAngleDegrees;                           // 0x48(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SlopePitchDegreeAngle;                             // 0x4C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SlopeRollDegreeAngle;                              // 0x50(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SteerAngle;                                        // 0x54(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               SeatSwitchDirection;                               // 0x58(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.FortAnimInput_MountedTurret
struct FFortAnimInput_MountedTurret
{
public:
	bool                                         bIsUsingMountedTurret;                             // 0x0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_247C[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        AimingYaw;                                         // 0x4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AimingPitch;                                       // 0x8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PedalScaler;                                       // 0xC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x70 (0x70 - 0x0)
// ScriptStruct FortniteGame.FortAnimInput_Quad
struct FFortAnimInput_Quad
{
public:
	uint8                                        bIsUsingQuad : 1;                                  // Mask : 0x1 0x0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsDriver : 1;                                     // Mask : 0x2 0x0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsFrontPassenger : 1;                             // Mask : 0x4 0x0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsBackPassenger : 1;                              // Mask : 0x8 0x0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsBackPassengerAndLeaning : 1;                    // Mask : 0x10 0x0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsDrifting : 1;                                   // Mask : 0x20 0x0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsBoosting : 1;                                   // Mask : 0x40 0x0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsReversing : 1;                                  // Mask : 0x80 0x0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsBraking : 1;                                    // Mask : 0x1 0x1(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsMoving : 1;                                     // Mask : 0x2 0x1(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsMovingForward : 1;                              // Mask : 0x4 0x1(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsLeaning : 1;                                    // Mask : 0x8 0x1(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsLeaningOrBouncing : 1;                          // Mask : 0x10 0x1(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsBounceCrouching : 1;                            // Mask : 0x20 0x1(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsBounceCrouched : 1;                             // Mask : 0x40 0x1(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsBounceJumping : 1;                              // Mask : 0x80 0x1(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsBounceRecoiling : 1;                            // Mask : 0x1 0x2(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsSteeringRight : 1;                              // Mask : 0x2 0x2(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsSteeringLeft : 1;                               // Mask : 0x4 0x2(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_247D[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        RunForwardAlpha;                                   // 0x4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BounceCompression;                                 // 0x8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               LeanPosition;                                      // 0xC(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LeanPositionX;                                     // 0x18(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LeanPositionY;                                     // 0x1C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LeanPositionZ;                                     // 0x20(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        VerticalVelocity;                                  // 0x24(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        VerticalAcceleration;                              // 0x28(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bAimFWD : 1;                                       // Mask : 0x1 0x2C(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bAimBWD : 1;                                       // Mask : 0x2 0x2C(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bAimLFT : 1;                                       // Mask : 0x4 0x2C(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bAimRGT : 1;                                       // Mask : 0x8 0x2C(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_247E[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        PawnToVehicleDeltaYawAngleDegrees;                 // 0x30(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AimCardDirDeadZoneAngleDegrees;                    // 0x34(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AimCardDirAngleOffsetDegrees;                      // 0x38(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        LastCardDirIndex;                                  // 0x3C(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AimFWDDeltaAngleDegrees;                           // 0x40(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AimBWDDeltaAngleDegrees;                           // 0x44(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AimLFTDeltaAngleDegrees;                           // 0x48(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AimRGTDeltaAngleDegrees;                           // 0x4C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SlopePitchDegreeAngle;                             // 0x50(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SlopeRollDegreeAngle;                              // 0x54(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SteerAngle;                                        // 0x58(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SteerAlpha;                                        // 0x5C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SteerAngleDeadZoneDegrees;                         // 0x60(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SteeringRotation;                                  // 0x64(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        VehiclePitch;                                      // 0x68(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        VehicleRoll;                                       // 0x6C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x54 (0x54 - 0x0)
// ScriptStruct FortniteGame.FortAnimInput_GolfCart
struct FFortAnimInput_GolfCart
{
public:
	uint8                                        bIsUsingGolfCart : 1;                              // Mask : 0x1 0x0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsDriver : 1;                                     // Mask : 0x2 0x0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsFrontPassenger : 1;                             // Mask : 0x4 0x0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsBackLeftPassenger : 1;                          // Mask : 0x8 0x0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsBackRightPassenger : 1;                         // Mask : 0x10 0x0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsFrontPassengerAndLeaning : 1;                   // Mask : 0x20 0x0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsBackPassengerAndLeaning : 1;                    // Mask : 0x40 0x0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsDrifting : 1;                                   // Mask : 0x80 0x0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsBoosting : 1;                                   // Mask : 0x1 0x1(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsEBraking : 1;                                   // Mask : 0x2 0x1(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsReversing : 1;                                  // Mask : 0x4 0x1(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsBraking : 1;                                    // Mask : 0x8 0x1(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsMoving : 1;                                     // Mask : 0x10 0x1(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsMovingForward : 1;                              // Mask : 0x20 0x1(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsPowerSliding : 1;                               // Mask : 0x40 0x1(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsLeaning : 1;                                    // Mask : 0x80 0x1(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsLeaningOrBouncing : 1;                          // Mask : 0x1 0x2(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsBounceCrouching : 1;                            // Mask : 0x2 0x2(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsBounceCrouched : 1;                             // Mask : 0x4 0x2(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsBounceJumping : 1;                              // Mask : 0x8 0x2(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsBounceRecoiling : 1;                            // Mask : 0x10 0x2(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsSteeringRight : 1;                              // Mask : 0x20 0x2(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsSteeringLeft : 1;                               // Mask : 0x40 0x2(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_247F[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        RunForwardAlpha;                                   // 0x4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BounceCompression;                                 // 0x8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               LeanPosition;                                      // 0xC(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LeanPositionX;                                     // 0x18(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LeanPositionY;                                     // 0x1C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LeanPositionZ;                                     // 0x20(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bAimFWD : 1;                                       // Mask : 0x1 0x24(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bAimBWD : 1;                                       // Mask : 0x2 0x24(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bAimLFT : 1;                                       // Mask : 0x4 0x24(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bAimRGT : 1;                                       // Mask : 0x8 0x24(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2480[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        PawnToVehicleDeltaYawAngleDegrees;                 // 0x28(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AimCardDirDeadZoneAngleDegrees;                    // 0x2C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AimCardDirAngleOffsetDegrees;                      // 0x30(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        LastCardDirIndex;                                  // 0x34(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AimFWDDeltaAngleDegrees;                           // 0x38(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AimBWDDeltaAngleDegrees;                           // 0x3C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AimLFTDeltaAngleDegrees;                           // 0x40(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AimRGTDeltaAngleDegrees;                           // 0x44(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SlopePitchDegreeAngle;                             // 0x48(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SlopeRollDegreeAngle;                              // 0x4C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SteerAngle;                                        // 0x50(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0xBC (0xBC - 0x0)
// ScriptStruct FortniteGame.FortAnimInput_VelocityImpact
struct FFortAnimInput_VelocityImpact
{
public:
	struct FVector                               LastVelocity;                                      // 0x0(0xC)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               DeltaVelocityThreshold;                            // 0xC(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               ImpactScale;                                       // 0x18(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FInputRange                           ImpactLimitX;                                      // 0x24(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	struct FInputRange                           ImpactLimitY;                                      // 0x2C(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	struct FInputRange                           ImpactLimitZ;                                      // 0x34(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	struct FFloatRK4SpringInterpolator           SpringInterpolatorX;                               // 0x3C(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2481[0x1C];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FFloatRK4SpringInterpolator           SpringInterpolatorY;                               // 0x60(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2482[0x1C];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FFloatRK4SpringInterpolator           SpringInterpolatorZ;                               // 0x84(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2483[0x1C];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	uint8                                        bTestVelocity : 1;                                 // Mask : 0x1 0xA8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2484[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               TestVelocity;                                      // 0xAC(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsForwardImpact : 1;                              // Mask : 0x1 0xB8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsBackwardImpact : 1;                             // Mask : 0x2 0xB8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsLeftImpact : 1;                                 // Mask : 0x4 0xB8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsRightImpact : 1;                                // Mask : 0x8 0xB8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsUpImpact : 1;                                   // Mask : 0x10 0xB8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsDownImpact : 1;                                 // Mask : 0x20 0xB8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2485[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x190 (0x190 - 0x0)
// ScriptStruct FortniteGame.FortAnimInput_JackalVehicle
struct FFortAnimInput_JackalVehicle
{
public:
	uint8                                        bIsUsingJackalVehicle : 1;                         // Mask : 0x1 0x0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsSteeringLeft : 1;                               // Mask : 0x2 0x0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsSteeringRight : 1;                              // Mask : 0x4 0x0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2486[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        SteerAngleDeadZoneDegrees;                         // 0x4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SteerAngle;                                        // 0x8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LeanYaw;                                           // 0xC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        QuantizedSteerAngle;                               // 0x10(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SteerAlpha;                                        // 0x14(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RunForwardAlpha;                                   // 0x18(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SlopePitchDegreeAngle;                             // 0x1C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SlopeRollDegreeAngle;                              // 0x20(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DistanceFromGround;                                // 0x24(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsReversing : 1;                                  // Mask : 0x1 0x28(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsBraking : 1;                                    // Mask : 0x2 0x28(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsMoving : 1;                                     // Mask : 0x4 0x28(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsMovingForward : 1;                              // Mask : 0x8 0x28(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsSprinting : 1;                                  // Mask : 0x10 0x28(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bInAir : 1;                                        // Mask : 0x20 0x28(0x1)(BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsFalling : 1;                                    // Mask : 0x40 0x28(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsJumping : 1;                                    // Mask : 0x80 0x28(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsRelaxed : 1;                                    // Mask : 0x1 0x29(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsBoosting : 1;                                   // Mask : 0x2 0x29(0x1)(BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bAdjustRootForFemaleRider : 1;                     // Mask : 0x4 0x29(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsPlayingEmoteOnHoverboard : 1;                   // Mask : 0x8 0x29(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bShouldApplyAdditive : 1;                          // Mask : 0x10 0x29(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsOnGroundAndNotBoostingAndNotReversing : 1;      // Mask : 0x20 0x29(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bPlayPivotOnGroundAndNotBoosting : 1;              // Mask : 0x40 0x29(0x1)(BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsOnLowerHill : 1;                                // Mask : 0x80 0x29(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bInterruptHoverboardFullybody : 1;                 // Mask : 0x1 0x2A(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bDefaultToJumpStartTransition : 1;                 // Mask : 0x2 0x2A(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bLocomotionPoseToJumpTransition : 1;               // Mask : 0x4 0x2A(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bJumpToLocomotionPoseTransition : 1;               // Mask : 0x8 0x2A(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bJumpApexToJumpFallTransition : 1;                 // Mask : 0x10 0x2A(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIdleToMovementStartTransition : 1;                // Mask : 0x20 0x2A(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIdleToMovementLoopTransition : 1;                 // Mask : 0x40 0x2A(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bMovementLoopToMovementStopTransition : 1;         // Mask : 0x80 0x2A(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bMovementLoopToPivotTransition : 1;                // Mask : 0x1 0x2B(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bMovementLoopToIdleTransition : 1;                 // Mask : 0x2 0x2B(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIdleAdditiveToCollisionNTransition : 1;           // Mask : 0x4 0x2B(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bSplitBodyToHoverboardBRStartTransition : 1;       // Mask : 0x8 0x2B(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bHoverboardBRToSplitBodyTransition : 1;            // Mask : 0x10 0x2B(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIdlesToJackalVehicleTransition : 1;               // Mask : 0x20 0x2B(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bPlayAdditiveLeans : 1;                            // Mask : 0x40 0x2B(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bPlayJumpTrickVertical : 1;                        // Mask : 0x80 0x2B(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bPlayJumpTrick : 1;                                // Mask : 0x1 0x2C(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bPlayMovingFast : 1;                               // Mask : 0x2 0x2C(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bPlayHipAdjustmentAdditive : 1;                    // Mask : 0x4 0x2C(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bPlayDriveSouth : 1;                               // Mask : 0x8 0x2C(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2487[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        JumpCombatAdditiveWeight;                          // 0x30(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MeleeTwistIdle;                                    // 0x34(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MeleeTwistLocomotionLoop;                          // 0x38(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFortAnimInput_VelocityImpact         VelocityImpact;                                    // 0x3C(0xBC)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FVector                               ImpactDisplacement;                                // 0xF8(0xC)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2488[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        SteerYaw;                                          // 0x10C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               EmoteHoverboardPosition;                           // 0x110(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                              EmoteHoverboardRotation;                           // 0x11C(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        bShouldAttachFeetToHoverboard : 1;                 // Mask : 0x1 0x128(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2489[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               FootLeftLocationOffset;                            // 0x12C(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                              FootLeftRotationOffset;                            // 0x138(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FVector                               FootRightLocationOffset;                           // 0x144(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                              FootRightRotationOffset;                           // 0x150(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	float                                        StoppedThreshold;                                  // 0x15C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MovingForwardThreshold;                            // 0x160(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MovingFowardFastThreshold;                         // 0x164(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DefaultToJumpStartTransitionThreshold;             // 0x168(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        JumpTrickAngularVelocityThreshold;                 // 0x16C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        JumpDistanceFromGroundThreshold;                   // 0x170(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        VelocityStartThreshold;                            // 0x174(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MovingFastThreshold;                               // 0x178(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RelaxedSpeedThreshold;                             // 0x17C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RotatingAngularVelocityThreshold;                  // 0x180(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        IdleToMovementLoopTransitionThreshold;             // 0x184(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MeleeTwistIdleMultiplier;                          // 0x188(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MeleeTwistLocomotionLoopMultiplier;                // 0x18C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x68 (0x68 - 0x0)
// ScriptStruct FortniteGame.FortAnimInput_HoverBoard
struct FFortAnimInput_HoverBoard
{
public:
	bool                                         bIsUsingHoverboard;                                // 0x0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_248A[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        HoverTransformAlpha;                               // 0x4(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                              HoverTransformRotation;                            // 0x8(0xC)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FVector                               HoverTransformTranslation;                         // 0x14(0xC)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HoverCycle;                                        // 0x20(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_248B[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UCurveFloat*                           HoverCycleVelocityCurve;                           // 0x28(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HoverHeight;                                       // 0x30(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_248C[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UCurveFloat*                           HoverHeightCurve;                                  // 0x38(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HoverLeanAngle;                                    // 0x40(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_248D[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UCurveFloat*                           HoverLeanCurve;                                    // 0x48(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HoverPitchAngle;                                   // 0x50(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HoverYaw;                                          // 0x54(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HoverYawCurrent;                                   // 0x58(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HoverIdleLeanAlpha;                                // 0x5C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                           HoverPitchCurve;                                   // 0x60(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x20 (0x20 - 0x0)
// ScriptStruct FortniteGame.FortAnimInput_Zipline
struct FFortAnimInput_Zipline
{
public:
	uint8                                        bIsZiplining : 1;                                  // Mask : 0x1 0x0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bShouldPlayPivotTransition : 1;                    // Mask : 0x2 0x0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_248E[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        LeanYaw;                                           // 0x4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PivotBlendDelayRemaining;                          // 0x8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PivotBlendDelay;                                   // 0xC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortCardinalDirection            PivotCardinalDirection;                            // 0x10(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_248F[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               WorldVelocityLastTick;                             // 0x14(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x1 (0x1 - 0x0)
// ScriptStruct FortniteGame.FortAnimInput_CreativeMoveTool
struct FFortAnimInput_CreativeMoveTool
{
public:
	bool                                         bIsFlying;                                         // 0x0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x20 (0x20 - 0x0)
// ScriptStruct FortniteGame.FortAnimInput_WeaponCheck
struct FFortAnimInput_WeaponCheck
{
public:
	float                                        AdditiveAlpha;                                     // 0x0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxSecondsAfterEnteringRelaxed;                    // 0x4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinSecondsAfterLanding;                            // 0x8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinSecondsBetweenWeaponChecks;                     // 0xC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CurrentWeaponCheckWindow;                          // 0x10(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CurrentWeaponCheckIntervalDelay;                   // 0x14(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CurrentWeaponCheckLandingDelay;                    // 0x18(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsWeaponCheckPlaying;                             // 0x1C(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2490[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x28 (0x28 - 0x0)
// ScriptStruct FortniteGame.AnimTagProperty
struct FAnimTagProperty
{
public:
	struct FGameplayTag                          BackingGameplayTag;                                // 0x0(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UProperty*                             PropertyToEdit;                                    // 0x8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  PropertyName;                                      // 0x10(0x8)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGuid                                 PropertyGuid;                                      // 0x18(0x10)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x78 - 0x68)
// ScriptStruct FortniteGame.FortAnimNode_AnimSetDrivenRandom
struct FFortAnimNode_AnimSetDrivenRandom : public FAnimNode_RandomPlayer
{
public:
	struct FGameplayTag                          RandomSlotName;                                    // 0x68(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFortAnimSet*                          AnimSet;                                           // 0x70(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x38 (0x38 - 0x0)
// ScriptStruct FortniteGame.SourceDriver
struct FSourceDriver
{
public:
	struct FBoneReference                        SourceBone;                                        // 0x0(0x10)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	enum class EComponentType                    SourceComponent;                                   // 0x10(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         UseQuaternion;                                     // 0x11(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2491[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UCurveFloat*                           DrivingCurve;                                      // 0x18(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Multiplier;                                        // 0x20(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bUseRange;                                         // 0x24(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2492[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        RangeMin;                                          // 0x28(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RangeMax;                                          // 0x2C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RemappedMin;                                       // 0x30(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RemappedMax;                                       // 0x34(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x30 (0xF8 - 0xC8)
// ScriptStruct FortniteGame.FortAnimNode_Flap
struct FFortAnimNode_Flap : public FAnimNode_SkeletalControlBase
{
public:
	TArray<struct FSourceDriver>                 SourceDrives;                                      // 0xC8(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	struct FBoneReference                        TargetBone;                                        // 0xD8(0x10)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	enum class EComponentType                    TargetComponent;                                   // 0xE8(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ESourceSelectionMode              SelectionMode;                                     // 0xE9(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bUseClamp;                                         // 0xEA(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2493[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        TargetClampMin;                                    // 0xEC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TargetClampMax;                                    // 0xF0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2494[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x150 (0x160 - 0x10)
// ScriptStruct FortniteGame.FortAnimNode_ScaleHuskBones
struct FFortAnimNode_ScaleHuskBones : public FAnimNode_Base
{
public:
	struct FPoseLink                             PreScalePose;                                      // 0x10(0x10)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_2495[0x140];                                   // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x38 (0x38 - 0x0)
// ScriptStruct FortniteGame.SlopeWarpingFootDefinition
struct FSlopeWarpingFootDefinition
{
public:
	struct FBoneReference                        IKFootBone;                                        // 0x0(0x10)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FBoneReference                        FKFootBone;                                        // 0x10(0x10)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	int32                                        NumBonesInLimb;                                    // 0x20(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  ToeSocketName;                                     // 0x24(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  HeelSocketName;                                    // 0x2C(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FootSize;                                          // 0x34(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0xA0 (0xA0 - 0x0)
// ScriptStruct FortniteGame.SlopeWarpingFootData
struct FSlopeWarpingFootData
{
public:
	uint8                                        Pad_2496[0xA0];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x160 (0x228 - 0xC8)
// ScriptStruct FortniteGame.FortAnimNode_SlopeWarping
struct FFortAnimNode_SlopeWarping : public FAnimNode_SkeletalControlBase
{
public:
	uint8                                        Pad_2497[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FBoneReference                        IKFootRootBone;                                    // 0xE0(0x10)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FBoneReference                        PelvisBone;                                        // 0xF0(0x10)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	TArray<struct FSlopeWarpingFootDefinition>   FeetDefinitions;                                   // 0x100(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FSlopeWarpingFootData>         FeetData;                                          // 0x110(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	struct FVectorRK4SpringInterpolator          PelvisOffsetInterpolator;                          // 0x120(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2498[0x34];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               GravityDir;                                        // 0x15C(0xC)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               CustomFloorOffset;                                 // 0x168(0xC)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CachedDeltaTime;                                   // 0x174(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               TargetFloorNormalWorldSpace;                       // 0x178(0xC)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVectorRK4SpringInterpolator          FloorNormalInterpolator;                           // 0x184(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2499[0x34];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               TargetFloorOffsetLocalSpace;                       // 0x1C0(0xC)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVectorRK4SpringInterpolator          FloorOffsetInterpolator;                           // 0x1CC(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_249A[0x34];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        MaxStepHeight;                                     // 0x208(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bKeepMeshInsideOfCapsule : 1;                      // Mask : 0x1 0x20C(0x1)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bPullPelvisDown : 1;                               // Mask : 0x2 0x20C(0x1)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bUseCustomFloorOffset : 1;                         // Mask : 0x4 0x20C(0x1)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bUseCapsuleInfoInsteadOfFootTraces : 1;            // Mask : 0x8 0x20C(0x1)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bWasOnGround : 1;                                  // Mask : 0x10 0x20C(0x1)(Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bShowDebug : 1;                                    // Mask : 0x20 0x20C(0x1)(Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bFloorSmoothingInitialized : 1;                    // Mask : 0x40 0x20C(0x1)(Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_249B[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               ActorLocation;                                     // 0x210(0xC)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               GravityDirCompSpace;                               // 0x21C(0xC)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
};

// 0x40 (0x40 - 0x0)
// ScriptStruct FortniteGame.SpeedWarpingFootData
struct FSpeedWarpingFootData
{
public:
	uint8                                        Pad_249C[0x40];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x24 (0x24 - 0x0)
// ScriptStruct FortniteGame.SpeedWarpingFootDefinition
struct FSpeedWarpingFootDefinition
{
public:
	struct FBoneReference                        IKFootBone;                                        // 0x0(0x10)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FBoneReference                        FKFootBone;                                        // 0x10(0x10)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	int32                                        NumBonesInLimb;                                    // 0x20(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0xF0 (0x1B8 - 0xC8)
// ScriptStruct FortniteGame.FortAnimNode_SpeedWarping
struct FFortAnimNode_SpeedWarping : public FAnimNode_SkeletalControlBase
{
public:
	uint8                                        Pad_249D[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FBoneReference                        IKFootRootBone;                                    // 0xD0(0x10)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	TArray<struct FSpeedWarpingFootDefinition>   FeetDefinitions;                                   // 0xE0(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FSpeedWarpingFootData>         FeetData;                                          // 0xF0(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	struct FBoneReference                        PelvisBone;                                        // 0x100(0x10)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	enum class ESpeedWarpingAxisMode             SpeedWarpingAxisMode;                              // 0x110(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ESpeedWarpingAxisMode             FloorNormalAxisMode;                               // 0x111(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ESpeedWarpingAxisMode             GravityDirAxisMode;                                // 0x112(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_249E[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        SpeedScaling;                                      // 0x114(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FInputScaleBiasClamp                  SpeedScalingScaleBiasClamp;                        // 0x118(0x30)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FVector                               ManualSpeedWarpingDir;                             // 0x148(0xC)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               ManualFloorNormalInput;                            // 0x154(0xC)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               ManualGravityDirInput;                             // 0x160(0xC)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PelvisPostAdjustmentAlpha;                         // 0x16C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        PelvisAdjustmentMaxIter;                           // 0x170(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVectorRK4SpringInterpolator          PelvisAdjustmentInterp;                            // 0x174(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_249F[0x34];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	uint8                                        bAdjustThighBonesRotation : 1;                     // Mask : 0x1 0x1B0(0x1)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bClampIKUsingFKLeg : 1;                            // Mask : 0x2 0x1B0(0x1)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bOrientSpeedWarpingAxisBasedOnFloorNormal : 1;     // Mask : 0x4 0x1B0(0x1)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_24A0[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        CachedDeltaTime;                                   // 0x1B4(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0xC (0xC - 0x0)
// ScriptStruct FortniteGame.EmotePropMaterialScalarParam
struct FEmotePropMaterialScalarParam
{
public:
	class FName                                  ParamName;                                         // 0x0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ParamValue;                                        // 0x8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x98 (0x98 - 0x0)
// ScriptStruct FortniteGame.FortAnimSetRandomAnimation
struct FFortAnimSetRandomAnimation
{
public:
	struct FGameplayTagQuery                     Requirements;                                      // 0x0(0x48)(Edit, NativeAccessSpecifierPublic)
	struct FRandomPlayerSequenceEntry            RandomEntry;                                       // 0x48(0x50)(Edit, NoDestructor, NativeAccessSpecifierPublic)
};

// 0x8 (0x8 - 0x0)
// ScriptStruct FortniteGame.AntelopeVehicleBoostLevel
struct FAntelopeVehicleBoostLevel
{
public:
	float                                        AccumulationPercent;                               // 0x0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BoostTime;                                         // 0x4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.FortAppActivationSoundMixPair
struct FFortAppActivationSoundMixPair
{
public:
	class USoundMix*                             TrueMix;                                           // 0x0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundMix*                             FalseMix;                                          // 0x8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x58 (0x58 - 0x0)
// ScriptStruct FortniteGame.FortRechargingActionTimer
struct FFortRechargingActionTimer
{
public:
	UMulticastDelegateProperty_                  OnActivate;                                        // 0x0(0x10)(Edit, ZeroConstructor, EditConst, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnDeactivate;                                      // 0x10(0x10)(Edit, ZeroConstructor, EditConst, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnActivationFailed;                                // 0x20(0x10)(Edit, ZeroConstructor, EditConst, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	float                                        ChargeRate;                                        // 0x30(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ActiveExpenseRate;                                 // 0x34(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PassiveExpenseRate;                                // 0x38(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinActivationDurationTime;                         // 0x3C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinActivationCharge;                               // 0x40(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ActiveCooldownTime;                                // 0x44(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Charge;                                            // 0x48(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bIsActive;                                         // 0x4C(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bIsCharging;                                       // 0x4D(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bIsPassive;                                        // 0x4E(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_24A1[0x9];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x60 (0x60 - 0x0)
// ScriptStruct FortniteGame.AileronRoll
struct FAileronRoll
{
public:
	struct FFortRechargingActionTimer            Action;                                            // 0x0(0x58)(Edit, BlueprintVisible, BlueprintReadOnly, ContainsInstancedReference, NativeAccessSpecifierPublic)
	enum class EAileronRollDirection             Direction;                                         // 0x58(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_24A2[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.FlightControlSurfaces
struct FFlightControlSurfaces
{
public:
	float                                        RudderAngle;                                       // 0x0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AileronAngle;                                      // 0x4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ElevatorAngle;                                     // 0x8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FlapAngle;                                         // 0xC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x1C (0x1C - 0x0)
// ScriptStruct FortniteGame.ReplicatedControlState
struct FReplicatedControlState
{
public:
	struct FVector_NetQuantizeNormal             Up;                                                // 0x0(0xC)(NoDestructor, NativeAccessSpecifierPublic)
	struct FVector_NetQuantizeNormal             Forward;                                           // 0xC(0xC)(NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        bIsEngineOn : 1;                                   // Mask : 0x1 0x18(0x1)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_24A3[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x50 (0x50 - 0x0)
// ScriptStruct FortniteGame.RotationLerpData
struct FRotationLerpData
{
public:
	struct FQuat                                 RotationLerp_Start;                                // 0x0(0x10)(IsPlainOldData, RepSkip, NoDestructor, NativeAccessSpecifierPublic)
	struct FQuat                                 RotationLerp_End;                                  // 0x10(0x10)(IsPlainOldData, RepSkip, NoDestructor, NativeAccessSpecifierPublic)
	struct FQuat                                 RotationLerp_Target;                               // 0x20(0x10)(IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	float                                        TotalLerpTime;                                     // 0x30(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_24A4[0x1C];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x38 (0x38 - 0x0)
// ScriptStruct FortniteGame.LocationLerpData
struct FLocationLerpData
{
public:
	struct FVector                               PositionLerp_Start;                                // 0x0(0xC)(ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               PositionLerp_End;                                  // 0xC(0xC)(ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               PositionLerp_Target;                               // 0x18(0xC)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TotalLerpTime;                                     // 0x24(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_24A5[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x188 (0x188 - 0x0)
// ScriptStruct FortniteGame.ExitCraftInfo
struct FExitCraftInfo
{
public:
	struct FGameplayTag                          RequiredExitCraftTag;                              // 0x0(0x8)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FScalableFloat                        ExitCraftSpawnerZOffset;                           // 0x8(0x20)(Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FScalableFloat                        ExitCraftSpawnDelay;                               // 0x28(0x20)(Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FScalableFloat                        SpawnDestructionInitialDelay;                      // 0x48(0x20)(Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FScalableFloat                        SpawnDestructionDelayBetweenPieces;                // 0x68(0x20)(Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FScalableFloat                        ExitCraftZOffset;                                  // 0x88(0x20)(Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FScalableFloat                        ExitCraftTargetZOffset;                            // 0xA8(0x20)(Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FScalableFloat                        ExitCraftTimeToHoverLocation;                      // 0xC8(0x20)(Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FScalableFloat                        ExitCraftTimeToHoverRotation;                      // 0xE8(0x20)(Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FScalableFloat                        MinLandingSpeed;                                   // 0x108(0x20)(Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FScalableFloat                        ExitZOffset;                                       // 0x128(0x20)(Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FScalableFloat                        ExitTime;                                          // 0x148(0x20)(Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FScalableFloat                        InteractionTime;                                   // 0x168(0x20)(Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.DisplayManagerVariantData
struct FDisplayManagerVariantData
{
public:
	class UAthenaCosmeticItemDefinition*         CosmeticItemDef;                                   // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FMcpVariantChannelInfo>        CosmeticVariantChannels;                           // 0x8(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
};

// 0x58 (0x58 - 0x0)
// ScriptStruct FortniteGame.CosmeticLoadoutPartyReplState
struct FCosmeticLoadoutPartyReplState
{
public:
	class FString                                BackpackPersistentName;                            // 0x0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                BannerIconId;                                      // 0x10(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                BannerColorId;                                     // 0x20(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        BattlePassLevel;                                   // 0x30(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        BattlePassSelfBoostXp;                             // 0x34(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        BattlePassFriendBoostXp;                           // 0x38(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_24A6[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FDisplayManagerVariantData            AthenaCharacterVariantInfo;                        // 0x40(0x18)(NativeAccessSpecifierPublic)
};

// 0x48 (0x48 - 0x0)
// ScriptStruct FortniteGame.VehicleClassDetails
struct FVehicleClassDetails
{
public:
	TSubclassOf<class AFortAthenaVehicle>        VehicleClass;                                      // 0x0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FScalableFloat                        VehicleMinSpawnPercent;                            // 0x8(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FScalableFloat                        VehicleMaxSpawnPercent;                            // 0x28(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
};

// 0xE0 (0xE0 - 0x0)
// ScriptStruct FortniteGame.FortRespawnLogicData
struct FFortRespawnLogicData
{
public:
	struct FScalableFloat                        DirectionDeviation;                                // 0x0(0x20)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FScalableFloat                        MinDistFromCenterPercent;                          // 0x20(0x20)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FScalableFloat                        MaxDistFromCenterPercent;                          // 0x40(0x20)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FScalableFloat                        MinHeightFromGround;                               // 0x60(0x20)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FScalableFloat                        MinHeightFromZero;                                 // 0x80(0x20)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FScalableFloat                        CameraDistance;                                    // 0xA0(0x20)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FScalableFloat                        RespawnTraceHeight;                                // 0xC0(0x20)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// 0x28 (0x28 - 0x0)
// ScriptStruct FortniteGame.ItemsToSpawn
struct FItemsToSpawn
{
public:
	class UFortWorldItemDefinition*              ItemToDrop;                                        // 0x0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FScalableFloat                        NumberToDrop;                                      // 0x8(0x20)(Edit, NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.BarrierMountedTurretData
struct FBarrierMountedTurretData
{
public:
	TArray<class UMaterialInterface*>            MaterialOverrides;                                 // 0x0(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	class UMaterialInterface*                    BaseMaterialOverride;                              // 0x10(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.BarrierHeadData
struct FBarrierHeadData
{
public:
	TArray<class UCustomCharacterPart*>          PartsToSwapIn;                                     // 0x0(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x28 (0x28 - 0x0)
// ScriptStruct FortniteGame.BarrierTeamState
struct FBarrierTeamState
{
public:
	enum class EFortTeam                         TeamNum;                                           // 0x0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EBarrierFoodTeam                  FoodTeam;                                          // 0x1(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_24A7[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AAthenaBarrierFlag*                    ObjectiveFlag;                                     // 0x8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AAthenaBarrierObjective*               ObjectiveObject;                                   // 0x10(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bRespawnEnabled;                                   // 0x18(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_24A8[0xF];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x1C8 (0x1C8 - 0x0)
// ScriptStruct FortniteGame.FortAthenaMutator_SurvivalObjectiveData
struct FFortAthenaMutator_SurvivalObjectiveData
{
public:
	TSubclassOf<class ABuildingActor>            BuildingActorObjectiveClass;                       // 0x0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FScalableFloat                        SpawnDistanceFromGround;                           // 0x8(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	int32                                        ActivationSafezoneIndex;                           // 0x28(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        bEndMatchOnDestroy : 1;                            // Mask : 0x1 0x2C(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        bSpawnOnPOI : 1;                                   // Mask : 0x2 0x2C(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        bIsSpecialActor : 1;                               // Mask : 0x4 0x2C(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_24A9[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGameplayTagQuery                     POIFilterQuery;                                    // 0x30(0x48)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	int32                                        RandomizedPOICount;                                // 0x78(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_24AA[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<int32>                                ExtraSafezoneIndexes;                              // 0x80(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	class ABuildingActor*                        SpawnedBuildingActorObjective;                     // 0x90(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGameplayTag                          SpecialActorTag;                                   // 0x98(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FSlateBrush                           SpecialActorMinimapIconBrush;                      // 0xA0(0x88)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPrivate)
	struct FVector2D                             SpecialActorMinimapIconScale;                      // 0x128(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FSlateBrush                           SpecialActorCompassIconBrush;                      // 0x130(0x88)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPrivate)
	struct FVector2D                             SpecialActorCompassIconScale;                      // 0x1B8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  SpecialActorID;                                    // 0x1C0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};

// 0x50 (0x50 - 0x0)
// ScriptStruct FortniteGame.ControlPointInstanceData
struct FControlPointInstanceData
{
public:
	class AAthenaCapturePoint*                   ControlPoint;                                      // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EControlPointState                ControlPointState;                                 // 0x8(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_24AB[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        SpawnDataIdx;                                      // 0xC(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SpawnTime;                                         // 0x10(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        EnableTime;                                        // 0x14(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DisableTime;                                       // 0x18(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortTeam                         PrevOwningTeam;                                    // 0x1C(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_24AC[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AFortTeamInfoAthena*                   CachedOwningTeamInfo;                              // 0x20(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PointAccrualTime;                                  // 0x28(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PointsRemainder;                                   // 0x2C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BonusPointAccrualTime;                             // 0x30(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BonusPointsRemainder;                              // 0x34(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CachedPointAccrualValue;                           // 0x38(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CachedBonusPointAccrualValue;                      // 0x3C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bPointFinished;                                    // 0x40(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_24AD[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        CachedSafeZonePhaseWhenToSpawn;                    // 0x44(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIgnoreForOrderMessaging;                          // 0x48(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bAlwaysInPlay;                                     // 0x49(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_24AE[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        TimeOfShutdown;                                    // 0x4C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x80 (0x80 - 0x0)
// ScriptStruct FortniteGame.FortPieSliceSpawnData
struct FFortPieSliceSpawnData
{
public:
	struct FScalableFloat                        SpawnDirection;                                    // 0x0(0x20)(Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FScalableFloat                        SpawnDirectionDeviation;                           // 0x20(0x20)(Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FScalableFloat                        MinSpawnDistanceFromCenter;                        // 0x40(0x20)(Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FScalableFloat                        MaxSpawnDistanceFromCenter;                        // 0x60(0x20)(Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// 0x148 (0x1C8 - 0x80)
// ScriptStruct FortniteGame.ControlPointSpawnData
struct FControlPointSpawnData : public FFortPieSliceSpawnData
{
public:
	struct FScalableFloat                        SpawnDelayTime;                                    // 0x80(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FScalableFloat                        SafeZonePhaseWhenToSpawn;                          // 0xA0(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FScalableFloat                        SafeZonePhaseWhereToSpawn;                         // 0xC0(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FScalableFloat                        EnableDelayTime;                                   // 0xE0(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FScalableFloat                        EnableInSafeZonePhase;                             // 0x100(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FScalableFloat                        DisableDelayTime;                                  // 0x120(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FScalableFloat                        DisableInSafeZonePhase;                            // 0x140(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FScalableFloat                        PointsEarnedPerSecond;                             // 0x160(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FScalableFloat                        BonusPointsEarnedPerSecond;                        // 0x180(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FScalableFloat                        bIgnoreForOrderMessaging;                          // 0x1A0(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	int32                                        IconMaterialIndex;                                 // 0x1C0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bAlwaysInPlay;                                     // 0x1C4(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_24AF[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x38 (0x38 - 0x0)
// ScriptStruct FortniteGame.ControlPointAssetData
struct FControlPointAssetData
{
public:
	TSubclassOf<class AAthenaCapturePoint>       CapturePointClass;                                 // 0x0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FScalableFloat                        SpawnDistanceFromGround;                           // 0x8(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FVector2D                             MiniMapIconScale;                                  // 0x28(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             CompassIconScale;                                  // 0x30(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x28 (0x28 - 0x0)
// ScriptStruct FortniteGame.ItemsToGive
struct FItemsToGive
{
public:
	class UFortWorldItemDefinition*              ItemToDrop;                                        // 0x0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FScalableFloat                        NumberToGive;                                      // 0x8(0x20)(Edit, NativeAccessSpecifierPublic)
};

// 0x14 (0x14 - 0x0)
// ScriptStruct FortniteGame.GravityMovementData
struct FGravityMovementData
{
public:
	float                                        GravityZScale;                                     // 0x0(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        VehicleGravityZScale;                              // 0x4(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        JumpZVelocityOverride;                             // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        JumpHorizontalAccelerationOverride;                // 0xC(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        JumpHorizontalVelocityOverride;                    // 0x10(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0xC (0xC - 0x0)
// ScriptStruct FortniteGame.HeistTeamHoldingJewelInfo
struct FHeistTeamHoldingJewelInfo
{
public:
	int32                                        JewelsHeld;                                        // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TimeStartedHoldingJewel;                           // 0x4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AccumulatedTotalTime;                              // 0x8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x48 (0x48 - 0x0)
// ScriptStruct FortniteGame.HeistPostMatchAnalyticsData
struct FHeistPostMatchAnalyticsData
{
public:
	int32                                        SupplyDropsOpenedPerMatch;                         // 0x0(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        JewelsLostToStorm;                                 // 0x4(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        HeistDropsLostToStorm;                             // 0x8(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        JewelsEquippedPerMatch;                            // 0xC(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<float>                                TimeJewelHeldPerTeam;                              // 0x10(0x10)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	TArray<int32>                                PlayersAlivePerEscape;                             // 0x20(0x10)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	int32                                        NumSuccessfulEscapes;                              // 0x30(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_24B0[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<enum class EFortTeam>                 WinningTeams;                                      // 0x38(0x10)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
};

// 0x30 (0x30 - 0x0)
// ScriptStruct FortniteGame.HeistExitCraftData
struct FHeistExitCraftData
{
public:
	class AFortAthenaExitCraftSpawner*           ExitCraftSpawner;                                  // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AFortAthenaExitCraft*                  SpawnedExitCraft;                                  // 0x8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EHeistExitCraftState              ExitCraftState;                                    // 0x10(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_24B1[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class AFortPlayerPawnAthena*>         DepartedPawns;                                     // 0x18(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	float                                        SpawnTime;                                         // 0x28(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsUsed;                                           // 0x2C(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bHasDeparted;                                      // 0x2D(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_24B2[0x2];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x20 (0xA0 - 0x80)
// ScriptStruct FortniteGame.HeistBlingDropSpawnData
struct FHeistBlingDropSpawnData : public FFortPieSliceSpawnData
{
public:
	struct FScalableFloat                        SafeZonePhaseWhereToSpawn;                         // 0x80(0x20)(Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// 0x60 (0xE0 - 0x80)
// ScriptStruct FortniteGame.HeistExitCraftSpawnData
struct FHeistExitCraftSpawnData : public FFortPieSliceSpawnData
{
public:
	struct FScalableFloat                        SpawnDelayTime;                                    // 0x80(0x20)(Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FScalableFloat                        SafeZonePhaseWhenToSpawn;                          // 0xA0(0x20)(Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FScalableFloat                        SafeZonePhaseWhereToSpawn;                         // 0xC0(0x20)(Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.ItemLoadoutContainer
struct FItemLoadoutContainer
{
public:
	TArray<struct FItemAndCount>                 Loadout;                                           // 0x0(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// 0x28 (0x28 - 0x0)
// ScriptStruct FortniteGame.ItemsToDropOnDeath
struct FItemsToDropOnDeath
{
public:
	class UFortWorldItemDefinition*              ItemToDrop;                                        // 0x0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FScalableFloat                        NumberToDrop;                                      // 0x8(0x20)(Edit, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.OmahaCharacterVariantInfoData
struct FOmahaCharacterVariantInfoData
{
public:
	TArray<struct FMcpVariantChannelInfo>        VariantChannelInfo;                                // 0x0(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0xC (0xC - 0x0)
// ScriptStruct FortniteGame.FortDelayRTMMData
struct FFortDelayRTMMData
{
public:
	bool                                         bDelayRTTM;                                        // 0x0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_24B3[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        MinRTTMDelay;                                      // 0x4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxRTTMDelay;                                      // 0x8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x30 (0x30 - 0x0)
// ScriptStruct FortniteGame.FortItemDeliverySupplyDropMutatorData
struct FFortItemDeliverySupplyDropMutatorData
{
public:
	bool                                         bShouldApplyMutator;                               // 0x0(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_24B4[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FScalableFloat                        NumDeliveryItemsToSpawn;                           // 0x8(0x20)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class UEnvQuery*                             SupplyDropPlacementQuery;                          // 0x28(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x20 (0x20 - 0x0)
// ScriptStruct FortniteGame.FortSupplyDropMutatorData
struct FFortSupplyDropMutatorData
{
public:
	class FName                                  SupplyDropID;                                      // 0x0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShouldCenterGroundCheckAtFoundLocation;           // 0x8(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_24B5[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FFortItemDeliverySupplyDropMutatorData> ItemDeliveryMutatorPerSafeZonePhase;               // 0x10(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.PartSwapData
struct FPartSwapData
{
public:
	TArray<class UCustomCharacterPart*>          PartsToSwapIn;                                     // 0x0(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x20 (0x20 - 0x0)
// ScriptStruct FortniteGame.TimeOfDaySpeed
struct FTimeOfDaySpeed
{
public:
	float                                        Speed;                                             // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_24B6[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  DisplayName;                                       // 0x8(0x18)(NativeAccessSpecifierPublic)
};

// 0x20 (0x20 - 0x0)
// ScriptStruct FortniteGame.TimeOfDayPhase
struct FTimeOfDayPhase
{
public:
	float                                        Time;                                              // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_24B7[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  DisplayName;                                       // 0x8(0x18)(NativeAccessSpecifierPublic)
};

// 0x50 (0x50 - 0x0)
// ScriptStruct FortniteGame.FortAthenaVehicleSessionTelemetryInfo
struct FFortAthenaVehicleSessionTelemetryInfo
{
public:
	uint8                                        Pad_24B8[0x50];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.SeatTransitionMontage
struct FSeatTransitionMontage
{
public:
	class UAnimMontage*                          Montage;                                           // 0x0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        FromSeatIndex;                                     // 0x8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        ToSeatIndex;                                       // 0xC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x8 (0x8 - 0x0)
// ScriptStruct FortniteGame.AthenaCarPlayerSlotUnreplicated
struct FAthenaCarPlayerSlotUnreplicated
{
public:
	class UInputComponent*                       Input;                                             // 0x0(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.IgnoredPawn
struct FIgnoredPawn
{
public:
	class AFortPawn*                             Pawn;                                              // 0x0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Time;                                              // 0x8(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_24B9[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x8 (0x8 - 0x0)
// ScriptStruct FortniteGame.AthenaVehicleShootingCone
struct FAthenaVehicleShootingCone
{
public:
	float                                        YawConstraint;                                     // 0x0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PitchConstraint;                                   // 0x4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0xC0 (0xC0 - 0x0)
// ScriptStruct FortniteGame.AthenaCarPlayerSlot
struct FAthenaCarPlayerSlot
{
public:
	class FName                                  SeatSocket;                                        // 0x0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  SeatChoiceSocket;                                  // 0x8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  SeatIndicatorSocket;                               // 0x10(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                  SeatChoiceDisplayText;                             // 0x18(0x18)(Edit, NativeAccessSpecifierPublic)
	class FName                                  SeatCollision;                                     // 0x30(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FName>                          ExitSockets;                                       // 0x38(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	struct FAthenaVehicleShootingCone            ShootingCone;                                      // 0x48(0x8)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	class USoundBase*                            SoundOnEnter;                                      // 0x50(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundBase*                            SoundOnExit;                                       // 0x58(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsSelectable : 1;                                 // Mask : 0x1 0x60(0x1)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bUseGroundMotion : 1;                              // Mask : 0x2 0x60(0x1)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bUseVehicleIsOnGround : 1;                         // Mask : 0x4 0x60(0x1)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bCanEmote : 1;                                     // Mask : 0x8 0x60(0x1)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bForceCrouch : 1;                                  // Mask : 0x10 0x60(0x1)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_24BA[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               ActorSpaceCameraOffset;                            // 0x64(0xC)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               VehicleSpaceCameraOffset;                          // 0x70(0xC)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SlopeCompensationCameraOffset;                     // 0x7C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               StandingFiringOffset;                              // 0x80(0xC)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               CrouchingFiringOffset;                             // 0x8C(0xC)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               EmoteOffset;                                       // 0x98(0xC)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_24BB[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AFortPlayerPawn*                       Player;                                            // 0xA8(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AFortPlayerControllerZone*             Controller;                                        // 0xB0(0x8)(ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PlayerEntryTime;                                   // 0xB8(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bOffsetPlayerRelativeAttachLocation;               // 0xBC(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bUseExitTimer;                                     // 0xBD(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_24BC[0x2];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x160 (0x160 - 0x0)
// ScriptStruct FortniteGame.VehicleSpringInfo
struct FVehicleSpringInfo
{
public:
	class FName                                  SpringStart;                                       // 0x0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               SpringStartLocalOffset;                            // 0x8(0xC)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  ForceApplicationPoint;                             // 0x14(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SpringLength;                                      // 0x1C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SpringStiff;                                       // 0x20(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SpringDamp;                                        // 0x24(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SpringRadius;                                      // 0x28(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxAccelChange;                                    // 0x2C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int8                                         SeatSocketIndex;                                   // 0x30(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsLookAhead : 1;                                  // Mask : 0x1 0x31(0x1)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bNormalToGroundTriangle : 1;                       // Mask : 0x2 0x31(0x1)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bForceAlongSpringNormal : 1;                       // Mask : 0x4 0x31(0x1)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_24BD[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        LookAheadMinSpeed;                                 // 0x34(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LookAheadMaxSpeed;                                 // 0x38(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LookAheadMinStiff;                                 // 0x3C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LookAheadMaxStiff;                                 // 0x40(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_24BE[0x11C];                                   // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.VehicleImpactBucket
struct FVehicleImpactBucket
{
public:
	uint8                                        Pad_24BF[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.SMVehicleGear
struct FSMVehicleGear
{
public:
	float                                        TopSpeed;                                          // 0x0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinSpeed;                                          // 0x4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PushForce;                                         // 0x8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RampTime;                                          // 0xC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SteeringAngleMultiplier;                           // 0x10(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bAutoBrake : 1;                                    // Mask : 0x1 0x14(0x1)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIgnoreGravity : 1;                                // Mask : 0x2 0x14(0x1)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_24C0[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x24 (0x24 - 0x0)
// ScriptStruct FortniteGame.VehicleTargetOrientation
struct FVehicleTargetOrientation
{
public:
	struct FVector                               UpVector;                                          // 0x0(0xC)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               ForwardVector;                                     // 0xC(0xC)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               Location;                                          // 0x18(0xC)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.ReplicatedAthenaVehicleAttributes
struct FReplicatedAthenaVehicleAttributes
{
public:
	float                                        FrontLateralFrictionScale;                         // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RearLateralFrictionScale;                          // 0x4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BrakeForceTractionScale;                           // 0x8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ForwardForceTractionScale;                         // 0xC(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SlopeAntigravityScale;                             // 0x10(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TopSpeedScale;                                     // 0x14(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x40 (0x40 - 0x0)
// ScriptStruct FortniteGame.ReplicatedAthenaVehiclePhysicsState
struct FReplicatedAthenaVehiclePhysicsState
{
public:
	struct FVector_NetQuantize100                Translation;                                       // 0x0(0xC)(NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_24C1[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FQuat                                 Rotation;                                          // 0x10(0x10)(IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FVector_NetQuantize10                 LinearVelocity;                                    // 0x20(0xC)(NoDestructor, NativeAccessSpecifierPublic)
	struct FVector_NetQuantize10                 AngularVelocity;                                   // 0x2C(0xC)(NoDestructor, NativeAccessSpecifierPublic)
	uint16                                       SyncKey;                                           // 0x38(0x2)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_24C2[0x6];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.SpringGroundTriangle
struct FSpringGroundTriangle
{
public:
	class FName                                  Socket0;                                           // 0x0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  Socket1;                                           // 0x8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  Socket2;                                           // 0x10(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.PotentiallyDestroyedBuilding
struct FPotentiallyDestroyedBuilding
{
public:
	class ABuildingActor*                        BuildingActor;                                     // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TimeSinceCollision;                                // 0x8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_24C3[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x2C (0x2C - 0x0)
// ScriptStruct FortniteGame.FortAthenaVehicleInputState
struct FFortAthenaVehicleInputState
{
public:
	float                                        ForwardAlpha;                                      // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RightAlpha;                                        // 0x4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PitchAlpha;                                        // 0x8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LookUpDelta;                                       // 0xC(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TurnDelta;                                         // 0x10(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SteerAlpha;                                        // 0x14(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        GravityOffset;                                     // 0x18(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               MovementDir;                                       // 0x1C(0xC)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsSprinting : 1;                                  // Mask : 0x1 0x28(0x1)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsJumping : 1;                                    // Mask : 0x2 0x28(0x1)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsBraking : 1;                                    // Mask : 0x4 0x28(0x1)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsHonking : 1;                                    // Mask : 0x8 0x28(0x1)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIgnoreForwardInAir : 1;                           // Mask : 0x10 0x28(0x1)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bMovementModifier0 : 1;                            // Mask : 0x20 0x28(0x1)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bMovementModifier1 : 1;                            // Mask : 0x40 0x28(0x1)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bMovementModifier2 : 1;                            // Mask : 0x80 0x28(0x1)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_24C4[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x28 (0x28 - 0x0)
// ScriptStruct FortniteGame.FortAthenaVehicleInputStateUnreliable
struct FFortAthenaVehicleInputStateUnreliable
{
public:
	float                                        ForwardAlpha;                                      // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RightAlpha;                                        // 0x4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PitchAlpha;                                        // 0x8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LookUpDelta;                                       // 0xC(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TurnDelta;                                         // 0x10(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SteerAlpha;                                        // 0x14(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        GravityOffset;                                     // 0x18(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector_NetQuantize100                MovementDir;                                       // 0x1C(0xC)(NoDestructor, NativeAccessSpecifierPublic)
};

// 0x1 (0x1 - 0x0)
// ScriptStruct FortniteGame.FortAthenaVehicleInputStateReliable
struct FFortAthenaVehicleInputStateReliable
{
public:
	uint8                                        bIsSprinting : 1;                                  // Mask : 0x1 0x0(0x1)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsJumping : 1;                                    // Mask : 0x2 0x0(0x1)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsBraking : 1;                                    // Mask : 0x4 0x0(0x1)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsHonking : 1;                                    // Mask : 0x8 0x0(0x1)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIgnoreForwardInAir : 1;                           // Mask : 0x10 0x0(0x1)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bMovementModifier0 : 1;                            // Mask : 0x20 0x0(0x1)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bMovementModifier1 : 1;                            // Mask : 0x40 0x0(0x1)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bMovementModifier2 : 1;                            // Mask : 0x80 0x0(0x1)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0xC (0xC - 0x0)
// ScriptStruct FortniteGame.VehicleBounceState
struct FVehicleBounceState
{
public:
	enum class EBounceCompressionState           CompressionState;                                  // 0x0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_24C5[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        CompressionValue;                                  // 0x4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        StateCooldown;                                     // 0x8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0xC (0xC - 0x0)
// ScriptStruct FortniteGame.ReplicatedAthenaVehicleState
struct FReplicatedAthenaVehicleState
{
public:
	struct FVector                               ForwardVectorTarget;                               // 0x0(0xC)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0xB8 (0xB8 - 0x0)
// ScriptStruct FortniteGame.AttachedInfo
struct FAttachedInfo
{
public:
	struct FHitResult                            Hit;                                               // 0x0(0x88)(IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	class AActor*                                AttachedToActor;                                   // 0x88(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector_NetQuantize10                 AttachOffset;                                      // 0x90(0xC)(NoDestructor, NativeAccessSpecifierPublic)
	struct FVector_NetQuantizeNormal             VelocityNormalized;                                // 0x9C(0xC)(NoDestructor, NativeAccessSpecifierPublic)
	float                                        NarrowPlacementAgainstVelocityThreshold;           // 0xA8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        StickyOffsetFromPhysicsMesh;                       // 0xAC(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        StickyOffsetFromBoneCenter;                        // 0xB0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_24C6[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x58 (0x58 - 0x0)
// ScriptStruct FortniteGame.MyFortCategoryData
struct FMyFortCategoryData
{
public:
	class FText                                  CategoryName;                                      // 0x0(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayTag                          TooltipTag;                                        // 0x18(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                 ModifiedTagContainer;                              // 0x20(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	bool                                         bIsCore;                                           // 0x40(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_24C7[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FGameplayAttribute>            Attributes;                                        // 0x48(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x380 (0x380 - 0x0)
// ScriptStruct FortniteGame.FortAttributeDetailsInfo
struct FFortAttributeDetailsInfo
{
public:
	struct FGameplayTagContainer                 RequiredTags;                                      // 0x0(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FFortMultiSizeBrush                   Icon;                                              // 0x20(0x330)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class FText                                  DisplayName;                                       // 0x350(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class FText                                  Description;                                       // 0x368(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
};

// 0x78 (0x78 - 0x0)
// ScriptStruct FortniteGame.FortAttributeInfo
struct FFortAttributeInfo
{
public:
	struct FGameplayAttribute                    Attribute;                                         // 0x0(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortAttributeDisplay             DisplayMethod;                                     // 0x20(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_24C8[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  UnitDisplayName;                                   // 0x28(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	float                                        DisplayScalingFactor;                              // 0x40(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_24C9[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  FormatText;                                        // 0x48(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	TArray<struct FFortAttributeDetailsInfo>     AttributeDetails;                                  // 0x60(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                         bShowInSummaries;                                  // 0x70(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShowInDifferences;                                // 0x71(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShowAsBuffInFE;                                   // 0x72(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bNegativeValuesShouldBeDisplayedPositively;        // 0x73(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_24CA[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.FortAttributeInitializationKey
struct FFortAttributeInitializationKey
{
public:
	class FName                                  AttributeInitCategory;                             // 0x0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  AttributeInitSubCategory;                          // 0x8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x18 (0x28 - 0x10)
// ScriptStruct FortniteGame.FortGameplayAttributeData
struct FFortGameplayAttributeData : public FGameplayAttributeData
{
public:
	float                                        Minimum;                                           // 0x10(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        Maximum;                                           // 0x14(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bIsClamped;                                        // 0x18(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bShouldClampBase;                                  // 0x19(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_24CB[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        UnclampedBaseValue;                                // 0x1C(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        UnclampedCurrentValue;                             // 0x20(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_24CC[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x10 (0x18 - 0x8)
// ScriptStruct FortniteGame.FortBadgeScoringData
struct FFortBadgeScoringData : public FTableRowBase
{
public:
	int32                                        ScoreAwarded;                                      // 0x8(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MissionPoints;                                     // 0xC(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EStatCategory                     ScoreCategory;                                     // 0x10(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_24CD[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        ScoreThreshold;                                    // 0x14(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x20 (0x20 - 0x0)
// ScriptStruct FortniteGame.FortAnalyticsEventAttribute
struct FFortAnalyticsEventAttribute
{
public:
	uint8                                        Pad_24CE[0x20];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x30 (0x30 - 0x0)
// ScriptStruct FortniteGame.DistanceToTargetComparison
struct FDistanceToTargetComparison
{
public:
	bool                                         bUseOverriddenValue;                               // 0x0(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_24CF[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        OverriddenValue;                                   // 0x4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                 DistanceDataTags;                                  // 0x8(0x20)(Edit, NativeAccessSpecifierPublic)
	enum class EArithmeticKeyOperation           Operator;                                          // 0x28(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETargetDistanceComparisonType     ComparisonType;                                    // 0x29(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_24D0[0x6];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.FortBuildingSoundsPerAffiliation
struct FFortBuildingSoundsPerAffiliation
{
public:
	class USoundBase*                            SoundFriendly;                                     // 0x0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundBase*                            SoundEnemy;                                        // 0x8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x120 (0x120 - 0x0)
// ScriptStruct FortniteGame.FortBuildingSoundsPerResourceType
struct FFortBuildingSoundsPerResourceType
{
public:
	struct FFortBuildingSoundsPerAffiliation     OnConstruction;                                    // 0x0(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_24D1[0x50];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FFortBuildingSoundsPerAffiliation     OnGenericDestruction;                              // 0x60(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_24D2[0x50];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FFortBuildingSoundsPerAffiliation     OnPlayerBuiltDestruction;                          // 0xC0(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_24D3[0x50];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x70 (0x70 - 0x0)
// ScriptStruct FortniteGame.FortActorRecord
struct FFortActorRecord
{
public:
	struct FGuid                                 ActorGuid;                                         // 0x0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortBuildingPersistentState      ActorState;                                        // 0x10(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_24D4[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class ABuildingActor>            ActorClass;                                        // 0x18(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTransform                            ActorTransform;                                    // 0x20(0x30)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	bool                                         bSpawnedActor;                                     // 0x50(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_24D5[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<uint8>                                ActorData;                                         // 0x58(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_24D6[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x70 (0x70 - 0x0)
// ScriptStruct FortniteGame.FortBuildingInstruction
struct FFortBuildingInstruction
{
public:
	struct FFortActorRecord                      ActorRecord;                                       // 0x0(0x70)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, SaveGame, NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.RecipeDataTableRowHandleQuantityData
struct FRecipeDataTableRowHandleQuantityData
{
public:
	struct FDataTableRowHandle                   DataTableRowHandle;                                // 0x0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	int32                                        Quantity;                                          // 0x10(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         ConvertRemainderUp;                                // 0x14(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_24D7[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x138 (0x140 - 0x8)
// ScriptStruct FortniteGame.FortCalendarEventInventoryTransformData
struct FFortCalendarEventInventoryTransformData : public FTableRowBase
{
public:
	class FName                                  CalendarChannelName;                               // 0x8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  CalendarEventName;                                 // 0x10(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FName>                          AllowedProfileTypes;                               // 0x18(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                 PrerequisiteHomebaseProperties;                    // 0x28(0x20)(Edit, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UFortQuestItemDefinition> PrerequisiteQuest;                                 // 0x48(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDataTableRowHandle                   PrerequisiteObjective;                             // 0x70(0x10)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	TArray<TSoftObjectPtr<class UFortQuestItemDefinition>> PrerequisiteIncompleteOrUngrantedQuests;           // 0x80(0x10)(Edit, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<TSoftObjectPtr<class UFortItemDefinition>> PrerequisiteUnownedItems;                          // 0x90(0x10)(Edit, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<TSoftObjectPtr<class UFortQuestItemDefinition>> QuestsOnlyActiveDuringEvent;                       // 0xA0(0x10)(Edit, ZeroConstructor, EditConst, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<struct FFortItemQuantityPair>         ItemsToGrant;                                      // 0xB0(0x10)(Edit, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
	TArray<struct FFortHiddenRewardQuantityPair> ItemsToGrantByTemplate;                            // 0xC0(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FRecipeDataTableRowHandleQuantityData> ConversionRecipesToRunOnEventStart;                // 0xD0(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FRecipeDataTableRowHandleQuantityData> ConversionRecipesToRunAfterEvent;                  // 0xE0(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FFortItemQuantityPair>         ItemsToRemoveAfterEvent;                           // 0xF0(0x10)(Edit, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
	TArray<struct FFortHiddenRewardQuantityPair> ItemsToRemoveAfterEventByTemplate;                 // 0x100(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UFortPersistentResourceItemDefinition> EventCurrency;                                     // 0x110(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        EventCurrencyConversionFactor;                     // 0x138(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_24D8[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.RecipeData
struct FRecipeData
{
public:
	uint8                                        Pad_24D9[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x14 (0x14 - 0x0)
// ScriptStruct FortniteGame.FortUICameraFrameTargetBounds
struct FFortUICameraFrameTargetBounds
{
public:
	struct FVector                               Origin;                                            // 0x0(0xC)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CylinderHalfHeight;                                // 0xC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CylinderRadius;                                    // 0x10(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x24 (0x24 - 0x0)
// ScriptStruct FortniteGame.FortUICameraFrameTargetSettings
struct FFortUICameraFrameTargetSettings
{
public:
	struct FVector                               FocusPointToCenter;                                // 0x0(0xC)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortUICameraFrameTargetBoundingBehavior BoundingBehavior;                                  // 0xC(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_24DA[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FFortUICameraFrameTargetBounds        BoundsToFrame;                                     // 0x10(0x14)(BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
};

// 0x1C (0x1C - 0x0)
// ScriptStruct FortniteGame.InterpOffsetData
struct FInterpOffsetData
{
public:
	struct FVector                               ViewOffset;                                        // 0x0(0xC)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               LargeBodyTypeAddtnlOffset;                         // 0xC(0xC)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PitchAngle;                                        // 0x18(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.InterpOffset
struct FInterpOffset
{
public:
	TArray<struct FInterpOffsetData>             SamplePoints;                                      // 0x0(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.FilledGadgetSlot
struct FFilledGadgetSlot
{
public:
	class FString                                Gadget;                                            // 0x0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Slot_index;                                        // 0x10(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_24DB[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x48 (0x48 - 0x0)
// ScriptStruct FortniteGame.FortCrewSlotInformation
struct FFortCrewSlotInformation
{
public:
	class FText                                  DisplayName;                                       // 0x0(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FName                                  SlotName;                                          // 0x18(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                 SlotTags;                                          // 0x20(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	float                                        SlotStatContribution;                              // 0x40(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_24DC[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x28 (0x28 - 0x0)
// ScriptStruct FortniteGame.CarriedObjectAttachmentInfo
struct FCarriedObjectAttachmentInfo
{
public:
	class AActor*                                AttachParent;                                      // 0x0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  SocketName;                                        // 0x8(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               RelativeTranslation;                               // 0x10(0xC)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                              RelativeRotation;                                  // 0x1C(0xC)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
};

// 0x10 (0x18 - 0x8)
// ScriptStruct FortniteGame.FortStreakBreakerData
struct FFortStreakBreakerData : public FTableRowBase
{
public:
	class FString                                TemplateName;                                      // 0x8(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};

// 0x8 (0x10 - 0x8)
// ScriptStruct FortniteGame.FortProceduralCatalogCostPriceFactor
struct FFortProceduralCatalogCostPriceFactor : public FTableRowBase
{
public:
	float                                        PriceFactor;                                       // 0x8(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_24DD[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.FortChallengeBundleRewards
struct FFortChallengeBundleRewards
{
public:
	int32                                        CompletionCount;                                   // 0x0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_24DE[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FAthenaRewardItemReference>    Rewards;                                           // 0x8(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x58 (0x58 - 0x0)
// ScriptStruct FortniteGame.FortChallengeBundleQuestEntry
struct FFortChallengeBundleQuestEntry
{
public:
	TSoftObjectPtr<class UFortQuestItemDefinition> QuestDefinition;                                   // 0x0(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EChallengeBundleQuestUnlockType   QuestUnlockType;                                   // 0x28(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EChallengeBundleQuestVisualStyle  QuestVisualStyle;                                  // 0x29(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_24DF[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        UnlockValue;                                       // 0x2C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UFortGiftBoxItemDefinition> GiftBoxToUse;                                      // 0x30(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x20 (0x20 - 0x0)
// ScriptStruct FortniteGame.FortGiftBoxFortmatData
struct FFortGiftBoxFortmatData
{
public:
	class FString                                StringAssetType;                                   // 0x0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                StringData;                                        // 0x10(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x30 (0x30 - 0x0)
// ScriptStruct FortniteGame.FortChallengeBundleScheduleEntry
struct FFortChallengeBundleScheduleEntry
{
public:
	TSoftObjectPtr<class UFortChallengeBundleItemDefinition> ChallengeBundle;                                   // 0x0(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EChallengeScheduleUnlockType      UnlockType;                                        // 0x28(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_24E0[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        UnlockValue;                                       // 0x2C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.SpawnPickupEntry
struct FSpawnPickupEntry
{
public:
	class FString                                Name;                                              // 0x0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class AActor>                    PickupClass;                                       // 0x10(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0xF (0x10 - 0x1)
// ScriptStruct FortniteGame.FortClientAnnouncementData_Conversation
struct FFortClientAnnouncementData_Conversation : public FFortClientAnnouncementData
{
public:
	//class UFortConversation*                   Conversation;                                      // 0x0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_24E1[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	enum class EFortAnnouncementDisplayPreference ConversationDisplayPreference;                     // 0x8(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_24E2[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x20 (0x20 - 0x0)
// ScriptStruct FortniteGame.ActionTextPair
struct FActionTextPair
{
public:
	class FName                                  Action;                                            // 0x0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                  Text;                                              // 0x8(0x18)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
};

// 0x10 (0xF8 - 0xE8)
// ScriptStruct FortniteGame.FortClientAnnouncementData_Keybinding
struct FFortClientAnnouncementData_Keybinding : public FFortClientAnnouncementData_Basic
{
public:
	TArray<struct FActionTextPair>               GamapadActionTextList;                             // 0xE8(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0xF (0x10 - 0x1)
// ScriptStruct FortniteGame.FortClientAnnouncementData_ZoneModifiers
struct FFortClientAnnouncementData_ZoneModifiers : public FFortClientAnnouncementData
{
public:
	//TArray<class UFortGameplayModifierItemDefinition*> Modifiers;                                         // 0x0(0x10)(BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_24E3[0xF];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.FortClientAnnouncementQueue
struct FFortClientAnnouncementQueue
{
public:
	TArray<class AFortClientAnnouncement*>       Announcements;                                     // 0x0(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x40 (0x40 - 0x0)
// ScriptStruct FortniteGame.ClientBotBuildStep
struct FClientBotBuildStep
{
public:
	uint8                                        Pad_24E4[0x40];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x20 (0x20 - 0x0)
// ScriptStruct FortniteGame.MovementTestDefinition
struct FMovementTestDefinition
{
public:
	float                                        ForwardMoveStrength;                               // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SideMoveStrength;                                  // 0x4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Duration;                                          // 0x8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_24E5[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                TestName;                                          // 0x10(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x30 (0x30 - 0x0)
// ScriptStruct FortniteGame.ConsumableTestDefinition
struct FConsumableTestDefinition
{
public:
	uint8                                        Pad_24E6[0x30];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x30 (0x30 - 0x0)
// ScriptStruct FortniteGame.FortClientPilotConsumableTestDefinition
struct FFortClientPilotConsumableTestDefinition
{
public:
	uint8                                        Pad_24E7[0x30];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x20 (0x20 - 0x0)
// ScriptStruct FortniteGame.FortClientPilotMovementTestDefinition
struct FFortClientPilotMovementTestDefinition
{
public:
	float                                        ForwardMoveStrength;                               // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SideMoveStrength;                                  // 0x4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Duration;                                          // 0x8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_24E8[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                TestName;                                          // 0x10(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x40 (0x40 - 0x0)
// ScriptStruct FortniteGame.ClientPilotBuildStep
struct FClientPilotBuildStep
{
public:
	uint8                                        Pad_24E9[0x40];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x60 (0x60 - 0x0)
// ScriptStruct FortniteGame.FortActionKeyMapping
struct FFortActionKeyMapping
{
public:
	class FName                                  ActionName;                                        // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortInputActionGroup             ActionGroup;                                       // 0x8(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ESubGame                          SubGameUsedIn;                                     // 0x9(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_24EA[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  LocalizedName;                                     // 0x10(0x18)(NativeAccessSpecifierPublic)
	struct FKey                                  KeyBind1;                                          // 0x28(0x18)(HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FKey                                  KeyBind2;                                          // 0x40(0x18)(HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        InputScale;                                        // 0x58(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsAxisMapping;                                    // 0x5C(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_24EB[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.UserActionBindings
struct FUserActionBindings
{
public:
	TArray<struct FFortActionKeyMapping>         UserActionBindings;                                // 0x0(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x30 (0x38 - 0x8)
// ScriptStruct FortniteGame.FortCollectionBookDirectPurchaseData
struct FFortCollectionBookDirectPurchaseData : public FTableRowBase
{
public:
	TArray<struct FFortItemQuantityPair>         PurchaseCosts;                                     // 0x8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                 PurchaseCatalysts;                                 // 0x18(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.FortPendingSlottedItemOperation
struct FFortPendingSlottedItemOperation
{
public:
	class FString                                SlottedItemId;                                     // 0x0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  SlotRowName;                                       // 0x10(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.FortCollectionBookStat
struct FFortCollectionBookStat
{
public:
	TArray<class FString>                        Pages;                                             // 0x0(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	int32                                        MaxBookXpLevelAchieved;                            // 0x10(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_24EC[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x20 (0x28 - 0x8)
// ScriptStruct FortniteGame.FortCollectionBookPageCategoryTableRow
struct FFortCollectionBookPageCategoryTableRow : public FTableRowBase
{
public:
	class FText                                  Name;                                              // 0x8(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	int32                                        SortPriority;                                      // 0x20(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_24ED[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x70 (0x78 - 0x8)
// ScriptStruct FortniteGame.FortCollectionBookPageData
struct FFortCollectionBookPageData : public FTableRowBase
{
public:
	class FText                                  Name;                                              // 0x8(0x18)(Edit, EditConst, NativeAccessSpecifierPublic)
	class FName                                  CategoryId;                                        // 0x20(0x8)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        SortPriority;                                      // 0x28(0x4)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  ProfileId;                                         // 0x2C(0x8)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_24EE[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class FName>                          SectionRowNames;                                   // 0x38(0x10)(Edit, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
	struct FFortRewardInfo                       Rewards;                                           // 0x48(0x30)(Edit, EditConst, NativeAccessSpecifierPublic)
};

// 0x58 (0x60 - 0x8)
// ScriptStruct FortniteGame.FortCollectionBookSectionData
struct FFortCollectionBookSectionData : public FTableRowBase
{
public:
	class FText                                  Name;                                              // 0x8(0x18)(Edit, EditConst, NativeAccessSpecifierPublic)
	TArray<class FName>                          SlotRowNames;                                      // 0x20(0x10)(Edit, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
	struct FFortRewardInfo                       Rewards;                                           // 0x30(0x30)(Edit, EditConst, NativeAccessSpecifierPublic)
};

// 0x18 (0x20 - 0x8)
// ScriptStruct FortniteGame.FortCollectionBookSlotSourceData
struct FFortCollectionBookSlotSourceData : public FTableRowBase
{
public:
	class FText                                  Description;                                       // 0x8(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
};

// 0x10 (0x18 - 0x8)
// ScriptStruct FortniteGame.FortCollectionBookSlotXPWeightData
struct FFortCollectionBookSlotXPWeightData : public FTableRowBase
{
public:
	float                                        ConstantWeight;                                    // 0x8(0x4)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RarityWeight;                                      // 0xC(0x4)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ItemLevelWeight;                                   // 0x10(0x4)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ItemRatingWeight;                                  // 0x14(0x4)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.FortCollectionBookSectionState
struct FFortCollectionBookSectionState
{
public:
	class FString                                Section;                                           // 0x0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortCollectionBookState          State;                                             // 0x10(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_24EF[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x40 (0x48 - 0x8)
// ScriptStruct FortniteGame.FortCollectionBookXPData
struct FFortCollectionBookXPData : public FTableRowBase
{
public:
	int32                                        XpToNextLevel;                                     // 0x8(0x4)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        TotalXpToGetToThisLevel;                           // 0xC(0x4)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFortRewardInfo                       Rewards;                                           // 0x10(0x30)(Edit, EditConst, NativeAccessSpecifierPublic)
	bool                                         bIsMajorReward;                                    // 0x40(0x1)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bAutoOpenRewardCardPacks;                          // 0x41(0x1)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_24F0[0x6];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x40 (0x40 - 0x0)
// ScriptStruct FortniteGame.FortCollisionAudioTriggerData
struct FFortCollisionAudioTriggerData
{
public:
	class USoundBase*                            Asset;                                             // 0x0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             ImpulseMagnitudeRange;                             // 0x8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bImpulseMagnitudeLowerBound;                       // 0x10(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bImpulseMagnitudeUpperBound;                       // 0x11(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_24F1[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector2D                             VolumeRange;                                       // 0x14(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             PitchRange;                                        // 0x1C(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinRetriggerTime;                                  // 0x24(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxTriggerDistance;                                // 0x28(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_24F2[0x14];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x60 (0x60 - 0x0)
// ScriptStruct FortniteGame.CombatThresholdData
struct FCombatThresholdData
{
public:
	struct FScalableFloat                        HeatLevel;                                         // 0x0(0x20)(Edit, NativeAccessSpecifierPublic)
	struct FScalableFloat                        ExitHeatLevel;                                     // 0x20(0x20)(Edit, NativeAccessSpecifierPublic)
	class FString                                ThresholdName;                                     // 0x40(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          DebugGraphColor;                                   // 0x50(0x10)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x8 (0x8 - 0x0)
// ScriptStruct FortniteGame.CombatEventMultiplier
struct FCombatEventMultiplier
{
public:
	enum class EFortCombatEvents                 CombatEvent;                                       // 0x0(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_24F3[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        MaxContribution;                                   // 0x4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x38 (0x38 - 0x0)
// ScriptStruct FortniteGame.CombatFactorData
struct FCombatFactorData
{
public:
	TArray<struct FCombatEventMultiplier>        ContributingCombatEvents;                          // 0x0(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	float                                        MaxValue;                                          // 0x10(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_24F4[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                DebugFactorName;                                   // 0x18(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          DebugGraphColor;                                   // 0x28(0x10)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x38 (0x38 - 0x0)
// ScriptStruct FortniteGame.CombatEventData
struct FCombatEventData
{
public:
	float                                        Heat;                                              // 0x0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxHeatContribution;                               // 0x4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CoolDownRate;                                      // 0x8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_24F5[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                EventName;                                         // 0x10(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          DebugGraphColor;                                   // 0x20(0x10)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortCombatEventContribution      ContributionType;                                  // 0x30(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_24F6[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x60 (0x68 - 0x8)
// ScriptStruct FortniteGame.FortSurfaceDamageRatioStats
struct FFortSurfaceDamageRatioStats : public FTableRowBase
{
public:
	class FName                                  Default;                                           // 0x8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  Wood;                                              // 0x10(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  Stone;                                             // 0x18(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  Metal;                                             // 0x20(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  HumanEntity;                                       // 0x28(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  AIEntity;                                          // 0x30(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  Explosive;                                         // 0x38(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  WeakSpot;                                          // 0x40(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  Objective;                                         // 0x48(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  WeakSpot_Wood;                                     // 0x50(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  WeakSpot_Stone;                                    // 0x58(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  WeakSpot_Metal;                                    // 0x60(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};

// 0x10 (0x18 - 0x8)
// ScriptStruct FortniteGame.FortSurfaceDamageRatioByAffiliationStats
struct FFortSurfaceDamageRatioByAffiliationStats : public FTableRowBase
{
public:
	float                                        Friendly;                                          // 0x8(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        Neutral;                                           // 0xC(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        Hostile;                                           // 0x10(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_24F7[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.FortDamageSource
struct FFortDamageSource
{
public:
	TWeakObjectPtr<class AController>            InstigatorController;                              // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class AActor>                 DamageCauser;                                      // 0x8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.FortActiveMontageDecisionWindow
struct FFortActiveMontageDecisionWindow
{
public:
	class UFortAnimNotifyState_AbilityDecisionWindow* DecisionWindow;                                    // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequenceBase*                     DecisionAnimation;                                 // 0x8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bReceivedPrimaryInput;                             // 0x10(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bReceivedSecondaryInput;                           // 0x11(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bAlreadyProcessedInput;                            // 0x12(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_24F8[0x5];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x14 (0x14 - 0x0)
// ScriptStruct FortniteGame.FortMontageInputAction
struct FFortMontageInputAction
{
public:
	struct FGameplayTag                          TriggerAbilityTag;                                 // 0x0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  NextSection;                                       // 0x8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortMontageInputType             InputType;                                         // 0x10(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_24F9[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.PatternBASEEffect
struct FPatternBASEEffect
{
public:
	class UBuildingEditModeMetadata*             Pattern;                                           // 0x0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMesh*                           Mesh;                                              // 0x8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.BASEGameplayEffect
struct FBASEGameplayEffect
{
public:
	TSubclassOf<class UGameplayEffect>           Effect;                                            // 0x0(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        LevelOverride;                                     // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_24FA[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x48 (0x48 - 0x0)
// ScriptStruct FortniteGame.ConsumeEffectData
struct FConsumeEffectData
{
public:
	TSoftClassPtr<class UGameplayEffect>         EffectClass;                                       // 0x0(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FScalableFloat                        Level;                                             // 0x28(0x20)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// 0x30 (0x30 - 0x0)
// ScriptStruct FortniteGame.FortEncryptionKey
struct FFortEncryptionKey
{
public:
	class FName                                  Name;                                              // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGuid                                 Guid;                                              // 0x8(0x10)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<uint8>                                Bytes;                                             // 0x18(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	enum class EFortEncryptionStatus             Status;                                            // 0x28(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_24FB[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.FortKeyChain
struct FFortKeyChain
{
public:
	uint32                                       Hash;                                              // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_24FC[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FFortEncryptionKey>            Keys;                                              // 0x8(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.FortFeedbackHandle
struct FFortFeedbackHandle
{
public:
	class UFortFeedbackBank*                     FeedbackBank;                                      // 0x0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EventName;                                         // 0x8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bReadOnly;                                         // 0x10(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bBankDefined;                                      // 0x11(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortFeedbackBroadcastFilter      BroadcastFilterOverride;                           // 0x12(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_24FD[0x5];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x40 (0x40 - 0x0)
// ScriptStruct FortniteGame.FortSentenceAudio
struct FFortSentenceAudio
{
public:
	TSoftObjectPtr<class USoundBase>             Audio;                                             // 0x0(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FFortFeedbackHandle                   Handle;                                            // 0x28(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, Protected, NativeAccessSpecifierProtected)
};

// 0xC8 (0xC8 - 0x0)
// ScriptStruct FortniteGame.FortConversationSentence
struct FFortConversationSentence
{
public:
	struct FFortSentenceAudio                    SpeechAudio;                                       // 0x0(0x40)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	class FText                                  SpeechText;                                        // 0x40(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UTexture2D>             TalkingHeadTexture;                                // 0x58(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FText                                  TalkingHeadTitle;                                  // 0x80(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UAnimMontage>           AnimMontage;                                       // 0x98(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, RepSkip, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        PostSentenceDelay;                                 // 0xC0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DisplayDuration;                                   // 0xC4(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
};

// 0x8 (0x8 - 0x0)
// ScriptStruct FortniteGame.FortConversionTierData
struct FFortConversionTierData
{
public:
	int32                                        TierCost;                                          // 0x0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        RequiredItemQuantity;                              // 0x4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x98 (0xA0 - 0x8)
// ScriptStruct FortniteGame.FortConversionControlKeyCosts
struct FFortConversionControlKeyCosts : public FTableRowBase
{
public:
	TSoftObjectPtr<class UFortItemDefinition>    RequiredItem;                                      // 0x8(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FFortConversionTierData               Handmade;                                          // 0x30(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FFortConversionTierData               Ordinary;                                          // 0x38(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FFortConversionTierData               Sturdy;                                            // 0x40(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FFortConversionTierData               Quality;                                           // 0x48(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FFortConversionTierData               Fine;                                              // 0x50(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FFortConversionTierData               Elegant;                                           // 0x58(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FFortConversionTierData               Masterwork;                                        // 0x60(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FFortConversionTierData               Epic;                                              // 0x68(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FFortConversionTierData               Badass;                                            // 0x70(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FFortConversionTierData               Legendary;                                         // 0x78(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FGameplayTagContainer                 RequiredCatalysts;                                 // 0x80(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
};

// 0x70 (0x70 - 0x0)
// ScriptStruct FortniteGame.BaseVariantDef
struct FBaseVariantDef
{
public:
	uint8                                        Pad_24FE[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bStartUnlocked;                                    // 0x8(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsDefault;                                        // 0x9(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bHideIfNotOwned;                                   // 0xA(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_24FF[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGameplayTag                          CustomizationVariantTag;                           // 0xC(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2500[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  VariantName;                                       // 0x18(0x18)(Edit, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UTexture2D>             PreviewImage;                                      // 0x30(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                  UnlockRequirements;                                // 0x58(0x18)(Edit, NativeAccessSpecifierPrivate)
};

// 0x0 (0x70 - 0x70)
// ScriptStruct FortniteGame.GameplayTagVariantDef
struct FGameplayTagVariantDef : public FBaseVariantDef
{
public:
};

// 0x38 (0x40 - 0x8)
// ScriptStruct FortniteGame.CosmeticMarkupTagDataRow
struct FCosmeticMarkupTagDataRow : public FTableRowBase
{
public:
	struct FGameplayTag                          Tag;                                               // 0x8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                  DisplayName;                                       // 0x10(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class FText                                  HelpText;                                          // 0x28(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
};

// 0x38 (0x40 - 0x8)
// ScriptStruct FortniteGame.CosmeticSetDataRow
struct FCosmeticSetDataRow : public FTableRowBase
{
public:
	struct FGameplayTag                          Tag;                                               // 0x8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                  DisplayName;                                       // 0x10(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class FText                                  Description;                                       // 0x28(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
};

// 0x50 (0x50 - 0x0)
// ScriptStruct FortniteGame.McpVariantWriter
struct FMcpVariantWriter
{
public:
	struct FGameplayTag                          VariantChannel;                                    // 0x0(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          ActiveVariant;                                     // 0x8(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                CustomActiveVariant;                               // 0x10(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                 UnlockedVariants;                                  // 0x20(0x20)(Edit, NativeAccessSpecifierPublic)
	class FString                                CustomUnlockedVariants;                            // 0x40(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x30 (0x30 - 0x0)
// ScriptStruct FortniteGame.McpVariantReader
struct FMcpVariantReader
{
public:
	class FString                                Channel;                                           // 0x0(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                Active;                                            // 0x10(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FString>                        Owned;                                             // 0x20(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x68 (0x68 - 0x0)
// ScriptStruct FortniteGame.MaterialVariants
struct FMaterialVariants
{
public:
	TSoftObjectPtr<class UMaterialInterface>     MaterialToSwap;                                    // 0x0(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  ComponentToOverride;                               // 0x28(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  CascadeMaterialName;                               // 0x30(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaterialOverrideIndex;                             // 0x38(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2501[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftObjectPtr<class UMaterialInterface>     OverrideMaterial;                                  // 0x40(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x8 (0x8 - 0x0)
// ScriptStruct FortniteGame.MaterialParamName
struct FMaterialParamName
{
public:
	class FName                                  ParamName;                                         // 0x0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x18 - 0x8)
// ScriptStruct FortniteGame.MaterialVectorVariant
struct FMaterialVectorVariant : public FMaterialParamName
{
public:
	struct FLinearColor                          Value;                                             // 0x8(0x10)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x4 (0xC - 0x8)
// ScriptStruct FortniteGame.MaterialFloatVariant
struct FMaterialFloatVariant : public FMaterialParamName
{
public:
	float                                        Value;                                             // 0x8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x28 (0x30 - 0x8)
// ScriptStruct FortniteGame.MaterialTextureVariant
struct FMaterialTextureVariant : public FMaterialParamName
{
public:
	TSoftObjectPtr<class UTexture>               Value;                                             // 0x8(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x60 (0x60 - 0x0)
// ScriptStruct FortniteGame.MaterialParamterDef
struct FMaterialParamterDef
{
public:
	TSoftObjectPtr<class UMaterialInterface>     MaterialToAlter;                                   // 0x0(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  CascadeMaterialName;                               // 0x28(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FMaterialVectorVariant>        ColorParams;                                       // 0x30(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FMaterialTextureVariant>       TextureParams;                                     // 0x40(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FMaterialFloatVariant>         FloatParams;                                       // 0x50(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x68 (0x68 - 0x0)
// ScriptStruct FortniteGame.VariantParticleSystemInitializerData
struct FVariantParticleSystemInitializerData
{
public:
	class FName                                  ParticleComponentName;                             // 0x0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UParticleSystem>        ParticleSystem;                                    // 0x8(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class USkeletalMesh>          MeshToBindTO;                                      // 0x30(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  AttachSocketName;                                  // 0x58(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EAttachmentRule                   LocationRule;                                      // 0x60(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EAttachmentRule                   RotationRule;                                      // 0x61(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EAttachmentRule                   ScaleRule;                                         // 0x62(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bWeldSimulatedBodies;                              // 0x63(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2502[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0xC (0x14 - 0x8)
// ScriptStruct FortniteGame.VectorParamVariant
struct FVectorParamVariant : public FMaterialParamName
{
public:
	struct FVector                               Value;                                             // 0x8(0xC)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x58 (0x58 - 0x0)
// ScriptStruct FortniteGame.ParticleParamterVariant
struct FParticleParamterVariant
{
public:
	TSoftObjectPtr<class UParticleSystem>        ParticleSystemToAlter;                             // 0x0(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FMaterialVectorVariant>        ColorParams;                                       // 0x28(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FVectorParamVariant>           VectorParams;                                      // 0x38(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FMaterialFloatVariant>         FloatParams;                                       // 0x48(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x58 (0x58 - 0x0)
// ScriptStruct FortniteGame.ParticleVariant
struct FParticleVariant
{
public:
	TSoftObjectPtr<class UParticleSystem>        ParticleSystemToAlter;                             // 0x0(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  ComponentToOverride;                               // 0x28(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UParticleSystem>        OverrideParticleSystem;                            // 0x30(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x38 (0x38 - 0x0)
// ScriptStruct FortniteGame.SocketTransformVariant
struct FSocketTransformVariant
{
public:
	class FName                                  SourceSocketName;                                  // 0x0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  OverridSocketName;                                 // 0x8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class USkeletalMesh>          SourceObjectToModify;                              // 0x10(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x70 (0xE0 - 0x70)
// ScriptStruct FortniteGame.PartVariantDef
struct FPartVariantDef : public FBaseVariantDef
{
public:
	TArray<TSoftObjectPtr<class UCustomCharacterPart>> VariantParts;                                      // 0x70(0x10)(Edit, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<struct FMaterialVariants>             VariantMaterials;                                  // 0x80(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FMaterialParamterDef>          VariantMaterialParams;                             // 0x90(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FVariantParticleSystemInitializerData> InitalParticelSystemData;                          // 0xA0(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FParticleVariant>              VariantParticles;                                  // 0xB0(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FParticleParamterVariant>      VariantParticleParams;                             // 0xC0(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FSocketTransformVariant>       SocketTransforms;                                  // 0xD0(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x50 (0xC0 - 0x70)
// ScriptStruct FortniteGame.ParticlVariantDef
struct FParticlVariantDef : public FBaseVariantDef
{
public:
	TArray<struct FMaterialVariants>             VariantMaterials;                                  // 0x70(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FMaterialParamterDef>          VariantMaterialParams;                             // 0x80(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FVariantParticleSystemInitializerData> InitalParticelSystemData;                          // 0x90(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FParticleVariant>              VariantParticles;                                  // 0xA0(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FParticleParamterVariant>      VariantParticleParams;                             // 0xB0(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x10 (0x80 - 0x70)
// ScriptStruct FortniteGame.SocketVariantDef
struct FSocketVariantDef : public FBaseVariantDef
{
public:
	TArray<struct FSocketTransformVariant>       SocketTransforms;                                  // 0x70(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x20 (0x90 - 0x70)
// ScriptStruct FortniteGame.MaterialVariantDef
struct FMaterialVariantDef : public FBaseVariantDef
{
public:
	TArray<struct FMaterialVariants>             VariantMaterials;                                  // 0x70(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FMaterialParamterDef>          VariantMaterialParams;                             // 0x80(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.CreativeActorId
struct FCreativeActorId
{
public:
	TArray<class FName>                          ActorId;                                           // 0x0(0x10)(Edit, ZeroConstructor, EditConst, NativeAccessSpecifierPrivate)
};

// 0x8 (0x8 - 0x0)
// ScriptStruct FortniteGame.CreativeActorMetaData
struct FCreativeActorMetaData
{
public:
	int32                                        AssetSize;                                         // 0x0(0x4)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        InstanceSize;                                      // 0x4(0x4)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x20 (0x20 - 0x0)
// ScriptStruct FortniteGame.FortCreativeBudgetClientData
struct FFortCreativeBudgetClientData
{
public:
	TArray<struct FCreativeActorId>              ActorIDs;                                          // 0x0(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FCreativeActorMetaData>        ActorMetaData;                                     // 0x10(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x30 (0x30 - 0x0)
// ScriptStruct FortniteGame.FortCreativeBudgetClassInstanceLimit
struct FFortCreativeBudgetClassInstanceLimit
{
public:
	TSoftClassPtr<class AActor>                  ActorClass;                                        // 0x0(0x28)(Config, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaxNumberOfInstances;                              // 0x28(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2503[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x38 (0x38 - 0x0)
// ScriptStruct FortniteGame.FortCreativeBudgetOverride
struct FFortCreativeBudgetOverride
{
public:
	TSoftClassPtr<class AActor>                  ActorClass;                                        // 0x0(0x28)(Config, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        AssetCost;                                         // 0x28(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AssetCostMultiplier;                               // 0x2C(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        InstanceCost;                                      // 0x30(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        InstanceCostMultiplier;                            // 0x34(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x14 (0x14 - 0x0)
// ScriptStruct FortniteGame.MemoryBudget
struct FMemoryBudget
{
public:
	int32                                        TotalMemory;                                       // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        AvailableMemory;                                   // 0x4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        InUseMemory;                                       // 0x8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2504[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x70 (0x70 - 0x0)
// ScriptStruct FortniteGame.FortCreativeClassInstanceTracker
struct FFortCreativeClassInstanceTracker
{
public:
	uint8                                        Pad_2505[0x50];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UClass*>                        ChildClassesAtLimit;                               // 0x50(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<class UClass*>                        ParentClassesAtLimit;                              // 0x60(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
};

// 0xF8 (0xF8 - 0x0)
// ScriptStruct FortniteGame.FortCreativeBudgetTracker
struct FFortCreativeBudgetTracker
{
public:
	uint8                                        Pad_2506[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FMemoryBudget                         GlobalBudget;                                      // 0x10(0x14)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_2507[0x54];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FCreativeActorId>              AssetInstances;                                    // 0x78(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	struct FFortCreativeClassInstanceTracker     ClassTracker;                                      // 0x88(0x70)(Protected, NativeAccessSpecifierProtected)
};

// 0x70 (0x70 - 0x0)
// ScriptStruct FortniteGame.CreativePhysicsEffectedActor
struct FCreativePhysicsEffectedActor
{
public:
	class AActor*                                Actor;                                             // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2508[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTransform                            ActorToSelection;                                  // 0x10(0x30)(IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FBox                                  SelectionSpaceActorsBounds;                        // 0x40(0x1C)(ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FVector                               Velocity;                                          // 0x5C(0xC)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        EffectStartTime;                                   // 0x68(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2509[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.CreativePooledMID
struct FCreativePooledMID
{
public:
	class UMaterialInstanceDynamic*              Mid;                                               // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInterface*                    OriginalMaterial;                                  // 0x8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x50 (0x50 - 0x0)
// ScriptStruct FortniteGame.CreativeSelectedActorInfo
struct FCreativeSelectedActorInfo
{
public:
	class AActor*                                Actor;                                             // 0x0(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_250A[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTransform                            ActorToSelectionAtDragStart;                       // 0x10(0x30)(IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	float                                        OriginalRelevancyDistance;                         // 0x40(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bWasCollisionEnabled;                              // 0x44(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bWasDormant;                                       // 0x45(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_250B[0xA];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x28 (0x30 - 0x8)
// ScriptStruct FortniteGame.CreativeToolClasses
struct FCreativeToolClasses : public FTableRowBase
{
public:
	TSoftClassPtr<class UObject>                 ClassPath;                                         // 0x8(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x18 - 0x8)
// ScriptStruct FortniteGame.CreativeToolObjectInteractionRow
struct FCreativeToolObjectInteractionRow : public FTableRowBase
{
public:
	class UDataTable*                            AllowedClasses;                                    // 0x8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UDataTable*                            ForbiddenClasses;                                  // 0x10(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x20 (0x20 - 0x0)
// ScriptStruct FortniteGame.FortCreativeWhitelistUserEntry
struct FFortCreativeWhitelistUserEntry
{
public:
	class FString                                UniqueId;                                          // 0x0(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                UserName;                                          // 0x10(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.FortCreativePlotPermissionData
struct FFortCreativePlotPermissionData
{
public:
	enum class EFortCreativePlotPermission       Permission;                                        // 0x0(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_250C[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class FString>                        WhiteList;                                         // 0x8(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.ActiveRealEstatePlotInfo
struct FActiveRealEstatePlotInfo
{
public:
	class UFortCreativeRealEstatePlotItemDefinition* Plot;                                              // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               Position;                                          // 0x8(0xC)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_250D[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x30 (0x30 - 0x0)
// ScriptStruct FortniteGame.CreativePublishOptions
struct FCreativePublishOptions
{
public:
	class FString                                UserTitle;                                         // 0x0(0x10)(BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                UserDescription;                                   // 0x10(0x10)(BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                UserLocale;                                        // 0x20(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x30 (0x30 - 0x0)
// ScriptStruct FortniteGame.FortCustomizationAssetsToLoad
struct FFortCustomizationAssetsToLoad
{
public:
	TArray<class UFortHeroType*>                 HeroTypes;                                         // 0x0(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	TArray<class UCustomCharacterPart*>          CharacterParts;                                    // 0x10(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	TArray<class UFortItemDefinition*>           ItemDefs;                                          // 0x20(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPublic)
};

// 0x50 (0x50 - 0x0)
// ScriptStruct FortniteGame.SavedCustomMatchOptions
struct FSavedCustomMatchOptions
{
public:
	TMap<class FString, class FString>           CustomMatchOptions;                                // 0x0(0x50)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x60 (0x60 - 0x0)
// ScriptStruct FortniteGame.FortDailyRewardScheduleDisplayData
struct FFortDailyRewardScheduleDisplayData
{
public:
	class FText                                  Title;                                             // 0x0(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  Description;                                       // 0x18(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  ItemDescription;                                   // 0x30(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  EpicItemDescription;                               // 0x48(0x18)(Edit, NativeAccessSpecifierPublic)
};

// 0xA8 (0xA8 - 0x0)
// ScriptStruct FortniteGame.FortDailyRewardScheduleDefinition
struct FFortDailyRewardScheduleDefinition
{
public:
	class FName                                  ScheduleName;                                      // 0x0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UFortDailyRewardScheduleTokenDefinition> EnablingToken;                                     // 0x8(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UDataTable*                            Rewards;                                           // 0x30(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFortDailyRewardScheduleDisplayData   DisplayData;                                       // 0x38(0x60)(Edit, NativeAccessSpecifierPublic)
	struct FDateTime                             BeginDate;                                         // 0x98(0x8)(Edit, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDateTime                             EndDate;                                           // 0xA0(0x8)(Edit, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x8 (0x8 - 0x0)
// ScriptStruct FortniteGame.FortDailyLoginRewardStat_ScheduleClaimed
struct FFortDailyLoginRewardStat_ScheduleClaimed
{
public:
	int32                                        RewardsClaimed;                                    // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         ClaimedToday;                                      // 0x4(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_250E[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x60 (0x60 - 0x0)
// ScriptStruct FortniteGame.FortDailyLoginRewardStat
struct FFortDailyLoginRewardStat
{
public:
	int32                                        NextDefaultReward;                                 // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        TotalDaysLoggedIn;                                 // 0x4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDateTime                             LastClaimDate;                                     // 0x8(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<class FName, struct FFortDailyLoginRewardStat_ScheduleClaimed> AdditionalSchedules;                               // 0x10(0x50)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.FortDailyRewardsNotification
struct FFortDailyRewardsNotification
{
public:
	int32                                        DaysLoggedIn;                                      // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_250F[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FMcpLootEntry>                 Items;                                             // 0x8(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.LiveDamageNumberComponent
struct FLiveDamageNumberComponent
{
public:
	class UStaticMeshComponent*                  Component;                                         // 0x0(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2510[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.PooledDamageNumberComponents
struct FPooledDamageNumberComponents
{
public:
	TArray<class UStaticMeshComponent*>          Components;                                        // 0x0(0x10)(ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPublic)
};

// 0xC (0xC - 0x0)
// ScriptStruct FortniteGame.FortTagToDeathCause
struct FFortTagToDeathCause
{
public:
	struct FGameplayTag                          DeathTag;                                          // 0x0(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EDeathCause                       DBNOCause;                                         // 0x8(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EDeathCause                       DeathCause;                                        // 0x9(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2511[0x2];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x60 (0x60 - 0x0)
// ScriptStruct FortniteGame.FortDeathReason
struct FFortDeathReason
{
public:
	struct FGameplayTag                          DamageSource;                                      // 0x0(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                 SourceStates;                                      // 0x8(0x20)(Edit, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                 TargetStates;                                      // 0x28(0x20)(Edit, NativeAccessSpecifierPublic)
	class FText                                  FormattedText;                                     // 0x48(0x18)(Edit, NativeAccessSpecifierPublic)
};

// 0x80 (0x80 - 0x0)
// ScriptStruct FortniteGame.DecoPlacementState
struct FDecoPlacementState
{
public:
	struct FVector                               Start;                                             // 0x0(0xC)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               End;                                               // 0xC(0xC)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               RawLocation;                                       // 0x18(0xC)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               Normal;                                            // 0x24(0xC)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FQuat                                 AbsoluteRotation;                                  // 0x30(0x10)(IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FVector                               GridLocation;                                      // 0x40(0xC)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               PreviousLocation;                                  // 0x4C(0xC)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               FallbackLocation;                                  // 0x58(0xC)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class AActor>                 LastHitActor;                                      // 0x64(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class ABuildingSMActor>       CurrentBuildingActorAttachment;                    // 0x6C(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortDecoPlacementQueryResults    CanPlaceState;                                     // 0x74(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2512[0xB];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.FortTierProgressionInfo
struct FFortTierProgressionInfo
{
public:
	class FString                                ProgressionLayoutGuid;                             // 0x0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        HighestDefeatedTier;                               // 0x10(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2513[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.FortTierProgression
struct FFortTierProgression
{
public:
	TArray<struct FFortTierProgressionInfo>      ProgressionInfo;                                   // 0x0(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x40 (0x40 - 0x0)
// ScriptStruct FortniteGame.PendingDeployableManagerAction
struct FPendingDeployableManagerAction
{
public:
	enum class EQueueActionType                  ActionType;                                        // 0x0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2514[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class ADeployableBasePlot*>           PendingPlots;                                      // 0x8(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	int32                                        CurrentPlotRunningIndex;                           // 0x18(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EDeployableBaseBuildingState      DesiredPlotState;                                  // 0x1C(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2515[0x13];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class AFortDeployableBaseManager*            Manager;                                           // 0x30(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2516[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x50 (0x50 - 0x0)
// ScriptStruct FortniteGame.FortTierCollectionLayoutOutput
struct FFortTierCollectionLayoutOutput
{
public:
	class FName                                  SpawnCollectionName;                               // 0x0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  DifficultyRowName;                                 // 0x8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  ModifierProgressionName;                           // 0x10(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AdditiveDifficultyMod;                             // 0x18(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2517[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UFortBadgeItemDefinition*>      RewardBadges;                                      // 0x20(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<class FName>                          StartTierLootTierGroups;                           // 0x30(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<class FName>                          WaveCompleteLootTierGroups;                        // 0x40(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// 0x30 (0x30 - 0x0)
// ScriptStruct FortniteGame.AvailableTierLayout
struct FAvailableTierLayout
{
public:
	class UFortTieredCollectionLayout*           Layout;                                            // 0x0(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FFortTierCollectionLayoutOutput> AvailableTiers;                                    // 0x8(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FFortTierCollectionLayoutOutput> LockedTiers;                                       // 0x18(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	uint8                                        bLocked : 1;                                       // Mask : 0x1 0x28(0x1)(BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2518[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x14 (0x20 - 0xC)
// ScriptStruct FortniteGame.ActiveTieredCollectionLayout
struct FActiveTieredCollectionLayout : public FFastArraySerializerItem
{
public:
	uint8                                        Pad_2519[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UFortTieredCollectionLayout*           Layout;                                            // 0x10(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaxTierUnlocked;                                   // 0x18(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bLocked : 1;                                       // Mask : 0x1 0x1C(0x1)(Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_251A[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x18 (0xC8 - 0xB0)
// ScriptStruct FortniteGame.ActiveTieredCollectionLayoutArray
struct FActiveTieredCollectionLayoutArray : public FFastArraySerializer
{
public:
	TArray<struct FActiveTieredCollectionLayout> LayoutArray;                                       // 0xB0(0x10)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	bool                                         bTiersForced;                                      // 0xC0(0x1)(ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_251B[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x50 (0x50 - 0x0)
// ScriptStruct FortniteGame.EnvironmentBuildingRestorationRecord
struct FEnvironmentBuildingRestorationRecord
{
public:
	TSubclassOf<class ABuildingActor>            ActorClass;                                        // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_251C[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTransform                            ActorTransform;                                    // 0x10(0x30)(IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	class FName                                  QuotaSelectedLootTierKey;                          // 0x40(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        QuotaSelectedLootTier;                             // 0x48(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_251D[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x8 (0x8 - 0x0)
// ScriptStruct FortniteGame.FortUserCloudRequestHandle
struct FFortUserCloudRequestHandle
{
public:
	uint64                                       Handle;                                            // 0x0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};

// 0x40 (0x40 - 0x0)
// ScriptStruct FortniteGame.PendingDeployableBaseUser
struct FPendingDeployableBaseUser
{
public:
	struct FUniqueNetIdRepl                      UserNetID;                                         // 0x0(0x28)(HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFortUserCloudRequestHandle           LoadingCloudRequestHandle;                         // 0x28(0x8)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFortDeployableBaseRecord*             BaseRecord;                                        // 0x30(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ADeployableBasePlot*                   BasePlot;                                          // 0x38(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0xC (0x18 - 0xC)
// ScriptStruct FortniteGame.DeployableBaseInstance
struct FDeployableBaseInstance : public FFastArraySerializerItem
{
public:
	uint8                                        Pad_251E[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class ADeployableBasePlot*                   DeployableBase;                                    // 0x10(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0xC0 - 0xB0)
// ScriptStruct FortniteGame.DeployableBaseArray
struct FDeployableBaseArray : public FFastArraySerializer
{
public:
	TArray<struct FDeployableBaseInstance>       DeployableBases;                                   // 0xB0(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
};

// 0x8 (0x8 - 0x0)
// ScriptStruct FortniteGame.FortTaggedUnlockBase
struct FFortTaggedUnlockBase
{
public:
	struct FGameplayTag                          RequiredTag;                                       // 0x0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x8 (0x10 - 0x8)
// ScriptStruct FortniteGame.FortTaggedDeployableBaseLootUnlock
struct FFortTaggedDeployableBaseLootUnlock : public FFortTaggedUnlockBase
{
public:
	class FName                                  LootTierGroup;                                     // 0x8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0xC (0x14 - 0x8)
// ScriptStruct FortniteGame.FortTaggedDeployableBasePlotExpansionUnlock
struct FFortTaggedDeployableBasePlotExpansionUnlock : public FFortTaggedUnlockBase
{
public:
	struct FIntVector                            CellExpansionVector;                               // 0x8(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.DevHeroClassInfo
struct FDevHeroClassInfo
{
public:
	class FString                                Name;                                              // 0x0(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Level;                                             // 0x10(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_251F[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x18 (0x20 - 0x8)
// ScriptStruct FortniteGame.FortMissionGenerationElementCostAndAvailabilityRow
struct FFortMissionGenerationElementCostAndAvailabilityRow : public FTableRowBase
{
public:
	class UCurveTable*                           AvailabilityCurveTable;                            // 0x8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  AvailabilityCurveTableRow;                         // 0x10(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MinCost;                                           // 0x18(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MaxCost;                                           // 0x1C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
};

// 0x28 (0x28 - 0x0)
// ScriptStruct FortniteGame.FortAIEncounterTimedModifierTags
struct FFortAIEncounterTimedModifierTags
{
public:
	float                                        TimeSeconds;                                       // 0x0(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2520[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGameplayTagContainer                 GameplayTags;                                      // 0x8(0x20)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// 0x2 (0x2 - 0x0)
// ScriptStruct FortniteGame.FortEncounterLockedUtility
struct FFortEncounterLockedUtility
{
public:
	enum class EFortAIUtility                    Utility;                                           // 0x0(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortEncounterUtilityDesire       UtilityDesire;                                     // 0x1(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x18 (0x20 - 0x8)
// ScriptStruct FortniteGame.FortCriteriaRequirementData
struct FFortCriteriaRequirementData : public FTableRowBase
{
public:
	struct FGameplayTag                          RequiredTag;                                       // 0x8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bGlobalMod;                                        // 0x10(0x1)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2521[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        ModValue;                                          // 0x14(0x4)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bRequireRarity;                                    // 0x18(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortRarity                       RequiredRarity;                                    // 0x19(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2522[0x6];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x30 (0x30 - 0x0)
// ScriptStruct FortniteGame.FortSpokenLine
struct FFortSpokenLine
{
public:
	class USoundBase*                            Audio;                                             // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                          AnimMontage;                                       // 0x8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                         AnimSequence;                                      // 0x10(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AFortPawn*                             Addressee;                                         // 0x18(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortFeedbackBroadcastFilter      BroadcastFilter;                                   // 0x20(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2523[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        Delay;                                             // 0x24(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bInterruptCurrentLine;                             // 0x28(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bCanBeInterrupted;                                 // 0x29(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bCanQue;                                           // 0x2A(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2524[0x5];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x30 (0x30 - 0x0)
// ScriptStruct FortniteGame.FortFeedbackEvent
struct FFortFeedbackEvent
{
public:
	class AFortPawn*                             Instigator;                                        // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AFortPawn*                             Recipient;                                         // 0x8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFortFeedbackHandle                   Handle;                                            // 0x10(0x18)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	float                                        Delay;                                             // 0x28(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bOverriddenQueuing;                                // 0x2C(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2525[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x38 (0x38 - 0x0)
// ScriptStruct FortniteGame.FortFeedbackEventData
struct FFortFeedbackEventData
{
public:
	struct FFortFeedbackHandle                   Handle;                                            // 0x0(0x18)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	float                                        ChanceToPlay;                                      // 0x18(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinReplayTime;                                     // 0x1C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinReplayTimeForSpeaker;                           // 0x20(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxWitnessDistance;                                // 0x24(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bInterruptCurrentLine;                             // 0x28(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bCanBeInterrupted;                                 // 0x29(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bCanQue;                                           // 0x2A(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortFeedbackBroadcastFilter      MultiplayerBroadcastFilter;                        // 0x2B(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortFeedbackSelectionMethod      ContextSelectionMethod;                            // 0x2C(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2526[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        FeedbackDelay;                                     // 0x30(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TimeLastPlayed;                                    // 0x34(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x20 (0x20 - 0x0)
// ScriptStruct FortniteGame.FortFeedbackResponse
struct FFortFeedbackResponse
{
public:
	struct FFortFeedbackHandle                   Handle;                                            // 0x0(0x18)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	enum class EFortFeedbackContext              Context;                                           // 0x18(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2527[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x98 (0x98 - 0x0)
// ScriptStruct FortniteGame.FortFeedbackLine
struct FFortFeedbackLine
{
public:
	TSoftObjectPtr<class USoundBase>             Audio;                                             // 0x0(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UAnimSequence>          AnimSequence;                                      // 0x28(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UAnimMontage>           AnimMontage;                                       // 0x50(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortFeedbackAddressee            Addressee;                                         // 0x78(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortFeedbackContext              Context;                                           // 0x79(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2528[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FFortFeedbackResponse>         ResponseEvents;                                    // 0x80(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                         bInterruptCurrentLine;                             // 0x90(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bCanBeInterrupted;                                 // 0x91(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bCanQue;                                           // 0x92(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2529[0x5];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x30 (0x30 - 0x0)
// ScriptStruct FortniteGame.FortFeedbackAction
struct FFortFeedbackAction
{
public:
	uint8                                        Pad_252A[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FFortFeedbackHandle                   Handle;                                            // 0x8(0x18)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	TArray<struct FFortFeedbackLine>             Lines;                                             // 0x20(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x8 (0x38 - 0x30)
// ScriptStruct FortniteGame.FortFeedbackActionBankDefined
struct FFortFeedbackActionBankDefined : public FFortFeedbackAction
{
public:
	float                                        MinReplayTime;                                     // 0x30(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MinReplayTimeForSpeaker;                           // 0x34(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
};

// 0x8 (0x8 - 0x0)
// ScriptStruct FortniteGame.FerretVehicleBoostLevel
struct FFerretVehicleBoostLevel
{
public:
	float                                        AccumulationPercent;                               // 0x0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BoostTime;                                         // 0x4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x200 (0x200 - 0x0)
// ScriptStruct FortniteGame.FortFlightModel
struct FFortFlightModel
{
public:
	uint8                                        Pad_252B[0x200];                                   // Fixing Size Of Struct [ Dumper-7 ]
};

// 0xA4 (0xA4 - 0x0)
// ScriptStruct FortniteGame.FlightParams
struct FFlightParams
{
public:
	float                                        TopSpeedKmh;                                       // 0x0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LiftoffSpeedKmh;                                   // 0x4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ControlSpeedKmh;                                   // 0x8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HeadingStabilizationRate;                          // 0xC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HeadingStabilizationMaxForwardVelocityKmh;         // 0x10(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HeadingStabilizationMaxDegPerSecond;               // 0x14(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        VerticalStabilizationDrag;                         // 0x18(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HorizontalStabilizationDrag;                       // 0x1C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        VerticalStabilizationTorque;                       // 0x20(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxVerticalStabilizationTorque;                    // 0x24(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HorizontalStabilizationTorque;                     // 0x28(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxHorizontalStabilizationTorque;                  // 0x2C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RotationalDampingCoefficient;                      // 0x30(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxRotationalDampingTorque;                        // 0x34(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TailLength;                                        // 0x38(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LowSpeedThrust;                                    // 0x3C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HighSpeedThrust;                                   // 0x40(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AntigravityHorizontal;                             // 0x44(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AntigravityUp;                                     // 0x48(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AntigravityDown;                                   // 0x4C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ControlFrameHeight;                                // 0x50(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ControlFrameDistance;                              // 0x54(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ControlFrameDistanceInterpPerSecond;               // 0x58(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ControlFrameOrbitInterpPerSecond;                  // 0x5C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ControlFrameRollInterpPerSecond;                   // 0x60(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               ControlFrameDefaultRollUp;                         // 0x64(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ControlFrameRollUpAcceleration;                    // 0x70(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ControlFrameRollUpMaxVelocity;                     // 0x74(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ControlFrameRollUpDamping;                         // 0x78(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ControlFrameMinUpNudge;                            // 0x7C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ControlFrameMaxUpNudge;                            // 0x80(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ControlFrameUpsideDownIgnoreNudgePercent;          // 0x84(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SteerPitchRate;                                    // 0x88(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SteerYawRate;                                      // 0x8C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SteerMaxHeadingDiffDegrees;                        // 0x90(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RollPerHeadingDiff;                                // 0x94(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HeadingMatchRate;                                  // 0x98(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RollMatchRate;                                     // 0x9C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MatchingTorqueCap;                                 // 0xA0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0xE8 (0xE8 - 0x0)
// ScriptStruct FortniteGame.FortFootstepAudioData
struct FFortFootstepAudioData
{
public:
	class USoundBase*                            SoundAssets;                                       // 0x0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_252C[0x38];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class USoundBase*                            SoundAssetsAbove;                                  // 0x40(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_252D[0x38];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class USoundBase*                            SoundAssetsBelow;                                  // 0x80(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_252E[0x38];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class USoundAttenuation*                     SoundAttenuation;                                  // 0xC0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundAttenuation*                     SoundAttenuationAbove;                             // 0xC8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundAttenuation*                     SoundAttenuationBelow;                             // 0xD0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundAttenuation*                     SoundAttenuationAboveOrBelowAndVisible;            // 0xD8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        VolumeMultiplier;                                  // 0xE0(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_252F[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.CameraPair
struct FCameraPair
{
public:
	enum class EFrontEndCamera                   Type;                                              // 0x0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2530[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AFortCameraBase*                       Camera;                                            // 0x8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.FortFXAnimationInfoBase
struct FFortFXAnimationInfoBase
{
public:
	class UCurveFloat*                           LerpCurve;                                         // 0x0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2531[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x8 (0x20 - 0x18)
// ScriptStruct FortniteGame.FortFloatAnimationInfo
struct FFortFloatAnimationInfo : public FFortFXAnimationInfoBase
{
public:
	uint8                                        Pad_2532[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x20 (0x20 - 0x0)
// ScriptStruct FortniteGame.FortLightAnimSet
struct FFortLightAnimSet
{
public:
	class ULightComponent*                       LightComp;                                         // 0x0(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FFortFloatAnimationInfo>       IntensityAnims;                                    // 0x8(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	uint8                                        Pad_2533[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x8 (0x28 - 0x20)
// ScriptStruct FortniteGame.FortFloatParamAnimationInfo
struct FFortFloatParamAnimationInfo : public FFortFloatAnimationInfo
{
public:
	uint8                                        Pad_2534[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x20 (0x20 - 0x0)
// ScriptStruct FortniteGame.FortParticleAnimSet
struct FFortParticleAnimSet
{
public:
	class UParticleSystemComponent*              PSC;                                               // 0x0(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FFortFloatParamAnimationInfo>  ParamAnims;                                        // 0x8(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	uint8                                        Pad_2535[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x20 (0x38 - 0x18)
// ScriptStruct FortniteGame.FortLinearColorAnimationInfo
struct FFortLinearColorAnimationInfo : public FFortFXAnimationInfoBase
{
public:
	uint8                                        Pad_2536[0x20];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x8 (0x40 - 0x38)
// ScriptStruct FortniteGame.FortLinearColorParamAnimationInfo
struct FFortLinearColorParamAnimationInfo : public FFortLinearColorAnimationInfo
{
public:
	uint8                                        Pad_2537[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x10 (0x28 - 0x18)
// ScriptStruct FortniteGame.FortLinearColorCurveAnimationInfo
struct FFortLinearColorCurveAnimationInfo : public FFortFXAnimationInfoBase
{
public:
	uint8                                        Pad_2538[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x8 (0x30 - 0x28)
// ScriptStruct FortniteGame.FortLinearColorCurveParamAnimationInfo
struct FFortLinearColorCurveParamAnimationInfo : public FFortLinearColorCurveAnimationInfo
{
public:
	uint8                                        Pad_2539[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x40 (0x40 - 0x0)
// ScriptStruct FortniteGame.FortMIDAnimSet
struct FFortMIDAnimSet
{
public:
	class UMaterialInstanceDynamic*              Mid;                                               // 0x0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FFortFloatParamAnimationInfo>  FloatParamAnims;                                   // 0x8(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	TArray<struct FFortLinearColorParamAnimationInfo> ColorParamAnims;                                   // 0x18(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	TArray<struct FFortLinearColorCurveParamAnimationInfo> ColorCurveParamAnims;                              // 0x28(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	uint8                                        Pad_253A[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x10 (0x28 - 0x18)
// ScriptStruct FortniteGame.FortSplineMeshScaleAnimationInfo
struct FFortSplineMeshScaleAnimationInfo : public FFortFXAnimationInfoBase
{
public:
	uint8                                        Pad_253B[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x10 (0x28 - 0x18)
// ScriptStruct FortniteGame.FortSplineMeshSnapAnimationInfo
struct FFortSplineMeshSnapAnimationInfo : public FFortFXAnimationInfoBase
{
public:
	class USplineComponent*                      TargetSpline;                                      // 0x18(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_253C[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x30 (0x30 - 0x0)
// ScriptStruct FortniteGame.FortSplineMeshAnimSet
struct FFortSplineMeshAnimSet
{
public:
	class USplineMeshComponent*                  SplineMesh;                                        // 0x0(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FFortSplineMeshScaleAnimationInfo> ScaleAnims;                                        // 0x8(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	TArray<struct FFortSplineMeshSnapAnimationInfo> SnapAnims;                                         // 0x18(0x10)(ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPublic)
	uint8                                        Pad_253D[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x48 (0x50 - 0x8)
// ScriptStruct FortniteGame.TagQueryTableRow
struct FTagQueryTableRow : public FTableRowBase
{
public:
	struct FGameplayTagQuery                     TagQuery;                                          // 0x8(0x48)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.SubGameInfo
struct FSubGameInfo
{
public:
	class UFortTokenType*                        AccessToken;                                       // 0x0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         RequiredFullInstall;                               // 0x8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bCanPartyWithoutFullInstall;                       // 0x9(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_253E[0x6];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.DefaultCharacterPartsForPawnClass
struct FDefaultCharacterPartsForPawnClass
{
public:
	struct FGameplayTag                          ClassTag;                                          // 0x0(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<TSoftObjectPtr<class UCustomCharacterPart>> CharacterParts;                                    // 0x8(0x10)(Edit, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.ConditionalFoundationQuotaTier
struct FConditionalFoundationQuotaTier
{
public:
	TArray<TSoftClassPtr<class ABuildingFoundation>> FoundationClasses;                                 // 0x0(0x10)(Edit, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	int32                                        MinFoundations;                                    // 0x10(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaxFoundations;                                    // 0x14(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.ConditionalFoundationQuota
struct FConditionalFoundationQuota
{
public:
	TArray<struct FConditionalFoundationQuotaTier> Tiers;                                             // 0x0(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x20 (0x20 - 0x0)
// ScriptStruct FortniteGame.TieredWaveCollectionLootSetData
struct FTieredWaveCollectionLootSetData
{
public:
	TArray<class FName>                          StartOfCollectionItemTierGroups;                   // 0x0(0x10)(Edit, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
	TArray<class FName>                          SuccessfulWaveItemTierGroups;                      // 0x10(0x10)(Edit, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
};

// 0x10 (0x18 - 0x8)
// ScriptStruct FortniteGame.TieredWaveCollectionLootSet
struct FTieredWaveCollectionLootSet : public FTableRowBase
{
public:
	TArray<struct FTieredWaveCollectionLootSetData> LootSetData;                                       // 0x8(0x10)(Edit, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.TieredModifierSetData
struct FTieredModifierSetData
{
public:
	int32                                        WaveNumber;                                        // 0x0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        ModifierDuration;                                  // 0x4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  ModifierLootTierGroup;                             // 0x8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x18 - 0x8)
// ScriptStruct FortniteGame.TieredModifierSet
struct FTieredModifierSet : public FTableRowBase
{
public:
	TArray<struct FTieredModifierSetData>        ModifierData;                                      // 0x8(0x10)(Edit, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
};

// 0x10 (0x18 - 0x8)
// ScriptStruct FortniteGame.TieredWaveSet
struct FTieredWaveSet : public FTableRowBase
{
public:
	TArray<struct FTieredWaveSetData>            WaveData;                                          // 0x8(0x10)(Edit, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
};

// 0x88 (0x88 - 0x0)
// ScriptStruct FortniteGame.TieredWaveSetCollectionData
struct FTieredWaveSetCollectionData
{
public:
	class FText                                  DefenseText;                                       // 0x0(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic)
	class FText                                  LevelText;                                         // 0x18(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic)
	class FText                                  WaveText;                                          // 0x30(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic)
	class FText                                  BreatherText;                                      // 0x48(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic)
	int32                                        MinLvl;                                            // 0x60(0x4)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaxLvl;                                            // 0x64(0x4)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  BaseWaveLengthRowName;                             // 0x68(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  BaseNumOfKillsRowName;                             // 0x70(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  BaseNumOfKillPointsRowName;                        // 0x78(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  WaveSet;                                           // 0x80(0x8)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x18 - 0x8)
// ScriptStruct FortniteGame.TieredWaveSetCollection
struct FTieredWaveSetCollection : public FTableRowBase
{
public:
	TArray<struct FTieredWaveSetCollectionData>  CollectionData;                                    // 0x8(0x10)(Edit, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
};

// 0x80 (0x88 - 0x8)
// ScriptStruct FortniteGame.ScoreMultiplierRow
struct FScoreMultiplierRow : public FTableRowBase
{
public:
	float                                        CombatMultiplier;                                  // 0x8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        BuildingMultiplier;                                // 0xC(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        UtilityMultiplier;                                 // 0x10(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        BadgeMultiplier;                                   // 0x14(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        MonsterKills;                                      // 0x18(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        MonsterDamagePoints;                               // 0x1C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        PlayerKills;                                       // 0x20(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        WoodGathered;                                      // 0x24(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        StoneGathered;                                     // 0x28(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        MetalGathered;                                     // 0x2C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        Deaths;                                            // 0x30(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        BuildingsBuilt;                                    // 0x34(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        BuildingsBuilt_Wood;                               // 0x38(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        BuildingsBuilt_Stone;                              // 0x3C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        BuildingsBuilt_Metal;                              // 0x40(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        BuildingsUpgraded_Wood2;                           // 0x44(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        BuildingsUpgraded_Wood3;                           // 0x48(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        BuildingsUpgraded_Stone2;                          // 0x4C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        BuildingsUpgraded_Stone3;                          // 0x50(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        BuildingsUpgraded_Metal2;                          // 0x54(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        BuildingsUpgraded_Metal3;                          // 0x58(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        BuildingsDestroyed;                                // 0x5C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        Repair_Wood;                                       // 0x60(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        Repair_Stone;                                      // 0x64(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        Repair_Metal;                                      // 0x68(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        FlagsCaptured;                                     // 0x6C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        FlagsReturned;                                     // 0x70(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        ContainersLooted;                                  // 0x74(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        CraftingPoints;                                    // 0x78(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        TrapPlacementPoints;                               // 0x7C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        TrapActivationPoints;                              // 0x80(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_253F[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x20 (0x20 - 0x0)
// ScriptStruct FortniteGame.FortReplicatedStatMapping
struct FFortReplicatedStatMapping
{
public:
	enum class EStatCategory                     StatCategory;                                      // 0x0(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2540[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  DisplayName;                                       // 0x8(0x18)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// 0x28 (0x28 - 0x0)
// ScriptStruct FortniteGame.WorldItemAndMinMaxCount
struct FWorldItemAndMinMaxCount
{
public:
	struct FCurveTableRowHandle                  MinCurveTable;                                     // 0x0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FCurveTableRowHandle                  MaxCurveTable;                                     // 0x10(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFortWorldItemDefinition*              Item;                                              // 0x20(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x30 (0x30 - 0x0)
// ScriptStruct FortniteGame.ItemDefinitionAndCount
struct FItemDefinitionAndCount
{
public:
	int32                                        Count;                                             // 0x0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2541[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftObjectPtr<class UFortItemDefinition>    ItemDefinition;                                    // 0x8(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x40 (0x40 - 0x0)
// ScriptStruct FortniteGame.SettingsHUDVisibilityAndText
struct FSettingsHUDVisibilityAndText
{
public:
	struct FGameplayTag                          HUDVisibilityGameplayTag;                          // 0x0(0x8)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ESlateVisibility                  DefaultHUDVisibility;                              // 0x8(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2542[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  DisplayText;                                       // 0x10(0x18)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FText                                  ToolTipText;                                       // 0x28(0x18)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// 0x30 (0x30 - 0x0)
// ScriptStruct FortniteGame.FortHighlightColors
struct FFortHighlightColors
{
public:
	struct FLinearColor                          OutlineColor;                                      // 0x0(0x10)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          SceneModulationColor1;                             // 0x10(0x10)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          SceneModulationColor2;                             // 0x20(0x10)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x60 (0x60 - 0x0)
// ScriptStruct FortniteGame.FortHighlightColorsContainer
struct FFortHighlightColorsContainer
{
public:
	struct FFortHighlightColors                  ValidHighlight;                                    // 0x0(0x30)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FFortHighlightColors                  InvalidHighlight;                                  // 0x30(0x30)(Edit, NoDestructor, NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.FortRewardQuantityPair
struct FFortRewardQuantityPair
{
public:
	class FString                                TemplateId;                                        // 0x0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Quantity;                                          // 0x10(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2543[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x10 (0x18 - 0x8)
// ScriptStruct FortniteGame.FortPostMaxAccountLevelRewardData
struct FFortPostMaxAccountLevelRewardData : public FTableRowBase
{
public:
	TArray<struct FFortRewardQuantityPair>       Rewards;                                           // 0x8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x28 (0x30 - 0x8)
// ScriptStruct FortniteGame.FortLevelUpDataV2
struct FFortLevelUpDataV2 : public FTableRowBase
{
public:
	int32                                        Xp;                                                // 0x8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        XPDisplayMultiplier;                               // 0xC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FFortRewardQuantityPair>       Rewards;                                           // 0x10(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	int32                                        RestXPCap;                                         // 0x20(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        RestXPRechargeRate;                                // 0x24(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        BoostXPPerConsumable;                              // 0x28(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2544[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x28 (0x28 - 0x0)
// ScriptStruct FortniteGame.UISoundFeedback
struct FUISoundFeedback
{
public:
	TSoftObjectPtr<class USoundBase>             UISound;                                           // 0x0(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x28 (0x28 - 0x0)
// ScriptStruct FortniteGame.PartnerPcbInfo
struct FPartnerPcbInfo
{
public:
	struct FGameplayTag                          PartnerTag;                                        // 0x0(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                 ValidPartnerBundles;                               // 0x8(0x20)(Edit, NativeAccessSpecifierPublic)
};

// 0x28 (0x28 - 0x0)
// ScriptStruct FortniteGame.AttributeClamp
struct FAttributeClamp
{
public:
	struct FGameplayAttribute                    Attribute;                                         // 0x0(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EClampType                        ClampType;                                         // 0x20(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2545[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        ClampValue;                                        // 0x24(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x18 - 0x8)
// ScriptStruct FortniteGame.PlayerClampInfo
struct FPlayerClampInfo : public FTableRowBase
{
public:
	TArray<struct FAttributeClamp>               AttributeClamps;                                   // 0x8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x90 (0x98 - 0x8)
// ScriptStruct FortniteGame.GameDifficultyInfo
struct FGameDifficultyInfo : public FTableRowBase
{
public:
	int32                                        ContentAccountLevel;                               // 0x8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Difficulty;                                        // 0xC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DifficultyMatchmakingMinOverride;                  // 0x10(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DifficultyMatchmakingMaxOverride;                  // 0x14(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        LootLevel;                                         // 0x18(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        RequiredRating;                                    // 0x1C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        PvPRating;                                         // 0x20(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        RecommendedRating;                                 // 0x24(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ScoreBonus;                                        // 0x28(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2546[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                LootTierGroup;                                     // 0x30(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                BonusLootTierGroup;                                // 0x40(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                DifficultyIncreaseLootTierGroup;                   // 0x50(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        NumDifficultyIncreases;                            // 0x60(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2547[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  ThreatDisplayName;                                 // 0x68(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class FName                                  ColorParamName;                                    // 0x80(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        DefaultPlayerLives;                                // 0x88(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  PlayerStatClampRowName;                            // 0x8C(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2548[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.AudioDynamicSoundData
struct FAudioDynamicSoundData
{
public:
	class FName                                  Name;                                              // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EDynamicSoundOverride             SoundOverrideType;                                 // 0x8(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2549[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        Volume;                                            // 0xC(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x30 (0x30 - 0x0)
// ScriptStruct FortniteGame.AthenaDataTableSet
struct FAthenaDataTableSet
{
public:
	class UDataTable*                            LootTierData;                                      // 0x0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UDataTable*                            LootPackages;                                      // 0x8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UDataTable*                            RangedWeapons;                                     // 0x10(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveTable*                           GameData;                                          // 0x18(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveTable*                           ResourceRates;                                     // 0x20(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveTable*                           VehicleData;                                       // 0x28(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x38 (0x38 - 0x0)
// ScriptStruct FortniteGame.ClearAreaParams
struct FClearAreaParams
{
public:
	struct FVector                               Location;                                          // 0x0(0xC)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CapsuleHalfHeight;                                 // 0xC(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CapsuleRadius;                                     // 0x10(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_254A[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGameplayTagContainer                 IgnoreTags;                                        // 0x18(0x20)(NativeAccessSpecifierPublic)
};

// 0x8 (0x8 - 0x0)
// ScriptStruct FortniteGame.BCActionInfo
struct FBCActionInfo
{
public:
	int32                                        Type;                                              // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Action;                                            // 0x4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x38 (0x38 - 0x0)
// ScriptStruct FortniteGame.FortAbilityCost
struct FFortAbilityCost
{
public:
	enum class EFortAbilityCostSource            CostSource;                                        // 0x0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_254B[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FScalableFloat                        CostValue;                                         // 0x8(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class UFortItemDefinition*                   ItemDefinition;                                    // 0x28(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bOnlyApplyCostOnHit;                               // 0x30(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_254C[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x28 (0x28 - 0x0)
// ScriptStruct FortniteGame.FortGameplayAbilityBehaviorDistanceData
struct FFortGameplayAbilityBehaviorDistanceData
{
public:
	struct FGameplayTagContainer                 DistanceDataTag;                                   // 0x0(0x20)(Edit, NativeAccessSpecifierPublic)
	float                                        Distance;                                          // 0x20(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_254D[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.FortCharacterPartMontageInfo
struct FFortCharacterPartMontageInfo
{
public:
	enum class EFortCustomPartType               CharacterPart;                                     // 0x0(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_254E[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UAnimMontage*                          AnimMontage;                                       // 0x8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x58 (0x58 - 0x0)
// ScriptStruct FortniteGame.FortGameplayAbilityMontageInfo
struct FFortGameplayAbilityMontageInfo
{
public:
	class UAnimMontage*                          MontageToPlay;                                     // 0x0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AnimPlayRate;                                      // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AnimRootMotionTranslationScale;                    // 0xC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortGameplayAbilityMontageSectionToPlay MontageSectionToPlay;                              // 0x10(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_254F[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  OverrideSection;                                   // 0x14(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bPlayRandomSection;                                // 0x1C(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2550[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FFortCharacterPartMontageInfo> CharacterPartMontages;                             // 0x20(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_2551[0x28];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x90 (0x90 - 0x0)
// ScriptStruct FortniteGame.FortGameplayEffectContainer
struct FFortGameplayEffectContainer
{
public:
	struct FGameplayTag                          ApplicationTag;                                    // 0x0(0x8)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFortAbilityTargetSelectionList       TargetSelection;                                   // 0x8(0x20)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	TArray<TSubclassOf<class UGameplayEffect>>   TargetGameplayEffectClasses;                       // 0x28(0x10)(Edit, BlueprintVisible, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<TSubclassOf<class UGameplayEffect>>   OwnerGameplayEffectClasses;                        // 0x38(0x10)(Edit, BlueprintVisible, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                 ActivationCues;                                    // 0x48(0x20)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                 ImpactCues;                                        // 0x68(0x20)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	bool                                         bUseCalculationInTooltips;                         // 0x88(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2552[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x80 (0x80 - 0x0)
// ScriptStruct FortniteGame.FortGameplayEffectContainerSpec
struct FFortGameplayEffectContainerSpec
{
public:
	struct FFortAbilityTargetSelectionList       TargetSelection;                                   // 0x0(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	TArray<struct FGameplayEffectSpecHandle>     TargetGameplayEffectSpecs;                         // 0x20(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FGameplayEffectSpecHandle>     OwnerGameplayEffectSpecs;                          // 0x30(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                 ActivationCues;                                    // 0x40(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                 ImpactCues;                                        // 0x60(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
};

// 0x8 (0x8 - 0x0)
// ScriptStruct FortniteGame.TurnFloatRange
struct FTurnFloatRange
{
public:
	float                                        Min;                                               // 0x0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Max;                                               // 0x4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x48 (0x48 - 0x0)
// ScriptStruct FortniteGame.TurnTransitionData
struct FTurnTransitionData
{
public:
	class FName                                  MontageSectionName;                                // 0x0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinYawAngle;                                       // 0x8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxYawAngle;                                       // 0xC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TurnRate;                                          // 0x10(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2553[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGameplayTagContainer                 RequiredGameplayTags;                              // 0x18(0x20)(Edit, NativeAccessSpecifierPublic)
	int32                                        PriorityLevel;                                     // 0x38(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTurnFloatRange                       SpeedConstraintRange;                              // 0x3C(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	bool                                         bEnableSpeedConstraint;                            // 0x44(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bSkipTransitionInCrowd;                            // 0x45(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2554[0x2];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x30 (0x30 - 0x0)
// ScriptStruct FortniteGame.FortGameplayCueSpawnCondition
struct FFortGameplayCueSpawnCondition
{
public:
	enum class EFortGameplayCueSourceCondition   SourceCondition;                                   // 0x0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2555[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<enum class EPhysicalSurface>          AllowedSurfaces;                                   // 0x8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_2556[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        ChanceToPlay;                                      // 0x1C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EParticleSignificanceLevel        Significance;                                      // 0x20(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2557[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        RequiredDetailMode;                                // 0x24(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bRequireVisible : 1;                               // Mask : 0x1 0x28(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2558[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x28 (0x28 - 0x0)
// ScriptStruct FortniteGame.FortGameplayCueAttachInfo
struct FFortGameplayCueAttachInfo
{
public:
	class FName                                  SocketName;                                        // 0x0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortGameplayCueAttachType        AttachType;                                        // 0x8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2559[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	uint8                                        bAttachToWeapon : 1;                               // Mask : 0x1 0xC(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bAttachToHitResult : 1;                            // Mask : 0x2 0xC(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bUseUnsmoothedNetworkPosition : 1;                 // Mask : 0x4 0xC(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIgnoreScale : 1;                                  // Mask : 0x8 0xC(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIgnoreRotation : 1;                               // Mask : 0x10 0xC(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_255A[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               OverrideScale;                                     // 0x10(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                              OverrideRotation;                                  // 0x1C(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
};

// 0x68 (0x68 - 0x0)
// ScriptStruct FortniteGame.FortGameplayCueParticleInfo
struct FFortGameplayCueParticleInfo
{
public:
	struct FFortGameplayCueSpawnCondition        Condition;                                         // 0x0(0x30)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FFortGameplayCueAttachInfo            Attachment;                                        // 0x30(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	class UParticleSystem*                       ParticleSystem;                                    // 0x58(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bCastShadow : 1;                                   // Mask : 0x1 0x60(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bOverrideCondition : 1;                            // Mask : 0x2 0x60(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bOverrideAttachment : 1;                           // Mask : 0x4 0x60(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_255B[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x68 (0x68 - 0x0)
// ScriptStruct FortniteGame.FortGameplayCueAudioInfo
struct FFortGameplayCueAudioInfo
{
public:
	struct FFortGameplayCueSpawnCondition        Condition;                                         // 0x0(0x30)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FFortGameplayCueAttachInfo            Attachment;                                        // 0x30(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	class USoundBase*                            SoundCue;                                          // 0x58(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DelayBeforePlayInSeconds;                          // 0x60(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bOverrideCondition : 1;                            // Mask : 0x1 0x64(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bOverrideAttachment : 1;                           // Mask : 0x2 0x64(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_255C[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x8 (0x8 - 0x0)
// ScriptStruct FortniteGame.FortGameplayCueAOEInfo
struct FFortGameplayCueAOEInfo
{
public:
	float                                        InnerRadius;                                       // 0x0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        OuterRadius;                                       // 0x4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x28 (0x28 - 0x0)
// ScriptStruct FortniteGame.FortGameplayCueCameraShakeInfo
struct FFortGameplayCueCameraShakeInfo
{
public:
	TSubclassOf<class UCameraShake>              Shake;                                             // 0x0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Scale;                                             // 0x8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ECameraAnimPlaySpace              PlaySpace;                                         // 0xC(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_255D[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FRotator                              UserPlaySpaceRotation;                             // 0x10(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	bool                                         bAlwaysPlayOnTarget;                               // 0x1C(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bCalculateUserPlaySpaceRotationFromLocation;       // 0x1D(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bCancelOnRemove;                                   // 0x1E(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_255E[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FFortGameplayCueAOEInfo               Falloff;                                           // 0x20(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
};

// 0x70 (0x70 - 0x0)
// ScriptStruct FortniteGame.FortGameplayCueDecalInfo
struct FFortGameplayCueDecalInfo
{
public:
	struct FFortGameplayCueSpawnCondition        Condition;                                         // 0x0(0x30)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FFortGameplayCueAttachInfo            Attachment;                                        // 0x30(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        bOverrideCondition : 1;                            // Mask : 0x1 0x58(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bOverrideAttachment : 1;                           // Mask : 0x2 0x58(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bOverrideFadeOut : 1;                              // Mask : 0x4 0x58(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_255F[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class ADecalActor>               Decal;                                             // 0x60(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FadeOutStartDelay;                                 // 0x68(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FadeOutDuration;                                   // 0x6C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.FortGameplayCueCameraLensEffectInfo
struct FFortGameplayCueCameraLensEffectInfo
{
public:
	TSubclassOf<class AEmitterCameraLensEffectBase> CameraLensEffect;                                  // 0x0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFortGameplayCueAOEInfo               Falloff;                                           // 0x8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	bool                                         bAlwaysPlayOnTarget;                               // 0x10(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bCancelOnRemove;                                   // 0x11(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2560[0x6];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x28 (0x28 - 0x0)
// ScriptStruct FortniteGame.FortGameplayCueForceFeedbackInfo
struct FFortGameplayCueForceFeedbackInfo
{
public:
	class UForceFeedbackEffect*                  ForceFeedbackEffect;                               // 0x0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        EffectRadius;                                      // 0x8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2561[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UForceFeedbackEffect*                  FarForceFeedbackEffect;                            // 0x10(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FarEffectRadius;                                   // 0x18(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EffectTag;                                         // 0x1C(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bAlwaysPlayOnTarget;                               // 0x24(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2562[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0xF8 (0xF8 - 0x0)
// ScriptStruct FortniteGame.FortBurstEffectData
struct FFortBurstEffectData
{
public:
	TArray<struct FFortGameplayCueParticleInfo>  BurstParticles;                                    // 0x0(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FFortGameplayCueAudioInfo>     BurstSounds;                                       // 0x10(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	struct FFortGameplayCueCameraShakeInfo       BurstCameraShake;                                  // 0x20(0x28)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FFortGameplayCueCameraLensEffectInfo  BurstCameraLensEffect;                             // 0x48(0x18)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FFortGameplayCueForceFeedbackInfo     BurstForceFeedbackEffect;                          // 0x60(0x28)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FFortGameplayCueDecalInfo             BurstDecal;                                        // 0x88(0x70)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
};

// 0x38 (0x38 - 0x0)
// ScriptStruct FortniteGame.FortGameplayCueSpawnResult
struct FFortGameplayCueSpawnResult
{
public:
	TArray<class UParticleSystemComponent*>      ParticleComponents;                                // 0x0(0x10)(ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPublic)
	TArray<class UAudioComponent*>               AudioComponents;                                   // 0x10(0x10)(ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPublic)
	class UCameraShake*                          CameraShake;                                       // 0x20(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AEmitterCameraLensEffectBase*          CameraLensEffect;                                  // 0x28(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ADecalActor*                           DecalActor;                                        // 0x30(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x8 (0x70 - 0x68)
// ScriptStruct FortniteGame.FortGameplayCueAudioInfo_Looping
struct FFortGameplayCueAudioInfo_Looping : public FFortGameplayCueAudioInfo
{
public:
	float                                        LoopingSoundFadeOutDuration;                       // 0x68(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LoopingSoundVolumeLevel;                           // 0x6C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0xC (0xC - 0x0)
// ScriptStruct FortniteGame.OverlapRestrictions
struct FOverlapRestrictions
{
public:
	int32                                        OverlapsPerActor;                                  // 0x0(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          OverlapActorTagRestrictions;                       // 0x4(0x8)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x40 (0x40 - 0x0)
// ScriptStruct FortniteGame.FortEncounterMutatorReplacedTag
struct FFortEncounterMutatorReplacedTag
{
public:
	struct FGameplayTagContainer                 TagsToRemove;                                      // 0x0(0x20)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                 TagsToAdd;                                         // 0x20(0x20)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// 0x38 (0x38 - 0x0)
// ScriptStruct FortniteGame.FortDisconnectedPlayerReservation
struct FFortDisconnectedPlayerReservation
{
public:
	class FName                                  SessionName;                                       // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FUniqueNetIdRepl                      PlayerID;                                          // 0x8(0x28)(HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2563[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0xC (0xC - 0x0)
// ScriptStruct FortniteGame.FortHostSessionParams
struct FFortHostSessionParams
{
public:
	class FName                                  SessionName;                                       // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        ControllerId;                                      // 0x8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x60 (0x60 - 0x0)
// ScriptStruct FortniteGame.FortBanHammerStrike
struct FFortBanHammerStrike
{
public:
	struct FUniqueNetIdRepl                      AccountId;                                         // 0x0(0x28)(HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                Reason;                                            // 0x28(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortBanHammerNotificationAction  Action;                                            // 0x38(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2564[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                Source;                                            // 0x40(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                Offense;                                           // 0x50(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x20 (0x20 - 0x0)
// ScriptStruct FortniteGame.ClientIdRestrictions
struct FClientIdRestrictions
{
public:
	class FString                                ClientId;                                          // 0x0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FString>                        RestrictedPlatforms;                               // 0x10(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x8 (0x8 - 0x0)
// ScriptStruct FortniteGame.MeshServiceMetadata
struct FMeshServiceMetadata
{
public:
	int64                                        IceShellCurrentHealth;                             // 0x0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.PlaylistStreamedLevelData
struct FPlaylistStreamedLevelData
{
public:
	uint8                                        Pad_2565[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bIsFinishedStreaming;                              // 0x10(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2566[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.HordeDifficultyTierInfo
struct FHordeDifficultyTierInfo
{
public:
	class FName                                  DifficultyTierName;                                // 0x0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFortQuestItemDefinition*              QuestPrerequisite;                                 // 0x8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x14 (0x14 - 0x0)
// ScriptStruct FortniteGame.PermaniteBoundariesInfo
struct FPermaniteBoundariesInfo
{
public:
	int32                                        MaxPermaniteStructures;                            // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        TotalPermaniteStructures;                          // 0x4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AveragePermaniteStructureLevel;                    // 0x8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MinPermaniteStructureLevel;                        // 0xC(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaxPermaniteStructureLevel;                        // 0x10(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.PlayerBuildableClassFilter
struct FPlayerBuildableClassFilter
{
public:
	enum class EFortResourceType                 ResourceType;                                      // 0x0(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortBuildingType                 BuildingType;                                      // 0x1(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2567[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        Level;                                             // 0x4(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBuildingEditModeMetadata*             EditModeMetadata;                                  // 0x8(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x50 (0x50 - 0x0)
// ScriptStruct FortniteGame.FortScalabilityModeSettings
struct FFortScalabilityModeSettings
{
public:
	uint8                                        Pad_2568[0x50];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.FortSimpleGameStats
struct FFortSimpleGameStats
{
public:
	int32                                        GamesPlayed;                                       // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        SecondsPlayed;                                     // 0x4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        KillCount;                                         // 0x8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        BestResult;                                        // 0xC(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        LastReviewPromptDay;                               // 0x10(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2569[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x28 (0x28 - 0x0)
// ScriptStruct FortniteGame.SavedCredentials
struct FSavedCredentials
{
public:
	enum class ESavedAccountType                 Type;                                              // 0x0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_256A[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                ID;                                                // 0x8(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                Token;                                             // 0x18(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x3 (0x3 - 0x0)
// ScriptStruct FortniteGame.SubGameAccess
struct FSubGameAccess
{
public:
	enum class ESubGame                          SubGame;                                           // 0x0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ESubGameAccessStatus              AccessStatus;                                      // 0x1(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ESubGameMatchmakingStatus         MatchmakingStatus;                                 // 0x2(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x20 (0x20 - 0x0)
// ScriptStruct FortniteGame.PurchaseFailureLogSubmitOptions
struct FPurchaseFailureLogSubmitOptions
{
public:
	bool                                         bSubmitLogs;                                       // 0x0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_256B[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        LogTailKb;                                         // 0x4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        LogSubmitChance;                                   // 0x8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_256C[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class FString>                        DoNotUploadReasons;                                // 0x10(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
};

// 0x20 (0x20 - 0x0)
// ScriptStruct FortniteGame.LoginFailureLogSubmitOptions
struct FLoginFailureLogSubmitOptions
{
public:
	bool                                         bSubmitLogs;                                       // 0x0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_256D[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        LogTailKb;                                         // 0x4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LogSubmitChance;                                   // 0x8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_256E[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<enum class ELoginResult>              DoNotUploadReasons;                                // 0x10(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x20 (0x20 - 0x0)
// ScriptStruct FortniteGame.PartyFailureLogSubmitReason
struct FPartyFailureLogSubmitReason
{
public:
	class FString                                Reason;                                            // 0x0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                SubReason;                                         // 0x10(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x20 (0x20 - 0x0)
// ScriptStruct FortniteGame.PartyFailureLogSubmit
struct FPartyFailureLogSubmit
{
public:
	bool                                         bSubmitLogs;                                       // 0x0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_256F[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        LogTailKb;                                         // 0x4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LogSubmitChance;                                   // 0x8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2570[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FPartyFailureLogSubmitReason>  Reasons;                                           // 0x10(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x8 (0x8 - 0x0)
// ScriptStruct FortniteGame.GoatVehicleBoostLevel
struct FGoatVehicleBoostLevel
{
public:
	float                                        AccumulationPercent;                               // 0x0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BoostTime;                                         // 0x4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.FortHealthBarComponentData
struct FFortHealthBarComponentData
{
public:
	class FText                                  DisplayText;                                       // 0x0(0x18)(NativeAccessSpecifierPublic)
};

// 0xA0 (0xA0 - 0x0)
// ScriptStruct FortniteGame.FortHelpAdditionalContent
struct FFortHelpAdditionalContent
{
public:
	enum class EFortHelpContentLocation          ContentLocation;                                   // 0x0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         ShowAdditionalImage;                               // 0x1(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2571[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FSlateBrush                           ImageToDisplay;                                    // 0x8(0x88)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	bool                                         ShowAdditionalWidget;                              // 0x90(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2572[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class UUserWidget>               WidgetToDisplay;                                   // 0x98(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x20 (0x20 - 0x0)
// ScriptStruct FortniteGame.HeroKeywordDisplayData
struct FHeroKeywordDisplayData
{
public:
	struct FGameplayTag                          KeyWordGameplayTag;                                // 0x0(0x8)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                  KeywordDisplayName;                                // 0x8(0x18)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// 0xC (0xC - 0x0)
// ScriptStruct FortniteGame.HeroPerkDefaultRequirements
struct FHeroPerkDefaultRequirements
{
public:
	int32                                        MinimumHeroTier;                                   // 0x0(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MinimumHeroLevel;                                  // 0x4(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortRarity                       MinimumHeroRarity;                                 // 0x8(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2573[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.HeroSubclassRarityAttributeData
struct FHeroSubclassRarityAttributeData
{
public:
	TArray<struct FFortAttributeInitializationKey> AttributeInitKeysPerTier;                          // 0x0(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPrivate)
};

// 0x30 (0x30 - 0x0)
// ScriptStruct FortniteGame.HeroSubclassAttributeData
struct FHeroSubclassAttributeData
{
public:
	struct FGameplayTagContainer                 HeroClassAndSubclassTags;                          // 0x0(0x20)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	TArray<struct FHeroSubclassRarityAttributeData> AttributeInitKeysPerRarity;                        // 0x20(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPrivate)
};

// 0x80 (0x80 - 0x0)
// ScriptStruct FortniteGame.FortHeroGameplayPiece
struct FFortHeroGameplayPiece
{
public:
	TSoftObjectPtr<class UFortAbilityKit>        GrantedAbilityKit;                                 // 0x0(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTagQuery                     RequiredCommanderTagQuery;                         // 0x28(0x48)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	bool                                         bUseGlobalDefaultMinima;                           // 0x70(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortItemTier                     MinimumHeroTier;                                   // 0x71(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2574[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        MinimumHeroLevel;                                  // 0x74(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortRarity                       MinimumHeroRarity;                                 // 0x78(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2575[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x30 (0x30 - 0x0)
// ScriptStruct FortniteGame.FortHeroTierAbilityKit
struct FFortHeroTierAbilityKit
{
public:
	TSoftObjectPtr<class UFortAbilityKit>        GrantedAbilityKit;                                 // 0x0(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortRarity                       MinimumHeroRarity;                                 // 0x28(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2576[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x68 (0x68 - 0x0)
// ScriptStruct FortniteGame.FortHeroTeamLeadPerkSquadCondition
struct FFortHeroTeamLeadPerkSquadCondition
{
public:
	int32                                        NumTimesSatisfiable;                               // 0x0(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2577[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGameplayTagQuery                     RequiredTagQuery;                                  // 0x8(0x48)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	uint8                                        bConsiderMinimumTier : 1;                          // Mask : 0x1 0x50(0x1)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bConsiderMaximumTier : 1;                          // Mask : 0x2 0x50(0x1)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bConsiderMinimumLevel : 1;                         // Mask : 0x4 0x50(0x1)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bConsiderMaximumLevel : 1;                         // Mask : 0x8 0x50(0x1)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bConsiderMinimumRarity : 1;                        // Mask : 0x10 0x50(0x1)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bConsiderMaximumRarity : 1;                        // Mask : 0x20 0x50(0x1)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2578[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	enum class EFortItemTier                     MinimumHeroTier;                                   // 0x54(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortItemTier                     MaximumHeroTier;                                   // 0x55(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2579[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        MinimumHeroLevel;                                  // 0x58(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaximumHeroLevel;                                  // 0x5C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortRarity                       MinimumHeroRarity;                                 // 0x60(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortRarity                       MaximumHeroRarity;                                 // 0x61(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_257A[0x6];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x78 (0x78 - 0x0)
// ScriptStruct FortniteGame.HeroItem
struct FHeroItem
{
public:
	TSoftObjectPtr<class UFortWorldItemDefinition> Item;                                              // 0x0(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Quantity;                                          // 0x28(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortReplenishmentType            Replenishment;                                     // 0x2C(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_257B[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGameplayTagContainer                 RequiredGPTags;                                    // 0x30(0x20)(Edit, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                 SwapTag;                                           // 0x50(0x20)(Edit, NativeAccessSpecifierPublic)
	bool                                         bShowInAbilityScreen;                              // 0x70(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_257C[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x50 (0x50 - 0x0)
// ScriptStruct FortniteGame.HeroAbilityKit
struct FHeroAbilityKit
{
public:
	TSoftObjectPtr<class UFortAbilityKit>        InherentAbilityKit;                                // 0x0(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                 RequiredGPTags;                                    // 0x28(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	bool                                         bShowInAbilityScreen;                              // 0x48(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_257D[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0xC (0xC - 0x0)
// ScriptStruct FortniteGame.FortHexMapCoord
struct FFortHexMapCoord
{
public:
	int32                                        Horizontal;                                        // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Vertical;                                          // 0x4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Depth;                                             // 0x8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x20 (0x20 - 0x0)
// ScriptStruct FortniteGame.FortZoneEvent
struct FFortZoneEvent
{
public:
	class FName                                  EventType;                                         // 0x0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                               EventFocus;                                        // 0x8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UDataAsset*                            EventContent;                                      // 0x10(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                EventInstigator;                                   // 0x18(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x8 (0x8 - 0x0)
// ScriptStruct FortniteGame.HomebaseNodeState
struct FHomebaseNodeState
{
public:
	bool                                         bIsOwned;                                          // 0x0(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bAreCostsPayable;                                  // 0x1(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_257E[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        Level;                                             // 0x4(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.WorkerSetBonusState
struct FWorkerSetBonusState
{
public:
	struct FGameplayTag                          SetBonusTag;                                       // 0x0(0x8)(BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        CurrentMatchCount;                                 // 0x8(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        RequiredMatchCountToActivate;                      // 0xC(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x38 (0x38 - 0x0)
// ScriptStruct FortniteGame.WorkerSetBonusData
struct FWorkerSetBonusData
{
public:
	struct FGameplayTag                          SetBonusTypeTag;                                   // 0x0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                  DisplayName;                                       // 0x8(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	int32                                        RequiredWorkersCount;                              // 0x20(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_257F[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class UGameplayEffect>           SetBonusEffect;                                    // 0x28(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        SelectionWeight;                                   // 0x30(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        PowerPoints;                                       // 0x34(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x28 (0x28 - 0x0)
// ScriptStruct FortniteGame.WorkerPortraitData
struct FWorkerPortraitData
{
public:
	TSoftObjectPtr<class UFortItemIconDefinition> Portrait;                                          // 0x0(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.WorkerGenderData
struct FWorkerGenderData
{
public:
	enum class EFortCustomGender                 Gender;                                            // 0x0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2580[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FWorkerPortraitData>           PotraitData;                                       // 0x8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.ManagerSynergyData
struct FManagerSynergyData
{
public:
	struct FGameplayTag                          SynergyTypeTag;                                    // 0x0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FWorkerGenderData>             GenderData;                                        // 0x8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x38 (0x38 - 0x0)
// ScriptStruct FortniteGame.WorkerPersonalityData
struct FWorkerPersonalityData
{
public:
	struct FGameplayTag                          PersonalityTypeTag;                                // 0x0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                  PersonalityName;                                   // 0x8(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	int32                                        SelectionWeight;                                   // 0x20(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2581[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FWorkerGenderData>             GenderData;                                        // 0x28(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x18 (0x20 - 0x8)
// ScriptStruct FortniteGame.ExpeditionSlot
struct FExpeditionSlot : public FTableRowBase
{
public:
	struct FGameplayTag                          SlotTag;                                           // 0x8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                LootTierGroup;                                     // 0x10(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0xC (0xC - 0x0)
// ScriptStruct FortniteGame.HomebaseSquadSlotId
struct FHomebaseSquadSlotId
{
public:
	class FName                                  SquadId;                                           // 0x0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        SquadSlotIndex;                                    // 0x8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0xF0 (0xF8 - 0x8)
// ScriptStruct FortniteGame.HomebaseNodeGameplayEffectDataTableRow
struct FHomebaseNodeGameplayEffectDataTableRow : public FTableRowBase
{
public:
	struct FGameplayAttribute                    Attribute;                                         // 0x8(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EGameplayModOp                    Operation;                                         // 0x28(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2582[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        Magnitude;                                         // 0x2C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                 ApplicationRequiredTagsContainer;                  // 0x30(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                 RequiredSourceTagsContainer;                       // 0x50(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                 RequiredTargetTagsContainer;                       // 0x70(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                 GrantedTagsContainer;                              // 0x90(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                 IgnoreSourceTagsContainer;                         // 0xB0(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                 AssetTagsContainer;                                // 0xD0(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	int32                                        AssociatedGEIdx;                                   // 0xF0(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        AssociatedModifierIdx;                             // 0xF4(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x68 (0x68 - 0x0)
// ScriptStruct FortniteGame.HomebaseNodeLevel
struct FHomebaseNodeLevel
{
public:
	class FName                                  DisplayDataId;                                     // 0x0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MinCommanderLevel;                                 // 0x8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2583[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FFortItemQuantityPair>         Cost;                                              // 0x10(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class FName>                          GameplayEffectRowNames;                            // 0x20(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UFortAbilityKit>        AbilityKit;                                        // 0x30(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FHomebaseSquadSlotId>          UnlockedSquadSlots;                                // 0x58(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x10 (0x18 - 0x8)
// ScriptStruct FortniteGame.HomebaseBannerColorData
struct FHomebaseBannerColorData : public FTableRowBase
{
public:
	class FName                                  ColorKeyName;                                      // 0x8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  CategoryRowName;                                   // 0x10(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
};

// 0x90 (0x98 - 0x8)
// ScriptStruct FortniteGame.HomebaseBannerIconData
struct FHomebaseBannerIconData : public FTableRowBase
{
public:
	TSoftObjectPtr<class UTexture2D>             SmallImage;                                        // 0x8(0x28)(Edit, DisableEditOnInstance, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UTexture2D>             LargeImage;                                        // 0x30(0x28)(Edit, DisableEditOnInstance, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  CategoryRowName;                                   // 0x58(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FText                                  DisplayName;                                       // 0x60(0x18)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	class FText                                  DisplayDescription;                                // 0x78(0x18)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	uint8                                        bFullUsageRights : 1;                              // Mask : 0x1 0x90(0x1)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2584[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x20 (0x28 - 0x8)
// ScriptStruct FortniteGame.HomebaseBannerCategoryData
struct FHomebaseBannerCategoryData : public FTableRowBase
{
public:
	class FText                                  CategoryDisplayName;                               // 0x8(0x18)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	int32                                        SortPriority;                                      // 0x20(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2585[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x20 (0x20 - 0x0)
// ScriptStruct FortniteGame.HomebaseBannerColor
struct FHomebaseBannerColor
{
public:
	struct FLinearColor                          PrimaryColor;                                      // 0x0(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FLinearColor                          SecondaryColor;                                    // 0x10(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};

// 0x48 (0x48 - 0x0)
// ScriptStruct FortniteGame.TeamMapInfo
struct FTeamMapInfo
{
public:
	TArray<uint8>                                ReplicatedSeedPack;                                // 0x0(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_2586[0x34];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	enum class EFortTeam                         TeamId;                                            // 0x44(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2587[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x2 (0x2 - 0x0)
// ScriptStruct FortniteGame.TeamMapExplorationEvent
struct FTeamMapExplorationEvent
{
public:
	enum class EFortTeam                         TeamId;                                            // 0x0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int8                                         ExplorationThreshold;                              // 0x1(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x30 (0x30 - 0x0)
// ScriptStruct FortniteGame.ScreenLabelText
struct FScreenLabelText
{
public:
	class FText                                  NormalText;                                        // 0x0(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  RichText;                                          // 0x18(0x18)(Edit, NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.FortInstensityCurveSequenceProgression
struct FFortInstensityCurveSequenceProgression
{
public:
	class UFortIntensityCurveSequence*           CurveSequence;                                     // 0x0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FCurveTableRowHandle                  SelectionWeight;                                   // 0x8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x38 (0x38 - 0x0)
// ScriptStruct FortniteGame.InteractionType
struct FInteractionType
{
public:
	enum class ETInteractionType                 InteractionType;                                   // 0x0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2588[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TWeakObjectPtr<class AFortPlayerPawn>        RequestingPawn;                                    // 0x4(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class AFortPlayerController>  RequestingPlayerController;                        // 0xC(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2589[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TWeakObjectPtr<class UPrimitiveComponent>    InteractComponent;                                 // 0x1C(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class UObject>                OptionalObjectData;                                // 0x24(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               InteractPoint;                                     // 0x2C(0xC)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0xC0 (0x170 - 0xB0)
// ScriptStruct FortniteGame.FortItemList
struct FFortItemList : public FFastArraySerializer
{
public:
	TArray<struct FFortItemEntry>                ReplicatedEntries;                                 // 0xB0(0x10)(ZeroConstructor, SaveGame, NativeAccessSpecifierPublic)
	uint8                                        Pad_258A[0x50];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UFortWorldItem*>                ItemInstances;                                     // 0x110(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_258B[0x50];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x20 (0x20 - 0x0)
// ScriptStruct FortniteGame.ItemCategoryMappingData
struct FItemCategoryMappingData
{
public:
	enum class EFortItemType                     CategoryType;                                      // 0x0(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_258C[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  CategoryName;                                      // 0x8(0x18)(Edit, NativeAccessSpecifierPublic)
};

// 0x8 (0x30 - 0x28)
// ScriptStruct FortniteGame.FortGiftGiver
struct FFortGiftGiver : public FFortGiftingInfo
{
public:
	int32                                        NumItemsGiven;                                     // 0x28(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_258D[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x70 (0x70 - 0x0)
// ScriptStruct FortniteGame.ItemWrapPreviewEntry
struct FItemWrapPreviewEntry
{
public:
	TSoftObjectPtr<class UObject>                PreviewObject;                                     // 0x0(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_258E[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTransform                            PreviewTransform;                                  // 0x30(0x30)(Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	int32                                        WrapSectionLimit;                                  // 0x60(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bPreviewUsingVehicleShader : 1;                    // Mask : 0x1 0x64(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_258F[0xB];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x58 (0x58 - 0x0)
// ScriptStruct FortniteGame.ItemWrapSlotMetadata
struct FItemWrapSlotMetadata
{
public:
	struct FGameplayTagQuery                     MatchCriteria;                                     // 0x0(0x48)(Edit, NativeAccessSpecifierPublic)
	TArray<struct FItemWrapPreviewEntry>         PreviewList;                                       // 0x48(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x30 (0x30 - 0x0)
// ScriptStruct FortniteGame.KeepEventInfo
struct FKeepEventInfo
{
public:
	TSoftObjectPtr<class UFortKeepEventInfo>     KeepEvent;                                         // 0x0(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        DifficultyLevelOffset;                             // 0x28(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2590[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x40 (0x40 - 0x0)
// ScriptStruct FortniteGame.KeepEventWaveData
struct FKeepEventWaveData
{
public:
	class FText                                  WaveDescription;                                   // 0x0(0x18)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TSubclassOf<class UFortAIEncounterInfo>      EncounterTemplate;                                 // 0x18(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFortAISpawnGroupProgressionInfo*      SpawnGroupProgressionInfo;                         // 0x20(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        WarmupTime;                                        // 0x28(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        EncounterTime;                                     // 0x2C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        DifficultyLevel;                                   // 0x30(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AliveMultiplier;                                   // 0x34(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        EnemySpawnBits1;                                   // 0x38(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        EnemySpawnBits2;                                   // 0x3C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.ServerLaunchInfo
struct FServerLaunchInfo
{
public:
	float                                        LaunchServerTime;                                  // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2591[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class APawn*                                 LaunchedPawn;                                      // 0x8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x30 (0x30 - 0x0)
// ScriptStruct FortniteGame.McpLeaderboardResultRow
struct FMcpLeaderboardResultRow
{
public:
	struct FUniqueNetIdRepl                      PlayerUniqueNetId;                                 // 0x0(0x28)(BlueprintVisible, BlueprintReadOnly, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Rank;                                              // 0x28(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Value;                                             // 0x2C(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x48 (0x48 - 0x0)
// ScriptStruct FortniteGame.LeaderboardRowData
struct FLeaderboardRowData
{
public:
	int32                                        Rank;                                              // 0x0(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2592[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                User;                                              // 0x8(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Value;                                             // 0x18(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2593[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FUniqueNetIdRepl                      PlatformAccountId;                                 // 0x20(0x28)(BlueprintVisible, BlueprintReadOnly, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x30 (0x30 - 0x0)
// ScriptStruct FortniteGame.CreativeLoadedLinkData
struct FCreativeLoadedLinkData
{
public:
	class FString                                Mnemonic;                                          // 0x0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                LinkTitle;                                         // 0x10(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                IslandType;                                        // 0x20(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x30 (0x30 - 0x0)
// ScriptStruct FortniteGame.FortPSALoadingScreen
struct FFortPSALoadingScreen
{
public:
	int32                                        PercentChance;                                     // 0x0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MinimumGames;                                      // 0x4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class UUserWidget>             WidgetClass;                                       // 0x8(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x50 (0x50 - 0x0)
// ScriptStruct FortniteGame.FortSubGameLoadingScreen
struct FFortSubGameLoadingScreen
{
public:
	TArray<class UFortTips*>                     Tips;                                              // 0x0(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UObject>                BackgroundImage;                                   // 0x10(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             BackgroundDesiredSize;                             // 0x38(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          BackgroundColor;                                   // 0x40(0x10)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x18 (0x20 - 0x8)
// ScriptStruct FortniteGame.FortLootLevelData
struct FFortLootLevelData : public FTableRowBase
{
public:
	class FName                                  Category;                                          // 0x8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        LootLevel;                                         // 0x10(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MinItemLevel;                                      // 0x14(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaxItemLevel;                                      // 0x18(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2594[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0xB0 (0xB8 - 0x8)
// ScriptStruct FortniteGame.FortLootPackageData
struct FFortLootPackageData : public FTableRowBase
{
public:
	class FName                                  LootPackageID;                                     // 0x8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Weight;                                            // 0x10(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  NamedWeightMult;                                   // 0x14(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        Count;                                             // 0x1C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        LootPackageCategory;                               // 0x20(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2595[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGameplayTagContainer                 GameplayTags;                                      // 0x28(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class FName                                  RequiredTag;                                       // 0x48(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                LootPackageCall;                                   // 0x50(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UFortItemDefinition>    ItemDefinition;                                    // 0x60(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                PersistentLevel;                                   // 0x88(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MinWorldLevel;                                     // 0x98(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaxWorldLevel;                                     // 0x9C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bAllowBonusDrops;                                  // 0xA0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2596[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                Annotation;                                        // 0xA8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x20 (0x28 - 0x8)
// ScriptStruct FortniteGame.FortLootQuotaData
struct FFortLootQuotaData : public FTableRowBase
{
public:
	class FName                                  QuotaCategory;                                     // 0x8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ELootQuotaLevel                   QuotaLevel;                                        // 0x10(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2597[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        Min;                                               // 0x14(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Max;                                               // 0x18(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Quota;                                             // 0x1C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MinWorldLevel;                                     // 0x20(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaxWorldLevel;                                     // 0x24(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0xD8 (0xE0 - 0x8)
// ScriptStruct FortniteGame.FortLootTierData
struct FFortLootTierData : public FTableRowBase
{
public:
	class FName                                  TierGroup;                                         // 0x8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Weight;                                            // 0x10(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class ELootQuotaLevel                   QuotaLevel;                                        // 0x14(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2598[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        LootTier;                                          // 0x18(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MinWorldLevel;                                     // 0x1C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaxWorldLevel;                                     // 0x20(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2599[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                StreakBreakerCurrency;                             // 0x28(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        StreakBreakerPointsMin;                            // 0x38(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        StreakBreakerPointsMax;                            // 0x3C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        StreakBreakerPointsSpend;                          // 0x40(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  LootPackage;                                       // 0x44(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  LootPreviewPackage;                                // 0x4C(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        NumLootPackageDrops;                               // 0x54(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<int32>                                LootPackageCategoryWeightArray;                    // 0x58(0x10)(Edit, EditFixedSize, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<int32>                                LootPackageCategoryMinArray;                       // 0x68(0x10)(Edit, EditFixedSize, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<int32>                                LootPackageCategoryMaxArray;                       // 0x78(0x10)(Edit, EditFixedSize, ZeroConstructor, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                 GameplayTags;                                      // 0x88(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                 RequiredGameplayTags;                              // 0xA8(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	bool                                         bAllowBonusLootDrops;                              // 0xC8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_259A[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                Annotation;                                        // 0xD0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0xB0 (0xB0 - 0x0)
// ScriptStruct FortniteGame.MatchmakingParams
struct FMatchmakingParams
{
public:
	int32                                        ControllerId;                                      // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        PartySize;                                         // 0x4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                DatacenterId;                                      // 0x8(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        PlaylistId;                                        // 0x18(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_259B[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        MatchmakingLevel;                                  // 0x24(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MissionDifficultyMin;                              // 0x28(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MissionDifficultyMax;                              // 0x2C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                TheaterId;                                         // 0x30(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                ZoneInstanceId;                                    // 0x40(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                WUID;                                              // 0x50(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FUniqueNetIdRepl                      WorldOwnerId;                                      // 0x60(0x28)(HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                SessionId;                                         // 0x88(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EMatchmakingStartLocation         StartWith;                                         // 0x98(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EMatchmakingFlags                 Flags;                                             // 0x99(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_259C[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        ChanceToHostOverride;                              // 0x9C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ChanceToHostIncrease;                              // 0xA0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        NumAttempts;                                       // 0xA4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaxSearchResultsOverride;                          // 0xA8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaxProcessedSearchResults;                         // 0xAC(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0xC0 (0xC0 - 0x0)
// ScriptStruct FortniteGame.FortCachedMatchmakingSearchParams
struct FFortCachedMatchmakingSearchParams
{
public:
	enum class EFortMatchmakingType              MatchmakingType;                                   // 0x0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_259D[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FMatchmakingParams                    MatchmakingParams;                                 // 0x8(0xB0)(NativeAccessSpecifierPrivate)
	bool                                         bValid;                                            // 0xB8(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_259E[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.FortMatchmakingConfig
struct FFortMatchmakingConfig
{
public:
	float                                        ChanceToHostOverride;                              // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ChanceToHostIncrease;                              // 0x4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaxSearchResultsOverride;                          // 0x8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaxProcessedSearchResults;                         // 0xC(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x38 (0x38 - 0x0)
// ScriptStruct FortniteGame.FortInviteSessionParams
struct FFortInviteSessionParams
{
public:
	enum class EMatchmakingState                 State;                                             // 0x0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_259F[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  FailureReason;                                     // 0x8(0x18)(NativeAccessSpecifierPublic)
	enum class EPartyReservationResult           LastBeaconResponse;                                // 0x20(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_25A0[0x17];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x28 (0x28 - 0x0)
// ScriptStruct FortniteGame.FortMatchmakingErrorInfo
struct FFortMatchmakingErrorInfo
{
public:
	enum class EMatchmakingErrorV2               Error;                                             // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_25A1[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                ErrorCode;                                         // 0x8(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                ResponseStr;                                       // 0x18(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x20 (0x20 - 0x0)
// ScriptStruct FortniteGame.MMSAltDomainRecord
struct FMMSAltDomainRecord
{
public:
	class FString                                OriginalDomain;                                    // 0x0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                AltDomain;                                         // 0x10(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0xB0 (0xB0 - 0x0)
// ScriptStruct FortniteGame.MtxPackage
struct FMtxPackage
{
public:
	class FString                                StorefrontName;                                    // 0x0(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                OfferId;                                           // 0x10(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                  Title;                                             // 0x20(0x18)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class FText                                  Description;                                       // 0x38(0x18)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	int32                                        TotalAmount;                                       // 0x50(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        BonusAmount;                                       // 0x54(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                  Price;                                             // 0x58(0x18)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	uint8                                        Pad_25A2[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  SaleBasePrice;                                     // 0x78(0x18)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class FString                                DisplayAssetPath;                                  // 0x90(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                BannerOverride;                                    // 0xA0(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.MtxBreakdown
struct FMtxBreakdown
{
public:
	int32                                        AvailableTotalMtx;                                 // 0x0(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        AvailablePremiumMtx;                               // 0x4(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        UnavailableTotalMtx;                               // 0x8(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        UnavailablePremiumMtx;                             // 0xC(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.FortEventFlagsNotification
struct FFortEventFlagsNotification
{
public:
	TArray<class FString>                        EventFlags;                                        // 0x0(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	struct FDateTime                             RefreshTime;                                       // 0x10(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x20 (0x20 - 0x0)
// ScriptStruct FortniteGame.FriendCodeIssuedNotification
struct FFriendCodeIssuedNotification
{
public:
	class FString                                Code;                                              // 0x0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                CodeType;                                          // 0x10(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x28 (0x28 - 0x0)
// ScriptStruct FortniteGame.FortDifficultyIncreaseRewardEntry
struct FFortDifficultyIncreaseRewardEntry
{
public:
	int32                                        DifficultyIncreaseTier;                            // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_25A3[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FMcpLootResult                        DifficultyIncreaseMissionRewards;                  // 0x8(0x20)(NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.FortDifficultyIncreaseRewardRecord
struct FFortDifficultyIncreaseRewardRecord
{
public:
	TArray<struct FFortDifficultyIncreaseRewardEntry> PendingRewards;                                    // 0x0(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x28 (0x28 - 0x0)
// ScriptStruct FortniteGame.FortMissionAlertClaimData
struct FFortMissionAlertClaimData
{
public:
	TArray<class FString>                        MissionAlertGuids;                                 // 0x0(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FDateTime>                     LastClaimedTimes;                                  // 0x10(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	int32                                        NextClaimIndex;                                    // 0x20(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_25A4[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x70 (0x70 - 0x0)
// ScriptStruct FortniteGame.FortMissionAlertRecord
struct FFortMissionAlertRecord
{
public:
	TMap<class FString, struct FFortMissionAlertClaimData> ClaimDataMap;                                      // 0x0(0x50)(ZeroConstructor, NativeAccessSpecifierPublic)
	struct FMcpLootResult                        PendingMissionAlertRewards;                        // 0x50(0x20)(NativeAccessSpecifierPublic)
};

// 0x20 (0x20 - 0x0)
// ScriptStruct FortniteGame.FortCollectionBookResearchItemNotification
struct FFortCollectionBookResearchItemNotification
{
public:
	class FString                                ResearchedItemId;                                  // 0x0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                ResearchedTemplateId;                              // 0x10(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.FortCollectionBookUnslotItemNotification
struct FFortCollectionBookUnslotItemNotification
{
public:
	class FString                                UnslottedItemId;                                   // 0x0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x40 (0x40 - 0x0)
// ScriptStruct FortniteGame.FortCollectionBookClaimRewardNotification
struct FFortCollectionBookClaimRewardNotification
{
public:
	struct FMcpLootResult                        Loot;                                              // 0x0(0x20)(NativeAccessSpecifierPublic)
	class FString                                Page;                                              // 0x20(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                Section;                                           // 0x30(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.FortCollectionBookSlotItemNotification
struct FFortCollectionBookSlotItemNotification
{
public:
	class FString                                SlottedItemId;                                     // 0x0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x20 (0x20 - 0x0)
// ScriptStruct FortniteGame.FortClaimedDifficultyIncreaseRewardNotification
struct FFortClaimedDifficultyIncreaseRewardNotification
{
public:
	struct FMcpLootResult                        LootGranted;                                       // 0x0(0x20)(NativeAccessSpecifierPublic)
};

// 0x20 (0x20 - 0x0)
// ScriptStruct FortniteGame.FortMissionAlertCompleteNotification
struct FFortMissionAlertCompleteNotification
{
public:
	struct FMcpLootResult                        LootGranted;                                       // 0x0(0x20)(NativeAccessSpecifierPublic)
};

// 0x20 (0x20 - 0x0)
// ScriptStruct FortniteGame.FortTransmogResultNotification
struct FFortTransmogResultNotification
{
public:
	TArray<struct FMcpLootEntry>                 TransmoggedItems;                                  // 0x0(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FMcpLootEntry>                 RecycledItems;                                     // 0x10(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.FortUpgradeItemRarityNotification
struct FFortUpgradeItemRarityNotification
{
public:
	TArray<struct FMcpLootEntry>                 ItemsGranted;                                      // 0x0(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.FortConversionResultNotification
struct FFortConversionResultNotification
{
public:
	TArray<struct FMcpLootEntry>                 ItemsGranted;                                      // 0x0(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x20 (0x20 - 0x0)
// ScriptStruct FortniteGame.FortCollectedResourceNotification
struct FFortCollectedResourceNotification
{
public:
	struct FMcpLootResult                        Loot;                                              // 0x0(0x20)(NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.FortReceivedGiftedBoostXpNotification
struct FFortReceivedGiftedBoostXpNotification
{
public:
	int32                                        AmountBoostXpGifted;                               // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_25A5[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                GifterAccountId;                                   // 0x8(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.FortEarnScoreNotification
struct FFortEarnScoreNotification
{
public:
	int32                                        BaseXPEarned;                                      // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        BonusXPEarned;                                     // 0x4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        BoostXPEarned;                                     // 0x8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        BoostXPMissed;                                     // 0xC(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        RestXPEarned;                                      // 0x10(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        GroupBoostXPEarned;                                // 0x14(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x50 (0x50 - 0x0)
// ScriptStruct FortniteGame.FortEndMatchScoreNotification
struct FFortEndMatchScoreNotification
{
public:
	TMap<class FString, struct FFortEarnScoreNotification> ScoreNotifications;                                // 0x0(0x50)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.FortDailyQuestRerollNotification
struct FFortDailyQuestRerollNotification
{
public:
	class FString                                NewQuestId;                                        // 0x0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x30 (0x30 - 0x0)
// ScriptStruct FortniteGame.FortQuestRewardNotification
struct FFortQuestRewardNotification
{
public:
	class FString                                QuestId;                                           // 0x0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMcpLootResult                        Loot;                                              // 0x10(0x20)(NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.FortExpeditionResultNotification
struct FFortExpeditionResultNotification
{
public:
	bool                                         bExpeditionSucceeded;                              // 0x0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_25A6[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FMcpLootEntry>                 ExpeditionRewards;                                 // 0x8(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x8 (0x8 - 0x0)
// ScriptStruct FortniteGame.FortGetMcpTimeForPlayerNotification
struct FFortGetMcpTimeForPlayerNotification
{
public:
	struct FDateTime                             McpTime;                                           // 0x0(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x28 (0x28 - 0x0)
// ScriptStruct FortniteGame.CardPackResultNotification
struct FCardPackResultNotification
{
public:
	struct FMcpLootResult                        LootGranted;                                       // 0x0(0x20)(NativeAccessSpecifierPublic)
	int32                                        DisplayLevel;                                      // 0x20(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_25A7[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x40 (0x40 - 0x0)
// ScriptStruct FortniteGame.FortLootNotification
struct FFortLootNotification
{
public:
	class FString                                LootSource;                                        // 0x0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                LootSourceInstance;                                // 0x10(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMcpLootResult                        LootGranted;                                       // 0x20(0x20)(NativeAccessSpecifierPublic)
};

// 0x58 (0x58 - 0x0)
// ScriptStruct FortniteGame.FortNotificationLevelUp
struct FFortNotificationLevelUp
{
public:
	int32                                        Level;                                             // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_25A8[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                HeroId;                                            // 0x8(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFortLootNotification                 Loot;                                              // 0x18(0x40)(NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.FortCraftingResultNotification
struct FFortCraftingResultNotification
{
public:
	TArray<struct FMcpLootEntry>                 ItemsCrafted;                                      // 0x0(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.ImportFriendsRewardNotification
struct FImportFriendsRewardNotification
{
public:
	TArray<struct FMcpLootEntry>                 LootGranted;                                       // 0x0(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x38 (0x38 - 0x0)
// ScriptStruct FortniteGame.FortMissionCompletionNotification
struct FFortMissionCompletionNotification
{
public:
	bool                                         bWasCritical;                                      // 0x0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_25A9[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                MissionName;                                       // 0x8(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMcpLootResult                        LootGranted;                                       // 0x18(0x20)(NativeAccessSpecifierPublic)
};

// 0x20 (0x20 - 0x0)
// ScriptStruct FortniteGame.FortAthenaLoadoutData
struct FFortAthenaLoadoutData
{
public:
	enum class EAthenaCustomizationCategory      SlotName;                                          // 0x0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_25AA[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                ItemToSlot;                                        // 0x8(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        IndexWithinSlot;                                   // 0x18(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_25AB[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0xC (0xC - 0x0)
// ScriptStruct FortniteGame.FortAthenaSeasonStats
struct FFortAthenaSeasonStats
{
public:
	int32                                        NumWins;                                           // 0x0(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        NumHighBracket;                                    // 0x4(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        NumLowBracket;                                     // 0x8(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.FortAthenaEmoteCacheRecord
struct FFortAthenaEmoteCacheRecord
{
public:
	class UFortItemDefinition*                   ItemDef;                                           // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_25AC[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.FortAthenaConsumableRecord
struct FFortAthenaConsumableRecord
{
public:
	class UFortAccountItemDefinition*            ItemType;                                          // 0x0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        TotalQuantity;                                     // 0x8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_25AD[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x40 (0x40 - 0x0)
// ScriptStruct FortniteGame.MtxPurchaseHistoryEntry
struct FMtxPurchaseHistoryEntry
{
public:
	class FString                                PurchaseId;                                        // 0x0(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDateTime                             PurchaseDate;                                      // 0x10(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDateTime                             RefundDate;                                        // 0x18(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bHasBeenRefunded;                                  // 0x20(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_25AE[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FMcpLootEntry>                 LootResult;                                        // 0x28(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	int32                                        TotalMtxPaid;                                      // 0x38(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_25AF[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.MtxPurchaseHistory
struct FMtxPurchaseHistory
{
public:
	TArray<struct FMtxPurchaseHistoryEntry>      Purchases;                                         // 0x0(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	int32                                        RefundCredits;                                     // 0x10(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        RefundsUsed;                                       // 0x14(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x8 (0x8 - 0x0)
// ScriptStruct FortniteGame.GiftHistory
struct FGiftHistory
{
public:
	uint8                                        Pad_25B0[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x30 (0x30 - 0x0)
// ScriptStruct FortniteGame.FortCommonPublicPersona
struct FFortCommonPublicPersona
{
public:
	class FString                                BannerIconId;                                      // 0x0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                BannerColorId;                                     // 0x10(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                HomebaseName;                                      // 0x20(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x28 (0x28 - 0x0)
// ScriptStruct FortniteGame.ItemTransferOperation
struct FItemTransferOperation
{
public:
	class FString                                ItemId;                                            // 0x0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Quantity;                                          // 0x10(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         ToStorage;                                         // 0x14(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_25B1[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                NewItemIdHint;                                     // 0x18(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.ItemIdAndQuantityPair
struct FItemIdAndQuantityPair
{
public:
	class FString                                ItemId;                                            // 0x0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Quantity;                                          // 0x10(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_25B2[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x30 (0x30 - 0x0)
// ScriptStruct FortniteGame.FortProfileAndQuestSaveIdPair
struct FFortProfileAndQuestSaveIdPair
{
public:
	uint8                                        Pad_25B3[0x30];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x50 (0x50 - 0x0)
// ScriptStruct FortniteGame.FortBatchUpdatePlayer_DeployableBaseUpdate
struct FFortBatchUpdatePlayer_DeployableBaseUpdate
{
public:
	struct FUniqueNetIdRepl                      AccountId;                                         // 0x0(0x28)(HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                DeployableBaseItemId;                              // 0x28(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFortCloudSaveInfo                    CloudSaveInfo;                                     // 0x38(0x18)(NativeAccessSpecifierPublic)
};

// 0xF8 (0xF8 - 0x0)
// ScriptStruct FortniteGame.FortBatchUpdatePlayer_Update
struct FFortBatchUpdatePlayer_Update
{
public:
	struct FUniqueNetIdRepl                      AccountId;                                         // 0x0(0x28)(HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        TheaterNum;                                        // 0x28(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_25B4[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FMcpProfileChangeRequest              TheaterItemUpdate;                                 // 0x30(0x58)(NativeAccessSpecifierPublic)
	int32                                        OutpostNum;                                        // 0x88(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_25B5[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FMcpProfileChangeRequest              OutpostItemUpdate;                                 // 0x90(0x58)(NativeAccessSpecifierPublic)
	TArray<struct FFortQuestObjectiveCompletion> QuestObjectiveUpdates;                             // 0xE8(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0xE8 (0xE8 - 0x0)
// ScriptStruct FortniteGame.FortWorldProfileUpdateRequest
struct FFortWorldProfileUpdateRequest
{
public:
	uint8                                        Pad_25B6[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UFortMcpProfileWorld*>          WorldProfilesToSave;                               // 0x10(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_25B7[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        NumberOfRequests;                                  // 0x30(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_25B8[0xB4];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.QuickBarSlot
struct FQuickBarSlot
{
public:
	TArray<struct FGuid>                         Items;                                             // 0x0(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	bool                                         bEnabled;                                          // 0x10(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_25B9[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x90 (0x90 - 0x0)
// ScriptStruct FortniteGame.QuickBar
struct FQuickBar
{
public:
	int32                                        CurrentFocusedSlot;                                // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        PreviousFocusedSlot;                               // 0x4(0x4)(ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        SecondaryFocusedSlot;                              // 0x8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_25BA[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FQuickBarSlot>                 Slots;                                             // 0x10(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	struct FQuickBarData                         DataDefinition;                                    // 0x20(0x10)(NativeAccessSpecifierPrivate)
	TSet<class UFortItemDefinition*>             EquippedItemDefinitions;                           // 0x30(0x50)(ZeroConstructor, Transient, RepSkip, NativeAccessSpecifierPrivate)
	TArray<int32>                                SharedVisibleSlotIndicesWhenUsingGamepad;          // 0x80(0x10)(ZeroConstructor, Transient, RepSkip, NativeAccessSpecifierPrivate)
};

// 0x140 (0x140 - 0x0)
// ScriptStruct FortniteGame.FortWorldPlayerLoadout
struct FFortWorldPlayerLoadout
{
public:
	bool                                         bPlayerIsNew;                                      // 0x0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_25BB[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class FString>                        PinnedSchematicInstances;                          // 0x8(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	struct FQuickBar                             PrimaryQuickBarRecord;                             // 0x18(0x90)(NativeAccessSpecifierPublic)
	struct FQuickBar                             SecondaryQuickBarRecord;                           // 0xA8(0x90)(NativeAccessSpecifierPublic)
	int32                                        ZonesCompleted;                                    // 0x138(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_25BC[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.FortTwitchPendingQuestNotification
struct FFortTwitchPendingQuestNotification
{
public:
	uint8                                        Pad_25BD[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x20 (0x20 - 0x0)
// ScriptStruct FortniteGame.FortTwitchViewerNameAndAccountId
struct FFortTwitchViewerNameAndAccountId
{
public:
	class FString                                TwitchViewerName;                                  // 0x0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                AccountId;                                         // 0x10(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.FortTwitchViewerCompletedQuestNotification
struct FFortTwitchViewerCompletedQuestNotification
{
public:
	TArray<struct FFortTwitchViewerNameAndAccountId> ViewerIds;                                         // 0x0(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x20 (0x20 - 0x0)
// ScriptStruct FortniteGame.FortTwitchViewerGrantedQuestNotification
struct FFortTwitchViewerGrantedQuestNotification
{
public:
	class FString                                QuestTemplateId;                                   // 0x0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FFortTwitchViewerNameAndAccountId> ViewerIds;                                         // 0x10(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x48 (0x48 - 0x0)
// ScriptStruct FortniteGame.McpTournamentStats
struct FMcpTournamentStats
{
public:
	class FString                                TournamentId;                                      // 0x0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                EventWindowId;                                     // 0x10(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FString>                        TeamAccountIds;                                    // 0x20(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	class FString                                GameSessionId;                                     // 0x30(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        NumTeamEliminations;                               // 0x40(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        FinalTeamPlacement;                                // 0x44(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0xC (0xC - 0x0)
// ScriptStruct FortniteGame.McpMatchResults
struct FMcpMatchResults
{
public:
	int32                                        Placement;                                         // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Kills;                                             // 0x4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Deaths;                                            // 0x8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.QueryXboxUserXUIDParams
struct FQueryXboxUserXUIDParams
{
public:
	class FString                                UserXSTSToken;                                     // 0x0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x28 (0x28 - 0x0)
// ScriptStruct FortniteGame.IssuedFriendCode
struct FIssuedFriendCode
{
public:
	class FString                                CodeId;                                            // 0x0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                CodeType;                                          // 0x10(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDateTime                             DateCreated;                                       // 0x20(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x30 (0x30 - 0x0)
// ScriptStruct FortniteGame.XboxDedicatedServerSessionCreationParams
struct FXboxDedicatedServerSessionCreationParams
{
public:
	class FString                                TitleId;                                           // 0x0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                SandboxId;                                         // 0x10(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FString>                        XboxUserIds;                                       // 0x20(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x60 (0x60 - 0x0)
// ScriptStruct FortniteGame.PlayerToxicityReportRequest
struct FPlayerToxicityReportRequest
{
public:
	class FString                                Reason;                                            // 0x0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                Details;                                           // 0x10(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                GameSessionId;                                     // 0x20(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                CreativeIslandSharingLink;                         // 0x30(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                CreativeIslandGuid;                                // 0x40(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                CreativeIslandOwnerAccountId;                      // 0x50(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x30 (0x30 - 0x0)
// ScriptStruct FortniteGame.FortTheaterColorInfo
struct FFortTheaterColorInfo
{
public:
	bool                                         bUseDifficultyToDetermineColor;                    // 0x0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_25BE[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FSlateColor                           Color;                                             // 0x8(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// 0xC (0xC - 0x0)
// ScriptStruct FortniteGame.FortMissionAlertRuntimeData
struct FFortMissionAlertRuntimeData
{
public:
	class FName                                  MissionAlertCategoryName;                          // 0x0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bRespectTileRequirements;                          // 0x8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bAllowQuickplay;                                   // 0x9(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_25BF[0x2];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x4C8 (0x4C8 - 0x0)
// ScriptStruct FortniteGame.FortTheaterRuntimeData
struct FFortTheaterRuntimeData
{
public:
	enum class EFortTheaterType                  TheaterType;                                       // 0x0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_25C0[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGameplayTagContainer                 TheaterTags;                                       // 0x8(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FFortRequirementsInfo                 TheaterVisibilityRequirements;                     // 0x28(0x58)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FFortRequirementsInfo                 Requirements;                                      // 0x80(0x58)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	enum class ESubGame                          RequiredSubGameForVisibility;                      // 0xD8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bOnlyMatchLinkedQuestsToTiles;                     // 0xD9(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_25C1[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class AWorldMapPin>              WorldMapPinClass;                                  // 0xE0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                            TheaterImage;                                      // 0xE8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFortMultiSizeBrush                   TheaterImages;                                     // 0xF0(0x330)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FFortTheaterColorInfo                 TheaterColorInfo;                                  // 0x420(0x30)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FName                                  Socket;                                            // 0x450(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFortRequirementsInfo                 MissionAlertRequirements;                          // 0x458(0x58)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<struct FFortMissionAlertRuntimeData>  MissionAlertCategoryRequirements;                  // 0x4B0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	float                                        HighestDifficulty;                                 // 0x4C0(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_25C2[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x28 (0x28 - 0x0)
// ScriptStruct FortniteGame.FortTheaterDifficultyWeight
struct FFortTheaterDifficultyWeight
{
public:
	struct FDataTableRowHandle                   DifficultyInfo;                                    // 0x0(0x10)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	class FString                                LootTierGroup;                                     // 0x10(0x10)(ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Weight;                                            // 0x20(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_25C3[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.FortLinkedQuest
struct FFortLinkedQuest
{
public:
	class UFortQuestItemDefinition*              QuestDefinition;                                   // 0x0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDataTableRowHandle                   ObjectiveStatHandle;                               // 0x8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
};

// 0x30 (0x30 - 0x0)
// ScriptStruct FortniteGame.FortTheaterMissionWeight
struct FFortTheaterMissionWeight
{
public:
	TSoftClassPtr<class UFortMissionGenerator>   MissionGenerator;                                  // 0x0(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Weight;                                            // 0x28(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_25C4[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0xE8 (0xE8 - 0x0)
// ScriptStruct FortniteGame.FortTheaterMapTileData
struct FFortTheaterMapTileData
{
public:
	enum class EFortTheaterMapTileType           TileType;                                          // 0x0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_25C5[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftClassPtr<class UFortZoneTheme>          ZoneTheme;                                         // 0x8(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFortRequirementsInfo                 Requirements;                                      // 0x30(0x58)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<struct FFortLinkedQuest>              LinkedQuests;                                      // 0x88(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	int32                                        XCoordinate;                                       // 0x98(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        YCoordinate;                                       // 0x9C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FFortTheaterMissionWeight>     MissionWeightOverrides;                            // 0xA0(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FFortTheaterDifficultyWeight>  DifficultyWeightOverrides;                         // 0xB0(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                         CanBeMissionAlert;                                 // 0xC0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_25C6[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGameplayTagContainer                 TileTags;                                          // 0xC8(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, EditConst, NativeAccessSpecifierPublic)
};

// 0x30 (0x30 - 0x0)
// ScriptStruct FortniteGame.FortTheaterMapMissionData
struct FFortTheaterMapMissionData
{
public:
	TArray<struct FFortTheaterMissionWeight>     MissionWeights;                                    // 0x0(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<struct FFortTheaterDifficultyWeight>  DifficultyWeights;                                 // 0x10(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	int32                                        NumMissionsAvailable;                              // 0x20(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        NumMissionsToChange;                               // 0x24(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MissionChangeFrequency;                            // 0x28(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_25C7[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x60 (0x60 - 0x0)
// ScriptStruct FortniteGame.FortMissionAlertRequirementsInfo
struct FFortMissionAlertRequirementsInfo
{
public:
	class FName                                  CategoryName;                                      // 0x0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFortRequirementsInfo                 Requirements;                                      // 0x8(0x58)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// 0x108 (0x108 - 0x0)
// ScriptStruct FortniteGame.FortTheaterMapRegionData
struct FFortTheaterMapRegionData
{
public:
	class FText                                  DisplayName;                                       // 0x0(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, EditConst, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                 RegionTags;                                        // 0x18(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, EditConst, NativeAccessSpecifierPublic)
	TArray<int32>                                TileIndices;                                       // 0x38(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class USlateBrushAsset>       RegionThemeIcon;                                   // 0x48(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, EditConst, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFortTheaterMapMissionData            MissionData;                                       // 0x70(0x30)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FFortRequirementsInfo                 Requirements;                                      // 0xA0(0x58)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<struct FFortMissionAlertRequirementsInfo> MissionAlertRequirements;                          // 0xF8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// 0x560 (0x560 - 0x0)
// ScriptStruct FortniteGame.FortTheaterMapData
struct FFortTheaterMapData
{
public:
	class FText                                  DisplayName;                                       // 0x0(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FString                                UniqueId;                                          // 0x18(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        TheaterSlot;                                       // 0x28(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsTestTheater;                                    // 0x2C(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bHideLikeTestTheater;                              // 0x2D(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_25C8[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                RequiredEventFlag;                                 // 0x30(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  MissionRewardNamedWeightsRowName;                  // 0x40(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                  Description;                                       // 0x48(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FText                                  ThreatDisplayName;                                 // 0x60(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FFortTheaterRuntimeData               RuntimeInfo;                                       // 0x78(0x4C8)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<struct FFortTheaterMapTileData>       Tiles;                                             // 0x540(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, NativeAccessSpecifierPublic)
	TArray<struct FFortTheaterMapRegionData>     Regions;                                           // 0x550(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, NativeAccessSpecifierPublic)
};

// 0xA8 (0xA8 - 0x0)
// ScriptStruct FortniteGame.FortAvailableMissionData
struct FFortAvailableMissionData
{
public:
	class FString                                MissionGuid;                                       // 0x0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMcpLootResult                        MissionRewards;                                    // 0x10(0x20)(NativeAccessSpecifierPublic)
	struct FMcpLootResult                        BonusMissionRewards;                               // 0x30(0x20)(NativeAccessSpecifierPublic)
	TSoftClassPtr<class UFortMissionGenerator>   MissionGenerator;                                  // 0x50(0x28)(UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDataTableRowHandle                   MissionDifficultyInfo;                             // 0x78(0x10)(NoDestructor, NativeAccessSpecifierPublic)
	int32                                        TileIndex;                                         // 0x88(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_25C9[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FDateTime                             AvailableUntil;                                    // 0x90(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UFortItemDefinition*>           ItemDefinitionRefCache;                            // 0x98(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPublic)
};

// 0x28 (0x28 - 0x0)
// ScriptStruct FortniteGame.FortAvailableTheaterMissions
struct FFortAvailableTheaterMissions
{
public:
	class FString                                TheaterId;                                         // 0x0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FFortAvailableMissionData>     AvailableMissions;                                 // 0x10(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	struct FDateTime                             NextRefresh;                                       // 0x20(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x98 (0x98 - 0x0)
// ScriptStruct FortniteGame.FortAvailableMissionAlertData
struct FFortAvailableMissionAlertData
{
public:
	class FString                                CategoryName;                                      // 0x0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                SpreadDataName;                                    // 0x10(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                MissionAlertGuid;                                  // 0x20(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        TileIndex;                                         // 0x30(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_25CA[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FDateTime                             AvailableUntil;                                    // 0x38(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDateTime                             RefreshSpreadAt;                                   // 0x40(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMcpLootResult                        MissionAlertRewards;                               // 0x48(0x20)(NativeAccessSpecifierPublic)
	struct FMcpLootResult                        MissionAlertModifiers;                             // 0x68(0x20)(NativeAccessSpecifierPublic)
	TArray<class UFortItemDefinition*>           ItemDefinitionRefCache;                            // 0x88(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPublic)
};

// 0x28 (0x28 - 0x0)
// ScriptStruct FortniteGame.FortAvailableMissionAlerts
struct FFortAvailableMissionAlerts
{
public:
	class FString                                TheaterId;                                         // 0x0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FFortAvailableMissionAlertData> AvailableMissionAlerts;                            // 0x10(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	struct FDateTime                             NextRefresh;                                       // 0x20(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x30 (0x30 - 0x0)
// ScriptStruct FortniteGame.FortActiveTheaterInfo
struct FFortActiveTheaterInfo
{
public:
	TArray<struct FFortTheaterMapData>           Theaters;                                          // 0x0(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FFortAvailableTheaterMissions> Missions;                                          // 0x10(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FFortAvailableMissionAlerts>   MissionAlerts;                                     // 0x20(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x60 (0x60 - 0x0)
// ScriptStruct FortniteGame.MegaStormCircle
struct FMegaStormCircle
{
public:
	struct FBuildingSupportCellIndex             GridCenter;                                        // 0x0(0xC)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        NumCellsFromCenter;                                // 0xC(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        CurrentQuadrant;                                   // 0x10(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FBuildingSupportCellIndex             GridAt;                                            // 0x14(0xC)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        RadiusInGridCells;                                 // 0x20(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        XAdvanceAccumulation;                              // 0x24(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        YAdvanceAccumulation;                              // 0x28(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        GridRadiusSquaredX4;                               // 0x2C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        NumPlots;                                          // 0x30(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               WorldCenter;                                       // 0x34(0xC)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        WorldRadius;                                       // 0x40(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_25CB[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<TWeakObjectPtr<class ABuildingSMActor>> ActorsInMegaStorm;                                 // 0x48(0x10)(ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	enum class EMegaStormState                   MegaStormState;                                    // 0x58(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_25CC[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.NavAgentData
struct FNavAgentData
{
public:
	class FName                                  AgentName;                                         // 0x0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FCurveTableRowHandle                  BuildingActorHealthToNavAreaStrengthHandle;        // 0x8(0x10)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x20 (0x28 - 0x8)
// ScriptStruct FortniteGame.FortMigrationDataTableRow
struct FFortMigrationDataTableRow : public FTableRowBase
{
public:
	class FString                                OldItemTemplate;                                   // 0x8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                NewItemTemplate;                                   // 0x18(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x2C (0x38 - 0xC)
// ScriptStruct FortniteGame.MinigamePlayer
struct FMinigamePlayer : public FFastArraySerializerItem
{
public:
	uint8                                        Pad_25CD[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AFortPlayerState*                      PlayerState;                                       // 0x10(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bHasValidResetData;                                // 0x18(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortTeam                         TeamBeforeMinigameStarted;                         // 0x19(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_25CE[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               LocationBeforeMinigameStarted;                     // 0x1C(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                              RotationBeforeMinigameStarted;                     // 0x28(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	bool                                         bWasSkydivingBeforeMinigameStarted;                // 0x34(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bWasFlyingBeforeMinigameStarted;                   // 0x35(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsTeleportingOrRespawningForGameplay;             // 0x36(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bWantsToSkydive;                                   // 0x37(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x18 (0xC8 - 0xB0)
// ScriptStruct FortniteGame.MinigamePlayers
struct FMinigamePlayers : public FFastArraySerializer
{
public:
	TArray<struct FMinigamePlayer>               Players;                                           // 0xB0(0x10)(Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, NativeAccessSpecifierPublic)
	class AFortMinigame*                         Owner;                                             // 0xC0(0x8)(ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x30 (0x30 - 0x0)
// ScriptStruct FortniteGame.MinigameStatRow
struct FMinigameStatRow
{
public:
	class FText                                  PlayerName;                                        // 0x0(0x18)(BlueprintVisible, BlueprintReadOnly, Transient, NativeAccessSpecifierPublic)
	TArray<class FText>                          PlayerStats;                                       // 0x18(0x10)(BlueprintVisible, ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	bool                                         bIsTeamRow;                                        // 0x28(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_25CF[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x4 (0x4 - 0x0)
// ScriptStruct FortniteGame.MinigameScoreData
struct FMinigameScoreData
{
public:
	float                                        Score;                                             // 0x0(0x4)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x4 (0x8 - 0x4)
// ScriptStruct FortniteGame.MinigameTeamScoreData
struct FMinigameTeamScoreData : public FMinigameScoreData
{
public:
	enum class EFortTeam                         Team;                                              // 0x4(0x1)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_25D0[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0xC (0x10 - 0x4)
// ScriptStruct FortniteGame.MinigameSoloScoreData
struct FMinigameSoloScoreData : public FMinigameScoreData
{
public:
	uint8                                        Pad_25D1[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AFortPlayerState*                      PlayerState;                                       // 0x8(0x8)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x28 (0x28 - 0x0)
// ScriptStruct FortniteGame.MinigameScoreTracker
struct FMinigameScoreTracker
{
public:
	struct FMinigameScoreData                    GroupScore;                                        // 0x0(0x4)(Edit, EditConst, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_25D2[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FMinigameTeamScoreData>        TeamScores;                                        // 0x8(0x10)(Edit, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
	TArray<struct FMinigameSoloScoreData>        SoloScores;                                        // 0x18(0x10)(Edit, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
};

// 0xC (0xC - 0x0)
// ScriptStruct FortniteGame.MinigameScoreTemplate
struct FMinigameScoreTemplate
{
public:
	enum class EMinigameScoreType                ScoreType;                                         // 0x0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_25D3[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        NumHighScores;                                     // 0x4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bAscending;                                        // 0x8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_25D4[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x28 (0xD8 - 0xB0)
// ScriptStruct FortniteGame.MinigameScoreArray
struct FMinigameScoreArray : public FFastArraySerializer
{
public:
	TArray<struct FMinigameScoreEntry>           Scores;                                            // 0xB0(0x10)(Edit, ZeroConstructor, Transient, EditConst, NativeAccessSpecifierPublic)
	TArray<struct FMinigameScoreEntry>           HighScores;                                        // 0xC0(0x10)(Edit, ZeroConstructor, Transient, EditConst, RepSkip, NativeAccessSpecifierPublic)
	class AActor*                                Owner;                                             // 0xD0(0x8)(ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x18 (0x20 - 0x8)
// ScriptStruct FortniteGame.MinigameHighScoreEntryRow
struct FMinigameHighScoreEntryRow : public FTableRowBase
{
public:
	class FString                                PlayerName;                                        // 0x8(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Score;                                             // 0x18(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_25D5[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x8 (0x10 - 0x8)
// ScriptStruct FortniteGame.MinigameHighScoreRow
struct FMinigameHighScoreRow : public FTableRowBase
{
public:
	class UDataTable*                            HighScoresTable;                                   // 0x8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x60 (0x60 - 0x0)
// ScriptStruct FortniteGame.MinigameSpawnerSpawnParams
struct FMinigameSpawnerSpawnParams
{
public:
	TSoftObjectPtr<class UFortWorldItemDefinition> PickupToSpawn;                                     // 0x0(0x28)(Edit, BlueprintVisible, DisableEditOnTemplate, SaveGame, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        PickupQuantity;                                    // 0x28(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_25D6[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTransform                            SpawnTransform;                                    // 0x30(0x30)(BlueprintVisible, SaveGame, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.FortMinigameStatQuery
struct FFortMinigameStatQuery
{
public:
	TSubclassOf<class UFortMinigameStatFilter>   Stat;                                              // 0x0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortMinigameStatScope            Scope;                                             // 0x8(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bAnyMatch : 1;                                     // Mask : 0x1 0x9(0x1)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortMinigameStatOperation        Operation;                                         // 0xA(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_25D7[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        Value;                                             // 0xC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bStaticCount : 1;                                  // Mask : 0x1 0x10(0x1)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_25D8[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.FortMinigameStat
struct FFortMinigameStat
{
public:
	TSubclassOf<class UFortMinigameStatFilter>   Filter;                                            // 0x0(0x8)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Count;                                             // 0x8(0x4)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_25D9[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.FortMinigameGroupStats
struct FFortMinigameGroupStats
{
public:
	TArray<struct FFortMinigameStat>             Stats;                                             // 0x0(0x10)(Edit, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
};

// 0x8 (0x18 - 0x10)
// ScriptStruct FortniteGame.FortMinigamePlayerStats
struct FFortMinigamePlayerStats : public FFortMinigameGroupStats
{
public:
	class AFortPlayerState*                      Player;                                            // 0x10(0x8)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x8 (0x18 - 0x10)
// ScriptStruct FortniteGame.FortMinigameTeamStats
struct FFortMinigameTeamStats : public FFortMinigameGroupStats
{
public:
	enum class EFortTeam                         Team;                                              // 0x10(0x1)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_25DA[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x80 (0x80 - 0x0)
// ScriptStruct FortniteGame.FortMiniMapData
struct FFortMiniMapData
{
public:
	class UTexture2D*                            MiniMapIcon;                                       // 0x0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             IconScale;                                         // 0x8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bUseIconSize : 1;                                  // Mask : 0x1 0x10(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, SaveGame, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsVisible : 1;                                    // Mask : 0x2 0x10(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, SaveGame, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsVisibleOnMiniMap : 1;                           // Mask : 0x4 0x10(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, SaveGame, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bShowVerticalOffset : 1;                           // Mask : 0x8 0x10(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, SaveGame, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bShowFarOffIndicator : 1;                          // Mask : 0x10 0x10(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, SaveGame, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bDisplayIconEvenOnFogOfWar : 1;                    // Mask : 0x20 0x10(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, SaveGame, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bAllowLocalOverrides : 1;                          // Mask : 0x40 0x10(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, SaveGame, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bUseTeamAffiliationColors : 1;                     // Mask : 0x80 0x10(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, SaveGame, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_25DB[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FLinearColor                          Color;                                             // 0x14(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          FriendColor;                                       // 0x24(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          EnemyColor;                                        // 0x34(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          NeutralColor;                                      // 0x44(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          PulseColor;                                        // 0x54(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ColorPulsesPerSecond;                              // 0x64(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SizePulsesPerSecond;                               // 0x68(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ViewableDistance;                                  // 0x6C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               LocationOffset;                                    // 0x70(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Priority;                                          // 0x7C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x20 (0x20 - 0x0)
// ScriptStruct FortniteGame.FortMissionFocusDisplayData
struct FFortMissionFocusDisplayData
{
public:
	class FText                                  CurrentFocusDisplayText;                           // 0x0(0x18)(NativeAccessSpecifierPublic)
	float                                        CurrentFocusPercentage;                            // 0x18(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_25DC[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x38 (0x38 - 0x0)
// ScriptStruct FortniteGame.FortMissionPlacementActorPreferredTagInfo
struct FFortMissionPlacementActorPreferredTagInfo
{
public:
	struct FDataTableRowHandle                   DifficultyInfo;                                    // 0x0(0x10)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                 PlacementActorPreferredTags;                       // 0x10(0x20)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	float                                        Difficulty;                                        // 0x30(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_25DD[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x14 (0x20 - 0xC)
// ScriptStruct FortniteGame.FortBadgeCount
struct FFortBadgeCount : public FFastArraySerializerItem
{
public:
	uint8                                        Pad_25DE[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UFortBadgeItemDefinition*              Badge;                                             // 0x10(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Count;                                             // 0x18(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_25DF[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x10 (0xC0 - 0xB0)
// ScriptStruct FortniteGame.FortBadgeCountArray
struct FFortBadgeCountArray : public FFastArraySerializer
{
public:
	TArray<struct FFortBadgeCount>               Badges;                                            // 0xB0(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.FortActiveThreatPlayerData
struct FFortActiveThreatPlayerData
{
public:
	class AFortPlayerController*                 PlayerController;                                  // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFortAIEncounterInfo*                  Encounter;                                         // 0x8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.FortReactiveQuestDialogue
struct FFortReactiveQuestDialogue
{
public:
	class UFortConversation*                     Conversation;                                      // 0x0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        PlayOnObjectiveCount;                              // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_25E0[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x50 (0x50 - 0x0)
// ScriptStruct FortniteGame.FortRiftSpawnerData
struct FFortRiftSpawnerData
{
public:
	class ABuildingRift*                         Rift;                                              // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFortAIEncounterInfo*                  Encounter;                                         // 0x8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFortAIEncounterSequence*              EncounterSequence;                                 // 0x10(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class AFortPlayerPawn*>               PlayersInRange;                                    // 0x18(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	float                                        TriggerDamagePercentage;                           // 0x28(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_25E1[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AController*                           KillingInstigator;                                 // 0x30(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                KillingDamageCauser;                               // 0x38(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTimerHandle                          DeactivationTimerHandle;                           // 0x40(0x8)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTimerHandle                          BurstFallbackTimerHandle;                          // 0x48(0x8)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x60 (0x68 - 0x8)
// ScriptStruct FortniteGame.FortMissionAlertData
struct FFortMissionAlertData : public FTableRowBase
{
public:
	class FName                                  CategoryRowName;                                   // 0x8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  SpreadRowName;                                     // 0x10(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                RequiredEventFlag;                                 // 0x18(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bOnlyUsedForSpreading;                             // 0x28(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_25E2[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        MinimumTileDifficulty;                             // 0x2C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaximumTileDifficulty;                             // 0x30(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_25E3[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<TSoftClassPtr<class UFortMissionGenerator>> RestrictedMissionGens;                             // 0x38(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	class FString                                LootTierGroup;                                     // 0x48(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                ModifierTierGroup;                                 // 0x58(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x18 (0x20 - 0x8)
// ScriptStruct FortniteGame.FortMissionAlertSpreadData
struct FFortMissionAlertSpreadData : public FTableRowBase
{
public:
	float                                        ChanceToSpread;                                    // 0x8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        TotalChancesToSpread;                              // 0xC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaxNumTilesToSpreadTo;                             // 0x10(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        SpreadInterval;                                    // 0x14(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  MissionAlertRowName;                               // 0x18(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x58 (0x60 - 0x8)
// ScriptStruct FortniteGame.FortMissionAlertCategoryData
struct FFortMissionAlertCategoryData : public FTableRowBase
{
public:
	class FName                                  CategoryRowName;                                   // 0x8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Priority;                                          // 0x10(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Quota;                                             // 0x14(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         MissionAlertRepeatable;                            // 0x18(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_25E4[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGameplayTagContainer                 CategoryTagsContainer;                             // 0x20(0x20)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                 VisualizationTagsContainer;                        // 0x40(0x20)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// 0x30 (0x30 - 0x0)
// ScriptStruct FortniteGame.FortDifficultyOptionBudget
struct FFortDifficultyOptionBudget
{
public:
	struct FGameplayTagContainer                 BudgetTypeTags;                                    // 0x0(0x20)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FCurveTableRowHandle                  DifficultyOptionPointsCurve;                       // 0x20(0x10)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x58 (0x58 - 0x0)
// ScriptStruct FortniteGame.MissionGenerationInfo
struct FMissionGenerationInfo
{
public:
	int32                                        NumMissionsRequired;                               // 0x0(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaxMissionsAllowed;                                // 0x4(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        NumMissionsGeneratedMatchingRequirements;          // 0x8(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_25E5[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGameplayTagQuery                     MissionTagRequirements;                            // 0x10(0x48)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// 0x30 (0x30 - 0x0)
// ScriptStruct FortniteGame.PerDifficultyMissionGenerationInfo
struct FPerDifficultyMissionGenerationInfo
{
public:
	struct FDataTableRowHandle                   MinDifficulty;                                     // 0x0(0x10)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FDataTableRowHandle                   MaxDifficulty;                                     // 0x10(0x10)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	TArray<struct FMissionGenerationInfo>        MissionGenerationInfos;                            // 0x20(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// 0x58 (0x58 - 0x0)
// ScriptStruct FortniteGame.FortPlayerSpawnPadPlacementData
struct FFortPlayerSpawnPadPlacementData
{
public:
	class UEnvQuery*                             PlacementQuery;                                    // 0x0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftClassPtr<class ABuildingSMActor>        ActorToPlace;                                      // 0x8(0x28)(Edit, DisableEditOnInstance, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bSnapToGrid;                                       // 0x30(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bAdjustPlacementForFloors;                         // 0x31(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_25E6[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGameplayTagContainer                 TagsToAddToChosenPlacementActor;                   // 0x38(0x20)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
};

// 0x58 (0x58 - 0x0)
// ScriptStruct FortniteGame.FortAthenaLTMConfig
struct FFortAthenaLTMConfig
{
public:
	TSoftObjectPtr<class UTexture2D>             SplashImage;                                       // 0x0(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                  FrontEndDescription;                               // 0x28(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FText                                  DisabledMessage;                                   // 0x40(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// 0x38 (0x38 - 0x0)
// ScriptStruct FortniteGame.ZoneLoadingScreenHeadingConfig
struct FZoneLoadingScreenHeadingConfig
{
public:
	class UTexture2D*                            HeadingImage;                                      // 0x0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                  Heading;                                           // 0x8(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FText                                  HeadingDescription;                                // 0x20(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// 0x110 (0x110 - 0x0)
// ScriptStruct FortniteGame.ZoneLoadingScreenConfig
struct FZoneLoadingScreenConfig
{
public:
	TSoftObjectPtr<class UTexture2D>             BackgroundImage;                                   // 0x0(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                  TitleDescription;                                  // 0x28(0x18)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FText                                  Title;                                             // 0x40(0x18)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FZoneLoadingScreenHeadingConfig       Headings;                                          // 0x58(0x38)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	uint8                                        Pad_25E7[0x70];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UFortTips*>                     LoadingTips;                                       // 0x100(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// 0x38 (0x38 - 0x0)
// ScriptStruct FortniteGame.FortPossibleMission
struct FFortPossibleMission
{
public:
	TSoftObjectPtr<class UFortMissionInfo>       MissionInfo;                                       // 0x0(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Weight;                                            // 0x28(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MinAlwaysGenerated;                                // 0x2C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsPrototype;                                      // 0x30(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_25E8[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x30 (0x30 - 0x0)
// ScriptStruct FortniteGame.FortMissionInfoOption
struct FFortMissionInfoOption
{
public:
	TSoftObjectPtr<class UFortMissionInfo>       MissionInfo;                                       // 0x0(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinDifficultyLevel;                                // 0x28(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_25E9[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x80 (0x80 - 0x0)
// ScriptStruct FortniteGame.FortMissionPlacementActorItem
struct FFortMissionPlacementActorItem
{
public:
	struct FGameplayTagContainer                 ItemIdentifyingTags;                               // 0x0(0x20)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                 TagsToAddToChosenPlacementActor;                   // 0x20(0x20)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class UEnvQuery*                             PlacementQuery;                                    // 0x40(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftClassPtr<class AActor>                  ActorToPlace;                                      // 0x48(0x28)(Edit, DisableEditOnInstance, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        NumLocationsToFind;                                // 0x70(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bSpawnActorAutomatically;                          // 0x74(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bShouldReserveLocations;                           // 0x75(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_25EA[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bSnapToGrid;                                       // 0x77(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bAdjustPlacementForFloors;                         // 0x78(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bDontCreateSpawnRiftsNearby;                       // 0x79(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_25EB[0x6];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x78 (0x78 - 0x0)
// ScriptStruct FortniteGame.FortMissionPlacementFoundationItem
struct FFortMissionPlacementFoundationItem
{
public:
	struct FGameplayTagContainer                 ItemIdentifyingTags;                               // 0x0(0x20)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                 TagsToAddToChosenPlacementActorOrFoundationActor;  // 0x20(0x20)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class UEnvQuery*                             PlacementQuery;                                    // 0x40(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftClassPtr<class ABuildingFoundation>     BuildingFoundationToPlace;                         // 0x48(0x28)(Edit, DisableEditOnInstance, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        NumLocationsToFind;                                // 0x70(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bAdjustFoundationPlacementForFloors;               // 0x74(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_25EC[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x40 (0x40 - 0x0)
// ScriptStruct FortniteGame.FortMissionPlacementItems
struct FFortMissionPlacementItems
{
public:
	struct FGameplayTagContainer                 TagsToAddToChosenPlacementActors;                  // 0x0(0x20)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<struct FFortMissionPlacementFoundationItem> AdditionalWorldFoundations;                        // 0x20(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<struct FFortMissionPlacementActorItem> ActorsAndLocations;                                // 0x30(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// 0x40 (0x40 - 0x0)
// ScriptStruct FortniteGame.FortTimeOfDayTheme
struct FFortTimeOfDayTheme
{
public:
	TArray<class UFortTimeOfDayCollection*>      TimeOfDayCollections;                              // 0x0(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TArray<TSoftClassPtr<class AFortTimeOfDayManager>> AdditionalTimeOfDayManagers;                       // 0x10(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	TArray<TSoftClassPtr<class AFortTimeOfDayManager>> ProhibitedTimeOfDayManagers;                       // 0x20(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	TArray<TSoftClassPtr<class AFortTimeOfDayManager>> ValidTimeOfDayManagers;                            // 0x30(0x10)(ZeroConstructor, Transient, UObjectWrapper, NativeAccessSpecifierPrivate)
};

// 0x8 (0x8 - 0x0)
// ScriptStruct FortniteGame.FortWindIntensityAndDirection
struct FFortWindIntensityAndDirection
{
public:
	float                                        WindIntensity;                                     // 0x0(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        WindHeading;                                       // 0x4(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.FortGlobalWindInfo
struct FFortGlobalWindInfo
{
public:
	TArray<struct FFortWindIntensityAndDirection> ValidWindInfos;                                    // 0x0(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	int32                                        WindIndex;                                         // 0x10(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_25ED[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x68 (0x68 - 0x0)
// ScriptStruct FortniteGame.MissionPerDifficultyProperties
struct FMissionPerDifficultyProperties
{
public:
	TArray<struct FDataTableRowHandle>           ValidDifficulties;                                 // 0x0(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FFortTimeOfDayTheme                   OverrideTimeOfDayTheme;                            // 0x10(0x40)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FFortGlobalWindInfo                   OverrideGlobalWindInfo;                            // 0x50(0x18)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.FortMissionTaggedRewards
struct FFortMissionTaggedRewards
{
public:
	struct FGameplayTag                          Tag;                                               // 0x0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<TSoftObjectPtr<class UFortWorldItemDefinition>> WorldItemDefinitions;                              // 0x8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, NativeAccessSpecifierPublic)
};

// 0x1D0 (0x1D0 - 0x0)
// ScriptStruct FortniteGame.FortMissionPopupWidgetData
struct FFortMissionPopupWidgetData
{
public:
	class FText                                  DisplayName;                                       // 0x0(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	bool                                         bShowDescription;                                  // 0x18(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_25EE[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  Description;                                       // 0x20(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FSlateBrush                           DescriptionIcon;                                   // 0x38(0x88)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FSlateBrush                           AvailableIcon;                                     // 0xC0(0x88)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FSlateBrush                           UnavailableIcon;                                   // 0x148(0x88)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// 0x58 (0x58 - 0x0)
// ScriptStruct FortniteGame.FortObjectiveEntry
struct FFortObjectiveEntry
{
public:
	TSoftClassPtr<class AFortObjectiveBase>      ObjectiveRef;                                      // 0x0(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UFortBadgeItemDefinition*              ObjectiveRewardBadge;                              // 0x28(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortObjectiveRequirement         MissionRequirement;                                // 0x30(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_25EF[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGameplayTagContainer                 ObjectiveHandle;                                   // 0x38(0x20)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.FortObjectiveBlock
struct FFortObjectiveBlock
{
public:
	TArray<struct FFortObjectiveEntry>           ObjectiveEntries;                                  // 0x0(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.FortStartingMissionInfo
struct FFortStartingMissionInfo
{
public:
	TArray<class UFortMissionInfo*>              StartingMissions;                                  // 0x0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                         bDisableSharedMissionLoading;                      // 0x10(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_25F0[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x1 (0x1 - 0x0)
// ScriptStruct FortniteGame.FortEncounterTransitionSettings
struct FFortEncounterTransitionSettings
{
public:
	bool                                         bShouldMaintainEncounterState;                     // 0x0(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x60 (0x60 - 0x0)
// ScriptStruct FortniteGame.FortEncounterProfile
struct FFortEncounterProfile
{
public:
	TSoftObjectPtr<class UFortDifficultyOptionSetEncounter> EncounterOptions;                                  // 0x0(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UFortDifficultyOptionCategoryEncounter*> OverrideCategories;                                // 0x28(0x10)(Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	bool                                         bShouldReselectOptionsPerInstance;                 // 0x38(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_25F1[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGameplayTagContainer                 EncounterTypeTags;                                 // 0x40(0x20)(Edit, NativeAccessSpecifierPublic)
};

// 0x38 (0x38 - 0x0)
// ScriptStruct FortniteGame.FortEncounterSequenceSettings
struct FFortEncounterSequenceSettings
{
public:
	struct FFortEncounterTransitionSettings      TransitionSettings;                                // 0x0(0x1)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_25F2[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FFortEncounterProfile>         EncounterSequence;                                 // 0x8(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                 SequenceTags;                                      // 0x18(0x20)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// 0x30 (0x30 - 0x0)
// ScriptStruct FortniteGame.EarnedBadgePlayerData
struct FEarnedBadgePlayerData
{
public:
	struct FUniqueNetIdRepl                      PlayerID;                                          // 0x0(0x28)(BlueprintVisible, BlueprintReadOnly, Transient, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Count;                                             // 0x28(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_25F3[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x24 (0x30 - 0xC)
// ScriptStruct FortniteGame.EarnedBadgeEntry
struct FEarnedBadgeEntry : public FFastArraySerializerItem
{
public:
	uint8                                        Pad_25F4[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UFortBadgeItemDefinition*              Badge;                                             // 0x10(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FEarnedBadgePlayerData>        PlayerData;                                        // 0x18(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	enum class EFortRewardType                   RewardType;                                        // 0x28(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_25F5[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x10 (0xC0 - 0xB0)
// ScriptStruct FortniteGame.EarnedBadgeEntryArray
struct FEarnedBadgeEntryArray : public FFastArraySerializer
{
public:
	TArray<struct FEarnedBadgeEntry>             Items;                                             // 0xB0(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
};

// 0x30 (0x30 - 0x0)
// ScriptStruct FortniteGame.FortMissionUIActorHandle
struct FFortMissionUIActorHandle
{
public:
	TWeakObjectPtr<class AActor>                 AttachedActor;                                     // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               AttachmentOffset;                                  // 0x8(0xC)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxVisibleDistance;                                // 0x14(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGuid                                 MissionGuid;                                       // 0x18(0x10)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class UFortMissionInfoIndicator> MissionUIIndicator;                                // 0x28(0x8)(ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x2C (0x2C - 0x0)
// ScriptStruct FortniteGame.MissionTimeDisplayData
struct FMissionTimeDisplayData
{
public:
	float                                        LessThanTimeValue;                                 // 0x0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bHideTimer;                                        // 0x4(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_25F6[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FLinearColor                          BaseColor;                                         // 0x8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          PulseColor;                                        // 0x18(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ColorPulsesPerSecond;                              // 0x28(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x28 (0x28 - 0x0)
// ScriptStruct FortniteGame.MissionTimerData
struct FMissionTimerData
{
public:
	bool                                         bTimerIsPaused;                                    // 0x0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_25F7[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        OriginalTimePeriod;                                // 0x4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ReplicatedRemainingTime;                           // 0x8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ClientRemainingTime;                               // 0xC(0x4)(ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_25F8[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x98 (0x98 - 0x0)
// ScriptStruct FortniteGame.FortMissionWeightedReward
struct FFortMissionWeightedReward
{
public:
	class FName                                  LootTierGroup;                                     // 0x0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSlateBrush                           LootIcon;                                          // 0x8(0x88)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	float                                        Weight;                                            // 0x90(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_25F9[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x48 (0x48 - 0x0)
// ScriptStruct FortniteGame.MontageLookupData
struct FMontageLookupData
{
public:
	struct FGameplayTagContainer                 GameplayTags;                                      // 0x0(0x20)(Edit, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class UAnimMontage>           AnimMontage;                                       // 0x20(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};

// 0x100 (0x100 - 0x0)
// ScriptStruct FortniteGame.AirControlParams
struct FAirControlParams
{
public:
	struct FScalableFloat                        MaxAcceleration;                                   // 0x0(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FScalableFloat                        LateralFriction;                                   // 0x20(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FScalableFloat                        MaxLateralSpeed;                                   // 0x40(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FScalableFloat                        TerminalVelocity;                                  // 0x60(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FScalableFloat                        UpwardTerminalVelocity;                            // 0x80(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FScalableFloat                        GravityScalar;                                     // 0xA0(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FScalableFloat                        CustomGravityCeiling;                              // 0xC0(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FScalableFloat                        CustomGravityCeilingWidth;                         // 0xE0(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
};

// 0x8 (0x8 - 0x0)
// ScriptStruct FortniteGame.AthenaJumpPenalty
struct FAthenaJumpPenalty
{
public:
	float                                        JumpScalar;                                        // 0x0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MovementScalar;                                    // 0x4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.FortMtxPlatformList
struct FFortMtxPlatformList
{
public:
	TArray<enum class EFortMtxPlatform>          MtxPlatformList;                                   // 0x0(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.FortMusicSection
struct FFortMusicSection
{
public:
	class USoundBase*                            Sound;                                             // 0x0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FadeInTime;                                        // 0x8(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FadeOutTime;                                       // 0xC(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        InitialOffset;                                     // 0x10(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Duration;                                          // 0x14(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.QueuedMusic
struct FQueuedMusic
{
public:
	uint8                                        Pad_25FA[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.MutatorContext
struct FMutatorContext
{
public:
	TArray<class AActor*>                        MutatorOwners;                                     // 0x0(0x10)(BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.FortNiagaraCascadeSystemPair
struct FFortNiagaraCascadeSystemPair
{
public:
	class UParticleSystem*                       ParticleSystem;                                    // 0x0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UNiagaraSystem*                        NiagaraParticleSystem;                             // 0x8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x50 (0x50 - 0x0)
// ScriptStruct FortniteGame.VerifyProfileTokenPayload
struct FVerifyProfileTokenPayload
{
public:
	TMap<class FString, class FString>           ProfileTokens;                                     // 0x0(0x50)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x4 (0x4 - 0x0)
// ScriptStruct FortniteGame.RestrictedCountry
struct FRestrictedCountry
{
public:
	bool                                         bHealthWarningShown;                               // 0x0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bAntiAddictionMessageShown;                        // 0x1(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bRealMoneyStoreRestriction;                        // 0x2(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bGameplayRestrictions;                             // 0x3(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x28 (0x28 - 0x0)
// ScriptStruct FortniteGame.GeneralChatRoom
struct FGeneralChatRoom
{
public:
	class FString                                RoomName;                                          // 0x0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        CurrentMembersCount;                               // 0x10(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaxMembersCount;                                   // 0x14(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                PublicFacingShardName;                             // 0x18(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x28 (0x28 - 0x0)
// ScriptStruct FortniteGame.GeneralChatReturn
struct FGeneralChatReturn
{
public:
	TArray<struct FGeneralChatRoom>              GlobalChatRooms;                                   // 0x0(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FGeneralChatRoom>              FounderChatRooms;                                  // 0x10(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                         bNeedsPaidAccessForGlobalChat;                     // 0x20(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bNeedsPaidAccessForFounderChat;                    // 0x21(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsGlobalChatDisabled;                             // 0x22(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsFounderChatDisabled;                            // 0x23(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsSubGameGlobalChatDisabled;                      // 0x24(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_25FB[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x28 (0x28 - 0x0)
// ScriptStruct FortniteGame.OutpostBuildingData
struct FOutpostBuildingData
{
public:
	TSoftObjectPtr<class UFortOutpostItemDefinition> ItemDefinition;                                    // 0x0(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.OutpostPrestigeEffects
struct FOutpostPrestigeEffects
{
public:
	TArray<TSubclassOf<class UGameplayEffect>>   EnemyPrestigeEffect;                               // 0x0(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.OutpostPOSTBoost
struct FOutpostPOSTBoost
{
public:
	struct FCurveTableRowHandle                  PlayerStructureHealthModPerPOSTLevel;              // 0x0(0x10)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.OutpostUpgradesPerTheaterData
struct FOutpostUpgradesPerTheaterData
{
public:
	int32                                        TheaterSlot;                                       // 0x0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_25FC[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UDataTable*                            OutpostUpgradesData;                               // 0x8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.OutpostPrestigeEffectsPerTheater
struct FOutpostPrestigeEffectsPerTheater
{
public:
	int32                                        TheaterSlot;                                       // 0x0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_25FD[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FOutpostPrestigeEffects               PrestigeEffects;                                   // 0x8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.OutpostPOSTPerTheaterData
struct FOutpostPOSTPerTheaterData
{
public:
	int32                                        TheaterSlot;                                       // 0x0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_25FE[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FOutpostPOSTBoost                     POSTData;                                          // 0x8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
};

// 0x68 (0x90 - 0x28)
// ScriptStruct FortniteGame.OutpostUpgradeAndPrestigeBuildingData
struct FOutpostUpgradeAndPrestigeBuildingData : public FOutpostBuildingData
{
public:
	int32                                        MaxPrestigeLevel;                                  // 0x28(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_25FF[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UDataTable*                            DefaultOutpostBuildingUpgradeData;                 // 0x30(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FOutpostUpgradesPerTheaterData> PerTheaterOutpostBuildingUpgradeData;              // 0x38(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	struct FOutpostPrestigeEffects               DefaultPrestigeData;                               // 0x48(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	TArray<struct FOutpostPrestigeEffectsPerTheater> PrestigePerTheaterData;                            // 0x58(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	struct FOutpostPOSTBoost                     DefaultPOSTData;                                   // 0x68(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	TArray<struct FOutpostPOSTPerTheaterData>    POSTPerTheaterData;                                // 0x78(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	TSubclassOf<class UGameplayEffect>           POSTBuildingGameplayEffectClass;                   // 0x88(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x38 - 0x28)
// ScriptStruct FortniteGame.StorageVaultBuildingData
struct FStorageVaultBuildingData : public FOutpostBuildingData
{
public:
	TArray<int32>                                ItemCapacityPerLevel;                              // 0x28(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x0 (0x28 - 0x28)
// ScriptStruct FortniteGame.HarvestingOptimizerBuildingData
struct FHarvestingOptimizerBuildingData : public FOutpostBuildingData
{
public:
};

// 0x10 (0x38 - 0x28)
// ScriptStruct FortniteGame.CraftingTableBuildingData
struct FCraftingTableBuildingData : public FOutpostBuildingData
{
public:
	class UDataTable*                            ActivationCostData;                                // 0x28(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UGameplayEffect>           ActivationEffect;                                  // 0x30(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x8 (0x8 - 0x0)
// ScriptStruct FortniteGame.OutpostFabricatorPerTheaterData
struct FOutpostFabricatorPerTheaterData
{
public:
	int32                                        TheaterSlot;                                       // 0x0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortItemTier                     MaxAllowedTier;                                    // 0x4(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2600[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x48 (0x70 - 0x28)
// ScriptStruct FortniteGame.FabricatorBuildingData
struct FFabricatorBuildingData : public FOutpostBuildingData
{
public:
	TArray<TSoftObjectPtr<class UFortWorldItemDefinition>> AlwaysAvailableFabricationItems;                   // 0x28(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, NativeAccessSpecifierPublic)
	class UDataTable*                            DefaultIngredientDisintergrationData;              // 0x38(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FOutpostFabricatorPerTheaterData> IngredientDisintergrationPerTheaterData;           // 0x40(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	float                                        FabricationDuration;                               // 0x50(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        DisintegrationToFabricationRatio;                  // 0x54(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        QuantumGooProductionTime;                          // 0x58(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2601[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<int32>                                QuantumGooCapacityPerLevel;                        // 0x60(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x18 (0x20 - 0x8)
// ScriptStruct FortniteGame.OutpostCraftingTableData
struct FOutpostCraftingTableData : public FTableRowBase
{
public:
	int32                                        Level;                                             // 0x8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        ItemCount;                                         // 0xC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                RequiredItems;                                     // 0x10(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x30 (0x38 - 0x8)
// ScriptStruct FortniteGame.OutpostDisintegrationData
struct FOutpostDisintegrationData : public FTableRowBase
{
public:
	TSoftObjectPtr<class UFortWorldItemDefinition> ItemDefinition;                                    // 0x8(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        DisintegrationValue;                               // 0x30(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2602[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x50 (0x58 - 0x8)
// ScriptStruct FortniteGame.OutpostItemUpgradeData
struct FOutpostItemUpgradeData : public FTableRowBase
{
public:
	TSoftObjectPtr<class UFortOutpostItemDefinition> ItemDefinition;                                    // 0x8(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        ItemLevel;                                         // 0x30(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2603[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                RequiredItems;                                     // 0x38(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                RequiredAccountItems;                              // 0x48(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.FortOutpostFabricatorInfo
struct FFortOutpostFabricatorInfo
{
public:
	class FString                                DisintegrationStartTime;                           // 0x0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        QuantumGooCompleted;                               // 0x10(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        QuantumGooStillToProcess;                          // 0x14(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.FortDepositedResources
struct FFortDepositedResources
{
public:
	class FString                                TemplateId;                                        // 0x0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Quantity;                                          // 0x10(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2604[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.FortOutpostPOSTInfo
struct FFortOutpostPOSTInfo
{
public:
	TArray<struct FFortDepositedResources>       DepositedPostItems;                                // 0x0(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x58 (0x58 - 0x0)
// ScriptStruct FortniteGame.EmptyServerReservation
struct FEmptyServerReservation
{
public:
	int32                                        PlaylistId;                                        // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2605[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                ZoneInstanceId;                                    // 0x8(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                WUID;                                              // 0x18(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FUniqueNetIdRepl                      WorldDataOwner;                                    // 0x28(0x28)(HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bMakePrivate;                                      // 0x50(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortMatchmakingPool              MatchmakingPool;                                   // 0x51(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bUsesMatchmakingV2;                                // 0x52(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2606[0x5];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.PartyMemberCampaignHero
struct FPartyMemberCampaignHero
{
public:
	class FString                                HeroItemInstanceId;                                // 0x0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFortHeroType*                         HeroType;                                          // 0x10(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x28 (0x28 - 0x0)
// ScriptStruct FortniteGame.PartyMemberAthenaBannerInfo
struct FPartyMemberAthenaBannerInfo
{
public:
	class FString                                BannerIconId;                                      // 0x0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                BannerColorId;                                     // 0x10(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        SeasonLevel;                                       // 0x20(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2607[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x20 (0x20 - 0x0)
// ScriptStruct FortniteGame.PartyMemberFrontendEmote
struct FPartyMemberFrontendEmote
{
public:
	class UFortMontageItemDefinitionBase*        EmoteItemDef;                                      // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                EmoteItemDefEncryptionKey;                         // 0x8(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int8                                         EmoteSection;                                      // 0x18(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2608[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x58 (0x58 - 0x0)
// ScriptStruct FortniteGame.PartyMemberCosmeticLoadout
struct FPartyMemberCosmeticLoadout
{
public:
	class UAthenaCharacterItemDefinition*        CharacterDefinition;                               // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                CharacterDefinitionEncryptionKey;                  // 0x8(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAthenaBackpackItemDefinition*         BackpackDefinition;                                // 0x18(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                BackpackDefinitionEncryptionKey;                   // 0x20(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAthenaPickaxeItemDefinition*          PickaxeDefinition;                                 // 0x30(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                PickaxeDefinitionEncryptionKey;                    // 0x38(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FMcpVariantChannelInfo>        CosmeticVariants;                                  // 0x48(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.PartyMemberBattlePassInfo
struct FPartyMemberBattlePassInfo
{
public:
	bool                                         bHasPurchasedPass;                                 // 0x0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2609[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        PassLevel;                                         // 0x4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        SelfBoostXp;                                       // 0x8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        FriendBoostXp;                                     // 0xC(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x470 (0x5B8 - 0x148)
// ScriptStruct FortniteGame.FortPartyMemberRepData
struct FFortPartyMemberRepData : public FPartyMemberRepData
{
public:
	enum class EFortPartyMemberLocation          Location;                                          // 0x148(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_260A[0x3F];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FPartyMemberCampaignHero              CampaignHero;                                      // 0x188(0x18)(NativeAccessSpecifierPrivate)
	uint8                                        Pad_260B[0x34];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        MatchmakingLevel;                                  // 0x1D4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_260C[0x38];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                ZoneInstanceId;                                    // 0x210(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_260D[0x38];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	int64                                        HomeBaseVersion;                                   // 0x258(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_260E[0x31];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         HasPreloadedAthena;                                // 0x291(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_260F[0x3E];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FPartyMemberFrontendEmote             FrontendEmote;                                     // 0x2D0(0x20)(NativeAccessSpecifierPrivate)
	uint8                                        Pad_2610[0x31];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	uint8                                        NumAthenaPlayersLeft;                              // 0x321(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2611[0x3E];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FDateTime                             UtcTimeStartedMatchAthena;                         // 0x360(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2612[0x31];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         IsReadyAthena;                                     // 0x399(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2613[0x3A];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        HiddenMatchmakingDelayMax;                         // 0x3D4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2614[0x31];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	enum class ECommonInputType                  ReadyInputType;                                    // 0x409(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2615[0x37];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	enum class ECommonInputType                  CurrentInputType;                                  // 0x441(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2616[0x3E];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FPartyMemberCosmeticLoadout           AthenaCosmeticLoadout;                             // 0x480(0x58)(NativeAccessSpecifierPrivate)
	uint8                                        Pad_2617[0x38];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FPartyMemberAthenaBannerInfo          AthenaBannerInfo;                                  // 0x510(0x28)(NativeAccessSpecifierPrivate)
	uint8                                        Pad_2618[0x34];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FPartyMemberBattlePassInfo            BattlePassInfo;                                    // 0x56C(0x10)(NoDestructor, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2619[0x3C];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.AthenaBatchedDamageGameplayCues_NonShared
struct FAthenaBatchedDamageGameplayCues_NonShared
{
public:
	class AActor*                                HitActor;                                          // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                NonPlayerHitActor;                                 // 0x8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x44 (0x44 - 0x0)
// ScriptStruct FortniteGame.AthenaBatchedDamageGameplayCues_Shared
struct FAthenaBatchedDamageGameplayCues_Shared
{
public:
	struct FVector_NetQuantize10                 Location;                                          // 0x0(0xC)(NoDestructor, NativeAccessSpecifierPublic)
	struct FVector_NetQuantizeNormal             Normal;                                            // 0xC(0xC)(NoDestructor, NativeAccessSpecifierPublic)
	float                                        Magnitude;                                         // 0x18(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bWeaponActivate;                                   // 0x1C(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsFatal;                                          // 0x1D(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsCritical;                                       // 0x1E(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsShield;                                         // 0x1F(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsShieldDestroyed;                                // 0x20(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsBallistic;                                      // 0x21(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_261A[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector_NetQuantize10                 NonPlayerLocation;                                 // 0x24(0xC)(RepSkip, NoDestructor, NativeAccessSpecifierPublic)
	struct FVector_NetQuantizeNormal             NonPlayerNormal;                                   // 0x30(0xC)(RepSkip, NoDestructor, NativeAccessSpecifierPublic)
	float                                        NonPlayerMagnitude;                                // 0x3C(0x4)(ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         NonPlayerbIsFatal;                                 // 0x40(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         NonPlayerbIsCritical;                              // 0x41(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsValid;                                          // 0x42(0x1)(ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_261B[0x1];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0xD8 (0xD8 - 0x0)
// ScriptStruct FortniteGame.FortPawnVocalChord
struct FFortPawnVocalChord
{
public:
	class UAudioComponent*                       FeedbackAudioComponent;                            // 0x0(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFortSpokenLine                       ReplicatedSpokenLine;                              // 0x8(0x30)(NoDestructor, NativeAccessSpecifierPublic)
	struct FFortSpokenLine                       PendingSpokenLine;                                 // 0x38(0x30)(RepSkip, NoDestructor, NativeAccessSpecifierPublic)
	struct FFortSpokenLine                       QueuedSpokenLine;                                  // 0x68(0x30)(RepSkip, NoDestructor, NativeAccessSpecifierPublic)
	struct FFortSpokenLine                       CurrentSpokenLine;                                 // 0x98(0x30)(RepSkip, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_261C[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x30 (0x30 - 0x0)
// ScriptStruct FortniteGame.AssetAttachment
struct FAssetAttachment
{
public:
	class FName                                  SocketName;                                        // 0x0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USkeletalMesh*                         SkeletalMeshAsset;                                 // 0x8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMesh*                           StaticMeshAsset;                                   // 0x10(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bSkipOnDedicatedServers;                           // 0x18(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_261D[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class USkeletalMeshComponentBudgeted*        SkelMeshComp;                                      // 0x20(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMeshComponent*                  StaticMeshComp;                                    // 0x28(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x90 (0x90 - 0x0)
// ScriptStruct FortniteGame.CalloutEntry
struct FCalloutEntry
{
public:
	struct FGameplayTag                          CalloutTag;                                        // 0x0(0x8)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSlateBrush                           CalloutIcon;                                       // 0x8(0x88)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.PawnDamageZones
struct FPawnDamageZones
{
public:
	bool                                         bActive;                                           // 0x0(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_261E[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class FName>                          Bones;                                             // 0x8(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x28 (0x28 - 0x0)
// ScriptStruct FortniteGame.DamageDoneInfo
struct FDamageDoneInfo
{
public:
	struct FGameplayTagContainer                 TrackedDamageTagGrouping;                          // 0x0(0x20)(NativeAccessSpecifierPublic)
	float                                        DamageAmount;                                      // 0x20(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_261F[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x30 (0x30 - 0x0)
// ScriptStruct FortniteGame.DamagerInfo
struct FDamagerInfo
{
public:
	class AActor*                                DamageCauser;                                      // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        DamageAmount;                                      // 0x8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2620[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGameplayTagContainer                 SourceTags;                                        // 0x10(0x20)(NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.BuildingHitTime
struct FBuildingHitTime
{
public:
	class ABuildingActor*                        HitBuilding;                                       // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2621[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x70 (0x70 - 0x0)
// ScriptStruct FortniteGame.ScriptedAction
struct FScriptedAction
{
public:
	class FString                                Template;                                          // 0x0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FString>                        Params;                                            // 0x10(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TMap<class FString, class FString>           ParamMap;                                          // 0x20(0x50)(ZeroConstructor, Transient, NativeAccessSpecifierPublic)
};

// 0x20 (0x20 - 0x0)
// ScriptStruct FortniteGame.ScriptedBehavior
struct FScriptedBehavior
{
public:
	class FString                                ScriptName;                                        // 0x0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FScriptedAction>               Actions;                                           // 0x10(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x30 (0x30 - 0x0)
// ScriptStruct FortniteGame.FortBadMatchTrigger
struct FFortBadMatchTrigger
{
public:
	class FName                                  Key;                                               // 0x0(0x8)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortBadMatchTriggerOperation     Operation;                                         // 0x8(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2622[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	double                                       Value;                                             // 0x10(0x8)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FName>                          Playlists;                                         // 0x18(0x10)(ZeroConstructor, Config, NativeAccessSpecifierPublic)
	enum class EFortBadMatchTeamSize             TeamSize;                                          // 0x28(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2623[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x4 (0x4 - 0x0)
// ScriptStruct FortniteGame.FortPresenceBasicInfo
struct FFortPresenceBasicInfo
{
public:
	int32                                        HomeBaseRating;                                    // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x68 (0x68 - 0x0)
// ScriptStruct FortniteGame.FortZoneInstanceInfo
struct FFortZoneInstanceInfo
{
public:
	class FString                                WorldId;                                           // 0x0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                TheaterId;                                         // 0x10(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                TheaterMissionId;                                  // 0x20(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                TheaterMissionAlertId;                             // 0x30(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class UFortZoneTheme>          ZoneThemeClass;                                    // 0x40(0x28)(UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0xC0 (0x128 - 0x68)
// ScriptStruct FortniteGame.FortZoneInstanceDetails
struct FFortZoneInstanceDetails : public FFortZoneInstanceInfo
{
public:
	TSoftClassPtr<class UFortMissionGenerator>   MissionGenerator;                                  // 0x68(0x28)(UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDataTableRowHandle                   ZoneDifficultyInfo;                                // 0x90(0x10)(NoDestructor, NativeAccessSpecifierPublic)
	struct FMcpLootResult                        MissionRewards;                                    // 0xA0(0x20)(NativeAccessSpecifierPublic)
	TArray<struct FMcpLootResult>                DifficultyIncreaseMissionRewards;                  // 0xC0(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	struct FMcpLootResult                        MissionAlertRewards;                               // 0xD0(0x20)(NativeAccessSpecifierPublic)
	struct FMcpLootResult                        ZoneModifiers;                                     // 0xF0(0x20)(NativeAccessSpecifierPublic)
	class FString                                MissionAlertCategoryName;                          // 0x110(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        TileIndex;                                         // 0x120(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2624[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x20 (0x20 - 0x0)
// ScriptStruct FortniteGame.PetResponseFromQuestSystem
struct FPetResponseFromQuestSystem
{
public:
	struct FDataTableRowHandle                   ObjectiveStatHandle;                               // 0x0(0x10)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FGameplayTag                          ResponseTag;                                       // 0x10(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ResponseDuration;                                  // 0x18(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2625[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x60 (0x60 - 0x0)
// ScriptStruct FortniteGame.FortPickupLocationData
struct FFortPickupLocationData
{
public:
	class AFortPawn*                             PickupTarget;                                      // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AFortPickup*                           CombineTarget;                                     // 0x8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AFortPawn*                             ItemOwner;                                         // 0x10(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector_NetQuantize10                 LootInitialPosition;                               // 0x18(0xC)(NoDestructor, NativeAccessSpecifierPublic)
	struct FVector_NetQuantize10                 LootFinalPosition;                                 // 0x24(0xC)(NoDestructor, NativeAccessSpecifierPublic)
	float                                        FlyTime;                                           // 0x30(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector_NetQuantizeNormal             StartDirection;                                    // 0x34(0xC)(NoDestructor, NativeAccessSpecifierPublic)
	struct FVector_NetQuantize10                 FinalTossRestLocation;                             // 0x40(0xC)(NoDestructor, NativeAccessSpecifierPublic)
	enum class EFortPickupTossState              TossState;                                         // 0x4C(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bPlayPickupSound;                                  // 0x4D(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2626[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGuid                                 PickupGuid;                                        // 0x50(0x10)(ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};

// 0x30 (0x30 - 0x0)
// ScriptStruct FortniteGame.FortPickupEntryData
struct FFortPickupEntryData
{
public:
	struct FInterpCurveFloat                     FloatCurve;                                        // 0x0(0x18)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGuid                                 PickupGuid;                                        // 0x18(0x10)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        StartTime;                                         // 0x28(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2627[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x2C (0x2C - 0x0)
// ScriptStruct FortniteGame.GolfCartHandOnWheelControl
struct FGolfCartHandOnWheelControl
{
public:
	class FName                                  SocketName;                                        // 0x0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               Location;                                          // 0x8(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                              Rotation;                                          // 0x14(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	class FName                                  AlphaCurveName;                                    // 0x20(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Alpha;                                             // 0x28(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.FortCameraModeOverride
struct FFortCameraModeOverride
{
public:
	TSubclassOf<class UFortCameraMode>           OriginalClass;                                     // 0x0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UFortCameraMode>           ClassOverride;                                     // 0x8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x28 (0x28 - 0x0)
// ScriptStruct FortniteGame.FortCameraPrototype
struct FFortCameraPrototype
{
public:
	class FName                                  PrototypeName;                                     // 0x0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                PrototypeDescription;                              // 0x8(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FFortCameraModeOverride>       ModeOverrides;                                     // 0x18(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.FortCameraInstanceEntry
struct FFortCameraInstanceEntry
{
public:
	TSubclassOf<class UFortCameraMode>           CameraClass;                                       // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                ViewTarget;                                        // 0x8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFortCameraMode*                       Camera;                                            // 0x10(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x20 (0x20 - 0x0)
// ScriptStruct FortniteGame.ActiveFortCamera
struct FActiveFortCamera
{
public:
	class UFortCameraMode*                       Camera;                                            // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                ViewTarget;                                        // 0x8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TransitionAlpha;                                   // 0x10(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TransitionUpdateRate;                              // 0x14(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BlendWeight;                                       // 0x18(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2628[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x6 (0x6 - 0x0)
// ScriptStruct FortniteGame.CreativeToolPersistentData
struct FCreativeToolPersistentData
{
public:
	uint8                                        GridSnapIndex;                                     // 0x0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        RotationAxisIndex;                                 // 0x1(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShouldUsePrecisionGridSnapping;                   // 0x2(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bAllowGravityOnPlace;                              // 0x3(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShouldDestroyPropsWhenPlacing;                    // 0x4(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIgnoreLineOfSightBlockers;                        // 0x5(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.VoiceChatUsageAnalytics
struct FVoiceChatUsageAnalytics
{
public:
	uint8                                        Pad_2629[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.CraftingQueueInfo
struct FCraftingQueueInfo
{
public:
	uint8                                        Pad_262A[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x2 (0x2 - 0x0)
// ScriptStruct FortniteGame.BuildingEditAnalyticEvent
struct FBuildingEditAnalyticEvent
{
public:
	enum class EFortBuildingType                 BuildingType;                                      // 0x0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortResourceType                 ResourceType;                                      // 0x1(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x14 (0x14 - 0x0)
// ScriptStruct FortniteGame.CreativePlotSessionData
struct FCreativePlotSessionData
{
public:
	uint8                                        Pad_262B[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        TimesInventoryOpened;                              // 0x8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        TimesIslandMenuOpened;                             // 0xC(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        TimesGameStarted;                                  // 0x10(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x28 (0x28 - 0x0)
// ScriptStruct FortniteGame.CreativeIslandData
struct FCreativeIslandData
{
public:
	class FText                                  IslandName;                                        // 0x0(0x18)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class FString                                McpId;                                             // 0x18(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.PlayerStateEncryptionKey
struct FPlayerStateEncryptionKey
{
public:
	TArray<uint8>                                Key;                                               // 0x0(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.FortInputActionThatShouldAlwaysBeBound
struct FFortInputActionThatShouldAlwaysBeBound
{
public:
	class FName                                  ActionName;                                        // 0x0(0x8)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FName>                          AlternateActionNames;                              // 0x8(0x10)(ZeroConstructor, Config, NativeAccessSpecifierPublic)
};

// 0xC (0xC - 0x0)
// ScriptStruct FortniteGame.FortInputActionGroupContext
struct FFortInputActionGroupContext
{
public:
	class FName                                  ActionName;                                        // 0x0(0x8)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortInputActionGroup             InputActionGroup;                                  // 0x8(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_262C[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.FortAxisSmoothing
struct FFortAxisSmoothing
{
public:
	float                                        ZeroTime;                                          // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               AverageValue;                                      // 0x4(0xC)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Samples;                                           // 0x10(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TotalSampleTime;                                   // 0x14(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x28 (0x28 - 0x0)
// ScriptStruct FortniteGame.FortInputActionKeyAlias
struct FFortInputActionKeyAlias
{
public:
	class FName                                  ActionName;                                        // 0x0(0x8)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FKey                                  KeyAlias;                                          // 0x8(0x18)(Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortInputActionType              InputActionType;                                   // 0x20(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_262D[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0xC (0xC - 0x0)
// ScriptStruct FortniteGame.MorphValuePair
struct FMorphValuePair
{
public:
	class FName                                  MorphName;                                         // 0x0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MorphValue;                                        // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x20 (0x20 - 0x0)
// ScriptStruct FortniteGame.PlayerMarkerData
struct FPlayerMarkerData
{
public:
	class AFortPlayerControllerAthena*           Owner;                                             // 0x0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AFortPlayerStateAthena*                PlayerState;                                       // 0x8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          Color;                                             // 0x10(0x10)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.FortZiplineSessionTelemetryInfo
struct FFortZiplineSessionTelemetryInfo
{
public:
	uint8                                        Pad_262E[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.FortBallooningSessionTelemetryInfo
struct FFortBallooningSessionTelemetryInfo
{
public:
	uint8                                        Pad_262F[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0xC (0xC - 0x0)
// ScriptStruct FortniteGame.FortFootstepBankOverrideData
struct FFortFootstepBankOverrideData
{
public:
	uint8                                        Pad_2630[0xC];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.FortAnimBPOverrideData
struct FFortAnimBPOverrideData
{
public:
	uint8                                        Pad_2631[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.FortCachedWeaponOverheatData
struct FFortCachedWeaponOverheatData
{
public:
	float                                        TimeWeaponWasUnequipped;                           // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        OverheatValueAtUneqip;                             // 0x4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        OverheatValue;                                     // 0x8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2632[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        TimeOverheatedBegan;                               // 0x10(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TimeHeatWasLastAdded;                              // 0x14(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x20 (0x20 - 0x0)
// ScriptStruct FortniteGame.FortRedeployGliderTelemetryData
struct FFortRedeployGliderTelemetryData
{
public:
	uint8                                        Pad_2633[0x20];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x160 (0x160 - 0x0)
// ScriptStruct FortniteGame.SlipperySlopeParams
struct FSlipperySlopeParams
{
public:
	struct FScalableFloat                        SlopeForceAcceleration;                            // 0x0(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FScalableFloat                        MaxLateralSpeed;                                   // 0x20(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FScalableFloat                        MaxLateralSpeedMultiplierInWater;                  // 0x40(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FScalableFloat                        BrakingDecelerationInWater;                        // 0x60(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FScalableFloat                        MaxVerticalLaunchSpeed;                            // 0x80(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FScalableFloat                        SlopeLandingForceScalar;                           // 0xA0(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FScalableFloat                        SlopeLandingMaxHorizontalForce;                    // 0xC0(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FScalableFloat                        SlopeLaunchMinRequiredSpeed;                       // 0xE0(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FScalableFloat                        SlopeLaunchMinRequiredAngleChange;                 // 0x100(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FScalableFloat                        SlopeLaunchVerticalVelocityBoost;                  // 0x120(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FScalableFloat                        SlopeLaunchVerticalVelocityBoostMultiplierJumping; // 0x140(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.VortexParams
struct FVortexParams
{
public:
	float                                        GravityFloorAltitude;                              // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        GravityFloorWidth;                                 // 0x4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        GravityFloorGravityScalar;                         // 0x8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        GravityFloorTerminalVelocity;                      // 0xC(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x28 (0x28 - 0x0)
// ScriptStruct FortniteGame.ZiplinePawnState
struct FZiplinePawnState
{
public:
	class AFortAthenaZipline*                    Zipline;                                           // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsZiplining;                                      // 0x8(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bJumped;                                           // 0x9(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2634[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        AuthoritativeValue;                                // 0xC(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               SocketOffset;                                      // 0x10(0xC)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TimeZipliningBegan;                                // 0x1C(0x4)(ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TimeZipliningEndedFromJump;                        // 0x20(0x4)(ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2635[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x20 (0x20 - 0x0)
// ScriptStruct FortniteGame.VehiclePawnState
struct FVehiclePawnState
{
public:
	class AFortAthenaVehicle*                    Vehicle;                                           // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        VehicleApexZ;                                      // 0x8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        SeatIndex;                                         // 0xC(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        ExitSocketIndex;                                   // 0xD(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bOverrideVehicleExit;                              // 0xE(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2636[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               SeatTransitionVector;                              // 0x10(0xC)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        EntryTime;                                         // 0x1C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.RepFortMeshAttachment
struct FRepFortMeshAttachment
{
public:
	class USkeletalMesh*                         SkeletalMesh;                                      // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimBlueprint*                        AnimBP;                                            // 0x8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x20 (0x20 - 0x0)
// ScriptStruct FortniteGame.FortCharacterPartsRepMontageInfo
struct FFortCharacterPartsRepMontageInfo
{
public:
	TArray<struct FFortCharacterPartMontageInfo> CharPartMontages;                                  // 0x0(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	class UAnimMontage*                          PawnMontage;                                       // 0x10(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bPlayBit;                                          // 0x18(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2637[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x20 (0xC8 - 0xA8)
// ScriptStruct FortniteGame.FortPlayerPawnStats
struct FFortPlayerPawnStats : public FFortPawnStats
{
public:
	float                                        MaxJumpTime;                                       // 0xA8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MaxStamina;                                        // 0xAC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        StaminaRegenRate;                                  // 0xB0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        StaminaRegenDelay;                                 // 0xB4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SprintingStaminaExpenditureRate;                   // 0xB8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  PersonalVehicleFallingDamageTableRow;              // 0xBC(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2638[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.FortPlayerAthenaAttributeReplicationProxy
struct FFortPlayerAthenaAttributeReplicationProxy
{
public:
	float                                        WalkSpeed;                                         // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RunSpeed;                                          // 0x4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SprintSpeed;                                       // 0x8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FlySpeed;                                          // 0xC(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CrouchedRunSpeed;                                  // 0x10(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CrouchedSprintSpeed;                               // 0x14(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x4C (0x4C - 0x0)
// ScriptStruct FortniteGame.SharedRepMovement
struct FSharedRepMovement
{
public:
	struct FRepMovement                          RepMovement;                                       // 0x0(0x34)(Transient, NoDestructor, NativeAccessSpecifierPublic)
	float                                        RepTimeStamp;                                      // 0x34(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint32                                       RemoteViewData32;                                  // 0x38(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint16                                       AccelerationPack;                                  // 0x3C(0x2)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int8                                         AccelerationZPack;                                 // 0x3E(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        RepMovementMode;                                   // 0x3F(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        JumpFlashCountPacked;                              // 0x40(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        LandingFlashCountPacked;                           // 0x41(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortMovementStyle                CurrentMovementStyle;                              // 0x42(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bProxyIsJumpForceApplied;                          // 0x43(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsCrouched;                                       // 0x44(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsSkydiving;                                      // 0x45(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsParachuteOpen;                                  // 0x46(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsSlopeSliding;                                   // 0x47(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsProxySimulationTimedOut;                        // 0x48(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsTargeting;                                      // 0x49(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2639[0x2];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x30 (0x30 - 0x0)
// ScriptStruct FortniteGame.AthenaPawnReplayData
struct FAthenaPawnReplayData
{
public:
	float                                        HealthRatio;                                       // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ShieldRatio;                                       // 0x4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<uint8>                                CipherText;                                        // 0x8(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	class UWorld*                                World;                                             // 0x18(0x8)(ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_263A[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0xC (0xC - 0x0)
// ScriptStruct FortniteGame.PetStimuliRepData
struct FPetStimuliRepData
{
public:
	struct FGameplayTag                          Stimuli;                                           // 0x0(0x8)(BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        GameTimeEnd;                                       // 0x8(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x40 (0x40 - 0x0)
// ScriptStruct FortniteGame.CustomCharacterParts
struct FCustomCharacterParts
{
public:
	uint8                                        WasReplicatedFlags;                                // 0x0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_263B[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UCustomCharacterPart*                  Parts;                                             // 0x8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_263C[0x28];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bReplicationFailed;                                // 0x38(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_263D[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x50 (0x50 - 0x0)
// ScriptStruct FortniteGame.FortPlayerAttributeSets
struct FFortPlayerAttributeSets
{
public:
	class UFortRegenHealthSet*                   HealthSet;                                         // 0x0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFortControlResistanceSet*             ControlResistanceSet;                              // 0x8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFortDamageSet*                        DamageSet;                                         // 0x10(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFortMovementSet*                      MovementSet;                                       // 0x18(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFortAdvancedMovementSet*              AdvancedMovementSet;                               // 0x20(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFortConstructionSet*                  ConstructionSet;                                   // 0x28(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFortPlayerAttrSet*                    PlayerAttrSet;                                     // 0x30(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFortCharacterAttrSet*                 CharacterAttrSet;                                  // 0x38(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFortWeaponAttrSet*                    WeaponAttrSet;                                     // 0x40(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFortHomebaseSet*                      HomebaseSet;                                       // 0x48(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x20 (0x20 - 0x0)
// ScriptStruct FortniteGame.FortRespawnData
struct FFortRespawnData
{
public:
	bool                                         bRespawnDataAvailable;                             // 0x0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bClientIsReady;                                    // 0x1(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bServerIsReady;                                    // 0x2(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_263E[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               RespawnLocation;                                   // 0x4(0xC)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                              RespawnRotation;                                   // 0x10(0xC)(ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	float                                        RespawnCameraDistance;                             // 0x1C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x20 (0x20 - 0x0)
// ScriptStruct FortniteGame.FortVehicleUseTelemetryInfo
struct FFortVehicleUseTelemetryInfo
{
public:
	uint8                                        Pad_263F[0x20];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x28 (0x28 - 0x0)
// ScriptStruct FortniteGame.PlayerBannerInfo
struct FPlayerBannerInfo
{
public:
	class FString                                IconId;                                            // 0x0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                ColorId;                                           // 0x10(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Level;                                             // 0x20(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2640[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x28 (0x28 - 0x0)
// ScriptStruct FortniteGame.DeathInfo
struct FDeathInfo
{
public:
	class AActor*                                FinisherOrDowner;                                  // 0x0(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDBNO;                                             // 0x8(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EDeathCause                       DeathCause;                                        // 0x9(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2641[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        Distance;                                          // 0xC(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               DeathLocation;                                     // 0x10(0xC)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bInitialized;                                      // 0x1C(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2642[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        DeathCircumstance;                                 // 0x20(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2643[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0xC (0x18 - 0xC)
// ScriptStruct FortniteGame.FortSpectatorZoneItem
struct FFortSpectatorZoneItem : public FFastArraySerializerItem
{
public:
	uint8                                        Pad_2644[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AFortPlayerStateZone*                  PlayerState;                                       // 0x10(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x18 (0xC8 - 0xB0)
// ScriptStruct FortniteGame.FortSpectatorZoneArray
struct FFortSpectatorZoneArray : public FFastArraySerializer
{
public:
	TArray<struct FFortSpectatorZoneItem>        SpectatorArray;                                    // 0xB0(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	class AFortPlayerStateZone*                  OwningState;                                       // 0xC0(0x8)(ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};

// 0x28 (0x28 - 0x0)
// ScriptStruct FortniteGame.SimulatedAttributeEntry
struct FSimulatedAttributeEntry
{
public:
	struct FGameplayAttribute                    Attribute;                                         // 0x0(0x20)(HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CurrentValue;                                      // 0x20(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2645[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.AccumulatedItemEntry
struct FAccumulatedItemEntry
{
public:
	class UFortWorldItemDefinition*              ItemDefinition;                                    // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Quantity;                                          // 0x8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2646[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.VehicleTrickLocalAxisRotInfo
struct FVehicleTrickLocalAxisRotInfo
{
public:
	float                                        Angle;                                             // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        AccumulatedHalfSpinCount;                          // 0x4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AccumulatedAngle;                                  // 0x8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AngleAtFurthestExtent;                             // 0xC(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        TrickOrder;                                        // 0x10(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Points;                                            // 0x14(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x8 (0x8 - 0x0)
// ScriptStruct FortniteGame.QueryName
struct FQueryName
{
public:
	class FName                                  QueryName;                                         // 0x0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x18 - 0x8)
// ScriptStruct FortniteGame.NamedWeightTableRow
struct FNamedWeightTableRow : public FTableRowBase
{
public:
	struct FQueryName                            QueryName;                                         // 0x8(0x8)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	float                                        Weight;                                            // 0x10(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2647[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x8 (0x8 - 0x0)
// ScriptStruct FortniteGame.RatingExpansion
struct FRatingExpansion
{
public:
	int32                                        Priority;                                          // 0x0(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        RatingDelta;                                       // 0x4(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x68 (0x68 - 0x0)
// ScriptStruct FortniteGame.AthenaScoreData
struct FAthenaScoreData
{
public:
	enum class EAthenaScoringEvent               ScoringEvent;                                      // 0x0(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2648[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  ScoreNameText;                                     // 0x8(0x18)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                 EventInclusionTags;                                // 0x20(0x20)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	int32                                        NumOccurrencesForScore;                            // 0x40(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        NumOccurrencesPermitted;                           // 0x44(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FScalableFloat                        ScoreAwarded;                                      // 0x48(0x20)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// 0x50 (0x50 - 0x0)
// ScriptStruct FortniteGame.WinConditionScoreData
struct FWinConditionScoreData
{
public:
	struct FScalableFloat                        GoalScore;                                         // 0x0(0x20)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FScalableFloat                        BigScoreThreshold;                                 // 0x20(0x20)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<struct FAthenaScoreData>              ScoreDataList;                                     // 0x40(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// 0x30 (0x30 - 0x0)
// ScriptStruct FortniteGame.PlaylistUIExtension
struct FPlaylistUIExtension
{
public:
	enum class EPlaylistUIExtensionSlot          Slot;                                              // 0x0(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2649[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftClassPtr<class UUserWidget>             WidgetClass;                                       // 0x8(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0xC (0xC - 0x0)
// ScriptStruct FortniteGame.SupplyDropSubPhaseModifier
struct FSupplyDropSubPhaseModifier
{
public:
	enum class EAthenaGamePhase                  GamePhase;                                         // 0x0(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_264A[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        SubPhaseIndex;                                     // 0x4(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SpawnInPreviousZonePercentChance;                  // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.SupplyDropModifierData
struct FSupplyDropModifierData
{
public:
	class FName                                  SupplyDropID;                                      // 0x0(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FSupplyDropSubPhaseModifier>   ModifierList;                                      // 0x8(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// 0x28 (0x28 - 0x0)
// ScriptStruct FortniteGame.PlaylistData
struct FPlaylistData
{
public:
	class FName                                  PlaylistName;                                      // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                TournamentId;                                      // 0x8(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                EventWindowId;                                     // 0x18(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x30 (0x30 - 0x0)
// ScriptStruct FortniteGame.PlaylistFrontEndData
struct FPlaylistFrontEndData
{
public:
	class UFortPlaylistAthena*                   PlaylistData;                                      // 0x0(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                TournamentId;                                      // 0x8(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                EventWindowId;                                     // 0x18(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsDisabled;                                       // 0x28(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDisplayAsDefault;                                 // 0x29(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EPlaylistAdvertisementType        AdvertiseType;                                     // 0x2A(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDisplayAsLimitedTime;                             // 0x2B(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_264B[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x20 (0x20 - 0x0)
// ScriptStruct FortniteGame.PlaylistOverrideData
struct FPlaylistOverrideData
{
public:
	class FName                                  PlaylistName;                                      // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnabled;                                          // 0x8(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_264C[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class FString>                        RegionsDisabled;                                   // 0x10(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0xC (0xC - 0x0)
// ScriptStruct FortniteGame.PlaylistAccess
struct FPlaylistAccess
{
public:
	bool                                         bForcePlaylistOff;                                 // 0x0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnabled;                                          // 0x1(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bVisibleWhenDisabled;                              // 0x2(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsDefaultPlaylist;                                // 0x3(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EPlaylistAdvertisementType        AdvertiseType;                                     // 0x4(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDisplayAsLimitedTime;                             // 0x5(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_264D[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        DisplayPriority;                                   // 0x8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x30 (0x30 - 0x0)
// ScriptStruct FortniteGame.PlaylistAccessOverride
struct FPlaylistAccessOverride
{
public:
	TArray<class FString>                        Regions;                                           // 0x0(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class FString>                        Platforms;                                         // 0x10(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	struct FPlaylistAccess                       OverrideAccess;                                    // 0x20(0xC)(NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_264E[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x28 (0x28 - 0x0)
// ScriptStruct FortniteGame.PlaylistFrontEndSettings
struct FPlaylistFrontEndSettings
{
public:
	class FName                                  PlaylistName;                                      // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FPlaylistAccess                       PlaylistAccess;                                    // 0x8(0xC)(NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_264F[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FPlaylistAccessOverride>       AccessOverrides;                                   // 0x18(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x28 (0x28 - 0x0)
// ScriptStruct FortniteGame.PlaylistOptionValue
struct FPlaylistOptionValue
{
public:
	class FText                                  DisplayName;                                       // 0x0(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FString                                OptionValueName;                                   // 0x18(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x20 (0x48 - 0x28)
// ScriptStruct FortniteGame.PlaylistOptionFloatValue
struct FPlaylistOptionFloatValue : public FPlaylistOptionValue
{
public:
	struct FScalableFloat                        Value;                                             // 0x28(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// 0x8 (0x30 - 0x28)
// ScriptStruct FortniteGame.PlaylistOptionIntValue
struct FPlaylistOptionIntValue : public FPlaylistOptionValue
{
public:
	int32                                        Value;                                             // 0x28(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2650[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x2C (0x2C - 0x0)
// ScriptStruct FortniteGame.FortPlaysetStreamingData
struct FFortPlaysetStreamingData
{
public:
	class FName                                  PackageName;                                       // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  UniquePackageName;                                 // 0x8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               Location;                                          // 0x10(0xC)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                              Rotation;                                          // 0x1C(0xC)(ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        bValid : 1;                                        // Mask : 0x1 0x28(0x1)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2651[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x28 (0x28 - 0x0)
// ScriptStruct FortniteGame.FortPOIAmbientAudioOneShot
struct FFortPOIAmbientAudioOneShot
{
public:
	class USoundBase*                            OneShotSound;                                      // 0x0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             RetriggerTimeRange;                                // 0x8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             TriggerDistanceRange;                              // 0x10(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<enum class EFortDayPhase>             AllowedDayPhases;                                  // 0x18(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.FortPOIAmbientAudioLoop
struct FFortPOIAmbientAudioLoop
{
public:
	class USoundBase*                            LoopingSound;                                      // 0x0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CrossfadeTime;                                     // 0x8(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2652[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x28 (0x28 - 0x0)
// ScriptStruct FortniteGame.FortPoiGridInfo
struct FFortPoiGridInfo
{
public:
	struct FVector2D                             WorldGridStart;                                    // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             WorldGridEnd;                                      // 0x8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             WorldGridSpacing;                                  // 0x10(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        GridCountX;                                        // 0x18(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        GridCountY;                                        // 0x1C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             WorldGridTotalSize;                                // 0x20(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.FortPoiVolumeGridCell
struct FFortPoiVolumeGridCell
{
public:
	uint8                                        Pad_2653[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x38 (0x38 - 0x0)
// ScriptStruct FortniteGame.ProfileGoCommand
struct FProfileGoCommand
{
public:
	class FString                                Group;                                             // 0x0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                Command;                                           // 0x10(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Wait;                                              // 0x20(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2654[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                Log;                                               // 0x28(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x20 (0x20 - 0x0)
// ScriptStruct FortniteGame.ProfileGoCollection
struct FProfileGoCollection
{
public:
	class FString                                Name;                                              // 0x0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                Scenarios;                                         // 0x10(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x50 (0x50 - 0x0)
// ScriptStruct FortniteGame.ProfileGoScenario
struct FProfileGoScenario
{
public:
	class FString                                Name;                                              // 0x0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               Position;                                          // 0x10(0xC)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                              Orientation;                                       // 0x1C(0xC)(ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	class FString                                OnBegin;                                           // 0x28(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                OnEnd;                                             // 0x38(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         AutoGenerated;                                     // 0x48(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         UseSetupCheats;                                    // 0x49(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2655[0x6];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x4 (0x4 - 0x0)
// ScriptStruct FortniteGame.TeamStrategicBuildingHandle
struct FTeamStrategicBuildingHandle
{
public:
	int32                                        Handle;                                            // 0x0(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x8 (0x8 - 0x0)
// ScriptStruct FortniteGame.FortPointOnCurveRange
struct FFortPointOnCurveRange
{
public:
	float                                        MinPercentage;                                     // 0x0(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxPercentage;                                     // 0x4(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x38 (0x38 - 0x0)
// ScriptStruct FortniteGame.FortPointsOnCurve
struct FFortPointsOnCurve
{
public:
	TSoftObjectPtr<class UCurveFloat>            Curve;                                             // 0x0(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FFortPointOnCurveRange>        RangesForPointsOnCurve;                            // 0x28(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// 0x60 (0x60 - 0x0)
// ScriptStruct FortniteGame.FortGameplayTagQueryPerDifficulty
struct FFortGameplayTagQueryPerDifficulty
{
public:
	struct FDataTableRowHandle                   DifficultyInfo;                                    // 0x0(0x10)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FGameplayTagQuery                     TagQueryToMatch;                                   // 0x10(0x48)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	float                                        Difficulty;                                        // 0x58(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2656[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x90 (0x90 - 0x0)
// ScriptStruct FortniteGame.GoalDistanceData
struct FGoalDistanceData
{
public:
	bool                                         bIgnoreScreeningDistance;                          // 0x0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2657[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FAIDataProviderFloatValue             ScreeningTestMaxDistance;                          // 0x8(0x30)(Edit, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UCurveFloat>            TestScoreCurve;                                    // 0x38(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAIDataProviderFloatValue             CurveDistanceScale;                                // 0x60(0x30)(Edit, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
};

// 0x10 (0x18 - 0x8)
// ScriptStruct FortniteGame.FortQuestAchievementTableRow
struct FFortQuestAchievementTableRow : public FTableRowBase
{
public:
	enum class EFortQuestState                   QuestState;                                        // 0x8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2658[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        XboxAchievementID;                                 // 0xC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        PS4TrophyID;                                       // 0x10(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2659[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x20 (0x28 - 0x8)
// ScriptStruct FortniteGame.FortQuestRewardTableRow
struct FFortQuestRewardTableRow : public FTableRowBase
{
public:
	class FString                                QuestTemplateId;                                   // 0x8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  TemplateId;                                        // 0x18(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Quantity;                                          // 0x20(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         Hidden;                                            // 0x24(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         Selectable;                                        // 0x25(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_265A[0x2];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x20 (0x28 - 0x8)
// ScriptStruct FortniteGame.FortCategoryTableRow
struct FFortCategoryTableRow : public FTableRowBase
{
public:
	class FText                                  Name;                                              // 0x8(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	int32                                        SortPriority;                                      // 0x20(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_265B[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x108 (0x108 - 0x0)
// ScriptStruct FortniteGame.FortMcpQuestObjectiveInfo
struct FFortMcpQuestObjectiveInfo
{
public:
	class FName                                  BackendName;                                       // 0x0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDataTableRowHandle                   ObjectiveStatHandle;                               // 0x8(0x10)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	TArray<struct FDataTableRowHandle>           AlternativeStatHandles;                            // 0x18(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	enum class EFortQuestObjectiveItemEvent      ItemEvent;                                         // 0x28(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bHidden : 1;                                       // Mask : 0x1 0x29(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bRequirePrimaryMissionCompletion : 1;              // Mask : 0x2 0x29(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bCanProgressInZone : 1;                            // Mask : 0x4 0x29(0x1)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bDisplayDynamicAnnouncementUpdate : 1;             // Mask : 0x8 0x29(0x1)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EObjectiveStatusUpdateType        DynamicStatusUpdateType;                           // 0x2A(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortInventoryFilter              LinkVaultTab;                                      // 0x2B(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortFrontendInventoryFilter      LinkToItemManagement;                              // 0x2C(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_265C[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftObjectPtr<class UFortItemDefinition>    ItemReference;                                     // 0x30(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                ItemTemplateIdOverride;                            // 0x58(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  LinkSquadID;                                       // 0x68(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        LinkSquadIndex;                                    // 0x70(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_265D[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  Description;                                       // 0x78(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class FText                                  HudShortDescription;                               // 0x90(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UTexture2D>             HudIcon;                                           // 0xA8(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Count;                                             // 0xD0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Stage;                                             // 0xD4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        DynamicStatusUpdatePercentInterval;                // 0xD8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DynamicUpdateCompletionDelay;                      // 0xDC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class AFortScriptedAction>     ScriptedAction;                                    // 0xE0(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.FortMcpQuestRewardInfo
struct FFortMcpQuestRewardInfo
{
public:
	TArray<struct FFortItemQuantityPair>         Rewards;                                           // 0x0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.FortQuestMapDataEntry
struct FFortQuestMapDataEntry
{
public:
	class UDataTable*                            QuestData;                                         // 0x0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UDataTable*                            CosmeticData;                                      // 0x8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x30 (0x40 - 0x10)
// ScriptStruct FortniteGame.FortEventQuestMapDataEntry
struct FFortEventQuestMapDataEntry : public FFortQuestMapDataEntry
{
public:
	class FText                                  EventCalloutTitle;                                 // 0x10(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class FText                                  EventCalloutDescription;                           // 0x28(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
};

// 0xD0 (0xD0 - 0x0)
// ScriptStruct FortniteGame.FortQuestMapCosmetic
struct FFortQuestMapCosmetic
{
public:
	enum class ECosmeticType                     CosmeticType;                                      // 0x0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_265E[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FSlateBrush                           CosmeticBrush;                                     // 0x8(0x88)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	TSubclassOf<class UUserWidget>               WidgetClass;                                       // 0x90(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UFortItemDefinition*>           CosmeticDataList;                                  // 0x98(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	struct FVector2D                             CosmeticPosition;                                  // 0xA8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FWidgetTransform                      CosmeticTransform;                                 // 0xB0(0x1C)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_265F[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x48 (0x50 - 0x8)
// ScriptStruct FortniteGame.FortQuestMapPageCosmetics
struct FFortQuestMapPageCosmetics : public FTableRowBase
{
public:
	bool                                         bUseNodeArrowColorOverride;                        // 0x8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2660[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FSlateColor                           NodeArrowColorOverride;                            // 0x10(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	TArray<struct FFortQuestMapCosmetic>         CosmeticList;                                      // 0x38(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                         bStartArrowDisabled;                               // 0x48(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEndArrowDisabled;                                 // 0x49(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2661[0x6];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.FortQuestMapNode
struct FFortQuestMapNode
{
public:
	class UFortQuestItemDefinition*              QuestItemDefinition;                               // 0x0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortQuestMapNodeType             NodeType;                                          // 0x8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortQuestMapNodeLabelPosition    LabelPosition;                                     // 0x9(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         UseHighContrastMode;                               // 0xA(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2662[0x5];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x48 (0x50 - 0x8)
// ScriptStruct FortniteGame.FortQuestMapPage
struct FFortQuestMapPage : public FTableRowBase
{
public:
	class FText                                  PageTitle;                                         // 0x8(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	int32                                        PageIndex;                                         // 0x20(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        ChapterPageCount;                                  // 0x24(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                QuestEventFlag;                                    // 0x28(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UUserWidget>               QuestNodeLayout;                                   // 0x38(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FFortQuestMapNode>             QuestList;                                         // 0x40(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0xE0 (0xE8 - 0x8)
// ScriptStruct FortniteGame.FortQuestObjectiveStatTableRow
struct FFortQuestObjectiveStatTableRow : public FTableRowBase
{
public:
	enum class EFortQuestObjectiveStatEvent      Type;                                              // 0x8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2663[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                TargetTags;                                        // 0x10(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                SourceTags;                                        // 0x20(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                ContextTags;                                       // 0x30(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                Condition;                                         // 0x40(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                TemplateId;                                        // 0x50(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FString>                        AlternateTemplateIds;                              // 0x60(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                 TargetTagContainer;                                // 0x70(0x20)(BlueprintVisible, BlueprintReadOnly, Transient, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                 SourceTagContainer;                                // 0x90(0x20)(BlueprintVisible, BlueprintReadOnly, Transient, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                 ContextTagContainer;                               // 0xB0(0x20)(BlueprintVisible, BlueprintReadOnly, Transient, NativeAccessSpecifierPublic)
	bool                                         bIsCached;                                         // 0xD0(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2664[0x17];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x28 (0x28 - 0x0)
// ScriptStruct FortniteGame.FortChallengeBundleInfoLockedReason
struct FFortChallengeBundleInfoLockedReason
{
public:
	enum class EFortChallengeBundleInfoLockedReasonCode ReasonCode;                                        // 0x0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2665[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                EventName;                                         // 0x8(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        RequiredTier;                                      // 0x18(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2666[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTimespan                             UnlockTimespanAfterStart;                          // 0x20(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.FortQuestManagerAttributes
struct FFortQuestManagerAttributes
{
public:
	struct FDateTime                             DailyLoginInterval;                                // 0x0(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        DailyQuestRerolls;                                 // 0x8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2667[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x40 (0x40 - 0x0)
// ScriptStruct FortniteGame.FortQuestMissionCreationContext
struct FFortQuestMissionCreationContext
{
public:
	TSoftObjectPtr<class UFortMissionInfo>       MissionInfo;                                       // 0x0(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FGameplayTagContainer>         MissionCreationContextTags;                        // 0x28(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                         bSetQuestOwnerAsMissionOwner;                      // 0x38(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2668[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        MaxNumberToSpawnInWorld;                           // 0x3C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x8 (0x8 - 0x0)
// ScriptStruct FortniteGame.QuickBarAndSlot
struct FQuickBarAndSlot
{
public:
	enum class EFortQuickBars                    QuickBarType;                                      // 0x0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2669[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        QuickBarSlot;                                      // 0x4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x80 (0x80 - 0x0)
// ScriptStruct FortniteGame.FortRarityItemData
struct FFortRarityItemData
{
public:
	class FText                                  Name;                                              // 0x0(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FLinearColor                          Color1;                                            // 0x18(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          Color2;                                            // 0x28(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          Color3;                                            // 0x38(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          Color4;                                            // 0x48(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          Color5;                                            // 0x58(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Radius;                                            // 0x68(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Falloff;                                           // 0x6C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Brightness;                                        // 0x70(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Roughness;                                         // 0x74(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Glow;                                              // 0x78(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_266A[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x20 (0x20 - 0x0)
// ScriptStruct FortniteGame.ReflectedEngineVersion
struct FReflectedEngineVersion
{
public:
	int32                                        Major;                                             // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Minor;                                             // 0x4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Patch;                                             // 0x8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Changelist;                                        // 0xC(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                Branch;                                            // 0x10(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x40 (0x40 - 0x0)
// ScriptStruct FortniteGame.FortRecordVersion
struct FFortRecordVersion
{
public:
	int32                                        DataVersion;                                       // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        PackageFileVersion;                                // 0x4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FReflectedEngineVersion               EngineVersion;                                     // 0x8(0x20)(NativeAccessSpecifierPublic)
	uint8                                        Pad_266B[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x8 (0x8 - 0x0)
// ScriptStruct FortniteGame.FortReleaseVersion
struct FFortReleaseVersion
{
public:
	class FName                                  VersionName;                                       // 0x0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.FortReplayPlaybackState
struct FFortReplayPlaybackState
{
public:
	float                                        StartTime;                                         // 0x0(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        EndTime;                                           // 0x4(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TimeNow;                                           // 0x8(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsPaused;                                         // 0xC(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_266C[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        PlaybackSpeedMultiplier;                           // 0x10(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bTimelineHasInputFocus;                            // 0x14(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EHudVisibilityState               HUDVisibility;                                     // 0x15(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bLevelStreaming;                                   // 0x16(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bHasRelevancyZone;                                 // 0x17(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x50 (0x50 - 0x0)
// ScriptStruct FortniteGame.FortReplayEvent
struct FFortReplayEvent
{
public:
	uint8                                        Pad_266D[0x50];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0xF0 (0xF0 - 0x0)
// ScriptStruct FortniteGame.FortReplayMetadata
struct FFortReplayMetadata
{
public:
	class FString                                ReplayName;                                        // 0x0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                PlaylistName;                                      // 0x10(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ReplayLength;                                      // 0x20(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_266E[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FUniqueNetIdRepl                      RecordingPlayer;                                   // 0x28(0x28)(HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<float, struct FUniqueNetIdRepl>         RelevancyList;                                     // 0x50(0x50)(ZeroConstructor, NativeAccessSpecifierPublic)
	TMap<class FString, struct FUniqueNetIdRepl> Players;                                           // 0xA0(0x50)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x70 (0x70 - 0x0)
// ScriptStruct FortniteGame.ReplayEventInfo
struct FReplayEventInfo
{
public:
	uint8                                        Pad_266F[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTransform                            EventLocation;                                     // 0x10(0x30)(IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	class FString                                Victim;                                            // 0x40(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                Instigator;                                        // 0x50(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EDeathCause                       DeathCause;                                        // 0x60(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDBNO;                                             // 0x61(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortReplayEventType              EventType;                                         // 0x62(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2670[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        VersionNumber;                                     // 0x64(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2671[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x20 (0x28 - 0x8)
// ScriptStruct FortniteGame.FortRespawnDataRow
struct FFortRespawnDataRow : public FTableRowBase
{
public:
	struct FLinearColor                          FadeColor;                                         // 0x8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FadeOutTime;                                       // 0x18(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FadeInTime;                                        // 0x1C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        WaitTime;                                          // 0x20(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SafetyTime;                                        // 0x24(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x28 (0x28 - 0x0)
// ScriptStruct FortniteGame.RuntimeOptionPlaygroundKnobOverride
struct FRuntimeOptionPlaygroundKnobOverride
{
public:
	class FString                                KnobID;                                            // 0x0(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnabled;                                          // 0x10(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2672[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                OverrideDefault;                                   // 0x18(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x28 (0x28 - 0x0)
// ScriptStruct FortniteGame.FortSafeZoneVolumeDefinition
struct FFortSafeZoneVolumeDefinition
{
public:
	class AVolume*                               Volume;                                            // 0x0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FScalableFloat                        RejectionChance;                                   // 0x8(0x20)(Edit, Protected, NativeAccessSpecifierProtected)
};

// 0x148 (0x148 - 0x0)
// ScriptStruct FortniteGame.FortSafeZoneDefinition
struct FFortSafeZoneDefinition
{
public:
	struct FScalableFloat                        Radius;                                            // 0x0(0x20)(Edit, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                        ForceDistanceMin;                                  // 0x20(0x20)(Edit, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                        ForceDistanceMax;                                  // 0x40(0x20)(Edit, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                        RejectRadius;                                      // 0x60(0x20)(Edit, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                        RejectOuterDistance;                               // 0x80(0x20)(Edit, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                        WaitTime;                                          // 0xA0(0x20)(Edit, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                        ShrinkTime;                                        // 0xC0(0x20)(Edit, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                        MegaStormGridCellThickness;                        // 0xE0(0x20)(Edit, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                        PlayerCap;                                         // 0x100(0x20)(Edit, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_2673[0x28];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x50 (0x50 - 0x0)
// ScriptStruct FortniteGame.FortDestroyedActorRecord
struct FFortDestroyedActorRecord
{
public:
	struct FGuid                                 ActorGuid;                                         // 0x0(0x10)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class ABuildingActor>            ActorClass;                                        // 0x10(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2674[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTransform                            ActorTransform;                                    // 0x20(0x30)(IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.FortBuildingActorArray
struct FFortBuildingActorArray
{
public:
	TArray<struct FFortDestroyedActorRecord>     ActorRecords;                                      // 0x0(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x358 (0x358 - 0x0)
// ScriptStruct FortniteGame.FortScoreStylingInfo
struct FFortScoreStylingInfo
{
public:
	class FText                                  Name;                                              // 0x0(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FFortMultiSizeBrush                   Icon;                                              // 0x18(0x330)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FLinearColor                          Color;                                             // 0x348(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x30 (0x30 - 0x0)
// ScriptStruct FortniteGame.FortScriptedActionParams
struct FFortScriptedActionParams
{
public:
	class AFortPlayerController*                 Player;                                            // 0x0(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortScriptedActionSource         SourceType;                                        // 0x8(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2675[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UFortItem*                             SourceItem;                                        // 0x10(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDataTableRowHandle                   SourceData;                                        // 0x18(0x10)(BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	class FName                                  SourceName;                                        // 0x28(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x38 (0x38 - 0x0)
// ScriptStruct FortniteGame.FortAvailableScriptedAction
struct FFortAvailableScriptedAction
{
public:
	struct FFortScriptedActionParams             Params;                                            // 0x0(0x30)(NoDestructor, NativeAccessSpecifierPublic)
	class AFortScriptedAction*                   ActionDefaults;                                    // 0x30(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.FortSearchPassState
struct FFortSearchPassState
{
public:
	int32                                        BestSessionIdx;                                    // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bWasCanceled;                                      // 0x4(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortSessionHelperJoinResult      FailureType;                                       // 0x5(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EMatchmakingState                 MatchmakingState;                                  // 0x6(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EPartyReservationResult           LastBeaconResponse;                                // 0x7(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2676[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x28 (0x28 - 0x0)
// ScriptStruct FortniteGame.FortSearchPassParams
struct FFortSearchPassParams
{
public:
	int32                                        ControllerId;                                      // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  SessionName;                                       // 0x4(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2677[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                BestDatacenterId;                                  // 0x10(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaxProcessedSearchResults;                         // 0x20(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2678[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0xC (0xC - 0x0)
// ScriptStruct FortniteGame.MMAttemptState
struct FMMAttemptState
{
public:
	int32                                        BestSessionIdx;                                    // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        NumSearchResults;                                  // 0x4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EMatchmakingState                 State;                                             // 0x8(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EPartyReservationResult           LastBeaconResponse;                                // 0x9(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2679[0x2];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.FortTimedKeysState
struct FFortTimedKeysState
{
public:
	TArray<class FString>                        K;                                                 // 0x0(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0xA0 (0xA0 - 0x0)
// ScriptStruct FortniteGame.FortMatchmakingRegionState
struct FFortMatchmakingRegionState
{
public:
	TSet<class FName>                            EventFlagsForcedOn;                                // 0x0(0x50)(ZeroConstructor, NativeAccessSpecifierPublic)
	TSet<class FName>                            EventFlagsForcedOff;                               // 0x50(0x50)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x50 (0x50 - 0x0)
// ScriptStruct FortniteGame.FortMatchmakingEventsState
struct FFortMatchmakingEventsState
{
public:
	TMap<class FString, struct FFortMatchmakingRegionState> Region;                                            // 0x0(0x50)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x140 (0x140 - 0x0)
// ScriptStruct FortniteGame.FortRotationalContentEventsState
struct FFortRotationalContentEventsState
{
public:
	TSet<class FName>                            ActiveStorefronts;                                 // 0x0(0x50)(ZeroConstructor, NativeAccessSpecifierPublic)
	TSet<class FName>                            ActiveEventFlags;                                  // 0x50(0x50)(ZeroConstructor, NativeAccessSpecifierPublic)
	TMap<class FName, double>                    EventNamedWeights;                                 // 0xA0(0x50)(ZeroConstructor, NativeAccessSpecifierPublic)
	TSet<struct FDateTime>                       ExpirationTimes;                                   // 0xF0(0x50)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x50 (0x190 - 0x140)
// ScriptStruct FortniteGame.FortClientEventsState
struct FFortClientEventsState : public FFortRotationalContentEventsState
{
public:
	int32                                        SeasonNumber;                                      // 0x140(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_267A[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                SeasonTemplateId;                                  // 0x148(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MatchXpBonusPoints;                                // 0x158(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_267B[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FDateTime                             SeasonBegin;                                       // 0x160(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FDateTime                             SeasonEnd;                                         // 0x168(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FDateTime                             SeasonDisplayedEnd;                                // 0x170(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FDateTime                             WeeklyStoreEnd;                                    // 0x178(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FDateTime                             StwEventStoreEnd;                                  // 0x180(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FDateTime                             StwWeeklyStoreEnd;                                 // 0x188(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.FortFeaturedIslandsState
struct FFortFeaturedIslandsState
{
public:
	TArray<class FString>                        IslandCodes;                                       // 0x0(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x178 (0x178 - 0x0)
// ScriptStruct FortniteGame.FortGlobalMission
struct FFortGlobalMission
{
public:
	TSoftObjectPtr<class UFortMissionInfo>       MissionInfo;                                       // 0x0(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<enum class EFortTheaterType>          AllowedTheaterTypes;                               // 0x28(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FGameplayTagQuery                     TheaterTagQuery;                                   // 0x38(0x48)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, AssetRegistrySearchable, NativeAccessSpecifierPublic)
	struct FGameplayTagQuery                     RegionTagQuery;                                    // 0x80(0x48)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, AssetRegistrySearchable, NativeAccessSpecifierPublic)
	TArray<enum class EFortZoneType>             AllowedZoneTypes;                                  // 0xC8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FGameplayTagQuery                     ZoneTagQuery;                                      // 0xD8(0x48)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, AssetRegistrySearchable, NativeAccessSpecifierPublic)
	struct FGameplayTagQuery                     PrimaryMissionTagQuery;                            // 0x120(0x48)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, AssetRegistrySearchable, NativeAccessSpecifierPublic)
	float                                        MaxDifficultyLevel;                                // 0x168(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinDifficultyLevel;                                // 0x16C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsPrototype;                                      // 0x170(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bAllowInTestMaps;                                  // 0x171(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnabled;                                          // 0x172(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_267C[0x5];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x8 (0x180 - 0x178)
// ScriptStruct FortniteGame.FortQuestDrivenMission
struct FFortQuestDrivenMission : public FFortGlobalMission
{
public:
	class UFortQuestItemDefinition*              RequiredQuest;                                     // 0x178(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x20 (0x20 - 0x0)
// ScriptStruct FortniteGame.QuestDrivenMissionSubList
struct FQuestDrivenMissionSubList
{
public:
	class FName                                  MissionSubListName;                                // 0x0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnabled;                                          // 0x8(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_267D[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FFortQuestDrivenMission>       QuestDrivenMissionList;                            // 0x10(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x48 (0x48 - 0x0)
// ScriptStruct FortniteGame.FortMissionDistributionCategory
struct FFortMissionDistributionCategory
{
public:
	struct FGameplayTagQuery                     CategoryTagQuery;                                  // 0x0(0x48)(Edit, NativeAccessSpecifierPublic)
};

// 0xB8 (0xB8 - 0x0)
// ScriptStruct FortniteGame.FortNonPrimaryMission
struct FFortNonPrimaryMission
{
public:
	TSoftObjectPtr<class UFortMissionInfo>       MissionInfo;                                       // 0x0(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGameplayTagQuery                     ContextTagQuery;                                   // 0x28(0x48)(Edit, DisableEditOnInstance, AssetRegistrySearchable, NativeAccessSpecifierPrivate)
	struct FDataTableRowHandle                   MinDifficulty;                                     // 0x70(0x10)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPrivate)
	struct FDataTableRowHandle                   MaxDifficulty;                                     // 0x80(0x10)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPrivate)
	bool                                         bSatisfiesCurrentRequirement;                      // 0x90(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_267E[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<int32>                                RequirementIndicesSatisfied;                       // 0x98(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	TArray<int32>                                DistributionCategoryIndicesSatisfied;              // 0xA8(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
};

// 0x490 (0x518 - 0x88)
// ScriptStruct FortniteGame.FortPartyRepData
struct FFortPartyRepData : public FPartyRepData
{
public:
	class FString                                PrimaryGameSessionId;                              // 0x88(0x10)(ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_267F[0x31];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	enum class EFortPartyState                   PartyState;                                        // 0xC9(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2680[0x37];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         LobbyConnectionStarted;                            // 0x101(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2681[0x37];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	enum class EMatchmakingCompleteResult        MatchmakingResult;                                 // 0x139(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2682[0x37];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	enum class EMatchmakingState                 MatchmakingState;                                  // 0x171(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2683[0x37];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         SessionIsCriticalMission;                          // 0x1A9(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2684[0x3A];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        ZoneTileIndex;                                     // 0x1E4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2685[0x38];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                ZoneInstanceId;                                    // 0x220(0x10)(ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2686[0x38];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                TheaterId;                                         // 0x268(0x10)(ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2687[0x38];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<bool>                                 TileStates;                                        // 0x2B0(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_2688[0x38];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                MatchmakingInfoString;                             // 0x2F8(0x10)(ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2689[0x38];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                CustomMatchKey;                                    // 0x340(0x10)(ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_268A[0x38];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FPlaylistData                         PlaylistData;                                      // 0x388(0x28)(Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_268B[0x31];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         AllowJoinInProgress;                               // 0x3E1(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_268C[0x3E];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FDateTime                             LFGTime;                                           // 0x420(0x8)(ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_268D[0x31];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         AthenaSquadFill;                                   // 0x459(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_268E[0x37];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         PartyIsJoinedInProgress;                           // 0x491(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_268F[0x3E];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                GameSessionKey;                                    // 0x4D0(0x10)(ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2690[0x38];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x10 (0xC0 - 0xB0)
// ScriptStruct FortniteGame.SpecialActorRepDataArray
struct FSpecialActorRepDataArray : public FFastArraySerializer
{
public:
	TArray<struct FSpecialActorRepData>          SpecialActorList;                                  // 0xB0(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x150 (0x150 - 0x0)
// ScriptStruct FortniteGame.FortChaseCameraHelper
struct FFortChaseCameraHelper
{
public:
	struct FTransform                            PivotToViewTarget;                                 // 0x0(0x30)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FTransform                            PivotToViewTarget_Crouching;                       // 0x30(0x30)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FTransform                            MinCameraToPivot;                                  // 0x60(0x30)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FTransform                            MaxCameraToPivot;                                  // 0x90(0x30)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_2691[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        CameraToPivotAlphaInterpSpeed;                     // 0xC8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CameraCollisionSphereRadius;                       // 0xCC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PivotLocationInterpSpeed;                          // 0xD0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PivotRotationInterpSpeed;                          // 0xD4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        : 1;                                               // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        bAutoFollow : 1;                                   // Mask : 0x2 0xD8(0x1)(BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bLazyAutoFollow : 1;                               // Mask : 0x4 0xD8(0x1)(BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2692[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        CameraTruckRate;                                   // 0xDC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AutoFollowPitch;                                   // 0xE0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LazyAutoFollowPitchMin;                            // 0xE4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LazyAutoFollowPitchMax;                            // 0xE8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2693[0x64];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x28 (0x28 - 0x0)
// ScriptStruct FortniteGame.SphericalDriveParams
struct FSphericalDriveParams
{
public:
	float                                        Radius;                                            // 0x0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LowSpeedAccelerationForce;                         // 0x4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HighSpeedAccelerationForce;                        // 0x8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxBrakingForce;                                   // 0xC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxSpeed;                                          // 0x10(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DampingCoefficient;                                // 0x14(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Restitution;                                       // 0x18(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ContactRepulsionForce;                             // 0x1C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ContactThreshold;                                  // 0x20(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MassDirectionMaxAngleDeg;                          // 0x24(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x1 (0x1 - 0x0)
// ScriptStruct FortniteGame.FortLinearSpline
struct FFortLinearSpline
{
public:
	uint8                                        Pad_2694[0x1];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.FortSplineBase
struct FFortSplineBase
{
public:
	uint8                                        Pad_2695[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        StartTime;                                         // 0x8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        Duration;                                          // 0xC(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
};

// 0x10 (0x20 - 0x10)
// ScriptStruct FortniteGame.FortCatmullRomSpline
struct FFortCatmullRomSpline : public FFortSplineBase
{
public:
	TArray<struct FVector>                       ControlPoints;                                     // 0x10(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
};

// 0x20 (0x20 - 0x0)
// ScriptStruct FortniteGame.FortSprayDecalRepPayload
struct FFortSprayDecalRepPayload
{
public:
	class UAthenaSprayItemDefinition*            SprayAsset;                                        // 0x0(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  BannerName;                                        // 0x8(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  BannerColor;                                       // 0x10(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        SavedStatValue;                                    // 0x18(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2696[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x38 (0x38 - 0x0)
// ScriptStruct FortniteGame.FortEventConditional
struct FFortEventConditional
{
public:
	enum class EFortEventConditionType           ConditionalType;                                   // 0x0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2697[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  StatToCompare;                                     // 0x4(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EStatRecordingPeriod              RelevantPeriod;                                    // 0xC(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortCompare                      ComparisonType;                                    // 0xD(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2698[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        Value;                                             // 0x10(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2699[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UFortSchematicItemDefinition*          CraftingItem;                                      // 0x18(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bCanCraft;                                         // 0x20(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_269A[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UStat*                                 Stat;                                              // 0x28(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AFortPlayerController*                 FPC;                                               // 0x30(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x50 (0x50 - 0x0)
// ScriptStruct FortniteGame.FortStatEvent
struct FFortStatEvent
{
public:
	class FName                                  StatEventName;                                     // 0x0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortEventRepeat                  RepeatType;                                        // 0x8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_269B[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class FName>                          StatsToMonitor;                                    // 0x10(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FFortEventConditional>         Conditions;                                        // 0x20(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	TSubclassOf<class AFortClientAnnouncement>   AnnouncementToDisplay;                             // 0x30(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                               NotificationParameter;                             // 0x38(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStat*                                 AssociatedStat;                                    // 0x40(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AFortPlayerController*                 FPC;                                               // 0x48(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x50 (0x50 - 0x0)
// ScriptStruct FortniteGame.FortStatEventSequence
struct FFortStatEventSequence
{
public:
	class FName                                  StatEventName;                                     // 0x0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortEventRepeat                  RepeatType;                                        // 0x8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_269C[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FFortStatEvent>                EventSequence;                                     // 0x10(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	class UStat*                                 AssociatedStat;                                    // 0x20(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AFortPlayerController*                 FPC;                                               // 0x28(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FName>                          StatsToMonitor;                                    // 0x30(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<struct FFortEventConditional>         Conditions;                                        // 0x40(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
};

// 0x20 (0x20 - 0x0)
// ScriptStruct FortniteGame.TransformableNavLinkClass
struct FTransformableNavLinkClass
{
public:
	struct FVector                               Translation;                                       // 0x0(0xC)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                              Rotation;                                          // 0xC(0xC)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	TSubclassOf<class UNavLinkDefinition>        NavigationLinksClass;                              // 0x18(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x60 (0x60 - 0x0)
// ScriptStruct FortniteGame.FortSupplyDropSubPhaseData
struct FFortSupplyDropSubPhaseData
{
public:
	struct FScalableFloat                        SupplyDropMinCount;                                // 0x0(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FScalableFloat                        SupplyDropMaxCount;                                // 0x20(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FScalableFloat                        SupplyDropCap;                                     // 0x40(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// 0x158 (0x158 - 0x0)
// ScriptStruct FortniteGame.FortSupplyDropGamePhaseData
struct FFortSupplyDropGamePhaseData
{
public:
	enum class EAthenaGamePhase                  GamePhase;                                         // 0x0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_269D[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FScalableFloat                        SupplyDropMinPlacementHeight;                      // 0x8(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FScalableFloat                        SupplyDropMaxPlacementHeight;                      // 0x28(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FScalableFloat                        SupplyDropTimeInterval;                            // 0x48(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FScalableFloat                        SupplyDropTimeDeviation;                           // 0x68(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FScalableFloat                        SupplyDropSpawnMinWaitTime;                        // 0x88(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FScalableFloat                        SupplyDropSpawnMaxWaitTime;                        // 0xA8(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FScalableFloat                        SupplyDropMinSpawnHeight;                          // 0xC8(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FScalableFloat                        SupplyDropMaxSpawnHeight;                          // 0xE8(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FScalableFloat                        SupplyDropMinSpeed;                                // 0x108(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FScalableFloat                        SupplyDropMaxSpeed;                                // 0x128(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	TArray<struct FFortSupplyDropSubPhaseData>   SubPhaseData;                                      // 0x148(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0xC (0xC - 0x0)
// ScriptStruct FortniteGame.FortSurfaceTypeToSurfaceTypeTag
struct FFortSurfaceTypeToSurfaceTypeTag
{
public:
	enum class EFortFootstepSurfaceType          FootSurfaceType;                                   // 0x0(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EPhysicalSurface                  SurfaceType;                                       // 0x1(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_269E[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGameplayTag                          SurfaceTypeTag;                                    // 0x4(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x18 (0x20 - 0x8)
// ScriptStruct FortniteGame.FortSurvivorNameData
struct FFortSurvivorNameData : public FTableRowBase
{
public:
	class FText                                  Name;                                              // 0x8(0x18)(Edit, EditConst, NativeAccessSpecifierPublic)
};

// 0x368 (0x368 - 0x0)
// ScriptStruct FortniteGame.FortTagUIData
struct FFortTagUIData
{
public:
	struct FGameplayTag                          Tag;                                               // 0x0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFortMultiSizeBrush                   Icon;                                              // 0x8(0x330)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class FText                                  DisplayName;                                       // 0x338(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class FText                                  Description;                                       // 0x350(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.FortFinderProperty
struct FFortFinderProperty
{
public:
	class UProperty*                             Property;                                          // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                Value;                                             // 0x8(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x68 (0x68 - 0x0)
// ScriptStruct FortniteGame.FortTaggedActorOctreeFilter
struct FFortTaggedActorOctreeFilter
{
public:
	struct FBoxSphereBounds                      Bounds;                                            // 0x0(0x1C)(ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	float                                        MinDistanceFromBoundsCenter;                       // 0x1C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<TSubclassOf<class ABuildingActor>>    OptionalSubclasses;                                // 0x20(0x10)(ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<struct FFortFinderProperty>           RequiredProperties;                                // 0x30(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                 TagsToLookFor;                                     // 0x40(0x20)(NativeAccessSpecifierPublic)
	bool                                         bHasAllTags;                                       // 0x60(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_269F[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x50 (0x50 - 0x0)
// ScriptStruct FortniteGame.FortTaggedSoundCue
struct FFortTaggedSoundCue
{
public:
	struct FGameplayTagQuery                     Requirements;                                      // 0x0(0x48)(Edit, NativeAccessSpecifierPublic)
	class USoundBase*                            Sound;                                             // 0x48(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.TaggedSoundBankResponseList
struct FTaggedSoundBankResponseList
{
public:
	TArray<struct FFortTaggedSoundCue>           CueList;                                           // 0x0(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x14 (0x20 - 0xC)
// ScriptStruct FortniteGame.TeamSpottedActorInfo
struct FTeamSpottedActorInfo : public FFastArraySerializerItem
{
public:
	uint8                                        Pad_26A0[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AFortPlayerController*                 Spotter;                                           // 0x10(0x8)(ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                SpottedActor;                                      // 0x18(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x18 (0xC8 - 0xB0)
// ScriptStruct FortniteGame.TeamSpottedActorInfoArray
struct FTeamSpottedActorInfoArray : public FFastArraySerializer
{
public:
	TArray<struct FTeamSpottedActorInfo>         SpottedActorInfo;                                  // 0xB0(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	class AFortTeamInfo*                         OwningTeam;                                        // 0xC0(0x8)(ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};

// 0x2C (0x38 - 0xC)
// ScriptStruct FortniteGame.TeamFOBCoreBuildingEntry
struct FTeamFOBCoreBuildingEntry : public FFastArraySerializerItem
{
public:
	uint8                                        Pad_26A1[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class ABuildingFOBCoreActor*                 FOB;                                               // 0x10(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                 SpawnLocationTags;                                 // 0x18(0x20)(Transient, NativeAccessSpecifierPublic)
};

// 0x10 (0xC0 - 0xB0)
// ScriptStruct FortniteGame.TeamFOBCoreBuildingEntryArray
struct FTeamFOBCoreBuildingEntryArray : public FFastArraySerializer
{
public:
	TArray<struct FTeamFOBCoreBuildingEntry>     Items;                                             // 0xB0(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
};

// 0xC (0x18 - 0xC)
// ScriptStruct FortniteGame.TeamStrategicBuildingEntry
struct FTeamStrategicBuildingEntry : public FFastArraySerializerItem
{
public:
	struct FTeamStrategicBuildingHandle          StrategicBuildingHandle;                           // 0xC(0x4)(Transient, NoDestructor, NativeAccessSpecifierPublic)
	class AStrategicBuildingActor*               StrategicBuilding;                                 // 0x10(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0xC0 - 0xB0)
// ScriptStruct FortniteGame.TeamStrategicBuildingEntryArray
struct FTeamStrategicBuildingEntryArray : public FFastArraySerializer
{
public:
	TArray<struct FTeamStrategicBuildingEntry>   Items;                                             // 0xB0(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
};

// 0x6C (0x78 - 0xC)
// ScriptStruct FortniteGame.LatentRepPlayerData
struct FLatentRepPlayerData : public FFastArraySerializerItem
{
public:
	uint8                                        Pad_26A2[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AFortPlayerStateAthena*                PlayerState;                                       // 0x10(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LastPawnNotRelevantTime;                           // 0x18(0x4)(ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bPawnIsRelevant;                                   // 0x1C(0x1)(ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bWasPawnRelevantLastUpdate;                        // 0x1D(0x1)(ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_26A3[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               CurrentLocation;                                   // 0x20(0xC)(ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        CurrentYaw;                                        // 0x2C(0x4)(ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        LastLocationReplicationTime;                       // 0x30(0x4)(ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        PrevLocationReplicatedTime;                        // 0x34(0x4)(ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FVector_NetQuantize100                LastRepLocation;                                   // 0x38(0xC)(NoDestructor, NativeAccessSpecifierPrivate)
	struct FVector_NetQuantize100                PrevRepLocation;                                   // 0x44(0xC)(RepSkip, NoDestructor, NativeAccessSpecifierPrivate)
	struct FVector                               LerpStartLocation;                                 // 0x50(0xC)(ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        LastYawReplicationTime;                            // 0x5C(0x4)(ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        PrevYawReplicatedTime;                             // 0x60(0x4)(ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        LastRepYaw;                                        // 0x64(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        PrevRepYaw;                                        // 0x68(0x4)(ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        LerpStartYaw;                                      // 0x6C(0x4)(ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	enum class EFortPawnState                    PawnStateMask;                                     // 0x70(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	enum class EFortPawnState                    CurrPawnStateMask;                                 // 0x71(0x1)(ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_26A4[0x6];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x18 (0xC8 - 0xB0)
// ScriptStruct FortniteGame.LatentRepTeamDataArray
struct FLatentRepTeamDataArray : public FFastArraySerializer
{
public:
	TArray<struct FLatentRepPlayerData>          PlayerData;                                        // 0xB0(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	int32                                        CurrPlayerUpdateIndex;                             // 0xC0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_26A5[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x34 (0x40 - 0xC)
// ScriptStruct FortniteGame.PrivateTeamDataItem
struct FPrivateTeamDataItem : public FFastArraySerializerItem
{
public:
	float                                        Value;                                             // 0xC(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FUniqueNetIdRepl                      PlayerID;                                          // 0x10(0x28)(HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_26A6[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x68 (0x118 - 0xB0)
// ScriptStruct FortniteGame.PrivateTeamDataArray
struct FPrivateTeamDataArray : public FFastArraySerializer
{
public:
	TArray<struct FPrivateTeamDataItem>          Items;                                             // 0xB0(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_26A7[0x58];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x38 (0x38 - 0x0)
// ScriptStruct FortniteGame.SmokeTestResult
struct FSmokeTestResult
{
public:
	class FString                                TestStep;                                          // 0x0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                TestSummary;                                       // 0x10(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bWasExecuted;                                      // 0x20(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bPassed;                                           // 0x21(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_26A8[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                ResultMessage;                                     // 0x28(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0xD0 (0xD0 - 0x0)
// ScriptStruct FortniteGame.FortTheaterTileEditorData
struct FFortTheaterTileEditorData
{
public:
	int32                                        XCoordinate;                                       // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        YCoordinate;                                       // 0x4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UFortZoneTheme>            ZoneTheme;                                         // 0x8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFortRegionInfo*                       Region;                                            // 0x10(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFortRequirementsInfo                 Requirements;                                      // 0x18(0x58)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<struct FFortLinkedQuest>              LinkedQuests;                                      // 0x70(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	enum class EFortTheaterMapTileType           TileType;                                          // 0x80(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_26A9[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGameplayTagContainer                 TileTags;                                          // 0x88(0x20)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<struct FFortTheaterMissionWeight>     MissionWeightOverrides;                            // 0xA8(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<struct FFortTheaterDifficultyWeight>  DifficultyWeightOverrides;                         // 0xB8(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	bool                                         bCanBeMissionAlert;                                // 0xC8(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_26AA[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.FortEditorTheaterMapRegionColor
struct FFortEditorTheaterMapRegionColor
{
public:
	class UFortRegionInfo*                       Region;                                            // 0x0(0x8)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          RegionColor;                                       // 0x8(0x10)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0xC (0xC - 0x0)
// ScriptStruct FortniteGame.FortMissionAlertAvailableData
struct FFortMissionAlertAvailableData
{
public:
	class FName                                  MissionAlertCategoryName;                          // 0x0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        NumMissionAlertsAvailable;                         // 0x8(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x20 (0x20 - 0x0)
// ScriptStruct FortniteGame.FortTheaterMapMissionAlertData
struct FFortTheaterMapMissionAlertData
{
public:
	int32                                        NumMissionAlertsAvailable;                         // 0x0(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_26AB[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FFortMissionAlertAvailableData> AvailabilityDataPerCategory;                       // 0x8(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	float                                        MissionAlertChangeFrequency;                       // 0x18(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_26AC[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x48 (0x48 - 0x0)
// ScriptStruct FortniteGame.FortFoundQuestMissions
struct FFortFoundQuestMissions
{
public:
	class FString                                TheaterId;                                         // 0x0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsValidForAllPlayableMissions;                    // 0x10(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_26AD[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FFortAvailableMissionData>     LinkedMissions;                                    // 0x18(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FFortAvailableMissionData>     TagMatchingMissions;                               // 0x28(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FFortAvailableMissionData>     FallbackMatchingMissions;                          // 0x38(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x4 (0x4 - 0x0)
// ScriptStruct FortniteGame.FortWindImpulseHandle
struct FFortWindImpulseHandle
{
public:
	int32                                        UID;                                               // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};

// 0x44 (0x50 - 0xC)
// ScriptStruct FortniteGame.StormWind
struct FStormWind : public FFastArraySerializerItem
{
public:
	struct FVector                               Location;                                          // 0xC(0xC)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               Direction;                                         // 0x18(0xC)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Radius;                                            // 0x24(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Magnitude;                                         // 0x28(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_26AE[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AFortThreatVisualsManager*             ThreatVisualsManager;                              // 0x30(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UFortAIEncounterInfo*>          Encounters;                                        // 0x38(0x10)(ZeroConstructor, Transient, RepSkip, NativeAccessSpecifierPublic)
	struct FFortWindImpulseHandle                WindHandle;                                        // 0x48(0x4)(Transient, RepSkip, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_26AF[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x10 (0xC0 - 0xB0)
// ScriptStruct FortniteGame.StormWindArray
struct FStormWindArray : public FFastArraySerializer
{
public:
	TArray<struct FStormWind>                    StormWinds;                                        // 0xB0(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPublic)
};

// 0x54 (0x60 - 0xC)
// ScriptStruct FortniteGame.ThreatLocationInfo
struct FThreatLocationInfo : public FFastArraySerializerItem
{
public:
	struct FVector                               CloudLocation;                                     // 0xC(0xC)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FBox                                  ThreatVolume;                                      // 0x18(0x1C)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_26B0[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AFortThreatVisualsManager*             ThreatVisualsManager;                              // 0x38(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class AThreatCloud>           CloudActor;                                        // 0x40(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_26B1[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bThreatActivated;                                  // 0x49(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortThreatDeactivationType       DeactivationType;                                  // 0x4A(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_26B2[0x15];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x10 (0xC0 - 0xB0)
// ScriptStruct FortniteGame.ThreatLocationArray
struct FThreatLocationArray : public FFastArraySerializer
{
public:
	TArray<struct FThreatLocationInfo>           Locations;                                         // 0xB0(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPublic)
};

// 0x8 (0x8 - 0x0)
// ScriptStruct FortniteGame.ThreatGridIndex
struct FThreatGridIndex
{
public:
	int32                                        X;                                                 // 0x0(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Y;                                                 // 0x4(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x1 (0x1 - 0x0)
// ScriptStruct FortniteGame.TieredCollectionProgressionDataBase
struct FTieredCollectionProgressionDataBase
{
public:
	enum class ECollectionSelectionMethod        SelectionMethod;                                   // 0x0(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x17 (0x18 - 0x1)
// ScriptStruct FortniteGame.CollectionLootSetData
struct FCollectionLootSetData : public FTieredCollectionProgressionDataBase
{
public:
	uint8                                        Pad_26B3[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class FName>                          LootSetNames;                                      // 0x8(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.RewardBadgesProgression
struct FRewardBadgesProgression
{
public:
	TArray<class UFortBadgeItemDefinition*>      RewardBadges;                                      // 0x0(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// 0x17 (0x18 - 0x1)
// ScriptStruct FortniteGame.RewardBadgesCollectionProgressionData
struct FRewardBadgesCollectionProgressionData : public FTieredCollectionProgressionDataBase
{
public:
	uint8                                        Pad_26B4[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FRewardBadgesProgression>      BadgeCollections;                                  // 0x8(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// 0x28 (0x28 - 0x0)
// ScriptStruct FortniteGame.DifficultyRowProgression
struct FDifficultyRowProgression
{
public:
	class FName                                  DifficultyRowName;                                 // 0x0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FScalableFloat                        AdditiveDifficultyMod;                             // 0x8(0x20)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// 0x17 (0x18 - 0x1)
// ScriptStruct FortniteGame.DifficultyCollectionProgressionData
struct FDifficultyCollectionProgressionData : public FTieredCollectionProgressionDataBase
{
public:
	uint8                                        Pad_26B5[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FDifficultyRowProgression>     DifficultyCollections;                             // 0x8(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// 0x17 (0x18 - 0x1)
// ScriptStruct FortniteGame.TieredNamedCollectionProgressionData
struct FTieredNamedCollectionProgressionData : public FTieredCollectionProgressionDataBase
{
public:
	uint8                                        Pad_26B6[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class FName>                          CollectionNames;                                   // 0x8(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// 0xA0 (0xA0 - 0x0)
// ScriptStruct FortniteGame.WorldAmbientPropertiesMatchingGameContext
struct FWorldAmbientPropertiesMatchingGameContext
{
public:
	struct FGameplayTagQuery                     QueryToMatch;                                      // 0x0(0x48)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FFortTimeOfDayTheme                   TimeOfDayTheme;                                    // 0x48(0x40)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FFortGlobalWindInfo                   GlobalWindInfo;                                    // 0x88(0x18)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// 0x1 (0x1 - 0x0)
// ScriptStruct FortniteGame.TimeOfDayEditorViewSettings
struct FTimeOfDayEditorViewSettings
{
public:
	uint8                                        Pad_26B7[0x1];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x28 (0x28 - 0x0)
// ScriptStruct FortniteGame.SkyLightValues
struct FSkyLightValues
{
public:
	struct FLinearColor                          SkyLightColor;                                     // 0x0(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          SkyLightOcclusionTint;                             // 0x10(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SkyLightMinOcclusion;                              // 0x20(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        VolumetricScatteringIntensity;                     // 0x24(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x50 (0x50 - 0x0)
// ScriptStruct FortniteGame.CloudColorState
struct FCloudColorState
{
public:
	struct FLinearColor                          BottomEmissive;                                    // 0x0(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          TopEmissive;                                       // 0x10(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          BottomLightning;                                   // 0x20(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          TopLightning;                                      // 0x30(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          InternalColor;                                     // 0x40(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0xA0 (0xA0 - 0x0)
// ScriptStruct FortniteGame.ThreatCloudValues
struct FThreatCloudValues
{
public:
	struct FCloudColorState                      CloudActivated;                                    // 0x0(0x50)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FCloudColorState                      CloudDeactivated;                                  // 0x50(0x50)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
};

// 0x14 (0x14 - 0x0)
// ScriptStruct FortniteGame.ElementalCharValues
struct FElementalCharValues
{
public:
	struct FLinearColor                          FireCharColor;                                     // 0x0(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ElectricalCharEmissive;                            // 0x10(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0xC (0xC - 0x0)
// ScriptStruct FortniteGame.DirectionalLightValues
struct FDirectionalLightValues
{
public:
	struct FColor                                LightColor;                                        // 0x0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Brightness;                                        // 0x4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        VolumetricScatteringIntensity;                     // 0x8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x50 (0x50 - 0x0)
// ScriptStruct FortniteGame.ExponentialHeightFogValues
struct FExponentialHeightFogValues
{
public:
	float                                        FogDensity;                                        // 0x0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FogHeightFalloff;                                  // 0x4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FogMaxOpacity;                                     // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        StartDistance;                                     // 0xC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DirectionalInscatteringExponent;                   // 0x10(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DirectionalInscatteringStartDistance;              // 0x14(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          DirectionalInscatteringColor;                      // 0x18(0x10)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          FogInscatteringColor;                              // 0x28(0x10)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        VolumetricFogScatteringDistribution;               // 0x38(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        VolumetricFogExtinctionScale;                      // 0x3C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        VolumetricFogDistance;                             // 0x40(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FExponentialHeightFogData             SecondFogData;                                     // 0x44(0xC)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
};

// 0x178 (0x178 - 0x0)
// ScriptStruct FortniteGame.DayPhaseInfo
struct FDayPhaseInfo
{
public:
	class FString                                PhaseStartAnnouncement;                            // 0x0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TimePhaseBegins;                                   // 0x10(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PhaseLengthInHours;                                // 0x14(0x4)(Edit, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PercentageTransitionIn;                            // 0x18(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TransitionInTimeInMinutes;                         // 0x1C(0x4)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PercentageTransitionOut;                           // 0x20(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TransitionOutTimeInMinutes;                        // 0x24(0x4)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSkyLightValues                       SkyLightValues;                                    // 0x28(0x28)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FThreatCloudValues                    ThreatCloudValues;                                 // 0x50(0xA0)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FElementalCharValues                  ElementalCharValues;                               // 0xF0(0x14)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FDirectionalLightValues               DirectionalLightValues;                            // 0x104(0xC)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FExponentialHeightFogValues           ExpHeightFogValues;                                // 0x110(0x50)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	class UPostProcessComponent*                 LowPriPostProcessComponent;                        // 0x160(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInstance*                     SkyMaterialInstance;                               // 0x168(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInstance*                     StarMapMaterialInstance;                           // 0x170(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.CameraAltitudeAdjustments
struct FCameraAltitudeAdjustments
{
public:
	float                                        Altitude;                                          // 0x0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FogHeightFalloff;                                  // 0x4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HeightFogZOffset;                                  // 0x8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FogDensity;                                        // 0xC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x38 (0x38 - 0x0)
// ScriptStruct FortniteGame.FortTokenContextInfo
struct FFortTokenContextInfo
{
public:
	struct FGameplayTagContainer                 RequiredContextTags;                               // 0x0(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class FText                                  Text;                                              // 0x20(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.FortTooltipTokenInfo
struct FFortTooltipTokenInfo
{
public:
	struct FGameplayTag                          Token;                                             // 0x0(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FFortTokenContextInfo>         ContextDetails;                                    // 0x8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x38 (0x38 - 0x0)
// ScriptStruct FortniteGame.FortTooltipDisplayInfo
struct FFortTooltipDisplayInfo
{
public:
	class UClass*                                PrimaryObjectClass;                                // 0x0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                SecondaryObjectClass;                              // 0x8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                 DescriptionStatsTags;                              // 0x10(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class UFortTooltipDisplayStatsList*          TooltipStatsList;                                  // 0x30(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x50 (0x50 - 0x0)
// ScriptStruct FortniteGame.FortTooltipDisplayStatInfo
struct FFortTooltipDisplayStatInfo
{
public:
	struct FGameplayTag                          Token;                                             // 0x0(0x8)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayAttribute                    Attribute;                                         // 0x8(0x20)(Edit, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                 ContextTags;                                       // 0x28(0x20)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	bool                                         bLowerIsBetter;                                    // 0x48(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_26B8[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x28 (0x28 - 0x0)
// ScriptStruct FortniteGame.FortTooltipDisplayStatsCategory
struct FFortTooltipDisplayStatsCategory
{
public:
	class FText                                  CategoryName;                                      // 0x0(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<struct FFortTooltipDisplayStatInfo>   TooltipStats;                                      // 0x18(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.FortTooltipMapEntry
struct FFortTooltipMapEntry
{
public:
	class UClass*                                ObjectClass;                                       // 0x0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                SecondaryObjectClass;                              // 0x8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UFortTooltip>              TooltipClass;                                      // 0x10(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x70 (0x70 - 0x0)
// ScriptStruct FortniteGame.FortTooltipValueData
struct FFortTooltipValueData
{
public:
	class FText                                  DisplayName;                                       // 0x0(0x18)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	class FText                                  FormattedValue;                                    // 0x18(0x18)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	class FText                                  ExplanationText;                                   // 0x30(0x18)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	float                                        Value;                                             // 0x48(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_26B9[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGameplayTagContainer                 StateTags;                                         // 0x50(0x20)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
};

// 0x110 (0x110 - 0x0)
// ScriptStruct FortniteGame.FortTouchAimAssist
struct FFortTouchAimAssist
{
public:
	uint8                                        Pad_26BA[0x110];                                   // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x40 (0x40 - 0x0)
// ScriptStruct FortniteGame.FortTouchAimAssist_Target
struct FFortTouchAimAssist_Target
{
public:
	class AActor*                                Actor;                                             // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_26BB[0x38];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x70 (0x70 - 0x0)
// ScriptStruct FortniteGame.FortTouchAimAssist_TargetAggregator
struct FFortTouchAimAssist_TargetAggregator
{
public:
	TArray<struct FFortTouchAimAssist_Target>    TargetCache0;                                      // 0x0(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<struct FFortTouchAimAssist_Target>    TargetCache1;                                      // 0x10(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_26BC[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FFortTouchAimAssist_Target            AutoFireTarget;                                    // 0x28(0x40)(NoDestructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_26BD[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x90 (0x90 - 0x0)
// ScriptStruct FortniteGame.FortTouchAimAssist_OwnerInfo
struct FFortTouchAimAssist_OwnerInfo
{
public:
	uint8                                        Pad_26BE[0x90];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0xC (0xC - 0x0)
// ScriptStruct FortniteGame.FortTouchAimAssist_Results
struct FFortTouchAimAssist_Results
{
public:
	uint8                                        Pad_26BF[0xC];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x20 (0x20 - 0x0)
// ScriptStruct FortniteGame.FortTouchAimAssist_Params
struct FFortTouchAimAssist_Params
{
public:
	uint8                                        Pad_26C0[0x20];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x48 (0x48 - 0x0)
// ScriptStruct FortniteGame.FortTouchAimAssistSettings
struct FFortTouchAimAssistSettings
{
public:
	float                                        ReticleWidth;                                      // 0x0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ReticleHeight;                                     // 0x4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ReticleDepth;                                      // 0x8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AutoFireReticleWidth;                              // 0xC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AutoFireReticleHeight;                             // 0x10(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ProjectileMinSpeedForAssist;                       // 0x14(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ProjectileMaxLookAheadTime;                        // 0x18(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TargetRange;                                       // 0x1C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                           TargetWeightCurve;                                 // 0x20(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                           PullStrengthYawCurve;                              // 0x28(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                           PullStrengthPitchCurve;                            // 0x30(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PullMaxRate;                                       // 0x38(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AutoTrackDuration;                                 // 0x3C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AutoTrackPullStrength;                             // 0x40(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_26C1[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x8 (0x8 - 0x0)
// ScriptStruct FortniteGame.ScoreReward
struct FScoreReward
{
public:
	int32                                        KeyValue;                                          // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        PointsEarned;                                      // 0x4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x30 (0x30 - 0x0)
// ScriptStruct FortniteGame.ScoringRule
struct FScoringRule
{
public:
	class FString                                TrackedStat;                                       // 0x0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                MathRule;                                          // 0x10(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FScoreReward>                  RewardTiers;                                       // 0x20(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.EventReward
struct FEventReward
{
public:
	int32                                        PointsEarned;                                      // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_26C2[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class FString>                        McpTokenRewards;                                   // 0x8(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x38 (0x38 - 0x0)
// ScriptStruct FortniteGame.ShowdownEventData
struct FShowdownEventData
{
public:
	class FString                                PlaylistId;                                        // 0x0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MatchCap;                                          // 0x10(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_26C3[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FScoringRule>                  ScoringRules;                                      // 0x18(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FEventReward>                  RewardTable;                                       // 0x28(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x78 (0x78 - 0x0)
// ScriptStruct FortniteGame.ShowdownEventWindow
struct FShowdownEventWindow
{
public:
	class FString                                EventWindowId;                                     // 0x0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDateTime                             CountdownBeginTime;                                // 0x10(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDateTime                             BeginTime;                                         // 0x18(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDateTime                             EndTime;                                           // 0x20(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Round;                                             // 0x28(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsTBD;                                            // 0x2C(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_26C4[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FShowdownEventData                    EventData;                                         // 0x30(0x38)(NativeAccessSpecifierPublic)
	class FString                                LeaderboardId;                                     // 0x68(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x68 (0x68 - 0x0)
// ScriptStruct FortniteGame.ShowdownTournament
struct FShowdownTournament
{
public:
	class FString                                TournamentId;                                      // 0x0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FString>                        Regions;                                           // 0x10(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class FString>                        PlatformGroups;                                    // 0x20(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	class FString                                DisplayDataId;                                     // 0x30(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDateTime                             AnnouncementTime;                                  // 0x40(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDateTime                             BeginTime;                                         // 0x48(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDateTime                             EndTime;                                           // 0x50(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FShowdownEventWindow>          EventWindows;                                      // 0x58(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x8 (0x8 - 0x0)
// ScriptStruct FortniteGame.PlayerEventWindowHistory
struct FPlayerEventWindowHistory
{
public:
	int32                                        TimesAchieved;                                     // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        PointsEarned;                                      // 0x4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x58 (0x58 - 0x0)
// ScriptStruct FortniteGame.EventHistoryPayloadV1
struct FEventHistoryPayloadV1
{
public:
	int32                                        PointsEarned;                                      // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_26C5[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<class FString, struct FPlayerEventWindowHistory> PointBreakdown;                                    // 0x8(0x50)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x98 (0x98 - 0x0)
// ScriptStruct FortniteGame.PlayerEventHistory
struct FPlayerEventHistory
{
public:
	class FString                                TournamentId;                                      // 0x0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                EventWindowId;                                     // 0x10(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FString>                        MatchIds;                                          // 0x20(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class FString>                        TeammateIds;                                       // 0x30(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	struct FEventHistoryPayloadV1                Payload;                                           // 0x40(0x58)(NativeAccessSpecifierPublic)
};

// 0x20 (0x20 - 0x0)
// ScriptStruct FortniteGame.ShowdownEventDownload
struct FShowdownEventDownload
{
public:
	TArray<struct FShowdownTournament>           EventTournaments;                                  // 0x0(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FPlayerEventHistory>           EventWindowHistories;                              // 0x10(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x48 (0x48 - 0x0)
// ScriptStruct FortniteGame.TowhookParams
struct FTowhookParams
{
public:
	float                                        MaxRopeLength;                                     // 0x0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bUseConstraint;                                    // 0x4(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_26C6[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        RopeStiffness;                                     // 0x8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RopeDamping;                                       // 0xC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RopeMaxStiffnessForce;                             // 0x10(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RopeMaxStiffnessVelocity;                          // 0x14(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RopeMaxThickness;                                  // 0x18(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RopeMinThickness;                                  // 0x1C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RopeThicknessStretchRange;                         // 0x20(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DetachedExtendSpeed;                               // 0x24(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AttachedExtendSpeed;                               // 0x28(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AttachedContractSpeed;                             // 0x2C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DetachedContractSpeed;                             // 0x30(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bAdditiveExtensionVelocity;                        // 0x34(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bAllowHookForce;                                   // 0x35(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bAllowHookTorque;                                  // 0x36(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bAutoContract;                                     // 0x37(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ECollisionChannel                 AttachCollisionChannel;                            // 0x38(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_26C7[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               HookGravity;                                       // 0x3C(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.TrackConnectorMeshConfig
struct FTrackConnectorMeshConfig
{
public:
	enum class ETrackIncline                     InclineSideA;                                      // 0x0(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETrackIncline                     InclineSideB;                                      // 0x1(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_26C8[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UStaticMesh*                           Mesh;                                              // 0x8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x1C (0x1C - 0x0)
// ScriptStruct FortniteGame.TrackPieceConfig
struct FTrackPieceConfig
{
public:
	enum class ETrackPieceType                   Type;                                              // 0x0(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_26C9[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FRotator                              Rotation;                                          // 0x4(0xC)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FVector                               Scale;                                             // 0x10(0xC)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x3 (0x3 - 0x0)
// ScriptStruct FortniteGame.TrackSplineConfig
struct FTrackSplineConfig
{
public:
	bool                                         bUseSpline;                                        // 0x0(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETrackDirection                   Start;                                             // 0x1(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETrackDirection                   End;                                               // 0x2(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x24 (0x24 - 0x0)
// ScriptStruct FortniteGame.TrackSwitchStateConfig
struct FTrackSwitchStateConfig
{
public:
	struct FTrackPieceConfig                     TrackPiece;                                        // 0x0(0x1C)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FTrackSplineConfig                    SplineConfig1;                                     // 0x1C(0x3)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FTrackSplineConfig                    SplineConfig2;                                     // 0x1F(0x3)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_26CA[0x2];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x38 (0x38 - 0x0)
// ScriptStruct FortniteGame.TrackConfiguration
struct FTrackConfiguration
{
public:
	TArray<bool>                                 NeighborsByDirection;                              // 0x0(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<struct FTrackSwitchStateConfig>       SwitchStates;                                      // 0x10(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FRotator                              SwitchRotation;                                    // 0x20(0xC)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FVector                               SwitchOffset;                                      // 0x2C(0xC)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.TrackMovement
struct FTrackMovement
{
public:
	class USplineComponent*                      CurrentSpline;                                     // 0x0(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DistanceAlongSpline;                               // 0x8(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bReverseDirectionAlongSpline;                      // 0xC(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_26CB[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x8 (0x18 - 0x10)
// ScriptStruct FortniteGame.RepTrackMovement
struct FRepTrackMovement : public FTrackMovement
{
public:
	float                                        Timestamp;                                         // 0x10(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_26CC[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x28 (0x28 - 0x0)
// ScriptStruct FortniteGame.TransactionalAnalyticEvent
struct FTransactionalAnalyticEvent
{
public:
	uint8                                        Pad_26CD[0x28];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x128 (0x130 - 0x8)
// ScriptStruct FortniteGame.FortBaseWeaponStats
struct FFortBaseWeaponStats : public FTableRowBase
{
public:
	int32                                        BaseLevel;                                         // 0x8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  NamedWeightRow;                                    // 0xC(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DmgPB;                                             // 0x14(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DmgMid;                                            // 0x18(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DmgLong;                                           // 0x1C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DmgMaxRange;                                       // 0x20(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        EnvDmgPB;                                          // 0x24(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        EnvDmgMid;                                         // 0x28(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        EnvDmgLong;                                        // 0x2C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        EnvDmgMaxRange;                                    // 0x30(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ImpactDmgPB;                                       // 0x34(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ImpactDmgMid;                                      // 0x38(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ImpactDmgLong;                                     // 0x3C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ImpactDmgMaxRange;                                 // 0x40(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bForceControl;                                     // 0x44(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_26CE[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        RngPB;                                             // 0x48(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        RngMid;                                            // 0x4C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        RngLong;                                           // 0x50(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        RngMax;                                            // 0x54(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCurveTable*                           DmgScaleTable;                                     // 0x58(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  DmgScaleTableRow;                                  // 0x60(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DmgScale;                                          // 0x68(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_26CF[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UCurveTable*                           EnvDmgScaleTable;                                  // 0x70(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  EnvDmgScaleTableRow;                               // 0x78(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        EnvDmgScale;                                       // 0x80(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_26D0[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UCurveTable*                           ImpactDmgScaleTable;                               // 0x88(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  ImpactDmgScaleTableRow;                            // 0x90(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ImpactDmgScale;                                    // 0x98(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  SurfaceRatioRowName;                               // 0x9C(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DamageZone_Light;                                  // 0xA4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DamageZone_Normal;                                 // 0xA8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DamageZone_Critical;                               // 0xAC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DamageZone_Vulnerability;                          // 0xB0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        KnockbackMagnitude;                                // 0xB4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MidRangeKnockbackMagnitude;                        // 0xB8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        LongRangeKnockbackMagnitude;                       // 0xBC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        KnockbackZAngle;                                   // 0xC0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        StunTime;                                          // 0xC4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        StunScale;                                         // 0xC8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_26D1[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UDataTable*                            Durability;                                        // 0xD0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  DurabilityRowName;                                 // 0xD8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DurabilityScale;                                   // 0xE0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DurabilityPerUse;                                  // 0xE4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DiceCritChance;                                    // 0xE8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DiceCritDamageMultiplier;                          // 0xEC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ReloadTime;                                        // 0xF0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ReloadScale;                                       // 0xF4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EFortWeaponReloadType             ReloadType;                                        // 0xF8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bAllowReloadInterrupt;                             // 0xF9(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bReloadInterruptIsImmediate;                       // 0xFA(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_26D2[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        ClipSize;                                          // 0xFC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ClipScale;                                         // 0x100(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        InitialClips;                                      // 0x104(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        CartridgePerFire;                                  // 0x108(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        AmmoCostPerFire;                                   // 0x10C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        MaxAmmoCostPerFire;                                // 0x110(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MinChargeTime;                                     // 0x114(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MaxChargeTime;                                     // 0x118(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ChargeDownTime;                                    // 0x11C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MinChargeDamageMultiplier;                         // 0x120(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MaxChargeDamageMultiplier;                         // 0x124(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        EquipAnimRate;                                     // 0x128(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        QuickBarSlotCooldownDuration;                      // 0x12C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
};

// 0x18 (0x148 - 0x130)
// ScriptStruct FortniteGame.FortTrapStats
struct FFortTrapStats : public FFortBaseWeaponStats
{
public:
	float                                        ArmTime;                                           // 0x130(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FireDelay;                                         // 0x134(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DamageDelay;                                       // 0x138(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        PlacementScore;                                    // 0x13C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        ActivationScore;                                   // 0x140(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_26D3[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x20 (0x20 - 0x0)
// ScriptStruct FortniteGame.RemoteViewRotSnapshotManager
struct FRemoteViewRotSnapshotManager
{
public:
	int32                                        RemoteViewRotSnapshotManagerBufferSize;            // 0x0(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RemoteViewRotSnapshotManagerTimeDelay;             // 0x4(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_26D4[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.RemoteViewRotSnapshot
struct FRemoteViewRotSnapshot
{
public:
	uint8                                        Pad_26D5[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x20 (0x28 - 0x8)
// ScriptStruct FortniteGame.FortCreativeItemListData
struct FFortCreativeItemListData : public FTableRowBase
{
public:
	class FName                                  CategoryName;                                      // 0x8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FPrimaryAssetId                       ItemPrimaryAssetId;                                // 0x10(0x10)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Count;                                             // 0x20(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIncluded;                                         // 0x24(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_26D6[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.AthenaPickResult
struct FAthenaPickResult
{
public:
	enum class EAthenaPickerType                 PickType;                                          // 0x0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_26D7[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class ABuildingActor*                        FoundBuildingActor;                                // 0x8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AFortPlayerPawnAthena*                 FoundPlayer;                                       // 0x10(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.DataTableRowHandleQuantityPair
struct FDataTableRowHandleQuantityPair
{
public:
	struct FDataTableRowHandle                   DataTableRowHandle;                                // 0x0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	int32                                        Quantity;                                          // 0x10(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_26D8[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x348 (0x348 - 0x0)
// ScriptStruct FortniteGame.KeybindIcon
struct FKeybindIcon
{
public:
	struct FKey                                  Key;                                               // 0x0(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFortMultiSizeBrush                   Brush;                                             // 0x18(0x330)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.FortEffectDistanceQuality
struct FFortEffectDistanceQuality
{
public:
	float                                        MinDistanceCinematic;                              // 0x0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinDistanceEpic;                                   // 0x4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinDistanceHigh;                                   // 0x8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinDistanceMedium;                                 // 0xC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinDistanceLow;                                    // 0x10(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bAllowCinematic : 1;                               // Mask : 0x1 0x14(0x1)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bAllowEpic : 1;                                    // Mask : 0x2 0x14(0x1)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bAllowHigh : 1;                                    // Mask : 0x4 0x14(0x1)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bAllowMedium : 1;                                  // Mask : 0x8 0x14(0x1)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bAllowLow : 1;                                     // Mask : 0x10 0x14(0x1)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_26D9[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.FortParticleSystemParamBucket
struct FFortParticleSystemParamBucket
{
public:
	TArray<struct FParticleSysParam>             Parameters;                                        // 0x0(0x10)(Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.FortAlterationSlotStatus
struct FFortAlterationSlotStatus
{
public:
	class UFortAlterationItemDefinition*         Alteration;                                        // 0x0(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MinRequiredLevel;                                  // 0x8(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortRarity                       MinHostItemRarity;                                 // 0xC(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_26DA[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x20 (0x20 - 0x0)
// ScriptStruct FortniteGame.FortClientEvent
struct FFortClientEvent
{
public:
	class FName                                  CategoryName;                                      // 0x0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EventName;                                         // 0x8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                               EventSource;                                       // 0x10(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                               EventFocus;                                        // 0x18(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.FortEventName
struct FFortEventName
{
public:
	class FName                                  CategoryName;                                      // 0x0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EventName;                                         // 0x8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x0 (0x10 - 0x10)
// ScriptStruct FortniteGame.FortClientEventName
struct FFortClientEventName : public FFortEventName
{
public:
};

// 0x0 (0x10 - 0x10)
// ScriptStruct FortniteGame.FortMissionEventName
struct FFortMissionEventName : public FFortEventName
{
public:
};

// 0x38 (0x38 - 0x0)
// ScriptStruct FortniteGame.FortCatalogMetaPreload
struct FFortCatalogMetaPreload
{
public:
	TArray<TSoftObjectPtr<class UFortAccountItemDefinition>> ChaseItems;                                        // 0x0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UFortCardPackItemDefinition> PackDefinition;                                    // 0x10(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.FortCatalogMeta
struct FFortCatalogMeta
{
public:
	TArray<class UFortAccountItemDefinition*>    ChaseItems;                                        // 0x0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	class UFortCardPackItemDefinition*           PackDefinition;                                    // 0x10(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x28 (0x28 - 0x0)
// ScriptStruct FortniteGame.FortSpawnContext
struct FFortSpawnContext
{
public:
	enum class EFortTeam                         Team;                                              // 0x0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_26DB[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGameplayTagContainer                 Tags;                                              // 0x8(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, SaveGame, NativeAccessSpecifierPublic)
};

// 0x38 (0x38 - 0x0)
// ScriptStruct FortniteGame.FortQuestPackInfo
struct FFortQuestPackInfo
{
public:
	class FString                                Name;                                              // 0x0(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                DefaultQuestPack;                                  // 0x10(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaxActiveDailyQuests;                              // 0x20(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaxRerollsPerDay;                                  // 0x24(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        DaysToKeepClaimedQuests;                           // 0x28(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        DaysToKeepCompletedQuests;                         // 0x2C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaxUnclaimedQuests;                                // 0x30(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsStreamingQuestPack;                              // 0x34(0x1)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_26DC[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x50 (0x58 - 0x8)
// ScriptStruct FortniteGame.FortNamedWeightRow
struct FFortNamedWeightRow : public FTableRowBase
{
public:
	TMap<class FString, float>                   NamedWeightMap;                                    // 0x8(0x50)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPrivate)
};

// 0x50 (0x58 - 0x8)
// ScriptStruct FortniteGame.FortLoginReward
struct FFortLoginReward : public FTableRowBase
{
public:
	TSoftObjectPtr<class UFortAccountItemDefinition> ItemDefinition;                                    // 0x8(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        ItemCount;                                         // 0x30(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_26DD[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  Description;                                       // 0x38(0x18)(Edit, NativeAccessSpecifierPublic)
	bool                                         bIsMajorReward;                                    // 0x50(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_26DE[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.FortDayPhaseCallbackHandle
struct FFortDayPhaseCallbackHandle
{
public:
	uint8                                        Pad_26DF[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x368 (0x368 - 0x0)
// ScriptStruct FortniteGame.ItemCategory
struct FItemCategory
{
public:
	struct FGameplayTagContainer                 TagContainer;                                      // 0x0(0x20)(Edit, NativeAccessSpecifierPublic)
	class FText                                  CategoryName;                                      // 0x20(0x18)(Edit, NativeAccessSpecifierPublic)
	struct FFortMultiSizeBrush                   CategoryBrush;                                     // 0x38(0x330)(Edit, NativeAccessSpecifierPublic)
};

// 0x60 (0x60 - 0x0)
// ScriptStruct FortniteGame.FortMultiSizeMargin
struct FFortMultiSizeMargin
{
public:
	struct FMargin                               Margin_XXS;                                        // 0x0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FMargin                               Margin_XS;                                         // 0x10(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FMargin                               Margin_S;                                          // 0x20(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FMargin                               Margin_M;                                          // 0x30(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FMargin                               Margin_L;                                          // 0x40(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FMargin                               Margin_XL;                                         // 0x50(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
};

// 0x1E0 (0x1E0 - 0x0)
// ScriptStruct FortniteGame.FortMultiSizeFont
struct FFortMultiSizeFont
{
public:
	struct FSlateFontInfo                        Font_XXS;                                          // 0x0(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSlateFontInfo                        Font_XS;                                           // 0x50(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSlateFontInfo                        Font_S;                                            // 0xA0(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSlateFontInfo                        Font_M;                                            // 0xF0(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSlateFontInfo                        Font_L;                                            // 0x140(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSlateFontInfo                        Font_XL;                                           // 0x190(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.SpecialActorStatData
struct FSpecialActorStatData
{
public:
	struct FGameplayTag                          CategoryTag;                                       // 0x0(0x8)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FSpecialActorSingleStatData>   Stats;                                             // 0x8(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.PurchasedBattlePassInfo
struct FPurchasedBattlePassInfo
{
public:
	int32                                        Count;                                             // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_26E0[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                ID;                                                // 0x8(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.FortUIFeedback
struct FFortUIFeedback
{
public:
	class USoundBase*                            Audio;                                             // 0x0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bLooping;                                          // 0x8(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_26E1[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        FadeIn;                                            // 0xC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FadeOut;                                           // 0x10(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_26E2[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x0 (0x18 - 0x18)
// ScriptStruct FortniteGame.FortUIFeedbackBlueprintOnly
struct FFortUIFeedbackBlueprintOnly : public FFortUIFeedback
{
public:
};

// 0x58 (0x58 - 0x0)
// ScriptStruct FortniteGame.FortUserCloudRequestPayload
struct FFortUserCloudRequestPayload
{
public:
	struct FFortUserCloudRequestHandle           RequestHandle;                                     // 0x0(0x8)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FUniqueNetIdRepl                      UserNetID;                                         // 0x8(0x28)(HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                Filename;                                          // 0x30(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortUserCloudRequestType         RequestType;                                       // 0x40(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_26E3[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<uint8>                                DataBuffer;                                        // 0x48(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x70 (0x70 - 0x0)
// ScriptStruct FortniteGame.FortUserCloudRequest
struct FFortUserCloudRequest
{
public:
	struct FFortUserCloudRequestPayload          RequestPayload;                                    // 0x0(0x58)(NativeAccessSpecifierPublic)
	uint8                                        bNeedsFileEnumeration : 1;                         // Mask : 0x1 0x58(0x1)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bStartedProcessing : 1;                            // Mask : 0x2 0x58(0x1)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_26E4[0x17];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x28 (0x28 - 0x0)
// ScriptStruct FortniteGame.FortUserCloudRequestQueue
struct FFortUserCloudRequestQueue
{
public:
	uint8                                        bFreezeIncomingRequests : 1;                       // Mask : 0x1 0x0(0x1)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_26E5[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FFortUserCloudRequestHandle           FirstFrozenHandle;                                 // 0x8(0x8)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTimerHandle                          ProcessingTimerHandle;                             // 0x10(0x8)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FFortUserCloudRequest>         RequestQueue;                                      // 0x18(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x28 (0x28 - 0x0)
// ScriptStruct FortniteGame.FortVehicleAudioOneshotGate
struct FFortVehicleAudioOneshotGate
{
public:
	float                                        GateValue;                                         // 0x0(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EVehicleAudioTriggerDir           Direction;                                         // 0x4(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         FadeWhenOutsideGate;                               // 0x5(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_26E6[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class USoundBase*                            Sound;                                             // 0x8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinTimeSinceTrigger;                               // 0x10(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        InterruptFadeTime;                                 // 0x14(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_26E7[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UAudioComponent*                       AudioComp;                                         // 0x20(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x20 (0x20 - 0x0)
// ScriptStruct FortniteGame.FortVehicleAudioParam
struct FFortVehicleAudioParam
{
public:
	float                                        Value;                                             // 0x0(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EVehicleAudioInterpolationType    InterpType;                                        // 0x4(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_26E8[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UCurveFloat*                           Curve;                                             // 0x8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AttackSpeed;                                       // 0x10(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ReleaseSpeed;                                      // 0x14(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_26E9[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x28 (0x28 - 0x0)
// ScriptStruct FortniteGame.FortVehicleAudioFloatParam
struct FFortVehicleAudioFloatParam
{
public:
	class FName                                  Name;                                              // 0x0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFortVehicleAudioParam                Data;                                              // 0x8(0x20)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
};

// 0x30 (0x30 - 0x0)
// ScriptStruct FortniteGame.FortVehicleIncrementTrick
struct FFortVehicleIncrementTrick
{
public:
	class FText                                  Name;                                              // 0x0(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	int32                                        HalfSpinsNeeded;                                   // 0x18(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        BaseScore;                                         // 0x1C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Repeats;                                           // 0x20(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        RepeatsHalfSpinsPerTrick;                          // 0x24(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MultiplierIncrement;                               // 0x28(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_26EA[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x18 (0x20 - 0x8)
// ScriptStruct FortniteGame.VehicleTrickSequenceBasics
struct FVehicleTrickSequenceBasics : public FTableRowBase
{
public:
	float                                        TrickStartTime;                                    // 0x8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TrickStartDistance;                                // 0xC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TrickStartHeight;                                  // 0x10(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TrickPointsPerAirSecond;                           // 0x14(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TrickPointsPerAirDistance;                         // 0x18(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TrickPointsPerAirHeight;                           // 0x1C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x1C (0x28 - 0xC)
// ScriptStruct FortniteGame.VisibilityInfo
struct FVisibilityInfo : public FFastArraySerializerItem
{
public:
	uint8                                        Pad_26EB[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AActor*                                Actor;                                             // 0x10(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFortVisibilityComponent*              VisibilityComponent;                               // 0x18(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint16                                       TeamVisibilityFlag;                                // 0x20(0x2)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_26EC[0x6];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x10 (0xC0 - 0xB0)
// ScriptStruct FortniteGame.VisibiltyInfoArray
struct FVisibiltyInfoArray : public FFastArraySerializer
{
public:
	TArray<struct FVisibilityInfo>               VisibilityInfoArray;                               // 0xB0(0x10)(ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
};

// 0x50 (0x50 - 0x0)
// ScriptStruct FortniteGame.VolumeActorStats
struct FVolumeActorStats
{
public:
	TMap<enum class EFortBuildingType, int32>    BuildingTypeCounts;                                // 0x0(0x50)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0xC8 (0xD0 - 0x8)
// ScriptStruct FortniteGame.FortCreativeItemData
struct FFortCreativeItemData : public FTableRowBase
{
public:
	struct FSoftObjectPath                       ObjectPath;                                        // 0x8(0x18)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        PlacementCost;                                     // 0x20(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_26ED[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  DisplayName;                                       // 0x28(0x18)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	class FText                                  Description;                                       // 0x40(0x18)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                 TagContainer;                                      // 0x58(0x20)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UTexture2D>             LargePreviewImage;                                 // 0x78(0x28)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UTexture2D>             SmallPreviewImage;                                 // 0xA0(0x28)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Count;                                             // 0xC8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ECreativeItemCategory             Category;                                          // 0xCC(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_26EE[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x28 (0x30 - 0x8)
// ScriptStruct FortniteGame.FortVolumeManagerBlackListObjects
struct FFortVolumeManagerBlackListObjects : public FTableRowBase
{
public:
	TSoftObjectPtr<class UObject>                ObjectPath;                                        // 0x8(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x28 (0x30 - 0x8)
// ScriptStruct FortniteGame.FortVolumeManagerBlackListClasses
struct FFortVolumeManagerBlackListClasses : public FTableRowBase
{
public:
	TSoftClassPtr<class UObject>                 ClassPath;                                         // 0x8(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0xC (0xC - 0x0)
// ScriptStruct FortniteGame.PendingSpawnLevelSaveRecord
struct FPendingSpawnLevelSaveRecord
{
public:
	uint8                                        Pad_26EF[0xC];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x1 (0x1 - 0x0)
// ScriptStruct FortniteGame.Volume_Internal
struct FVolume_Internal
{
public:
	uint8                                        Pad_26F0[0x1];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x14 (0x20 - 0xC)
// ScriptStruct FortniteGame.VolumePlayerStateInfo
struct FVolumePlayerStateInfo : public FFastArraySerializerItem
{
public:
	uint8                                        Pad_26F1[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class APlayerState*                          PlayerState;                                       // 0x10(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AFortVolume*                           Volume;                                            // 0x18(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x18 (0xC8 - 0xB0)
// ScriptStruct FortniteGame.FortVolumeActiveUsers
struct FFortVolumeActiveUsers : public FFastArraySerializer
{
public:
	TArray<struct FVolumePlayerStateInfo>        Items;                                             // 0xB0(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	class AFortVolumeManager*                    Manager;                                           // 0xC0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.PlayerWaypointContext
struct FPlayerWaypointContext
{
public:
	class APlayerState*                          PlayerState;                                       // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ABuildingTrapFloor_Waypoint*           Waypoint;                                          // 0x8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x20 (0x20 - 0x0)
// ScriptStruct FortniteGame.WeaponHudData
struct FWeaponHudData
{
public:
	class FName                                  KeyActionName;                                     // 0x0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                  ActionDescription;                                 // 0x8(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
};

// 0x28 (0x30 - 0x8)
// ScriptStruct FortniteGame.FortWeaponDurabilityByRarityStats
struct FFortWeaponDurabilityByRarityStats : public FTableRowBase
{
public:
	int32                                        Handmade;                                          // 0x8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        Ordinary;                                          // 0xC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        Sturdy;                                            // 0x10(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        Quality;                                           // 0x14(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        Fine;                                              // 0x18(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        Elegant;                                           // 0x1C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        Masterwork;                                        // 0x20(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        Epic;                                              // 0x24(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        Badass;                                            // 0x28(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        Legendary;                                         // 0x2C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
};

// 0x28 (0x158 - 0x130)
// ScriptStruct FortniteGame.FortMeleeWeaponStats
struct FFortMeleeWeaponStats : public FFortBaseWeaponStats
{
public:
	float                                        RangeVSEnemies;                                    // 0x130(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ConeYawAngle;                                      // 0x134(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ConePitchAngle;                                    // 0x138(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SwingPlaySpeed;                                    // 0x13C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SwingTime;                                         // 0x140(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        BuildingConeAngle;                                 // 0x144(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        BuildingConeAnglePitch;                            // 0x148(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        RangeVSBuildings2D;                                // 0x14C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        RangeVSBuildingsZ;                                 // 0x150(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        RangeVSWeakSpots;                                  // 0x154(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
};

// 0x150 (0x280 - 0x130)
// ScriptStruct FortniteGame.FortRangedWeaponStats
struct FFortRangedWeaponStats : public FFortBaseWeaponStats
{
public:
	float                                        Spread;                                            // 0x130(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SpreadDownsights;                                  // 0x134(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        StandingStillSpreadMultiplier;                     // 0x138(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        AthenaCrouchingSpreadMultiplier;                   // 0x13C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        AthenaJumpingFallingSpreadMultiplier;              // 0x140(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        AthenaSprintingSpreadMultiplier;                   // 0x144(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MinSpeedForSpreadMultiplier;                       // 0x148(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MaxSpeedForSpreadMultiplier;                       // 0x14C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SpreadDownsightsAdditionalCooldownTime;            // 0x150(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        HeatX1;                                            // 0x154(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        HeatY1;                                            // 0x158(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        HeatX2;                                            // 0x15C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        HeatY2;                                            // 0x160(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        HeatX3;                                            // 0x164(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        HeatY3;                                            // 0x168(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        HeatXScale;                                        // 0x16C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        HeatYScale;                                        // 0x170(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        CoolX1;                                            // 0x174(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        CoolY1;                                            // 0x178(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        CoolX2;                                            // 0x17C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        CoolY2;                                            // 0x180(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        CoolX3;                                            // 0x184(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        CoolY3;                                            // 0x188(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        CoolXScale;                                        // 0x18C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        CoolYScale;                                        // 0x190(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        PerfectAimCooldown;                                // 0x194(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        BulletsPerCartridge;                               // 0x198(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        FiringRate;                                        // 0x19C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ROFScale;                                          // 0x1A0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        BurstFiringRate;                                   // 0x1A4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        FiringRateDownsightsMultiplier;                    // 0x1A8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        RecoilVert;                                        // 0x1AC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        RecoilVertScale;                                   // 0x1B0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        RecoilVertScaleGamepad;                            // 0x1B4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        VertRecoilDownChance;                              // 0x1B8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        RecoilHoriz;                                       // 0x1BC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        RecoilHorizScale;                                  // 0x1C0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        RecoilHorizScaleGamepad;                           // 0x1C4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        RecoilInterpSpeed;                                 // 0x1C8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        RecoilRecoveryInterpSpeed;                         // 0x1CC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        RecoilRecoveryDelay;                               // 0x1D0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        RecoilRecoveryFraction;                            // 0x1D4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        RecoilDownsightsMultiplier;                        // 0x1D8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        AthenaRecoilMagnitudeMin;                          // 0x1DC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        AthenaRecoilMagnitudeMax;                          // 0x1E0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        AthenaRecoilMagnitudeScale;                        // 0x1E4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        AthenaRecoilAngleMin;                              // 0x1E8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        AthenaRecoilAngleMax;                              // 0x1EC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        AthenaRecoilRollMagnitudeMin;                      // 0x1F0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        AthenaRecoilRollMagnitudeMax;                      // 0x1F4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        AthenaRecoilInterpSpeed;                           // 0x1F8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        AthenaRecoilRecoveryInterpSpeed;                   // 0x1FC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        AthenaRecoilDownsightsMultiplier;                  // 0x200(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        AthenaRecoilHipFireMultiplier;                     // 0x204(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        AthenaAimAssistRange;                              // 0x208(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ADSTransitionInTime;                               // 0x20C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ADSTransitionOutTime;                              // 0x210(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        MaxSpareAmmo;                                      // 0x214(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        BulletsPerTracer;                                  // 0x218(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        AIDelayBeforeFiringMin;                            // 0x21C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        AIDelayBeforeFiringMax;                            // 0x220(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        AIFireDurationMin;                                 // 0x224(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        AIFireDurationMax;                                 // 0x228(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        AIMinSpreadDuration;                               // 0x22C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        AIMaxSpreadDuration;                               // 0x230(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        AIDurationSpreadMultiplier;                        // 0x234(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        AIAdditionalSpreadForTargetMovingLaterally;        // 0x238(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        AIAthenaHearFiringNoiseRange;                      // 0x23C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        EQSDensity;                                        // 0x240(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MinApproachRange;                                  // 0x244(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MinActualRange;                                    // 0x248(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MinPreferredRange;                                 // 0x24C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MinPreferredRangeEQS;                              // 0x250(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MaxPreferredRangeEQS;                              // 0x254(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MaxPreferredRange;                                 // 0x258(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MaxActualRange;                                    // 0x25C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MaxApproachRange;                                  // 0x260(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SweepRadius;                                       // 0x264(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        AutoReloadDelayOverride;                           // 0x268(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        OverheatingMaxValue;                               // 0x26C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        OverheatHeatingValue;                              // 0x270(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        OverheatingCoolingValue;                           // 0x274(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        HeatingCooldownDelay;                              // 0x278(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        OverheatedCooldownDelay;                           // 0x27C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
};

// 0x90 (0x90 - 0x0)
// ScriptStruct FortniteGame.FortWindImpulseCylinderDelta
struct FFortWindImpulseCylinderDelta
{
public:
	struct FVector                               DeltaCenter;                                       // 0x0(0xC)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bInitialized;                                      // 0xC(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bRippleOutward;                                    // 0xD(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_26F2[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        SectionWidth;                                      // 0x10(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        InnerSectionRadius;                                // 0x14(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        OuterSectionRadius;                                // 0x18(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        MaximumRadius;                                     // 0x1C(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        DesiredOverallBlendTime;                           // 0x20(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        SectionBlendTime;                                  // 0x24(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        SectionCurrentBlendTime;                           // 0x28(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        PreviousMagnitude;                                 // 0x2C(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        SectionCurrentMagnitude;                           // 0x30(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        DesiredMagnitude;                                  // 0x34(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FBox                                  OuterWorldBounds;                                  // 0x38(0x1C)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, NativeAccessSpecifierPrivate)
	struct FBox                                  InnerWorldBounds;                                  // 0x54(0x1C)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, NativeAccessSpecifierPrivate)
	struct FBox                                  WindImpulseBounds;                                 // 0x70(0x1C)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, NativeAccessSpecifierPrivate)
	struct FFortWindImpulseHandle                WindImpulseHandleToModify;                         // 0x8C(0x4)(Transient, NoDestructor, NativeAccessSpecifierPrivate)
};

// 0x4C (0x4C - 0x0)
// ScriptStruct FortniteGame.FortWindImpulseRadius
struct FFortWindImpulseRadius
{
public:
	struct FVector                               Location;                                          // 0x0(0xC)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        Radius;                                            // 0xC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        CurrentRadius;                                     // 0x10(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        PreviousRadius;                                    // 0x14(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        Magnitude;                                         // 0x18(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        CurrentMagnitude;                                  // 0x1C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        PreviousMagnitude;                                 // 0x20(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        BlendTime;                                         // 0x24(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        CurrentBlendTime;                                  // 0x28(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FBox                                  WorldBounds;                                       // 0x2C(0x1C)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FFortWindImpulseHandle                Handle;                                            // 0x48(0x4)(Transient, NoDestructor, NativeAccessSpecifierPrivate)
};

// 0x3C (0x3C - 0x0)
// ScriptStruct FortniteGame.FortWindImpulseCylinderRadial
struct FFortWindImpulseCylinderRadial
{
public:
	struct FVector                               Location;                                          // 0x0(0xC)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        InnerRadius;                                       // 0xC(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        OuterRadius;                                       // 0x10(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        Magnitude;                                         // 0x14(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FBox                                  WorldBounds;                                       // 0x18(0x1C)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	bool                                         bIsChanging;                                       // 0x34(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bIsChangePending;                                  // 0x35(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_26F3[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FFortWindImpulseHandle                Handle;                                            // 0x38(0x4)(Transient, NoDestructor, NativeAccessSpecifierPrivate)
};

// 0xC (0x48 - 0x3C)
// ScriptStruct FortniteGame.FortWindImpulseCylinder
struct FFortWindImpulseCylinder : public FFortWindImpulseCylinderRadial
{
public:
	struct FVector                               WindDirection;                                     // 0x3C(0xC)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};

// 0x14 (0x14 - 0x0)
// ScriptStruct FortniteGame.WindScalarMaterialInterpolationData
struct FWindScalarMaterialInterpolationData
{
public:
	class FName                                  MaterialParameterName;                             // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaterialParameterIndex;                            // 0x8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LerpFromValue;                                     // 0xC(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LerpToValue;                                       // 0x10(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0xC (0xC - 0x0)
// ScriptStruct FortniteGame.FortMaterialParameterID
struct FFortMaterialParameterID
{
public:
	int32                                        VariableIndex;                                     // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  VariableName;                                      // 0x4(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x1C (0x1C - 0x0)
// ScriptStruct FortniteGame.FortWindMaterialParameterPairID
struct FFortWindMaterialParameterPairID
{
public:
	int32                                        PairIndex;                                         // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFortMaterialParameterID              SpeedParameter;                                    // 0x4(0xC)(NoDestructor, NativeAccessSpecifierPublic)
	struct FFortMaterialParameterID              OffsetParameter;                                   // 0x10(0xC)(NoDestructor, NativeAccessSpecifierPublic)
};

// 0x2C (0x2C - 0x0)
// ScriptStruct FortniteGame.WindVectorMaterialInterpolationData
struct FWindVectorMaterialInterpolationData
{
public:
	class FName                                  MaterialParameterName;                             // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaterialParameterIndex;                            // 0x8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          LerpFromValue;                                     // 0xC(0x10)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          LerpToValue;                                       // 0x1C(0x10)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x48 (0x48 - 0x0)
// ScriptStruct FortniteGame.FortWindMaterialData
struct FFortWindMaterialData
{
public:
	class UMaterialInstanceDynamic*              Mid;                                               // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInstanceDynamic*              IntenseStateMID;                                   // 0x8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaterialParameterPairIndices;                      // 0x10(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        WindVectorParameterIndex;                          // 0x14(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FWindScalarMaterialInterpolationData> ScalarInterpolationData;                           // 0x18(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FWindVectorMaterialInterpolationData> VectorInterpolationData;                           // 0x28(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FFortWindMaterialParameterPairID> ParametersToSet;                                   // 0x38(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x24 (0x24 - 0x0)
// ScriptStruct FortniteGame.FortWindResponderMaterialVariablePairData
struct FFortWindResponderMaterialVariablePairData
{
public:
	float                                        PreviousSpeed;                                     // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PreviousOffset;                                    // 0x4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaterialsPreviousTime;                             // 0x8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DeltaTimeModifiedByMaterialSpeed;                  // 0xC(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaterialVariableIndex;                             // 0x10(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  SpeedVariableName;                                 // 0x14(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  TimeOffsetVariableName;                            // 0x1C(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x90 (0x90 - 0x0)
// ScriptStruct FortniteGame.FortWindResponder
struct FFortWindResponder
{
public:
	class ABuildingSMActor*                      WindUpdatingBuildingSMActor;                       // 0x0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveLinearColor*                     WindSpeedCurve;                                    // 0x8(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveLinearColor*                     WindPannerSpeedCurve;                              // 0x10(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundBase*                            WindAudio;                                         // 0x18(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UMaterialInterface*>            MildWindMaterialInstances;                         // 0x20(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	TArray<class UMaterialInterface*>            IntenseWindMaterialInstances;                      // 0x30(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	TArray<struct FFortWindMaterialData>         MaterialsData;                                     // 0x40(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	int32                                        MaterialParameterPairIndices;                      // 0x50(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_26F4[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FFortWindResponderMaterialVariablePairData> PairedVariablesData;                               // 0x58(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	uint8                                        Pad_26F5[0x1C];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        WindSpeed;                                         // 0x84(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_26F6[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bHasSetupAnimatingMaterials;                       // 0x8C(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_26F7[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x30 (0x30 - 0x0)
// ScriptStruct FortniteGame.FortPlacementLocationTagHandler
struct FFortPlacementLocationTagHandler
{
public:
	class ABuildingActor*                        SpawnLocationBuildingActor;                        // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                SpawnedActor;                                      // 0x8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                 TagsToRemove;                                      // 0x10(0x20)(NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.FortDeferredNewActorData
struct FFortDeferredNewActorData
{
public:
	class ABuildingActor*                        BuildingActor;                                     // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        SavedLevelIndex;                                   // 0x8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_26F8[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.WorldTileSubArray
struct FWorldTileSubArray
{
public:
	TArray<class AWorldTileFoundation*>          X;                                                 // 0x0(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0xC (0xC - 0x0)
// ScriptStruct FortniteGame.FortLevelStreamingInfo
struct FFortLevelStreamingInfo
{
public:
	class FName                                  PackageName;                                       // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortLevelStreamingState          LevelState;                                        // 0x8(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bFailedToLoad;                                     // 0x9(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_26F9[0x2];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x38 (0x38 - 0x0)
// ScriptStruct FortniteGame.FortPlayerEarnedItemCaches
struct FFortPlayerEarnedItemCaches
{
public:
	struct FUniqueNetIdRepl                      PlayerID;                                          // 0x0(0x28)(HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UFortItemCacheItemDefinition*>  EarnedItemCaches;                                  // 0x28(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x88 (0x88 - 0x0)
// ScriptStruct FortniteGame.PlayerStatsRecord
struct FPlayerStatsRecord
{
public:
	int32                                        Stats;                                             // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_26FA[0x84];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0xC (0xC - 0x0)
// ScriptStruct FortniteGame.StatRecord
struct FStatRecord
{
public:
	class FName                                  StatName;                                          // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        StatValue;                                         // 0x8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.StatManagerPeriodRecord
struct FStatManagerPeriodRecord
{
public:
	TArray<struct FStatRecord>                   StatRecords;                                       // 0x0(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.PinnedSchematicsRecord
struct FPinnedSchematicsRecord
{
public:
	TArray<class FString>                        PinnedSchematicInstances;                          // 0x0(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x200 (0x200 - 0x0)
// ScriptStruct FortniteGame.FortPlayerRecord
struct FFortPlayerRecord
{
public:
	class FString                                DisplayName;                                       // 0x0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                UniqueId;                                          // 0x10(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<uint8>                                BackpackData;                                      // 0x20(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                         bPlayerIsNew;                                      // 0x30(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_26FB[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FPlayerStatsRecord                    PlayerStatsData;                                   // 0x34(0x88)(NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_26FC[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FStatManagerPeriodRecord              CampaignPeriodRecord;                              // 0xC0(0x10)(NativeAccessSpecifierPublic)
	struct FPinnedSchematicsRecord               PinnedSchematicsRecord;                            // 0xD0(0x10)(NativeAccessSpecifierPublic)
	struct FQuickBar                             PrimaryQuickBarRecord;                             // 0xE0(0x90)(NativeAccessSpecifierPublic)
	struct FQuickBar                             SecondaryQuickBarRecord;                           // 0x170(0x90)(NativeAccessSpecifierPublic)
};

// 0x90 (0x90 - 0x0)
// ScriptStruct FortniteGame.MapLocationRenderData
struct FMapLocationRenderData
{
public:
	uint8                                        Pad_26FD[0x90];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x88 (0x88 - 0x0)
// ScriptStruct FortniteGame.MapLocation
struct FMapLocation
{
public:
	class FText                                  Text;                                              // 0x0(0x18)(Edit, NativeAccessSpecifierPublic)
	struct FVector2D                             Position;                                          // 0x18(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSlateFontInfo                        Font;                                              // 0x20(0x50)(Edit, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          Color;                                             // 0x70(0x10)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          LocationTag;                                       // 0x80(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x190 (0x190 - 0x0)
// ScriptStruct FortniteGame.FortZoneStats
struct FFortZoneStats
{
public:
	uint8                                        Pad_26FE[0x190];                                   // Fixing Size Of Struct [ Dumper-7 ]
};

// 0xC (0xC - 0x0)
// ScriptStruct FortniteGame.ContainerStatInfo
struct FContainerStatInfo
{
public:
	uint8                                        Pad_26FF[0xC];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.EnemyNpcStatInfo
struct FEnemyNpcStatInfo
{
public:
	uint8                                        Pad_2700[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0xC (0xC - 0x0)
// ScriptStruct FortniteGame.DefenderNPCStatInfo
struct FDefenderNPCStatInfo
{
public:
	uint8                                        Pad_2701[0xC];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x40 (0x40 - 0x0)
// ScriptStruct FortniteGame.FortLevelRecord
struct FFortLevelRecord
{
public:
	int32                                        ParentLevelIndex;                                  // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGuid                                 BoundActorGuid;                                    // 0x4(0x10)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  PackageName;                                       // 0x14(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2702[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FFortActorRecord>              SavedActors;                                       // 0x20(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	int32                                        X_Loc;                                             // 0x30(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Y_Loc;                                             // 0x34(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Rotation;                                          // 0x38(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2703[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x98 (0x98 - 0x0)
// ScriptStruct FortniteGame.DeployableBaseSupportSettings
struct FDeployableBaseSupportSettings
{
public:
	bool                                         bUseDeployableBases;                               // 0x0(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2704[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftObjectPtr<class UFortDeployableBaseCloudSaveItemDefinition> DeployableBaseCloudSaveItemDef;                    // 0x8(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class ADeployableBasePlot>     DeployableBasePlot;                                // 0x30(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UFortDeployableBaseSkillTreeUnlocks> SupportedUnlocks;                                  // 0x58(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDeployableBasesReadOnly;                          // 0x80(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EDeployableBaseUseType            SupportedUseType;                                  // 0x81(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2705[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UFortTieredCollectionLayout*>   TieredCollectionLayouts;                           // 0x88(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// 0x68 (0x68 - 0x0)
// ScriptStruct FortniteGame.ZoneThemeDifficultyProperties
struct FZoneThemeDifficultyProperties
{
public:
	TArray<struct FDataTableRowHandle>           ValidDifficulties;                                 // 0x0(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FFortTimeOfDayTheme                   TimeOfDayTheme;                                    // 0x10(0x40)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FFortGlobalWindInfo                   GlobalWindInfo;                                    // 0x50(0x18)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.HUDLayoutUsageData
struct FHUDLayoutUsageData
{
public:
	int32                                        NumOfTimesOpened;                                  // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        NumOfTimesReset;                                   // 0x4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        NumOfTimesSaved;                                   // 0x8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        NumOfTimesPanning;                                 // 0xC(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0xE0 (0xE0 - 0x0)
// ScriptStruct FortniteGame.HUDLayoutDataEntry
struct FHUDLayoutDataEntry
{
public:
	struct FGameplayTag                          VisualType;                                        // 0x0(0x8)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAnchorData                           AnchroData;                                        // 0x8(0x28)(NoDestructor, NativeAccessSpecifierPublic)
	int32                                        ZOrder;                                            // 0x30(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EBacchusHUDStateType              BuildVisibility;                                   // 0x34(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EBacchusHUDStateType              CombatVisibility;                                  // 0x35(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EBacchusHUDStateType              EditVisibility;                                    // 0x36(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EBacchusHUDStateType              CreativeVisibility;                                // 0x37(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Property_0;                                        // 0x38(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Property_1;                                        // 0x3C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Property_2;                                        // 0x40(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Property_3;                                        // 0x44(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2706[0x98];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.HUDLayoutData
struct FHUDLayoutData
{
public:
	TArray<struct FHUDLayoutDataEntry>           LayoutEntries;                                     // 0x0(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x5 (0x5 - 0x0)
// ScriptStruct FortniteGame.FireModeData
struct FFireModeData
{
public:
	bool                                         bAutoFireIsEnabled;                                // 0x0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         b3DTouchEnabled;                                   // 0x1(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bTapToShootEnabled;                                // 0x2(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bAlwaysShowDedicatedButton;                        // 0x3(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	enum class EFireModeType                     FireModeType;                                      // 0x4(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};

// 0x28 (0x30 - 0x8)
// ScriptStruct FortniteGame.FortKeepAmmoStash
struct FFortKeepAmmoStash : public FTableRowBase
{
public:
	int32                                        Max1;                                              // 0x8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Cooldown1;                                         // 0xC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Max2;                                              // 0x10(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Cooldown2;                                         // 0x14(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Max3;                                              // 0x18(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Cooldown3;                                         // 0x1C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Max4;                                              // 0x20(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Cooldown4;                                         // 0x24(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        PickupTier;                                        // 0x28(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2707[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x10 (0x18 - 0x8)
// ScriptStruct FortniteGame.FortKeepItemGroup
struct FFortKeepItemGroup : public FTableRowBase
{
public:
	int32                                        Items;                                             // 0x8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaxTier;                                           // 0xC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        BaseLevel;                                         // 0x10(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2708[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x48 (0x50 - 0x8)
// ScriptStruct FortniteGame.FortKeepResourceGroup
struct FFortKeepResourceGroup : public FTableRowBase
{
public:
	class FName                                  Container;                                         // 0x8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        ItemCount;                                         // 0x10(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2709[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                ResourceName;                                      // 0x18(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UFortItemDefinition>    FullPath;                                          // 0x28(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0xB0 (0xB0 - 0x0)
// ScriptStruct FortniteGame.ActorRecord
struct FActorRecord
{
public:
	uint8                                        Pad_270A[0xB0];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.RecordBucket
struct FRecordBucket
{
public:
	TArray<int32>                                RecordIndices;                                     // 0x0(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
};

// 0x60 (0x60 - 0x0)
// ScriptStruct FortniteGame.RecordBucketMap
struct FRecordBucketMap
{
public:
	TMap<struct FIntPoint, struct FRecordBucket> PositionToRecord;                                  // 0x0(0x50)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	TArray<int32>                                DuplicateRecords;                                  // 0x50(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
};

// 0x4 (0x4 - 0x0)
// ScriptStruct FortniteGame.StructRecord
struct FStructRecord
{
public:
	uint8                                        Pad_270B[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.SaveStructFile
struct FSaveStructFile
{
public:
	TArray<struct FStructRecord>                 StructRecords;                                     // 0x0(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x38 (0x38 - 0x0)
// ScriptStruct FortniteGame.DeleteActorRecord
struct FDeleteActorRecord
{
public:
	uint64                                       RecordID;                                          // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  ActorId;                                           // 0x8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class AActor>                  ActorClass;                                        // 0x10(0x28)(UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x60 (0x60 - 0x0)
// ScriptStruct FortniteGame.NewActorRecord
struct FNewActorRecord
{
public:
	uint64                                       RecordID;                                          // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint64                                       BaseRecordID;                                      // 0x8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  ActorId;                                           // 0x10(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_270C[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTransform                            Transform;                                         // 0x20(0x30)(IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_270D[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x40 (0x40 - 0x0)
// ScriptStruct FortniteGame.ActorComponentRecord
struct FActorComponentRecord
{
public:
	class FName                                  ComponentName;                                     // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class UActorComponent>         ComponentClass;                                    // 0x8(0x28)(UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<uint8>                                ComponentData;                                     // 0x30(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x50 (0x50 - 0x0)
// ScriptStruct FortniteGame.BaseActorRecord
struct FBaseActorRecord
{
public:
	uint64                                       ID;                                                // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class AActor>                  ActorClass;                                        // 0x8(0x28)(UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FActorComponentRecord>         ActorComponents;                                   // 0x30(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<uint8>                                ActorData;                                         // 0x40(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x30 (0x30 - 0x0)
// ScriptStruct FortniteGame.FortGeneratedEncounterSequence
struct FFortGeneratedEncounterSequence
{
public:
	struct FFortEncounterTransitionSettings      TransitionSettings;                                // 0x0(0x1)(NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_270E[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        StartingGeneratedEncounterProfileIndex;            // 0x4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        NumEncountersInSequence;                           // 0x8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_270F[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGameplayTagContainer                 EncounterSequenceTags;                             // 0x10(0x20)(NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.FortGeneratedMissionOption
struct FFortGeneratedMissionOption
{
public:
	class UFortDifficultyOptionCategoryMission*  MissionOptionCategory;                             // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UFortDifficultyOptionMission> MissionOption;                                     // 0x8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RangeLerpValue;                                    // 0x10(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2710[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.FortGeneratedEncounterOption
struct FFortGeneratedEncounterOption
{
public:
	class UFortDifficultyOptionCategoryEncounter* EncounterOptionCategory;                           // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UFortDifficultyOptionEncounter> EncounterOption;                                   // 0x8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RangeLerpValue;                                    // 0x10(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bChangedSinceLastVLog;                             // 0x14(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2711[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x5 (0x5 - 0x0)
// ScriptStruct FortniteGame.FortEncounterModeSettings
struct FFortEncounterModeSettings
{
public:
	enum class EFortEncounterPacingMode          PacingMode;                                        // 0x0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortEncounterSpawnLocationManagementMode SpawnLocationManagementMode;                       // 0x1(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortEncounterSpawnLocationPlacementMode SpawnLocationMode;                                 // 0x2(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortEncounterUtilitiesMode       UtilitiesMode;                                     // 0x3(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortEncounterSpawnLimitType      SpawnLimitMode;                                    // 0x4(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x50 (0x50 - 0x0)
// ScriptStruct FortniteGame.FortGeneratedEncounterProfile
struct FFortGeneratedEncounterProfile
{
public:
	float                                        EncounterDifficultyLevel;                          // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2712[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FFortGeneratedEncounterOption> EncounterOptions;                                  // 0x8(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	struct FFortEncounterModeSettings            EncounterModeSettings;                             // 0x18(0x5)(NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_2713[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGameplayTagContainer                 EncounterTypeTags;                                 // 0x20(0x20)(NativeAccessSpecifierPublic)
	int32                                        DifficultyOptionPointsAvailableAtGeneration;       // 0x40(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MinDifficultyOptionPointsToUse;                    // 0x44(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShouldReselectOptionsPerInstance;                 // 0x48(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2714[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        GeneratedEncounterIndex;                           // 0x4C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x40 (0x40 - 0x0)
// ScriptStruct FortniteGame.FortGeneratedDifficultyOptions
struct FFortGeneratedDifficultyOptions
{
public:
	float                                        GameDifficultyAtGeneration;                        // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        DifficultyOptionPointsAvailableAtGeneration;       // 0x4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaxEncounterSpawnPointsAtGeneration;               // 0x8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MinDifficultyOptionPointsToUse;                    // 0xC(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FFortGeneratedEncounterSequence> GeneratedEncounterSequences;                       // 0x10(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FFortGeneratedMissionOption>   MissionOptions;                                    // 0x20(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<struct FFortGeneratedEncounterProfile> GeneratedEncounterProfiles;                        // 0x30(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
};

// 0x78 (0x78 - 0x0)
// ScriptStruct FortniteGame.FortMissionPlacementItemLookupData
struct FFortMissionPlacementItemLookupData
{
public:
	struct FGameplayTagContainer                 ItemIdentifyingTags;                               // 0x0(0x20)(Transient, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                 TagsAddedToPlacementActors;                        // 0x20(0x20)(Transient, NativeAccessSpecifierPublic)
	TSubclassOf<class AActor>                    ActorToPlace;                                      // 0x40(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                ActorToUseForSpawnLocation;                        // 0x48(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                SpawnedActor;                                      // 0x50(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               SpawnLocation;                                     // 0x58(0xC)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                              SpawnRotation;                                     // 0x64(0xC)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        bDontCreateSpawnRiftsNearby : 1;                   // Mask : 0x1 0x70(0x1)(Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bShouldFreeLocationsOnDeath : 1;                   // Mask : 0x2 0x70(0x1)(Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2715[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x88 (0x88 - 0x0)
// ScriptStruct FortniteGame.FortMissionEntry
struct FFortMissionEntry
{
public:
	float                                        Weight;                                            // 0x0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        WorldMinLevel;                                     // 0x4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        WorldMaxLevel;                                     // 0x8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2716[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FDataTableRowHandle                   MinDifficultyInfoRow;                              // 0x10(0x10)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	class UFortMissionGenerator*                 MissionGenerator;                                  // 0x20(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFortMissionInfo*                      MissionInfo;                                       // 0x28(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EMissionGenerationCategory        GenerationCategory;                                // 0x30(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2717[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FFortGeneratedDifficultyOptions       GeneratedDifficultyOptions;                        // 0x38(0x40)(NativeAccessSpecifierPublic)
	TArray<struct FFortMissionPlacementItemLookupData> BlueprintLookupData;                               // 0x78(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.FortObjectiveRecord
struct FFortObjectiveRecord
{
public:
	TSubclassOf<class AFortObjectiveBase>        ObjectiveClass;                                    // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<uint8>                                ObjectiveData;                                     // 0x8(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x138 (0x138 - 0x0)
// ScriptStruct FortniteGame.FortMissionRecord
struct FFortMissionRecord
{
public:
	struct FFortMissionEntry                     MissionEntry;                                      // 0x0(0x88)(NativeAccessSpecifierPublic)
	class UFortMissionGenerator*                 MissionGenerator;                                  // 0x88(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFortGeneratedDifficultyOptions       GeneratedMissionOptions;                           // 0x90(0x40)(Transient, NativeAccessSpecifierPublic)
	int32                                        DayGenerated;                                      // 0xD0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        UIIndex;                                           // 0xD4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FUniqueNetIdRepl                      QuestOwnerAccount;                                 // 0xD8(0x28)(HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortMissionStatus                MissionStatus;                                     // 0x100(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2718[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FFortObjectiveRecord>          ObjectiveRecords;                                  // 0x108(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<uint8>                                MissionData;                                       // 0x118(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	struct FGuid                                 MissionGuid;                                       // 0x128(0x10)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};

// 0x38 (0x38 - 0x0)
// ScriptStruct FortniteGame.FortMissionManagerRecord
struct FFortMissionManagerRecord
{
public:
	TSubclassOf<class AFortMissionManager>       MissionManagerClass;                               // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FFortMissionRecord>            MissionRecords;                                    // 0x8(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	int32                                        NumRequiredMissionsOfType;                         // 0x18(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2719[0xC];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<uint8>                                MissionManagerData;                                // 0x28(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.FortMissionInstancedConfigDataBucket
struct FFortMissionInstancedConfigDataBucket
{
public:
	struct FGameplayTag                          Tag;                                               // 0x0(0x8)(Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFortMissionConfigData*                ConfigData;                                        // 0x8(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.FortMissionInstancedConfigData
struct FFortMissionInstancedConfigData
{
public:
	TArray<struct FFortMissionInstancedConfigDataBucket> ConfigDataBuckets;                                 // 0x0(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
};

// 0x30 (0x30 - 0x0)
// ScriptStruct FortniteGame.FortMissionConfigDataBucket
struct FFortMissionConfigDataBucket
{
public:
	struct FGameplayTag                          Tag;                                               // 0x0(0x8)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class UFortMissionConfigData>  ConfigDataClass;                                   // 0x8(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.FortMissionConfigDataParams
struct FFortMissionConfigDataParams
{
public:
	TArray<struct FFortMissionConfigDataBucket>  ConfigParams;                                      // 0x0(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
};

// 0x30 (0x30 - 0x0)
// ScriptStruct FortniteGame.FortConnectionData
struct FFortConnectionData
{
public:
	class ABuildingSMActor*                      ConnectedActor;                                    // 0x0(0x8)(ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGuid                                 ConnectedActorGuid;                                // 0x8(0x10)(ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  MySocketName;                                      // 0x18(0x8)(ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  TheirSocketName;                                   // 0x20(0x8)(ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_271A[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.FortConnectivityComponentData
struct FFortConnectivityComponentData
{
public:
	TArray<struct FFortConnectionData>           Connections;                                       // 0x0(0x10)(ZeroConstructor, SaveGame, NativeAccessSpecifierPublic)
	bool                                         bIsPowered;                                        // 0x10(0x1)(ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsProvidingPower;                                 // 0x11(0x1)(ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bAllowConnections;                                 // 0x12(0x1)(ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bAllowsPowerToPassThrough;                         // 0x13(0x1)(ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_271B[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0xB8 (0xB8 - 0x0)
// ScriptStruct FortniteGame.FortPlacementActorFinderEntry
struct FFortPlacementActorFinderEntry
{
public:
	TSoftClassPtr<class AActor>                  BuildingToSpawn;                                   // 0x0(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class ABuildingActor>            BuildingClassToFind;                               // 0x28(0x8)(ZeroConstructor, Deprecated, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<TSubclassOf<class ABuildingActor>>    BuildingClassesToFind;                             // 0x30(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                 RequiredTags;                                      // 0x40(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                 PreferredTags;                                     // 0x60(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                 ExlusionTags;                                      // 0x80(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<struct FFortFinderProperty>           RequiredProperties;                                // 0xA0(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                         bIgnoreCollisionCheck;                             // 0xB0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bSnapToGrid;                                       // 0xB1(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_271C[0x6];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.FortPlacementActorFinderInfo
struct FFortPlacementActorFinderInfo
{
public:
	float                                        DistanceRangeMin;                                  // 0x0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DistanceRangeMax;                                  // 0x4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FFortPlacementActorFinderEntry> BuildingData;                                      // 0x8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// 0x8 (0x8 - 0x0)
// ScriptStruct FortniteGame.FortPlacementDistanceRequirements
struct FFortPlacementDistanceRequirements
{
public:
	float                                        DistanceRangeMin;                                  // 0x0(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DistanceRangeMax;                                  // 0x4(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x98 (0x98 - 0x0)
// ScriptStruct FortniteGame.FortMissionEvent
struct FFortMissionEvent
{
public:
	class FName                                  EventType;                                         // 0x0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                 ObjectiveHandle;                                   // 0x8(0x20)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	class UObject*                               EventFocus;                                        // 0x28(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UDataAsset*                            EventContent;                                      // 0x30(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                EventInstigator;                                   // 0x38(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        GenericInt;                                        // 0x40(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        GenericFloat;                                      // 0x44(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                  GenericText;                                       // 0x48(0x18)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                 GameplayTags;                                      // 0x60(0x20)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FGuid                                 MissionGuid;                                       // 0x80(0x10)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFortMissionEventParams*               Params;                                            // 0x90(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x50 (0x50 - 0x0)
// ScriptStruct FortniteGame.MyTownWorkerSetBonusData
struct FMyTownWorkerSetBonusData
{
public:
	struct FGameplayTagContainer                 SetBonusTypeTag;                                   // 0x0(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class FText                                  DisplayName;                                       // 0x20(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	int32                                        RequiredWorkersCount;                              // 0x38(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_271D[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class UGameplayEffect>           SetBonusEffect;                                    // 0x40(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        SelectionWeight;                                   // 0x48(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_271E[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x30 (0x30 - 0x0)
// ScriptStruct FortniteGame.MyTownWorkerPortraitData
struct FMyTownWorkerPortraitData
{
public:
	TSoftObjectPtr<class UFortItemIconDefinition> Portrait;                                          // 0x0(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        SelectionWeight;                                   // 0x28(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_271F[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.MyTownWorkerGenderData
struct FMyTownWorkerGenderData
{
public:
	enum class EFortCustomGender                 Gender;                                            // 0x0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2720[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        SelectionWeight;                                   // 0x4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FMyTownWorkerPortraitData>     PotraitData;                                       // 0x8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x50 (0x50 - 0x0)
// ScriptStruct FortniteGame.MyTownWorkerPersonalityData
struct FMyTownWorkerPersonalityData
{
public:
	struct FGameplayTagContainer                 PersonalityTypeTag;                                // 0x0(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class FText                                  PersonalityName;                                   // 0x20(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	int32                                        SelectionWeight;                                   // 0x38(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2721[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FMyTownWorkerGenderData>       GenderData;                                        // 0x40(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x90 (0x90 - 0x0)
// ScriptStruct FortniteGame.HeroSlotInfo
struct FHeroSlotInfo
{
public:
	uint8                                        Pad_2722[0x90];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x48 (0x48 - 0x0)
// ScriptStruct FortniteGame.PlayerNameInfo
struct FPlayerNameInfo
{
public:
	class FText                                  DisplayName;                                       // 0x0(0x18)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FUniqueNetIdRepl                      UniqueId;                                          // 0x18(0x28)(BlueprintVisible, BlueprintReadOnly, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EPlayerNameFlags                  Flags;                                             // 0x40(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2723[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.PlayerNameInfoContainer
struct FPlayerNameInfoContainer
{
public:
	TArray<struct FPlayerNameInfo>               CachedPlayerNameArray;                             // 0x0(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class UFortLocalPlayer>       Owner;                                             // 0x10(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};

// 0x10 (0x18 - 0x8)
// ScriptStruct FortniteGame.StatNamesToTrack
struct FStatNamesToTrack : public FTableRowBase
{
public:
	class FName                                  StatName;                                          // 0x8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EStatRecordingPeriod              Period;                                            // 0x10(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2724[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.StrategicBuildingActiveConstructionInfo
struct FStrategicBuildingActiveConstructionInfo
{
public:
	float                                        ConstructionStartTime;                             // 0x0(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ConstructionEndTime;                               // 0x4(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        ConstructionLevel;                                 // 0x8(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bUnderConstruction : 1;                            // Mask : 0x1 0xC(0x1)(Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2725[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0xC (0xC - 0x0)
// ScriptStruct FortniteGame.StrategicBuildingLevelActiveCriteriaProgress
struct FStrategicBuildingLevelActiveCriteriaProgress
{
public:
	float                                        CurrentProgress;                                   // 0x0(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        MaxProgress;                                       // 0x4(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        bProgressAllowed : 1;                              // Mask : 0x1 0x8(0x1)(Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2726[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x20 (0x20 - 0x0)
// ScriptStruct FortniteGame.StrategicBuildingLevelCriteria
struct FStrategicBuildingLevelCriteria
{
public:
	class FText                                  UnlockRequirementText;                             // 0x0(0x18)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	enum class EFortStrategicBuildingLevelCriteriaDisplayRepresentation RequirementDisplayRepresentation;                  // 0x18(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2727[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        UnlockRequirementQuantity;                         // 0x1C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0xC0 (0xC0 - 0x0)
// ScriptStruct FortniteGame.StrategicBuildingUpgradePathInfo
struct FStrategicBuildingUpgradePathInfo
{
public:
	class FText                                  UpgradeDesc;                                       // 0x0(0x18)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FSlateBrush                           UpgradeBrush;                                      // 0x18(0x88)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                 UpgradeTags;                                       // 0xA0(0x20)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// 0x30 (0x30 - 0x0)
// ScriptStruct FortniteGame.StrategicBuildingLevelUnlocks
struct FStrategicBuildingLevelUnlocks
{
public:
	TArray<struct FFortAbilitySetDeliveryInfo>   OwnerStrategicBuildingAbilitySetBuckets;           // 0x0(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<struct FFortAbilitySetDeliveryInfo>   PawnPersistentAbilitySetBuckets;                   // 0x10(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<struct FProximityBasedGEDeliveryInfo> ProximityBasedEffectBuckets;                       // 0x20(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// 0x68 (0x68 - 0x0)
// ScriptStruct FortniteGame.StrategicBuildingLevelInformation
struct FStrategicBuildingLevelInformation
{
public:
	struct FStrategicBuildingLevelCriteria       UpgradeCriteria;                                   // 0x0(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<struct FStrategicBuildingUpgradePathInfo> UpgradePaths;                                      // 0x20(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FStrategicBuildingLevelUnlocks        LevelUnlocks;                                      // 0x30(0x30)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	float                                        ConstructionTime;                                  // 0x60(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DestructionRecoveryTime;                           // 0x64(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.TileGroupInfo
struct FTileGroupInfo
{
public:
	class UWorldTileGroup*                       TileGroup;                                         // 0x0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Weight;                                            // 0x8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MinTiles;                                          // 0xC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaxTiles;                                          // 0x10(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bPlaceAdjacent : 1;                                // Mask : 0x1 0x14(0x1)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2728[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.TileGroupSelection
struct FTileGroupSelection
{
public:
	TArray<struct FTileGroupInfo>                TileGroupOptions;                                  // 0x0(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x38 (0x38 - 0x0)
// ScriptStruct FortniteGame.TileGroupMapInfo
struct FTileGroupMapInfo
{
public:
	TSoftObjectPtr<class UWorld>                 GroupWorld;                                        // 0x0(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        Weight;                                            // 0x28(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  QuotaCategory;                                     // 0x2C(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2729[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x318 (0x318 - 0x0)
// ScriptStruct FortniteGame.FortTileLootData
struct FFortTileLootData
{
public:
	struct FFortLootQuotaData                    LootQuotas;                                        // 0x0(0x28)(NativeAccessSpecifierPublic)
	uint8                                        Pad_272A[0x2A8];                                   // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        LootDrops;                                         // 0x2D0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_272B[0x44];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

}

#ifdef _MSC_VER
	#pragma pack(pop)
#endif

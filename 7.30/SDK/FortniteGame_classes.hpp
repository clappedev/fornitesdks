#pragma once

// Dumped with Dumper-7!

#ifdef _MSC_VER
	#pragma pack(push, 0x08)
#endif

namespace SDK
{
// 0x188 (0x4B8 - 0x330)
// Class FortniteGame.AIHotSpot
class AAIHotSpot : public AActor
{
public:
	uint8                                        Pad_139B[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UAIHotSpotSlot*>                UserSlots;                                         // 0x338(0x10)(Edit, BlueprintVisible, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	class UAIHotSpotSlotGenerator*               SlotGenerator;                                     // 0x348(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UAIHotSpotSlot*>                Slots;                                             // 0x350(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, Protected, NativeAccessSpecifierProtected)
	class AActor*                                FocusActor;                                        // 0x360(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UNavigationQueryFilter>    FilterClass;                                       // 0x368(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               CustomNavmeshSearchExtent;                         // 0x370(0xC)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bStartEnabled : 1;                                 // Mask : 0x1 0x37C(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bAllowSlotlessAssignment : 1;                      // Mask : 0x2 0x37C(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, AdvancedDisplay, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bAllowClaimingMultipleSlots : 1;                   // Mask : 0x4 0x37C(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, AdvancedDisplay, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bTrackOverlappingSlots : 1;                        // Mask : 0x8 0x37C(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, AdvancedDisplay, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bProjectSlotsOnNavmesh : 1;                        // Mask : 0x10 0x37C(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bCustomNavmeshSearchExtent : 1;                    // Mask : 0x20 0x37C(0x1)(NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bIsEnabled : 1;                                    // Mask : 0x40 0x37C(0x1)(Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_139C[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class AAIController*>                 NoSlotAssignees;                                   // 0x380(0x10)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_139D[0x110];                                   // Fixing Size After Last Property  [ Dumper-7 ]
	class UPrimitiveComponent*                   RenderingComponent;                                // 0x4A0(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBillboardComponent*                   SpriteComponent;                                   // 0x4A8(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_139E[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("AIHotSpot");
		return Clss;
	}

	void SetEnabled(bool bEnabled);
	int32 RemoveGroupFromHotspot(const TArray<class AAIController*>& GroupOfAI);
	bool RemoveFromHotspot(class AAIController* AI, bool bAssignFromWaitingList);
	void OnSlotOccupied(class AAIController* AI, int32 Index, int32 UserId);
	void OnSlotFreed(class AAIController* AI, int32 Index, int32 UserId);
	void OnSlotEnabled(int32 Index, int32 UserId);
	void OnSlotDisabled(int32 Index, int32 UserId);
	void OnSlotClaimed(class AAIController* AI, int32 Index, int32 UserId);
	void OnSlotBlocked(class AAIController* AI, int32 Index, int32 UserId);
	void OnRemovedSlotlessBehavior(class AAIController* AI, bool bIsClamingSlot);
	void OnRemovedBehavior(class AAIController* AI, int32 Index, int32 UserId, enum class EAIHotSpotSlot PrevState, bool bWasOnWaitingList);
	void OnMoveToSlotFinished(class AAIController* AI, int32 Index, int32 UserId, bool bResult);
	void OnHotSpotEnabled();
	void OnHotSpotDisabled();
	bool OnAssignedSlotlessBehavior(class AAIController* AI);
	bool OnAssignedOccupiedBehavior(class AAIController* AI, int32 Index, int32 UserId);
	bool OnAssignedClaimedBehavior(class AAIController* AI, int32 Index, int32 UserId, bool bWasOnWaitingList);
	bool OccupySlotByIndex(int32 Index);
	bool IsSlotlessAssignmentAllowed();
	bool IsEnabled();
	bool IsAIAllowed(class AAIController* AI);
	bool HasEnabledSlots();
	bool HasAssignedAI(class AAIController* AI, enum class EAIHotSpotAssignmentFilter Filter);
	int32 GetSlotUserIdByIndex(int32 Index);
	enum class EAIHotSpotSlot GetSlotStateByOwner(class AAIController* AIOwner);
	enum class EAIHotSpotSlot GetSlotStateByIndex(int32 Index);
	struct FRotator GetSlotRotationByIndex(int32 Index);
	class AAIController* GetSlotOwnerByIndex(int32 Index);
	struct FVector GetSlotLocationByIndex(int32 Index);
	int32 GetSlotIndexByOwner(class AAIController* AIOwner);
	int32 GetSlotCount(enum class EAIHotSpotSlotFilter Filter);
	class UAIHotSpotSlot* GetSlotByOwner(class AAIController* AIOwner);
	class UAIHotSpotSlot* GetSlotByIndex(int32 Index);
	int32 GetAssignedAICount(enum class EAIHotSpotAssignmentFilter Filter);
	TArray<class AAIController*> GetAssignedAI(enum class EAIHotSpotAssignmentFilter Filter);
	TArray<int32> FindBestSlotIndices(const TArray<class AAIController*>& AI);
	int32 FindBestSlotIndex(class AAIController* AI);
	bool CanUseSlotByIndex(class AAIController* AI, int32 Index);
	bool AssignToSlotByIndex(class AAIController* AI, int32 Index);
	bool AssignToHotspot(class AAIController* AI);
	int32 AssignGroupToHotspot(const TArray<class AAIController*>& GroupOfAI);
	void AssignFromWaitingList();
};

// 0x20 (0x50 - 0x30)
// Class FortniteGame.AIHotSpotConfig
class UAIHotSpotConfig : public UDataAsset
{
public:
	TArray<struct FAIHotSpotSlotConfig>          Slots;                                             // 0x30(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	uint8                                        bDetectUnreachableSlots : 1;                       // Mask : 0x1 0x40(0x1)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_139F[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UAIHotSpotSlotGenerator*               SlotGenerator;                                     // 0x48(0x8)(Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("AIHotSpotConfig");
		return Clss;
	}

};

// 0x58 (0x80 - 0x28)
// Class FortniteGame.AIHotSpotManagerProxy
class UAIHotSpotManagerProxy : public UAIHotSpotManager
{
public:
	uint8                                        Pad_13A0[0x58];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("AIHotSpotManagerProxy");
		return Clss;
	}

};

// 0x0 (0x570 - 0x570)
// Class FortniteGame.AIHotSpotRenderingComponent
class UAIHotSpotRenderingComponent : public UPrimitiveComponent
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("AIHotSpotRenderingComponent");
		return Clss;
	}

};

// 0x98 (0xC0 - 0x28)
// Class FortniteGame.AIHotSpotSlot
class UAIHotSpotSlot : public UObject
{
public:
	uint8                                        Pad_13A4[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTransform                            LocalTransform;                                    // 0x30(0x30)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	float                                        Height;                                            // 0x60(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        Radius;                                            // 0x64(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DistanceToFocusActor;                              // 0x68(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        UserId;                                            // 0x6C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bStartEnabled : 1;                                 // Mask : 0x1 0x70(0x1)(Edit, BlueprintVisible, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bHasCachedAgentData : 1;                           // Mask : 0x2 0x70(0x1)(NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bHasOverlappingSlots : 1;                          // Mask : 0x4 0x70(0x1)(Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bHasDistanceToFocusActor : 1;                      // Mask : 0x8 0x70(0x1)(Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bIsBlockingOthers : 1;                             // Mask : 0x10 0x70(0x1)(Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bIsEnabled : 1;                                    // Mask : 0x20 0x70(0x1)(Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_13A5[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AAIController*                         Owner;                                             // 0x78(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        SlotIndex;                                         // 0x80(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EAIHotSpotSlot                    SlotState;                                         // 0x84(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_13A6[0x3B];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("AIHotSpotSlot");
		return Clss;
	}

	void SetSlotState(enum class EAIHotSpotSlot NewState);
	void SetSlotOwnerAndState(class AAIController* NewOwner, enum class EAIHotSpotSlot NewState);
	void SetSlotEnabled(bool bNewEnabled);
	void OnStateChanged(class AAIController* SlotOwner, enum class EAIHotSpotSlot NewState);
	bool IsEnabled();
	bool IsAIAllowed(class AAIController* AI);
	bool HasUserId();
	int32 GetSlotUserId();
	enum class EAIHotSpotSlot GetSlotState();
	struct FRotator GetSlotRotation();
	float GetSlotRadius();
	class AAIController* GetSlotOwner();
	struct FVector GetSlotLocation();
	int32 GetSlotIndex();
	float GetSlotHeight();
	struct FBox GetSlotBounds();
	class AAIHotSpot* GetHotSpot();
	void ClearSlot();
};

// 0x0 (0x28 - 0x28)
// Class FortniteGame.AIHotSpotSlotGenerator
class UAIHotSpotSlotGenerator : public UObject
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("AIHotSpotSlotGenerator");
		return Clss;
	}

	class AAIHotSpot* GetHotSpot();
	void GenerateSlots();
	class UAIHotSpotSlot* AddSlot(struct FVector& RelativeLocation, struct FRotator& RelativeRotation, TSubclassOf<class UAIHotSpotSlot> CustomSlotClass, bool bEnabled);
};

// 0x48 (0x70 - 0x28)
// Class FortniteGame.AIHotSpotSlotGenerator_OnBoundingBox
class UAIHotSpotSlotGenerator_OnBoundingBox : public UAIHotSpotSlotGenerator
{
public:
	TSubclassOf<class UAIHotSpotSlot>            SlotClass;                                         // 0x28(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               MaxExtent;                                         // 0x30(0xC)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ExpandBy;                                          // 0x3C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        OffsetFromEdge;                                    // 0x40(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Spacing;                                           // 0x44(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bLimitMaxExtent : 1;                               // Mask : 0x1 0x48(0x1)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bMustHitFocusActor : 1;                            // Mask : 0x2 0x48(0x1)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_13A8[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	enum class EBoundingBoxSlotDirectionCalculation SlotDirectionCalculation;                          // 0x4C(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_13A9[0x23];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("AIHotSpotSlotGenerator_OnBoundingBox");
		return Clss;
	}

};

// 0x90 (0x448 - 0x3B8)
// Class FortniteGame.FortReplaySpectatorPawnBase
class AFortReplaySpectatorPawnBase : public ASpectatorPawn
{
public:
	class UFortSpectatorCameraComponent*         SpectatorCameraComponent;                          // 0x3B8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FSlateBrush                           MiniMapIconBrush;                                  // 0x3C0(0x88)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortReplaySpectatorPawnBase");
		return Clss;
	}

};

// 0x18 (0x460 - 0x448)
// Class FortniteGame.ArenaCamPawn
class AArenaCamPawn : public AFortReplaySpectatorPawnBase
{
public:
	TArray<class AFortArenaCamera*>              ArenaCams;                                         // 0x448(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	int32                                        CurrArenaCamIdx;                                   // 0x458(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_13AA[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("ArenaCamPawn");
		return Clss;
	}

};

// 0x18 (0x40 - 0x28)
// Class FortniteGame.AsyncTask
class UAsyncTask : public UObject
{
public:
	uint8                                        Pad_13AB[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("AsyncTask");
		return Clss;
	}

};

// 0x30 (0x58 - 0x28)
// Class FortniteGame.AsyncTaskQueue
class UAsyncTaskQueue : public UObject
{
public:
	TArray<class UAsyncTask*>                    TaskQueue_Internal;                                // 0x28(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	uint8                                        Pad_13AC[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UAsyncTask*                            CurrentTask;                                       // 0x50(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("AsyncTaskQueue");
		return Clss;
	}

	void OnAsyncTaskFinished(struct FAsyncTaskResult& Result);
};

// 0xF0 (0x530 - 0x440)
// Class FortniteGame.FortAIController
class AFortAIController : public AAIController
{
public:
	uint8                                        Pad_13B1[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	uint8                                        bUsingNavMesh : 1;                                 // Mask : 0x1 0x458(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bAlwaysNotifyBumpWall : 1;                         // Mask : 0x2 0x458(0x1)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bInstantRotation : 1;                              // Mask : 0x4 0x458(0x1)(Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bTurnTransitionsEnabled : 1;                       // Mask : 0x8 0x458(0x1)(Edit, BlueprintVisible, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_13B2[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UFortPathFollowingComponent*           FortPathFollowingComp;                             // 0x460(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAIHotSpotUseInfo                     CurrentHotSpot;                                    // 0x468(0x18)(BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, NativeAccessSpecifierProtected)
	float                                        GoalInfoUpdateRate;                                // 0x480(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_13B3[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AActor*                                GoalActor;                                         // 0x488(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        GoalVisibilityPersistanceTime;                     // 0x490(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_13B4[0x94];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class AFortAIPawn*                           MyFortPawn;                                        // 0x528(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAIController");
		return Clss;
	}

	void WakeUp();
	void UnregisterForGoalDetection();
	void UnlockMovementResource();
	void UnlockBehaviorResource();
	void SetupCustomVIM(class UClass* VIM);
	void SetTeam(enum class EFortTeam InTeam);
	void SetPawnAIType(enum class EFortressAIType NewAIType, class AActor* SpawnSpot);
	void SetIsSleeping(bool bNewSleepStatus);
	void SetGoalActor(class AActor* InActor, bool bLocationAlwaysKnown);
	void SetFullPeripheralVision(bool bNewFullPeripheralVision);
	void SetAlwaysGameplayRelevant(bool bInAlwaysGameplayRelevant);
	void OnBuildingActorGoalDestroyed();
	void LockMovementResource();
	void LockBehaviorResource();
	bool IsIgnoringProximity(class AFortAIController* FortAIController);
	bool IsAllowedToSleep();
	void IgnoreProximityForDuration(float DurationToIgnore);
	class AActor* GetGoalActor();
	class UFortAIEncounterInfo* GetEncounterInfo();
	bool CreateBuildingActor(TSubclassOf<class ABuildingSMActor> BuildingClass, const struct FVector& BuildLoc, const struct FRotator& BuildRot, bool bMirrored);
};

// 0x48 (0x578 - 0x530)
// Class FortniteGame.AthenaAIController
class AAthenaAIController : public AFortAIController
{
public:
	uint8                                        Pad_13B5[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UFortGameplayAbility*                  PrimaryMeleeAttackAbilityInstance;                 // 0x550(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFortGameplayAbility*                  PrimaryRangedAttackAbilityInstance;                // 0x558(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_13B6[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AActor*                                SecondaryGoalActor;                                // 0x568(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_13B7[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("AthenaAIController");
		return Clss;
	}

};

// 0x8 (0x1D0 - 0x1C8)
// Class FortniteGame.FortAIPerceptionComponent
class UFortAIPerceptionComponent : public UAIPerceptionComponent
{
public:
	float                                        LosingSightRadiusBump;                             // 0x1C8(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_13B8[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAIPerceptionComponent");
		return Clss;
	}

};

// 0x0 (0x1D0 - 0x1D0)
// Class FortniteGame.AthenaAIPerceptionComponent
class UAthenaAIPerceptionComponent : public UFortAIPerceptionComponent
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("AthenaAIPerceptionComponent");
		return Clss;
	}

};

// 0x0 (0x2A8 - 0x2A8)
// Class FortniteGame.FortBehaviorTreeComponent
class UFortBehaviorTreeComponent : public UBehaviorTreeComponent
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortBehaviorTreeComponent");
		return Clss;
	}

};

// 0x8 (0x2B0 - 0x2A8)
// Class FortniteGame.AthenaBehaviorTreeComponent
class UAthenaBehaviorTreeComponent : public UFortBehaviorTreeComponent
{
public:
	uint8                                        Pad_13B9[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("AthenaBehaviorTreeComponent");
		return Clss;
	}

};

// 0xB18 (0xE48 - 0x330)
// Class FortniteGame.FortAIDirector
class AFortAIDirector : public AActor
{
public:
	uint8                                        Pad_13C2[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FCurveTableRowHandle                  MaxAliveCurve;                                     // 0x340(0x10)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FCurveTableRowHandle                  MinAliveCurve;                                     // 0x350(0x10)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FIntensityData                        IntensityInfo;                                     // 0x360(0x30)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FFortAIEncounterPIDController         AIDirectorPIDController;                           // 0x390(0x68)(BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	struct FFortAIEncounterPIDControllerSettings PIDControllerSettings;                             // 0x3F8(0x30)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	struct FUtilityData                          UtilityContributionData;                           // 0x428(0x40)(Edit, NativeAccessSpecifierPublic)
	uint8                                        Pad_13C3[0x3C0];                                   // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        UnreachableLocationPathCost;                       // 0x828(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_13C4[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FFortPlayerPerformanceEstimateSettings PlayerPerformanceEstimateSettings;                 // 0x830(0x40)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        bUsePrototypeEnemies : 1;                          // Mask : 0x1 0x870(0x1)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_13C5[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<enum class EFortEncounterDirection>   DebugEncounterDirections;                          // 0x878(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	enum class EDespawnAIType                    DespawnAIType;                                     // 0x888(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_13C6[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        DespawnDistance;                                   // 0x88C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DespawnInterval;                                   // 0x890(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_13C7[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGameplayTagContainer                 DebugSpawnAIGroupTags;                             // 0x898(0x20)(Transient, Protected, NativeAccessSpecifierProtected)
	struct FGameplayTagContainer                 DebugEncounterTags;                                // 0x8B8(0x20)(Transient, Protected, NativeAccessSpecifierProtected)
	float                                        BurstSpawnThreatVisualsEndDelay;                   // 0x8D8(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_13C8[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FFortAIEncounterSpawnGroupCapsProfile> EncounterSpawnGroupCapSettings;                    // 0x8E0(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TArray<struct FFortAIEncounterSpawnPointsProfile> EncounterSpawnPointsSettings;                      // 0x8F0(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TArray<struct FFortAIEncounterPawnDifficultyLevelModifier> EncounterPawnDifficultyLevelModifiers;             // 0x900(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TArray<struct FFortAISpawnGroupUpgradeData>  SpawnGroupUpgrades;                                // 0x910(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	float                                        GuaranteedUpgradeGroupUtilityBonus;                // 0x920(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DiscreteEncounterUtilityDesireMappings;            // 0x924(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_13C9[0xC];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	enum class EFortAIUtility                    InitialDynamicUtilities;                           // 0x934(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_13CA[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FEncounterEnvironmentQueryInfo        SpawnLocationPlacementQueries;                     // 0x938(0x28)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_13CB[0x78];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FEncounterEnvironmentQueryInfo        SpawnLocationActorSearchQueries;                   // 0x9D8(0x28)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_13CC[0x78];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UFortAIDirectorDataTrackingSettings*   DataTrackingSettings;                              // 0xA78(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FDataTableRowHandle>           BaseLootDropData;                                  // 0xA80(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TArray<struct FFortAILootDropModifiers>      LootDropModifiers;                                 // 0xA90(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FGameplayTagQuery                     LootDropDenialQuery;                               // 0xAA0(0x48)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	uint8                                        bDebugEncounterQueries : 1;                        // Mask : 0x1 0xAE8(0x1)(NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_13CD[0xF];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class AFortPlayerControllerZone*>     PlayerControllers;                                 // 0xAF8(0x10)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	TArray<class AFortPlayerPawn*>               PlayerPawns;                                       // 0xB08(0x10)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_13CE[0x48];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class AFortAIController*>             AIControllers;                                     // 0xB60(0x10)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	TArray<class AFortAIPawn*>                   AIPawns;                                           // 0xB70(0x10)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_13CF[0x40];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FAIPawnUpdateInfo>             AIPawnUpdateInfos;                                 // 0xBC0(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_13D0[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<TWeakObjectPtr<class AFortAIPawn>, int32> AIPawnUpdateIdxMap;                                // 0xBD8(0x50)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_13D1[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bAsyncProcessUpdateAliveAIs;                       // 0xC38(0x1)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bAllowProcessPlayerTargeting;                      // 0xC39(0x1)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_13D2[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        MaxNumAIProcessPerFrame;                           // 0xC3C(0x4)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FFortEncounterPawnNumberCaps          DefaultEncounterPawnCaps;                          // 0xC40(0x18)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_13D3[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UReporterGraph*                        IntensityGraph;                                    // 0xC60(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UReporterGraph*                        UtilitiesGraph;                                    // 0xC68(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UReporterGraph*                        PIDValuesGraph;                                    // 0xC70(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UReporterGraph*                        PIDContributionsGraph;                             // 0xC78(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bNightActive : 1;                                  // Mask : 0x1 0xC80(0x1)(Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bAIDisabled : 1;                                   // Mask : 0x2 0xC80(0x1)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bRegisteredForDayPhaseChange : 1;                  // Mask : 0x4 0xC80(0x1)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bUseSpawnCap : 1;                                  // Mask : 0x8 0xC80(0x1)(Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_13D4[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        NightCount;                                        // 0xC84(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        NightEncounterFailureBreatherTime;                 // 0xC88(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        EncounterPawnSpawnInterval;                        // 0xC8C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UFortAIEncounterInfo>      DefaultNightEncounter;                             // 0xC90(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UFortAIEncounterInfo>      DummyDebugEncounter;                               // 0xC98(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UFortAIEncounterInfo>      BaseEncounterClass;                                // 0xCA0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaxActiveAlive;                                    // 0xCA8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        NumActiveAlive;                                    // 0xCAC(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        NumPendingCapRelevantAI;                           // 0xCB0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_13D5[0x54];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FPendingSpawnInfo>             PendingSpawns;                                     // 0xD08(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	int32                                        MaxAISpawnedPerFrame;                              // 0xD18(0x4)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        MaxAIDespawnedPerFrame;                            // 0xD1C(0x4)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        DespawnAllAIMaxAIDespawnedPerFrame;                // 0xD20(0x4)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_13D6[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<TWeakObjectPtr<class AFortAIPawn>>    PendingDespawns;                                   // 0xD28(0x10)(ZeroConstructor, Transient, UObjectWrapper, NativeAccessSpecifierPrivate)
	uint8                                        Pad_13D7[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        NumWorldSubdivides;                                // 0xD40(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinAISpawnDistanceFromPlayers;                     // 0xD44(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                 AmbientThreatPreferredPlacementActorTags;          // 0xD48(0x20)(Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	struct FGameplayTagContainer                 AmbientThreatRequiredPlacementActorTags;           // 0xD68(0x20)(Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	TArray<class UFortAIEncounterInfo*>          ActiveEncounters;                                  // 0xD88(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<class UFortAIEncounterInfo*>          InactiveEncounters;                                // 0xD98(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<struct FFortPendingStoppedEncounterData> PendingStoppedEncounters;                          // 0xDA8(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	class UFortAIEncounterInfo*                  ActiveDefaultEncounter;                            // 0xDB8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFortAIEncounterInfo*                  ActiveDummyDebugEncounter;                         // 0xDC0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UFortAIEncounterSequence*>      EncounterSequences;                                // 0xDC8(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	class UEQSRenderingComponent*                EQSRenderingComp;                                  // 0xDD8(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        DebugGraphUpdateFrequency;                         // 0xDE0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxNormalLODDistanceToPlayer;                      // 0xDE4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AIRelevantDistanceToPlayer;                        // 0xDE8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        EncounterRelevantDistanceToPlayer;                 // 0xDEC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        EncounterRelevantDistanceToDefender;               // 0xDF0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_13D8[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<UInterfaceProperty_>                  PatrolWards;                                       // 0xDF8(0x10)(ZeroConstructor, Transient, UObjectWrapper, NativeAccessSpecifierPrivate)
	uint8                                        Pad_13D9[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        MaxTotalActiveAliveAI;                             // 0xE0C(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaxEncounterActiveAliveAI;                         // 0xE10(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaxSPUsed;                                         // 0xE14(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_13DA[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FUtilityTypeFloatPair>         DebugEncounterTopUtilityPercentages;               // 0xE20(0x10)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	TArray<class UCurveFloat*>                   DebugEncounterSpawnPointsCurves;                   // 0xE30(0x10)(Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        bDebugAllowEncounterModifierTags : 1;              // Mask : 0x1 0xE40(0x1)(NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_13DB[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        SimulatedNumberOfPlayersForAIEncounters;           // 0xE44(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAIDirector");
		return Clss;
	}

	void UnregisterPatrolWard(UInterfaceProperty_ PatrolWard);
	void RegisterPatrolWard(UInterfaceProperty_ PatrolWard);
	void ReceivePawnSpawned(class AFortPawn* SpawnedPawn);
	void PostDayPhaseChanged(enum class EFortDayPhase CurrentDayPhase, enum class EFortDayPhase PreviousDayPhase, bool bAtCreation);
	void OnRestStarted();
	void OnRampStarted();
	void OnPlayerSpawn(class AFortPlayerPawn* PlayerPawn);
	void OnPlayerDied(class AFortPlayerPawn* PlayerPawn);
	void OnPeakStarted();
	void OnPawnDied(class AFortAIPawn* KilledPawn);
	void OnFadeStarted();
	void OnDirectorDeactivated();
	void OnDayPhaseChanged(enum class EFortDayPhase CurrentDayPhase, enum class EFortDayPhase PreviousDayPhase, bool bAtCreation);
	bool IsPointTooCloseToPatrolWards(struct FVector& Point, enum class EWardAffectType WardEffectTypeFilter);
	bool IsLineTooCloseToPatrolWards(struct FVector& LineStart, struct FVector& LineEnd);
	bool IsAnyEncounterGoalWithinDistanceOfPoint(struct FVector& Point, float Distance, bool bOnlyActiveEncounters);
	bool IsAnyAIRelevantToPlayer(class AFortPlayerPawn* Player);
	bool IsAnyActiveEncounterRelevantToPlayer(class AFortPlayerPawn* Player);
	bool IsAnyActiveEncounterRelevantToDefender(class AFortAIPawn* Defender);
	struct FVector GetVectorFromEncounterDirection(enum class EFortEncounterDirection Direction);
	TArray<class ABuildingRift*> GetRiftsFromClosestActiveEncounterTo(class AActor* Target);
	int32 GetNumPlayers();
	enum class EFortEncounterDirection GetEncounterDirectionFromVector(const struct FVector& DirectionVector);
	void GetAmbientThreatEncounterSpawnLocations(TArray<struct FVector>* AmbientThreatEncounterSpawnLocations);
	void Deactivate();
	TArray<enum class EFortEncounterDirection> ConvertInvalidDirectionsToValidDirections(const TArray<enum class EFortEncounterDirection>& InvalidDirections);
	void Activate();
};

// 0x0 (0xE48 - 0xE48)
// Class FortniteGame.AthenaAIDirector
class AAthenaAIDirector : public AFortAIDirector
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("AthenaAIDirector");
		return Clss;
	}

};

// 0x10 (0x38 - 0x28)
// Class FortniteGame.AthenaAIDropper
class UAthenaAIDropper : public UObject
{
public:
	TArray<struct FDroppingAgentData>            InactiveAgents;                                    // 0x28(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("AthenaAIDropper");
		return Clss;
	}

};

// 0x10 (0x48 - 0x38)
// Class FortniteGame.AthenaAIPerceptionManager
class UAthenaAIPerceptionManager : public UAISubsystem
{
public:
	uint8                                        Pad_13DC[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("AthenaAIPerceptionManager");
		return Clss;
	}

};

// 0x0 (0xE8 - 0xE8)
// Class FortniteGame.AthenaAISense_Hearing
class UAthenaAISense_Hearing : public UAISense_Hearing
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("AthenaAISense_Hearing");
		return Clss;
	}

};

// 0x30 (0x60 - 0x30)
// Class FortniteGame.AthenaAISettings
class UAthenaAISettings : public UDataAsset
{
public:
	uint8                                        bAllowAIDirector : 1;                              // Mask : 0x1 0x30(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Config, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bAllowAIGoalManager : 1;                           // Mask : 0x2 0x30(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Config, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bForceRVOUse : 1;                                  // Mask : 0x4 0x30(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Config, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_13DD[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        MaxPlayerSpeedScaleFootstepSounds;                 // 0x34(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinFootstepHearingRange;                           // 0x38(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxFootstepHearingRange;                           // 0x3C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DamagedHearingRange;                               // 0x40(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CrouchHearingModifier;                             // 0x44(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxNPCHearingRange;                                // 0x48(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DeAggroRange;                                      // 0x4C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ReducedDeAggroRange;                               // 0x50(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DurationReduceAggroLimits;                         // 0x54(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UNavigationSystemConfig*               NavigationSystemConfig;                            // 0x58(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, AdvancedDisplay, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("AthenaAISettings");
		return Clss;
	}

};

// 0x90 (0x1C0 - 0x130)
// Class FortniteGame.FortAISystem
class UFortAISystem : public UAISystem
{
public:
	TArray<class UFortQueryTwoPointSolver*>      TwoPointSolvers;                                   // 0x130(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	class UFortInfluenceMap*                     InfluenceMap;                                      // 0x140(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFortBotMissionManager*                BotManager;                                        // 0x148(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_13DF[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UFortRiftBlockerComponent*>     ActiveRiftBlockers;                                // 0x160(0x10)(ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_13E0[0x50];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAISystem");
		return Clss;
	}

	bool IsInCone2D(const struct FVector& ConeOrigin, const struct FVector& ConeDirection, float HalfAngle, const struct FVector& LocationToCheck);
};

// 0x40 (0x200 - 0x1C0)
// Class FortniteGame.AthenaAISystem
class UAthenaAISystem : public UFortAISystem
{
public:
	class UAthenaAIPerceptionManager*            PerceptionManager;                                 // 0x1C0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAthenaAIDropper*                      AIDropper;                                         // 0x1C8(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class AAthenaAIController*>           AIControllers;                                     // 0x1D0(0x10)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	TArray<class UAthenaBehaviorTreeComponent*>  BTComponents;                                      // 0x1E0(0x10)(ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	TArray<class UAthenaPathFollowingComponent*> PathFollowingComponents;                           // 0x1F0(0x10)(ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("AthenaAISystem");
		return Clss;
	}

};

// 0x0 (0xE0 - 0xE0)
// Class FortniteGame.AthenaAvoidanceManager
class UAthenaAvoidanceManager : public UAvoidanceManager
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("AthenaAvoidanceManager");
		return Clss;
	}

};

// 0x2C0 (0x2F0 - 0x30)
// Class FortniteGame.FortItemDefinition
class UFortItemDefinition : public UMcpItemDefinitionBase
{
public:
	uint8                                        Pad_13E6[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	UMulticastDelegateProperty_                  OnItemCountChanged;                                // 0x40(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	enum class EFortRarity                       Rarity;                                            // 0x50(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	enum class EFortItemType                     ItemType;                                          // 0x51(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AssetRegistrySearchable, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EFortItemType                     PrimaryAssetIdItemTypeOverride;                    // 0x52(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EFortInventoryFilter              FilterOverride;                                    // 0x53(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EFortQuality                      Quality;                                           // 0x54(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EFortItemTier                     Tier;                                              // 0x55(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EFortItemTier                     MaxTier;                                           // 0x56(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EFortTemplateAccess               Access;                                            // 0x57(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bIsAccountItem : 1;                                // Mask : 0x1 0x58(0x1)(NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bNeverPersisted : 1;                               // Mask : 0x2 0x58(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, AssetRegistrySearchable, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bAllowMultipleStacks : 1;                          // Mask : 0x4 0x58(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bAutoBalanceStacks : 1;                            // Mask : 0x8 0x58(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bForceAutoPickup : 1;                              // Mask : 0x10 0x58(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bInventorySizeLimited : 1;                         // Mask : 0x20 0x58(0x1)(Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bCalculateRarityFromQualityAndTier : 1;            // Mask : 0x40 0x58(0x1)(Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_13E7[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  ItemTypeNameOverride;                              // 0x60(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	int32                                        MinLevel;                                          // 0x78(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        MaxLevel;                                          // 0x7C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FText                                  DisplayName;                                       // 0x80(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, AssetRegistrySearchable, Protected, NativeAccessSpecifierProtected)
	class FText                                  ShortDescription;                                  // 0x98(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	class FText                                  Description;                                       // 0xB0(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	class FText                                  DisplayNamePrefix;                                 // 0xC8(0x18)(Protected, NativeAccessSpecifierProtected)
	class FText                                  SearchTags;                                        // 0xE0(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FGameplayTagContainer                 GameplayTags;                                      // 0xF8(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FGameplayTagContainer                 SecondaryCategoryOverrideTags;                     // 0x118(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	struct FGameplayTagContainer                 TertiaryCategoryOverrideTags;                      // 0x138(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	int32                                        MaxStackSize;                                      // 0x158(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        FrontendPreviewScale;                              // 0x15C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftClassPtr<class UFortTooltip>            TooltipClass;                                      // 0x160(0x28)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UFortTooltipDisplayStatsList> StatList;                                          // 0x188(0x28)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FCurveTableRowHandle                  RatingLookup;                                      // 0x1B0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UTexture2D>             SmallPreviewImage;                                 // 0x1C0(0x28)(Edit, DisableEditOnInstance, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UTexture2D>             LargePreviewImage;                                 // 0x1E8(0x28)(Edit, DisableEditOnInstance, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FSoftObjectPath                       DisplayAssetPath;                                  // 0x210(0x18)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               FrontendPreviewPivotOffset;                        // 0x228(0xC)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FRotator                              FrontendPreviewInitialRotation;                    // 0x234(0xC)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, NativeAccessSpecifierPrivate)
	struct FTransform                            FrontendPreviewMeshOffset;                         // 0x240(0x30)(Edit, DisableEditOnInstance, EditConst, IsPlainOldData, NoDestructor, NativeAccessSpecifierPrivate)
	struct FTransform                            AthenaFrontendPreviewMeshOffset;                   // 0x270(0x30)(Edit, DisableEditOnInstance, EditConst, IsPlainOldData, NoDestructor, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class UStaticMesh>            FrontendPreviewMeshOverride;                       // 0x2A0(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class USkeletalMesh>          FrontendPreviewSkeletalMeshOverride;               // 0x2C8(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortItemDefinition");
		return Clss;
	}

	bool ShouldShowPreviewOnCurrentHero();
	bool IsInventorySizeLimited();
	TSubclassOf<class UFortTooltip> GetTooltip();
	struct FSlateBrush GetSmallPreviewImageBrush();
	TSoftObjectPtr<class UTexture2D> GetSmallPreviewImage();
	class FText GetSingleLineDescription();
	class FText GetShortDescription();
	class FText GetRichDescription();
	enum class EFortRarity GetRarity();
	bool GetPreviewStaticMeshAsset(TSoftObjectPtr<class UStaticMesh>* Asset);
	bool GetPreviewSkeletalMeshAsset(TSoftObjectPtr<class USkeletalMesh>* Asset);
	bool GetPreviewPrefabAsset(TSoftClassPtr<class AActor>* Asset);
	struct FTransform GetPreviewMeshOffset();
	void GetPreviewAssets(TArray<TSoftObjectPtr<class UObject>>* Assets);
	class FString GetPersistentName();
	TSoftObjectPtr<class UTexture2D> GetLargePreviewImage();
	class FText GetItemTypeName(bool bUsePlural);
	enum class EFortItemType GetItemType();
	class UFortTooltipDisplayStatsList* GetDisplayStats();
	class FText GetDisplayName(bool bBaseName);
	struct FSoftObjectPath GetDisplayAssetPath();
	TArray<class FText> GetDescription();
	void CustomizePreviewPrefab(class AActor* PrefabInstance);
	void CustomizePreviewMesh(class UMeshComponent* Mesh);
	class UFortItem* CreateTemporaryItemInstanceBP(int32 Count, int32 Level);
	class UFortItem* CreateTemporaryInstanceFromExistingItemBP(class UFortItem* ExistingItem, int32 Count, int32 Level);
};

// 0x70 (0x360 - 0x2F0)
// Class FortniteGame.FortAccountItemDefinition
class UFortAccountItemDefinition : public UFortItemDefinition
{
public:
	struct FCurveTableRowHandle                  LevelToXpHandle;                                   // 0x2F0(0x10)(Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FCurveTableRowHandle                  LevelToSacrificeXpHandle;                          // 0x300(0x10)(Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FDataTableRowHandle                   SacrificeRecipe;                                   // 0x310(0x10)(Edit, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FDataTableRowHandle                   TransmogSacrificeRow;                              // 0x320(0x10)(Edit, NoDestructor, Protected, NativeAccessSpecifierProtected)
	TArray<struct FDataTableRowHandle>           ConversionRecipes;                                 // 0x330(0x10)(Edit, ZeroConstructor, AssetRegistrySearchable, Protected, NativeAccessSpecifierProtected)
	struct FDataTableRowHandle                   UpgradeRarityRecipeHandle;                         // 0x340(0x10)(Edit, NoDestructor, AssetRegistrySearchable, Protected, NativeAccessSpecifierProtected)
	class FString                                GrantToProfileType;                                // 0x350(0x10)(ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAccountItemDefinition");
		return Clss;
	}

};

// 0xC0 (0x420 - 0x360)
// Class FortniteGame.AthenaCosmeticItemDefinition
class UAthenaCosmeticItemDefinition : public UFortAccountItemDefinition
{
public:
	uint8                                        bIsShuffleTile : 1;                                // Mask : 0x1 0x360(0x1)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_13E9[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FRotator                              PreviewPawnRotationOffset;                         // 0x364(0xC)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FGameplayTagContainer                 DisallowedCosmeticTags;                            // 0x370(0x20)(Edit, Protected, NativeAccessSpecifierProtected)
	TArray<struct FAthenaCosmeticMaterialOverride> MaterialOverrides;                                 // 0x390(0x10)(Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	struct FGameplayTagContainer                 ObservedPlayerStats;                               // 0x3A0(0x20)(Edit, Protected, NativeAccessSpecifierProtected)
	TArray<class UFortMontageItemDefinitionBase*> BuiltInEmotes;                                     // 0x3C0(0x10)(Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<class UFortCosmeticVariant*>          ItemVariants;                                      // 0x3D0(0x10)(Edit, ExportObject, ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	TArray<struct FFortCosmeticVariantPreview>   ItemVariantPreviews;                               // 0x3E0(0x10)(Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	class FText                                  DirectAquisitionStyleDisclaimerOverride;           // 0x3F0(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	TArray<struct FFortCosmeticAdaptiveStatPreview> ItemObservedStatPreviews;                          // 0x408(0x10)(Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_13EA[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("AthenaCosmeticItemDefinition");
		return Clss;
	}

	bool HasVariants();
	bool HasModifiableVariants(class UFortItem* InItem);
	class UFortCosmeticVariant* GetVariantChannel(const struct FGameplayTag& InVariantChannelTag);
	struct FRotator GetPreviewPawnRotationOffset();
	TArray<struct FFortCosmeticVariantPreview>& GetItemVariantPreviews();
	TArray<struct FFortCosmeticAdaptiveStatPreview>& GetItemAdaptiveStatPreviews();
	void GetDefaultVariantChannels(TArray<struct FMcpVariantChannelInfo>* OutDefaultVariantData);
	struct FGameplayTagContainer& GetAdaptivePlayerStatsList();
};

// 0x10 (0x430 - 0x420)
// Class FortniteGame.AthenaCharacterPartItemDefinition
class UAthenaCharacterPartItemDefinition : public UAthenaCosmeticItemDefinition
{
public:
	//TArray<class UCustomCharacterPart*>        CharacterParts;                                    // 0x418(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_13EB[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("AthenaCharacterPartItemDefinition");
		return Clss;
	}

	TArray<class UCustomCharacterPart*> GetCharacterParts();
};

// 0x0 (0x430 - 0x430)
// Class FortniteGame.AthenaBackpackItemDefinition
class UAthenaBackpackItemDefinition : public UAthenaCharacterPartItemDefinition
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("AthenaBackpackItemDefinition");
		return Clss;
	}

};

// 0x398 (0x6C8 - 0x330)
// Class FortniteGame.BuildingActor
class ABuildingActor : public AActor
{
public:
	uint8                                        Pad_1400[0x70];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGuid                                 MyGuid;                                            // 0x3A0(0x10)(Net, ZeroConstructor, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                  InteractionText;                                   // 0x3B0(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	int32                                        OwnerPersistentID;                                 // 0x3C8(0x4)(Edit, Net, ZeroConstructor, DisableEditOnTemplate, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SavedHealthPct;                                    // 0x3CC(0x4)(ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FText                                  DisplayName;                                       // 0x3D0(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TSoftClassPtr<class UNavArea>                AreaClass;                                         // 0x3E8(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class UNavLinkDefinition>      NavigationLinksClass;                              // 0x410(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1401[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	uint8                                        bCollisionBlockedByPawns : 1;                      // Mask : 0x1 0x448(0x1)(Net, Transient, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1402[0xF];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class AFortAthenaVehicle*>            InitialOverlappingVehicles;                        // 0x458(0x10)(Net, ZeroConstructor, Transient, RepNotify, Protected, NativeAccessSpecifierProtected)
	int32                                        CurrentBuildingLevel;                              // 0x468(0x4)(Edit, Net, ZeroConstructor, DisableEditOnInstance, SaveGame, IsPlainOldData, RepNotify, NoDestructor, AssetRegistrySearchable, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        MaximumBuildingLevel;                              // 0x46C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UFortBuildingActorSet>     BuildingAttributeSetClass;                         // 0x470(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFortBuildingActorSet*                 BuildingAttributeSet;                              // 0x478(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFortBuildingActorSet*                 ReplicatedBuildingAttributeSet;                    // 0x480(0x8)(ExportObject, Net, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bPreviewBuildingActor;                             // 0x488(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1403[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FFortAttributeInitializationKey       AttributeInitKeys;                                 // 0x48C(0x10)(Edit, DisableEditOnInstance, NoDestructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_1404[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	enum class EAttributeInitLevelSource         AttributeInitLevelSource;                          // 0x4AC(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EAbilitySystemComponentCreationPolicy AbilitySystemComponentCreationPolicy;              // 0x4AD(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EPhysicalSurface                  PrimarySurfaceType;                                // 0x4AE(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortBaseWeaponDamage             WeaponResponseType;                                // 0x4AF(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LifespanAfterDeath;                                // 0x4B0(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bPlayedDying;                                      // 0x4B4(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1405[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UFortAbilitySystemComponent*           AbilitySystemComponent;                            // 0x4B8(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFortAbilitySystemComponent*           ReplicatedAbilitySystemComponent;                  // 0x4C0(0x8)(ExportObject, Net, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FGameplayCueParameters>        PendingDamageImpactCues;                           // 0x4C8(0x10)(ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPublic)
	float                                        HealthBarIndicatorWidth;                           // 0x4D8(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        HealthBarIndicatorVerticalOffset;                  // 0x4DC(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFortHealthBarIndicator*               HealthBarIndicator;                                // 0x4E0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        HealthBarIndicatorDifficultyRating;                // 0x4E8(0x4)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        ForceMetadataRelevant;                             // 0x4EC(0x1)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        LastMetadataRelevant;                              // 0x4ED(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EDynamicBuildingPlacementType     DynamicBuildingPlacementType;                      // 0x4EE(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ENavigationObstacleOverride       NavigationObstacleOverride;                        // 0x4EF(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsInvulnerable : 1;                               // Mask : 0x1 0x4F0(0x1)(BlueprintVisible, Net, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1406[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGameplayTagQuery                     IncomingDamageFilterQuery;                         // 0x4F8(0x48)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	uint8                                        bHasRegisteredActorStateAtLeastOnce : 1;           // Mask : 0x1 0x540(0x1)(Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bDirtyForLevelRecordSave : 1;                      // Mask : 0x2 0x540(0x1)(Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bSavedMetaPropertiesProcessed : 1;                 // Mask : 0x4 0x540(0x1)(Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bUpgradeUsesSameClass : 1;                         // Mask : 0x8 0x540(0x1)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bDisplayLevelInInfoWidget : 1;                     // Mask : 0x10 0x540(0x1)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bAllowUpgradeRegardlessOfPlayerBuildLevel : 1;     // Mask : 0x20 0x540(0x1)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bDisplayDamageNumbersInAthena : 1;                 // Mask : 0x40 0x540(0x1)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bUseFortHealthBarIndicator : 1;                    // Mask : 0x80 0x540(0x1)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bSurpressHealthBar : 1;                            // Mask : 0x1 0x541(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bCreateVerboseHealthLogs : 1;                      // Mask : 0x2 0x541(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bIsIndestructibleForTargetSelection : 1;           // Mask : 0x4 0x541(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bDestroyed : 1;                                    // Mask : 0x8 0x541(0x1)(BlueprintVisible, BlueprintReadOnly, Net, Transient, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bPersistToWorld : 1;                               // Mask : 0x10 0x541(0x1)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bRefreshFullSaveDataBeforeZoneSave : 1;            // Mask : 0x20 0x541(0x1)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bBeingDragged : 1;                                 // Mask : 0x40 0x541(0x1)(Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bRotateInPlaceGame : 1;                            // Mask : 0x80 0x541(0x1)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        : 1;                                               // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        bBoundsAreInvalidForMelee : 1;                     // Mask : 0x2 0x542(0x1)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsNavigationModifier : 1;                         // Mask : 0x4 0x542(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bBlockNavigationLinks : 1;                         // Mask : 0x8 0x542(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bCanExportNavigationCollisions : 1;                // Mask : 0x10 0x542(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bCanExportNavigationObstacle : 1;                  // Mask : 0x20 0x542(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bMirrorNavLinksX : 1;                              // Mask : 0x40 0x542(0x1)(Edit, DisableEditOnInstance, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bMirrorNavLinksY : 1;                              // Mask : 0x80 0x542(0x1)(Edit, DisableEditOnInstance, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIgnoreMoveGoalCollisionRadius : 1;                // Mask : 0x1 0x543(0x1)(Edit, DisableEditOnInstance, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bForceDisableRootNavigationRelevance : 1;          // Mask : 0x2 0x543(0x1)(Edit, DisableEditOnInstance, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bForceAutomationPass : 1;                          // Mask : 0x4 0x543(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bForceAutomationPass_NavmeshOnTop : 1;             // Mask : 0x8 0x543(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bForceAutomationPass_SmashableFlat : 1;            // Mask : 0x10 0x543(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsNavigationRelevant : 1;                         // Mask : 0x20 0x543(0x1)(Edit, DisableEditOnInstance, NoDestructor, AdvancedDisplay, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bBlockNavLinksInCell : 1;                          // Mask : 0x40 0x543(0x1)(Edit, DisableEditOnInstance, NoDestructor, AdvancedDisplay, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bUseHotSpotAsMoveGoalReplacement : 1;              // Mask : 0x80 0x543(0x1)(Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        : 1;                                               // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        bWorldReadyCalled : 1;                             // Mask : 0x2 0x544(0x1)(Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bBeingRotatedOrScaled : 1;                         // Mask : 0x4 0x544(0x1)(Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bBeingTranslated : 1;                              // Mask : 0x8 0x544(0x1)(Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bRotateInPlaceEditor : 1;                          // Mask : 0x10 0x544(0x1)(NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bEditorPlaced : 1;                                 // Mask : 0x20 0x544(0x1)(Net, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bPlayerPlaced : 1;                                 // Mask : 0x40 0x544(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, DisableEditOnTemplate, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bShouldTick : 1;                                   // Mask : 0x80 0x544(0x1)(Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bUsesDayPhaseChange : 1;                           // Mask : 0x1 0x545(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bIsDynamic : 1;                                    // Mask : 0x2 0x545(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, AssetRegistrySearchable, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bIsDynamicOnDedicatedServer : 1;                   // Mask : 0x4 0x545(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, AssetRegistrySearchable, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bIsMovable : 1;                                    // Mask : 0x8 0x545(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, AssetRegistrySearchable, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bRegisteredForDayPhaseChange : 1;                  // Mask : 0x10 0x545(0x1)(Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bForceDamagePing : 1;                              // Mask : 0x20 0x545(0x1)(Edit, BlueprintVisible, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bDestroyFoliageWhenPlaced : 1;                     // Mask : 0x40 0x545(0x1)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bObstructTrapTargeting : 1;                        // Mask : 0x80 0x545(0x1)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        : 1;                                               // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        bPredictedBuildingActor : 1;                       // Mask : 0x2 0x546(0x1)(Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bDoNotBlockBuildings : 1;                          // Mask : 0x4 0x546(0x1)(Edit, BlueprintVisible, Net, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bForceBlockBuildings : 1;                          // Mask : 0x8 0x546(0x1)(Edit, BlueprintVisible, Net, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIgnoreCollisionWithCriticalActors : 1;            // Mask : 0x10 0x546(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bDestroyOnPlayerBuildingPlacement : 1;             // Mask : 0x20 0x546(0x1)(Edit, BlueprintVisible, Net, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bUseCentroidForBlockBuildingsCheck : 1;            // Mask : 0x40 0x546(0x1)(Edit, BlueprintVisible, Net, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsPlayerBuildable : 1;                            // Mask : 0x80 0x546(0x1)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bFireBuiltAndDestroyedEvents : 1;                  // Mask : 0x1 0x547(0x1)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bAllowInteract : 1;                                // Mask : 0x2 0x547(0x1)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bAllowHostileBlueprintInteraction : 1;             // Mask : 0x4 0x547(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bInstantDeath : 1;                                 // Mask : 0x8 0x547(0x1)(Net, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bAlwaysUseNetCullDistanceSquaredForRelevancy : 1;  // Mask : 0x10 0x547(0x1)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bHighlightDirty : 1;                               // Mask : 0x20 0x547(0x1)(Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bForceReplayRollback : 1;                          // Mask : 0x40 0x547(0x1)(Net, Transient, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EFortBuildingType                 BuildingType;                                      // 0x548(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortTeam                         Team;                                              // 0x549(0x1)(Edit, BlueprintVisible, Net, ZeroConstructor, SaveGame, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1407[0xA];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bIgnoreAffiliationInteractHighlight;               // 0x554(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1408[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGameplayTagContainer                 ConstTags;                                         // 0x558(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, DisableEditOnInstance, EditConst, Protected, NativeAccessSpecifierProtected)
	struct FGameplayTagContainer                 StaticGameplayTags;                                // 0x578(0x20)(Protected, NativeAccessSpecifierProtected)
	UMulticastDelegateProperty_                  OnDied;                                            // 0x598(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnDamaged;                                         // 0x5A8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class AFortMission*                          AssociatedMissionParam;                            // 0x5B8(0x8)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AFortPlacementActor*                   OriginatingPlacementActor;                         // 0x5C0(0x8)(Net, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        BRMinDrawDistance;                                 // 0x5C8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        BRMaxDrawDistance;                                 // 0x5CC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        StWMinDrawDistance;                                // 0x5D0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        StWMaxDrawDistance;                                // 0x5D4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	UMulticastDelegateProperty_                  OnInteract;                                        // 0x5D8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FCurveTableRowHandle                  InteractionSpeed;                                  // 0x5E8(0x10)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bSuppressInteractionWidget;                        // 0x5F8(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1409[0x37];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        DataVersion;                                       // 0x630(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        LastTakeHitTimeTimeout;                            // 0x634(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USoundBase*                            PlayHitSound;                                      // 0x638(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        CullDistance;                                      // 0x640(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SnapGridSize;                                      // 0x644(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        VertSnapGridSize;                                  // 0x648(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               SnapOffset;                                        // 0x64C(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               CentroidOffset;                                    // 0x658(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               BaseLocToPivotOffset;                              // 0x664(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                CustomState;                                       // 0x670(0x10)(Net, ZeroConstructor, SaveGame, RepNotify, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<TSubclassOf<class UActorComponent>>   ComponentTypesWhitelistedForReplication;           // 0x680(0x10)(Edit, ZeroConstructor, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	class UBuildingActorHotSpotConfig*           HotSpotConfig;                                     // 0x690(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	UMulticastDelegateProperty_                  OnBuildingHealthChanged;                           // 0x698(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnActorHealthChanged;                              // 0x6A8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_140A[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AFortVolume*                           VolumeSpawnedBy;                                   // 0x6C0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("BuildingActor");
		return Clss;
	}

	bool UseDefaultHealthBar();
	void SnapDmgVisualsToCurrentHealth();
	void SilentDie();
	bool ShouldDie(float Damage, class AController* EventInstigator, class AActor* DamageCauser);
	void SetQuestHighlight(bool Enabled);
	void SetNavigationModifier(bool bEnableModifier);
	void SetHealthBarIndicatorDifficultyRating(int32 InDisplayLevel);
	void SetHealth(float NewHealth);
	void SetCustomState(const class FString& NewState);
	void SetCanExportNavigationObstacle(bool InCanExportNavigationObstacle);
	void RemoveEditorOnlyInstanceGameplayTags(struct FGameplayTagContainer& TagsToRemove);
	void RemoveAbilitySystemComponentAfterAutoBuildIfFullHealth();
	void PlacedByPlayer(class AFortPlayerStateZone* PlayerState);
	void PlacedByPlacementTool();
	void OnWorldReady();
	void OnSetCustomDepthStencilValue(TArray<class UPrimitiveComponent*>& PrimComponents, bool bUseCustomDepth, int32 StencilValue, bool* bOutConsume);
	void OnRep_Team();
	void OnRep_InstantDeath();
	void OnRep_InitialOverlappingVehicles();
	void OnRep_CustomState();
	void OnRep_CurrentBuildingLevel();
	void OnRep_BuildingAttributeSet();
	void OnRep_bForceReplayRollback();
	void OnRep_bCollisionBlockedByPawns();
	void OnRep_AbilitySystemComponent();
	void OnMatchStarted();
	void OnDeathServer(float Damage, struct FGameplayTagContainer& DamageTags, const struct FVector& Momentum, struct FHitResult& HitInfo, class AController* InstigatedBy, class AActor* DamageCauser, const struct FGameplayEffectContextHandle& EffectContext);
	void OnDeathPlayEffects(float Damage, struct FGameplayTagContainer& DamageTags, const struct FVector& Momentum, struct FHitResult& HitInfo, class AFortPawn* InstigatedBy, class AActor* DamageCauser, const struct FGameplayEffectContextHandle& EffectContext);
	void OnDayPhaseChanged(enum class EFortDayPhase CurrentDayPhase, enum class EFortDayPhase PreviousDayPhase, bool bAtCreation);
	void OnDamageServer(float Damage, struct FGameplayTagContainer& DamageTags, const struct FVector& Momentum, struct FHitResult& HitInfo, class AController* InstigatedBy, class AActor* DamageCauser, const struct FGameplayEffectContextHandle& EffectContext);
	void OnDamagePlayEffects(float Damage, struct FGameplayTagContainer& DamageTags, const struct FVector& Momentum, struct FHitResult& HitInfo, class AFortPawn* InstigatedBy, class AActor* DamageCauser, const struct FGameplayEffectContextHandle& EffectContext);
	void OnBuildingActorInitialized(enum class EFortBuildingInitializationReason InitializationReason, enum class EFortBuildingPersistentState BuildingPersistentState);
	bool IsPlayerBuilt();
	bool IsDamaged();
	bool IsAcceptablePositionForPlacement(struct FVector& InLocation, struct FRotator& InRotation, class AFortDecoTool* DecoTool, bool bIsCDO, class FText* OutFailureReason);
	void InitializeKismetSpawnedBuildingActor(class ABuildingActor* BuildingOwner, class AFortPlayerController* SpawningController, bool bUsePlayerBuildAnimations);
	bool HasHealthLeft();
	void HandleDestroyed();
	float GetShieldPercent();
	float GetShieldOrHealthPercent();
	float GetShield();
	class AFortPlayerState* GetOwningPlayerState();
	class AController* GetOwningController();
	float GetMissingHealth();
	float GetMaxShield();
	float GetMaxHealth();
	float GetHealthPercent();
	float GetHealth();
	void GetEditorTestTags(struct FGameplayTagContainer* TagContainer);
	class FString GetCustomState();
	int32 GetCurrentBuildingLevel();
	struct FVector GetCentroid();
	void GameplayCue_InstantDeath(enum class EGameplayCueEvent EventType, const struct FGameplayCueParameters& Parameters);
	void GameplayCue_Healing(enum class EGameplayCueEvent EventType, const struct FGameplayCueParameters& Parameters);
	void GameplayCue_Damage(enum class EGameplayCueEvent EventType, const struct FGameplayCueParameters& Parameters);
	void ForceBuildingHealth(float NewHealth);
	void CustomStateChanged();
	bool BlueprintOnLocalInteract(class AFortPlayerPawn* InteractingPawn);
	void BlueprintOnInteract(class AFortPawn* InteractingPawn);
	void BlueprintOnBeginInteract();
	class FText BlueprintGetInteractionString(class AFortPawn* InteractingPawn);
	class FText BlueprintGetFailedInteractionString(class AFortPawn* InteractingPawn);
	bool BlueprintCanInteract(class AFortPawn* InteractingPawn);
	void AddEditorOnlyInstanceGameplayTags(struct FGameplayTagContainer& NewTags);
};

// 0xC8 (0x790 - 0x6C8)
// Class FortniteGame.BuildingGameplayActor
class ABuildingGameplayActor : public ABuildingActor
{
public:
	uint8                                        Pad_140E[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UFortAbilitySet*                       AbilitySet;                                        // 0x6D8(0x8)(ZeroConstructor, Deprecated, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFortAbilitySet*                       InherentAbilitySets;                               // 0x6E0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_140F[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UFortDamageSet*                        DamageSet;                                         // 0x708(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDataTableRowHandle                   DamageStatHandle;                                  // 0x710(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	bool                                         bIgnoreInstigatorCollision;                        // 0x720(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bAddOwnerVelocity;                                 // 0x721(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1410[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        AbilitySourceLevel;                                // 0x724(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FBuildingGameplayActorAbilityDeliveryInfo DeliverableAbilityInfo;                            // 0x728(0x48)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	uint8                                        bApplyDefaultEnabledAbilityBucketsOnInit : 1;      // Mask : 0x1 0x770(0x1)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bUseSimpleActorTouchSetupForAbilityBuckets : 1;    // Mask : 0x2 0x770(0x1)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1411[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UPrimitiveComponent*                   RegisteredTouchComponent;                          // 0x778(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1412[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UProjectileMovementComponent*          ProjectileMovementComponent;                       // 0x788(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("BuildingGameplayActor");
		return Clss;
	}

	void SetTouchComponentForAbilityDeliveryInfo(class UPrimitiveComponent* PrimitiveComponent);
	void SetInitialVelocity(struct FVector& InitialVelocity);
	void SetIgnoreInstigatorCollision(bool bShouldIgnore);
	void SetAbilitySourceLevel(int32 NewAbilitySourceLevel);
	void OnReplicatedVelocityStartOrStop(bool bStart);
	void OnRegisteredTouchComponentEndOverlap(class UPrimitiveComponent* OverlappedComp, class AActor* Other, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void OnRegisteredTouchComponentBeginOverlap(class UPrimitiveComponent* OverlappedComp, class AActor* Other, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult);
	void OnDropped(bool bValidLocation, bool bPassesPlacementRestrictions, bool bWasIntentionallyPlaced);
	void K2_RemoveGameplayCue(const struct FGameplayTag& GameplayCueTag);
	void K2_ExecuteGameplayCueWithParams(const struct FGameplayTag& GameplayCueTag, struct FGameplayCueParameters& GameplayCueParameters);
	void K2_ExecuteGameplayCue(const struct FGameplayTag& GameplayCueTag, const struct FGameplayEffectContextHandle& Context);
	void K2_AddGameplayCue(const struct FGameplayTag& GameplayCueTag, const struct FGameplayEffectContextHandle& Context);
	struct FTransform GetTargetingSourceTransform(enum class EFortAbilityTargetingSource Source);
	void ForceChangeOwnerInstigator(class AFortPlayerController* NewInstigator);
	void EnableAbilityDeliveryInfo(const struct FGameplayTag& BucketTag);
	void DisableAbilityDeliveryInfo(const struct FGameplayTag& BucketTag);
};

// 0x498 (0xC28 - 0x790)
// Class FortniteGame.AthenaBarrierFlag
class AAthenaBarrierFlag : public ABuildingGameplayActor
{
public:
	enum class EBarrierFlagState                 CurrentState;                                      // 0x790(0x1)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EBarrierFoodTeam                  FoodTeam;                                          // 0x791(0x1)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1413[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FBarrierFlagDisplayData               FoodDisplayData;                                   // 0x798(0x248)(Edit, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_1414[0x248];                                   // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("AthenaBarrierFlag");
		return Clss;
	}

	void OnStateChange(enum class EBarrierFlagState NewState);
	void OnRep_FoodTeam();
	void OnRep_CurrentState();
	void OnNewFoodTeam(enum class EBarrierFoodTeam NewFoodTeam);
	class AAthenaBarrierObjective* GetObjectiveActor();
	struct FVector GetMeshScale();
	class UStaticMesh* GetHeadMesh();
	void ClientSetLlamaRotation(const struct FRotator& NewDirection);
	void ClientSetIsFriendly(bool bIsFriendlyLlama);
};

// 0xB0 (0x840 - 0x790)
// Class FortniteGame.AthenaBarrierObjective
class AAthenaBarrierObjective : public ABuildingGameplayActor
{
public:
	uint8                                        Pad_1415[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FBarrierObjectiveDisplayData          FoodDisplayData;                                   // 0x7B0(0x30)(Edit, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_1416[0x30];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	enum class EBarrierFoodTeam                  FoodTeam;                                          // 0x810(0x1)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EBarrierObjectiveDamageState      ObjectiveDamageState;                              // 0x811(0x1)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1417[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        HeadRotationYaw;                                   // 0x814(0x4)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bAllowDamage;                                      // 0x818(0x1)(Edit, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1418[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FScalableFloat                        DamageFromSword;                                   // 0x820(0x20)(Edit, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("AthenaBarrierObjective");
		return Clss;
	}

	void UpdateInGameHealth(float NewHealthPercent);
	void SetHeadMesh(class UStaticMesh* NewMesh, const struct FVector& NewScale, const struct FVector& NewOffset, TArray<class UMaterialInterface*>& MaterialsToSwap);
	void OnRep_ObjectiveDamageState();
	void OnRep_HeadRotationYaw();
	void OnRep_FoodTeam();
	void OnNewDamageState(enum class EBarrierObjectiveDamageState NewState);
	void OnHeadRotationSet(float NewYaw);
	void OnGeneratorDestroyed();
	bool IsFriendlyTeam();
	enum class EBarrierObjectiveDamageState GetObjectiveDamageState();
	enum class EBarrierFoodTeam GetFoodTeam();
	void ApplyTimerGE(float TimerLength);
};

// 0xF0 (0x510 - 0x420)
// Class FortniteGame.AthenaBattleBusItemDefinition
class UAthenaBattleBusItemDefinition : public UAthenaCosmeticItemDefinition
{
public:
	//TSoftObjectPtr<class USoundBase>           IgnitionSound;                                     // 0x418(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1419[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftObjectPtr<class USoundBase>             LobbyLoopingMusic;                                 // 0x440(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class USoundBase>             LobbyLoopingSound;                                 // 0x468(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class USoundBase>             FlightLoopingMusic;                                // 0x490(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class USoundBase>             FlightLoopingSound;                                // 0x4B8(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftClassPtr<class ABattleBusCosmeticInstanceBase> BusPrefabClass;                                    // 0x4E0(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_141A[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("AthenaBattleBusItemDefinition");
		return Clss;
	}

	class USoundBase* GetLobbyLoopingSound();
	class USoundBase* GetLobbyLoopingMusic();
	class USoundBase* GetIgnitionSound();
	class USoundBase* GetFlightLoopingSound();
	class USoundBase* GetFlightLoopingMusic();
	TSoftClassPtr<class ABattleBusCosmeticInstanceBase> GetBusPrefabClass();
};

// 0x80 (0x810 - 0x790)
// Class FortniteGame.AthenaBigBaseWall
class AAthenaBigBaseWall : public ABuildingGameplayActor
{
public:
	float                                        WallGravity;                                       // 0x790(0x4)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        TimeUntilWallComesDown;                            // 0x794(0x4)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bResetBool;                                        // 0x798(0x1)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EBarrierState                     BarrierState;                                      // 0x799(0x1)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_141B[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FScalableFloat                        ZKillLevel;                                        // 0x7A0(0x20)(Edit, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_141C[0x50];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("AthenaBigBaseWall");
		return Clss;
	}

	void WallStartingToComeDown(bool bIsOnBurgerSide);
	void UpdateWallTime(float Digit_0, float Digit_1, float Digit_2, float Digit_3);
	void ShowOrHideTimer(bool bNewVisibleState);
	void OnRep_WallGravity();
	void OnRep_TimeUntilWallComesDown();
	void OnRep_ResetBool();
	void OnRep_BarrierState();
	void OnNewBarrierState(enum class EBarrierState NewState);
};

// 0x0 (0x200 - 0x200)
// Class FortniteGame.AthenaBigBaseWallMovementComp
class UAthenaBigBaseWallMovementComp : public UProjectileMovementComponent
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("AthenaBigBaseWallMovementComp");
		return Clss;
	}

};

// 0x0 (0x280 - 0x280)
// Class FortniteGame.AthenaBuildingActorChildComponent
class UAthenaBuildingActorChildComponent : public UChildActorComponent
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("AthenaBuildingActorChildComponent");
		return Clss;
	}

};

// 0x0 (0x420 - 0x420)
// Class FortniteGame.AthenaCallingCardItemDefinition
class UAthenaCallingCardItemDefinition : public UAthenaCosmeticItemDefinition
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("AthenaCallingCardItemDefinition");
		return Clss;
	}

};

// 0x398 (0xB28 - 0x790)
// Class FortniteGame.AthenaCapturePoint
class AAthenaCapturePoint : public ABuildingGameplayActor
{
public:
	class UMaterialInstanceDynamic*              HUDIndicatorMID;                                   // 0x790(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSlateBrush                           IndicatorBrush;                                    // 0x798(0x88)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FSlateBrush                           MapIconBrush;                                      // 0x820(0x88)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FSlateBrush                           CompassIconBrush;                                  // 0x8A8(0x88)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	int32                                        IconMaterialIndexParameter;                        // 0x930(0x4)(Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bPermanentShutdown;                                // 0x934(0x1)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_141F[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        ShutdownTime;                                      // 0x938(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1420[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UFortSlateHUDIndicator*                HUDIndicatorRef;                                   // 0x940(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             CurrHUDIndicatorSize;                              // 0x948(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInstanceDynamic*              CapturePointMID_Neutral;                           // 0x950(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInstanceDynamic*              CapturePointMID_AllyCaptured;                      // 0x958(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInstanceDynamic*              CapturePointMID_AllyCapping;                       // 0x960(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInstanceDynamic*              CapturePointMID_EnemyCaptured;                     // 0x968(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInstanceDynamic*              CapturePointMID_EnemyCapping;                      // 0x970(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bUseHUDIndicator : 1;                              // Mask : 0x1 0x978(0x1)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1421[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  HUDStyle;                                          // 0x97C(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               HUDOffset;                                         // 0x984(0xC)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bHUDClampToScreenEdge : 1;                         // Mask : 0x1 0x990(0x1)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1422[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector2D                             MinHUDIndicatorSize;                               // 0x994(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector2D                             MaxHUDIndicatorSize;                               // 0x99C(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DistanceForMinHUDSize;                             // 0x9A4(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInstance*                     CapturePointMat_Neutral;                           // 0x9A8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInstance*                     CapturePointMat_AllyCaptured;                      // 0x9B0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInstance*                     CapturePointMat_AllyCapping;                       // 0x9B8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInstance*                     CapturePointMat_EnemyCaptured;                     // 0x9C0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInstance*                     CapturePointMat_EnemyCapping;                      // 0x9C8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1423[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UBoxComponent*                         StructuralComponent;                               // 0x9D8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBoxComponent*                         CaptureComponent;                                  // 0x9E0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class AFortPlayerPawnAthena*>         OverlappedAthenaPawns;                             // 0x9E8(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	uint8                                        bActivated : 1;                                    // Mask : 0x1 0x9F8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, DisableEditOnInstance, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1424[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	enum class EContentionRuleType               ContentionRules;                                   // 0x9FC(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1425[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<enum class EFortTeam>                 TeamsBarredFromCapture;                            // 0xA00(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	bool                                         bSupportsPerPlayerCapturing;                       // 0xA10(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1426[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FScalableFloat                        PercentIncreasePerPlayerCaptor;                    // 0xA18(0x20)(Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                        BonusPercentIncreasePerPlayerCaptor;               // 0xA38(0x20)(Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	TArray<struct FScalableFloat>                CaptureSpeedPerPlayerList;                         // 0xA58(0x10)(Edit, BlueprintVisible, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                        PercentDecreaseNoCaptor;                           // 0xA68(0x20)(Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	float                                        CachedPercentIncreasePerPlayerCaptor;              // 0xA88(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        CachedBonusPercentIncreasePerPlayerCaptor;         // 0xA8C(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        CachedPercentDecreaseNoCaptor;                     // 0xA90(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1427[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<float>                                CachedCaptureSpeedPerPlayerList;                   // 0xA98(0x10)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	uint8                                        bLocked : 1;                                       // Mask : 0x1 0xAA8(0x1)(Edit, BlueprintVisible, Net, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1428[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        UnlockInterval;                                    // 0xAAC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class ECapturePointUnlockRules          UnlockRules;                                       // 0xAB0(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1429[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        NumCapturingPoint;                                 // 0xAB4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EFortTeam                         TeamCapturingPoint;                                // 0xAB8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EFortTeam                         TeamControllingPoint;                              // 0xAB9(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_142A[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AFortTeamInfoAthena*                   TeamInfoControllingPoint;                          // 0xAC0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EFortTeam                         TeamOwningPoint;                                   // 0xAC8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class ECapturePointState                CaptureState;                                      // 0xAC9(0x1)(Edit, Net, ZeroConstructor, Transient, EditConst, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_142B[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        CapturePercentage;                                 // 0xACC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ReplicatedCapturePercentage;                       // 0xAD0(0x4)(Edit, Net, ZeroConstructor, Transient, EditConst, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_142C[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	UMulticastDelegateProperty_                  OnCapturePointStateChanged;                        // 0xAD8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	UMulticastDelegateProperty_                  OnTeamOwningPointChanges;                          // 0xAE8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	UMulticastDelegateProperty_                  OnCaptureLockEvent;                                // 0xAF8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnCaptureLockBrokenEvent;                          // 0xB08(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_142D[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("AthenaCapturePoint");
		return Clss;
	}

	void SetActivatedState(bool bInActivated);
	void OnRep_ReplicatedCapturePercentage();
	void OnRep_IconMaterialIndexParameter();
	void OnRep_CaptureState();
	void OnRep_bPermanentShutdown();
	void OnRep_bLocked();
	void OnRep_bActivated();
	void OnLeaveCapturePoint(class UPrimitiveComponent* OverlappedComp, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void OnEnterCapturePoint(class UPrimitiveComponent* OverlappedComp, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult);
	void OnCapturePointStateChange(enum class ECapturePointState InState, enum class EFortTeam InTeam);
	void OnCapturePointLockStateChange(bool bInLocked);
	void OnCapturePointActiveStateChange(bool bInActive);
	bool HasDancingPlayer();
	int32 GetNumDancingPlayers();
	enum class ECapturePointState GetCaptureState();
};

// 0x1E0 (0x540 - 0x360)
// Class FortniteGame.FortQuestItemDefinition
class UFortQuestItemDefinition : public UFortAccountItemDefinition
{
public:
	enum class EFortQuestType                    QuestType;                                         // 0x360(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AssetRegistrySearchable, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EQuestVisualStyle                 VisualStyle;                                       // 0x361(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        : 3;                                               // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        bShouldDisplayOverallQuestInformation : 1;         // Mask : 0x8 0x362(0x1)(Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bAthenaUpdateObjectiveOncePerMatch : 1;            // Mask : 0x10 0x362(0x1)(Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bAthenaMustCompleteInSingleMatch : 1;              // Mask : 0x20 0x362(0x1)(Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bUpdateObjectiveOncePerMatch : 1;                  // Mask : 0x40 0x362(0x1)(Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        IsStreamingRequired : 1;                           // Mask : 0x80 0x362(0x1)(Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bExpandsStormShield : 1;                           // Mask : 0x1 0x363(0x1)(Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bHidden : 1;                                       // Mask : 0x2 0x363(0x1)(Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bIncludedInCategories : 1;                         // Mask : 0x4 0x363(0x1)(Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bAutoLaunch : 1;                                   // Mask : 0x8 0x363(0x1)(Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bDeprecated : 1;                                   // Mask : 0x10 0x363(0x1)(Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bDisableBackendConditionEvaluation : 1;            // Mask : 0x20 0x363(0x1)(Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bAllowTileMatching : 1;                            // Mask : 0x40 0x363(0x1)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bAllowPlayNowNavigation : 1;                       // Mask : 0x80 0x363(0x1)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bAllowMissionAlertMatchesBypassingTileRequirements : 1; // Mask : 0x1 0x364(0x1)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bTutorialQuest : 1;                                // Mask : 0x2 0x364(0x1)(Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_142F[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        ExpirationDuration;                                // 0x368(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        ObjectiveCompletionCount;                          // 0x36C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FFortItemQuantityPair>         Rewards;                                           // 0x370(0x10)(Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	class UDataTable*                            RewardsTable;                                      // 0x380(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1430[0x30];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FFortHiddenRewardQuantityPair> HiddenRewards;                                     // 0x3B8(0x10)(Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<struct FFortMcpQuestRewardInfo>       SelectableRewards;                                 // 0x3C8(0x10)(Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<struct FFortMcpQuestObjectiveInfo>    Objectives;                                        // 0x3D8(0x10)(Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	struct FGameplayTagContainer                 Prerequisites;                                     // 0x3E8(0x20)(Edit, Protected, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UFortQuestItemDefinition> PrerequisiteQuest;                                 // 0x408(0x28)(Edit, DisableEditOnInstance, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FDataTableRowHandle                   PrerequisiteObjective;                             // 0x430(0x10)(Edit, NoDestructor, Protected, NativeAccessSpecifierProtected)
	float                                        Weight;                                            // 0x440(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint16                                       GranterWindowPeriodMinutes;                        // 0x444(0x2)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint16                                       GranterCooldownPeriodSeconds;                      // 0x446(0x2)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FDataTableRowHandle                   Category;                                          // 0x448(0x10)(Edit, NoDestructor, Protected, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UFortConversation>      IntroConversation;                                 // 0x458(0x28)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UFortConversation>      SelectRewardsConversation;                         // 0x480(0x28)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UFortConversation>      ClaimConversation;                                 // 0x4A8(0x28)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FText                                  RewardHeaderText;                                  // 0x4D0(0x18)(Edit, Protected, NativeAccessSpecifierProtected)
	class FText                                  RewardDescription;                                 // 0x4E8(0x18)(Edit, Protected, NativeAccessSpecifierProtected)
	class FText                                  CompletionText;                                    // 0x500(0x18)(Edit, Protected, NativeAccessSpecifierProtected)
	TArray<struct FFortQuestMissionCreationContext> MissionCreationContexts;                           // 0x518(0x10)(Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	struct FFortMissionConfigDataParams          MissionConfigMetadata;                             // 0x528(0x10)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	uint32                                       ClaimPriority;                                     // 0x538(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        SortPriority;                                      // 0x53C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortQuestItemDefinition");
		return Clss;
	}

	bool ShouldDisplayOverallQuestInformation();
	bool ShouldAutoLaunch();
	bool IsTutorialQuest();
	bool IsIncludedInCategories();
	bool IsHidden();
	bool IsDeprecated();
	float GetWeight();
	enum class EQuestVisualStyle GetVisualStyle();
	bool GetUpdateObjectiveOncePerMatch();
	class UFortConversation* GetSelectRewardsConversation();
	TArray<struct FFortMcpQuestRewardInfo> GetSelectableRewards_BP();
	enum class EFortQuestRewardType GetRewardType();
	TArray<struct FFortItemQuantityPair> GetRewards_BP();
	struct FFortRewardInfo GetRewardInfo_BP();
	class FText GetRewardHeaderText();
	class FText GetRewardDescription();
	enum class EFortQuestType GetQuestType();
	class UFortQuestItemDefinition* GetPrerequisiteQuest();
	struct FDataTableRowHandle GetPrerequisiteObjective();
	int32 GetPartialObjectiveCompletionCount();
	TArray<struct FFortMcpQuestObjectiveInfo> GetObjectives_BP();
	int32 GetObjectiveNeededToComplete();
	class UFortConversation* GetIntroConversation();
	TArray<struct FFortHiddenRewardQuantityPair> GetHiddenRewards_BP();
	class FText GetCompletionText();
	class UFortConversation* GetClaimConversation();
	struct FFortRewardInfo GetChallengeChainRewardInfo(bool bGetAllQuestRewards);
	struct FDataTableRowHandle GetCategory();
	bool GetAthenaUpdateObjectiveOncePerMatch();
	bool GetAthenaObjectiveMustBeCompletedInASingleMatch();
	bool ExpandsStormShield();
	bool AllowsTileMatching();
	bool AllowsPlayNowNavigation();
};

// 0x0 (0x540 - 0x540)
// Class FortniteGame.AthenaChallengeBundleQuestDefinition
class UAthenaChallengeBundleQuestDefinition : public UFortQuestItemDefinition
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("AthenaChallengeBundleQuestDefinition");
		return Clss;
	}

};

// 0x60 (0x88 - 0x28)
// Class FortniteGame.FortItem
class UFortItem : public UObject
{
public:
	uint8                                        Pad_1441[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	UMulticastDelegateProperty_                  OnItemChanged;                                     // 0x40(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_1442[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	UMulticastDelegateProperty_                  OnItemDestroyed;                                   // 0x68(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_1443[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	uint8                                        bLoadedFromSave : 1;                               // Mask : 0x1 0x80(0x1)(Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bTemporaryItemOwningController : 1;                // Mask : 0x2 0x80(0x1)(Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1444[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortItem");
		return Clss;
	}

	bool TryGetCategory(enum class EFortItemCategoryOrdinal Ordinal, class FText* OutCategoryDisplayName, bool* OutHasIcon, struct FFortMultiSizeBrush* OutCategoryIconBrush);
	void SetOwningControllerForTemporaryItem(class AFortPlayerController* InController);
	bool IsTemporaryItem();
	bool IsSlotted();
	bool IsSchematicOrCraftedWeapon();
	bool IsSchematic();
	bool IsInventoryOverflowItem();
	bool IsInStorageVault();
	bool IsEquipped();
	bool IsEquipable(class AFortPlayerController* EquippingPC, bool bGamepadSwitchingForHeroAbilities);
	bool IsDroppedItem();
	bool IsActivatable(class AFortPlayerController* FortPC, struct FGameplayTagContainer* FailureReason);
	bool HasRarityUpgrade();
	bool HasEvolutions();
	bool HasDurability();
	class FText GetUpgradeRestrictionReasonText(enum class EItemUpgradeRestrictionReason Reason);
	class UFortPersistentResourceItemDefinition* GetUpgradeResourceItemDefinition();
	int32 GetUpgradeCost();
	enum class EFortItemType GetType();
	enum class EFortItemTier GetTier();
	bool GetTertiaryCategory(class FText* ItemCategoryText, struct FSlateBrush* ItemCategoryBrush, enum class EFortBrushSize BrushSize);
	TSoftObjectPtr<class UTexture2D> GetSmallPreviewImage();
	bool GetSecondaryCategory(class FText* ItemCategoryText, struct FSlateBrush* ItemCategoryBrush, enum class EFortBrushSize BrushSize);
	class FText GetSearchTags();
	enum class EFortItemType GetSchematicResultType();
	class UFortWeaponItemDefinition* GetSchematicCraftingResultOrCraftedWeaponBP();
	class UFortItemDefinition* GetSchematicCraftingResultBP();
	int32 GetRemainingAmmo();
	int32 GetRecycleValue();
	int32 GetRating();
	struct FLinearColor GetRaritySecondaryColor();
	struct FLinearColor GetRarityColor();
	enum class EFortRarity GetRarity();
	bool GetPrimaryCategory(class FText* ItemCategoryText);
	TArray<TSoftObjectPtr<class UObject>> GetPreviewAssets();
	class AFortPlayerController* GetOwningController();
	int32 GetNumInStack();
	float GetNormalizedDurability();
	enum class EFortItemTier GetMaxTier();
	int32 GetMaxLevel();
	int32 GetLoadedAmmo();
	int32 GetLevelRelativeCostForRarityUpgrade();
	int32 GetLevel();
	TSoftObjectPtr<class UTexture2D> GetLargePreviewImage();
	class FText GetItemTypeName(bool bUsePlural);
	struct FGuid GetItemGuid();
	class UFortItemDefinition* GetItemDefinitionBP();
	enum class EFortInventoryFilter GetFilterCategory();
	class FText GetEvolveRestrictionReasonText(enum class EItemEvolutionRestrictionReason Reason);
	float GetDurability();
	class FText GetDisplayNameWithoutPrefix();
	class FText GetDisplayName();
	class FText GetDescription();
	float GetCooldownTimeRemaining(class AFortPlayerController* FortPC, float* CooldownDuration);
	TArray<struct FFortAlterationSlotStatus> GetAlterationSlots();
	TArray<class UFortAlterationItemDefinition*> GetActiveAlterations(int32 PretendLevel);
	bool DoesMatchSearchString(const class FString& SearchString);
	bool CanUpgradeItemRarity(TArray<enum class EItemEvolutionRestrictionReason>* OutRestrictionReasons);
	bool CanEvolve(TArray<enum class EItemEvolutionRestrictionReason>* OutRestrictionReasons);
	bool CanBeUpgraded(TArray<enum class EItemUpgradeRestrictionReason>* OutRestrictionReasons);
	bool CanBeUnslotted();
	bool CanBeDropped();
	bool AllowedToBeLockedInInventory();
};

// 0x58 (0xE0 - 0x88)
// Class FortniteGame.FortAccountItem
class UFortAccountItem : public UFortItem
{
public:
	int32                                        Level;                                             // 0x88(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        Xp;                                                // 0x8C(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        Item_seen;                                         // 0x90(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        Favorite;                                          // 0x94(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        Max_level_bonus;                                   // 0x98(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1445[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                Inventory_overflow_date;                           // 0xA0(0x10)(ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFortAccountItemDefinition*            ItemDefinition;                                    // 0xB0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                InstanceId;                                        // 0xB8(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                TemplateId;                                        // 0xC8(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        Quantity;                                          // 0xD8(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bIsLocalOnlyItem;                                  // 0xDC(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bIsPendingBeingMarkedAsSeen;                       // 0xDD(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bNeedsResolveMarkedAsSeen;                         // 0xDE(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1446[0x1];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAccountItem");
		return Clss;
	}

	void MarkItemAsSeenBP();
	bool IsRefundable();
	bool IsFavorite();
	bool HasBeenSeenLocally();
	TArray<struct FFortItemQuantityPair> GetRefundResults();
	TArray<struct FFortItemQuantityPair> GetRecyclingRefunds();
};

// 0x20 (0x100 - 0xE0)
// Class FortniteGame.AthenaCosmeticAccountItem
class UAthenaCosmeticAccountItem : public UFortAccountItem
{
public:
	TArray<struct FMcpVariantChannelInfo>        VariantChannels;                                   // 0xE0(0x10)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	TArray<struct FMcpVariantReader>             Variants;                                          // 0xF0(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("AthenaCosmeticAccountItem");
		return Clss;
	}

	bool HasMultipleVariants();
	bool HasCosmeticVariance();
};

// 0x0 (0x100 - 0x100)
// Class FortniteGame.AthenaCharacterItem
class UAthenaCharacterItem : public UAthenaCosmeticAccountItem
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("AthenaCharacterItem");
		return Clss;
	}

};

// 0x10 (0x430 - 0x420)
// Class FortniteGame.AthenaCharacterItemDefinition
class UAthenaCharacterItemDefinition : public UAthenaCosmeticItemDefinition
{
public:
	//class UFortHeroType*                       HeroDefinition;                                    // 0x418(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAthenaBackpackItemDefinition*         DefaultBackpack;                                   // 0x420(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1447[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("AthenaCharacterItemDefinition");
		return Clss;
	}

};

// 0x60 (0x480 - 0x420)
// Class FortniteGame.FortMontageItemDefinitionBase
class UFortMontageItemDefinitionBase : public UAthenaCosmeticItemDefinition
{
public:
	//TSoftObjectPtr<class UAnimMontage>         Animation;                                         // 0x418(0x28)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_144A[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftObjectPtr<class UAnimMontage>           AnimationFemaleOverride;                           // 0x440(0x28)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        PreviewLoops;                                      // 0x468(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        PreviewLength;                                     // 0x46C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        EmoteCooldownSecs;                                 // 0x470(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bMontageContainsFacialAnimation;                   // 0x474(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bPlayRandomSection;                                // 0x475(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bSwitchToHarvestingToolOnUse;                      // 0x476(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bHolsterWeapon;                                    // 0x477(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_144B[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortMontageItemDefinitionBase");
		return Clss;
	}

	void PreviewInPIE();
	class UAnimMontage* GetAnimationHardReference(enum class EFortCustomBodyType BodyType, enum class EFortCustomGender Gender);
	TSoftObjectPtr<class UAnimMontage> GetAnimation(enum class EFortCustomBodyType BodyType, enum class EFortCustomGender Gender);
};

// 0x0 (0x480 - 0x480)
// Class FortniteGame.AthenaConsumableEmoteItemDefinition
class UAthenaConsumableEmoteItemDefinition : public UFortMontageItemDefinitionBase
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("AthenaConsumableEmoteItemDefinition");
		return Clss;
	}

};

// 0x0 (0x540 - 0x540)
// Class FortniteGame.AthenaDailyQuestDefinition
class UAthenaDailyQuestDefinition : public UFortQuestItemDefinition
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("AthenaDailyQuestDefinition");
		return Clss;
	}

};

// 0x40 (0x4C0 - 0x480)
// Class FortniteGame.AthenaDanceItemDefinition
class UAthenaDanceItemDefinition : public UFortMontageItemDefinitionBase
{
public:
	//bool                                       bMovingEmote;                                      // 0x478(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	//bool                                       bMoveForwardOnly;                                  // 0x479(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	//float                                      WalkForwardSpeed;                                  // 0x47C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class UFortGameplayAbility>    CustomDanceAbility;                                // 0x480(0x28)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FText                                  ChatTriggerCommandName;                            // 0x4A8(0x18)(Edit, AssetRegistrySearchable, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("AthenaDanceItemDefinition");
		return Clss;
	}

	class FText GetChatTriggerCommandName();
};

// 0xC0 (0x580 - 0x4C0)
// Class FortniteGame.AthenaEmojiItemDefinition
class UAthenaEmojiItemDefinition : public UAthenaDanceItemDefinition
{
public:
	struct FGameplayTag                          EmojiGameplayCueTag;                               // 0x4C0(0x8)(Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UAnimMontage>           PreviewAnimation;                                  // 0x4C8(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UTexture2D>             SpriteSheet;                                       // 0x4F0(0x28)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FIntPoint                             SheetDimensions;                                   // 0x518(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        FrameIndex;                                        // 0x520(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        FrameCount;                                        // 0x524(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInterface*                    BaseMaterial;                                      // 0x528(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               IconSize;                                          // 0x530(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLinearColor                          InitialColor;                                      // 0x53C(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               InitialLocation;                                   // 0x54C(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               InitialVelocity;                                   // 0x558(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        LifetimeIntroSeconds;                              // 0x564(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        LifetimeMidSeconds;                                // 0x568(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        LifetimeOutroSeconds;                              // 0x56C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInstance*                     GeneratedMaterial;                                 // 0x570(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_144C[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("AthenaEmojiItemDefinition");
		return Clss;
	}

	void ConfigureParticleSystem(class UParticleSystemComponent* ParticleSystem, TSoftObjectPtr<class UTexture2D> OverrideImage);
};

// 0x10 (0xF0 - 0xE0)
// Class FortniteGame.AthenaEventTokenItem
class UAthenaEventTokenItem : public UFortAccountItem
{
public:
	class FString                                Game_code;                                         // 0xE0(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("AthenaEventTokenItem");
		return Clss;
	}

};

// 0x10 (0x370 - 0x360)
// Class FortniteGame.AthenaEventTokenItemDefinition
class UAthenaEventTokenItemDefinition : public UFortAccountItemDefinition
{
public:
	enum class EEventTokenType                   TokenType;                                         // 0x360(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_144D[0xF];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("AthenaEventTokenItemDefinition");
		return Clss;
	}

};

// 0x580 (0x870 - 0x2F0)
// Class FortniteGame.FortWorldItemDefinition
class UFortWorldItemDefinition : public UFortItemDefinition
{
public:
	struct FGameplayTagContainer                 RequiredEquipTags;                                 // 0x2F0(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                 OverrideAutoEquipTags;                             // 0x310(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	enum class EFortReplicatedStat               AccumulatingStatType;                              // 0x330(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EWorldItemDropBehavior            DropBehavior;                                      // 0x331(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bIgnoreRespawningForDroppingAsPickup;              // 0x332(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bCanAutoEquipByClass : 1;                          // Mask : 0x1 0x333(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bPersistInInventoryWhenFinalStackEmpty : 1;        // Mask : 0x2 0x333(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bSupportsQuickbarFocus : 1;                        // Mask : 0x4 0x333(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bSupportsQuickbarFocusForGamepadOnly : 1;          // Mask : 0x8 0x333(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bShouldActivateWhenFocused : 1;                    // Mask : 0x10 0x333(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bForceFocusWhenAdded : 1;                          // Mask : 0x20 0x333(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bForceIntoOverflow : 1;                            // Mask : 0x40 0x333(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bForceStayInOverflow : 1;                          // Mask : 0x80 0x333(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bDropCurrentItemOnOverflow : 1;                    // Mask : 0x1 0x334(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bHasDisintegrationValue : 1;                       // Mask : 0x2 0x334(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bUsesCraftingRecipeToGetDisintegrationValue : 1;   // Mask : 0x4 0x334(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bShouldShowItemToast : 1;                          // Mask : 0x8 0x334(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bShowDirectionalArrowWhenFarOff : 1;               // Mask : 0x10 0x334(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bCanBeDropped : 1;                                 // Mask : 0x20 0x334(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bCanBeReplacedByPickup : 1;                        // Mask : 0x40 0x334(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bItemCanBeStolen : 1;                              // Mask : 0x80 0x334(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bCanBeDepositedInStorageVault : 1;                 // Mask : 0x1 0x335(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bItemHasDurability : 1;                            // Mask : 0x2 0x335(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bAllowedToBeLockedInInventory : 1;                 // Mask : 0x4 0x335(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bOverridePickupMeshTransform : 1;                  // Mask : 0x8 0x335(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bDisplayPlayerNameForInventoryActor : 1;           // Mask : 0x10 0x335(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bDisplayHealthForInventoryActor : 1;               // Mask : 0x20 0x335(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bDisplayShieldForInventoryActor : 1;               // Mask : 0x40 0x335(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bAlwaysCountForCollectionQuest : 1;                // Mask : 0x80 0x335(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bDropOnDeath : 1;                                  // Mask : 0x1 0x336(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bDropOnLogout : 1;                                 // Mask : 0x2 0x336(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bDropOnDBNO : 1;                                   // Mask : 0x4 0x336(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_144F[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        DropCount;                                         // 0x338(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MiniMapViewableDistance;                           // 0x33C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSlateBrush                           MiniMapIconBrush;                                  // 0x340(0x88)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class FText                                  OwnerPickupText;                                   // 0x3C8(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FDataTableCategoryHandle              LootLevelData;                                     // 0x3E0(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_1450[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTransform                            PickupMeshTransform;                               // 0x400(0x30)(Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FGameplayTag                          SpecialActorBaseTag;                               // 0x430(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          SpecialActorPickupTag;                             // 0x438(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  PickupSpecialActorUniqueID;                        // 0x440(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSlateBrush                           PickupMinimapIconBrush;                            // 0x448(0x88)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FVector2D                             PickupMinimapIconScale;                            // 0x4D0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSlateBrush                           PickupCompassIconBrush;                            // 0x4D8(0x88)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FVector2D                             PickupCompassIconScale;                            // 0x560(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          SpecialActorInventoryTag;                          // 0x568(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  InventorySpecialActorUniqueID;                     // 0x570(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSlateBrush                           InventoryMinimapIconBrush;                         // 0x578(0x88)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FVector2D                             InventoryMinimapIconScale;                         // 0x600(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSlateBrush                           InventoryCompassIconBrush;                         // 0x608(0x88)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FVector2D                             InventoryCompassIconScale;                         // 0x690(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                  InventoryActorDisplayName;                         // 0x698(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	TArray<struct FSpecialActorSingleStatData>   SpecialActorPickupStatList;                        // 0x6B0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FSpecialActorSingleStatData>   SpecialActorInventoryStatList;                     // 0x6C0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	struct FScalableFloat                        PickupDespawnTime;                                 // 0x6D0(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FScalableFloat                        InStormPickupDespawnTime;                          // 0x6F0(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FScalableFloat                        NetworkCullDistanceOverride;                       // 0x710(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UStaticMesh>            PickupStaticMesh;                                  // 0x730(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class USkeletalMesh>          PickupSkeletalMesh;                                // 0x758(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftClassPtr<class AFortPickupEffect>       PickupEffectOverride;                              // 0x780(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class USoundBase>             PickupSound;                                       // 0x7A8(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class USoundBase>             PickupByNearbyPawnSound;                           // 0x7D0(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class USoundBase>             DropSound;                                         // 0x7F8(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class USoundBase>             DroppedLoopSound;                                  // 0x820(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FDataTableRowHandle                   DisassembleRecipe;                                 // 0x848(0x10)(Edit, NoDestructor, Protected, NativeAccessSpecifierProtected)
	float                                        DisassembleDurabilityDegradeMinLootPercent;        // 0x858(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DisassembleDurabilityDegradeMaxLootPercent;        // 0x85C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        FabricationValueOverride;                          // 0x860(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        PreferredQuickbarSlot;                             // 0x864(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1451[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortWorldItemDefinition");
		return Clss;
	}

	float GetMaxDurability(int32 ItemLevel);
	int32 GetFabricationValue(bool bUseDisintegrationOverride);
	float GetDPSAtLevel(int32 ItemLevel);
	float GetDamageAtLevel(int32 ItemLevel);
	class UFortWorldItemDefinition* GetAmmoWorldItemDefinition_BP();
	bool CanBeDisassembled();
};

// 0x1E0 (0xA50 - 0x870)
// Class FortniteGame.FortGadgetItemDefinition
class UFortGadgetItemDefinition : public UFortWorldItemDefinition
{
public:
	int32                                        GadgetPriority;                                    // 0x870(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bDestroyGadgetWhenTrackedAttributesIsZero : 1;     // Mask : 0x1 0x874(0x1)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bHasChargeUp : 1;                                  // Mask : 0x2 0x874(0x1)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bDropAllOnEquip : 1;                               // Mask : 0x4 0x874(0x1)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bCanChangePreviewImageDuringGame : 1;              // Mask : 0x8 0x874(0x1)(Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1452[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UCustomCharacterPart*>          CharacterParts;                                    // 0x878(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TSoftClassPtr<class UFortAnimInstance>       AnimBPOverride;                                    // 0x888(0x28)(Edit, DisableEditOnInstance, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UFortFootstepAudioBank> FootstepBankOverride;                              // 0x8B0(0x28)(Edit, DisableEditOnInstance, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UFortAbilitySet>        AbilitySet;                                        // 0x8D8(0x28)(Edit, DisableEditOnInstance, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftClassPtr<class UAttributeSet>           AttributeSet;                                      // 0x900(0x28)(Edit, DisableEditOnInstance, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FFortAttributeInitializationKey       AttributeInitKey;                                  // 0x928(0x10)(Edit, DisableEditOnInstance, NoDestructor, Protected, NativeAccessSpecifierProtected)
	TArray<struct FGameplayAttribute>            TrackedAttributes;                                 // 0x938(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UParticleSystem>        OnDestroyParticleSystem;                           // 0x948(0x28)(Edit, DisableEditOnInstance, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class USoundBase>             OnDestroySound;                                    // 0x970(0x28)(Edit, DisableEditOnInstance, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  OnDestroyAttachToSocketName;                       // 0x998(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftClassPtr<class UFortGameplayAbility>    GameplayAbility;                                   // 0x9A0(0x28)(Edit, DisableEditOnInstance, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTagContainer                 HUDVisibilityTags;                                 // 0x9C8(0x20)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UFortDecoItemDefinition> DecoItemDefinition;                                // 0x9E8(0x28)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bValidForLastEquipped;                             // 0xA10(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1453[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGameplayAttribute                    LevelAttribute;                                    // 0xA18(0x20)(Edit, DisableEditOnInstance, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FDataTableRowHandle                   DamageStatHandle;                                  // 0xA38(0x10)(Edit, NoDestructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_1454[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortGadgetItemDefinition");
		return Clss;
	}

	bool HasTrackedAttributes();
	bool HasChargeUp();
	struct FGameplayAttribute GetLevelAttribute();
	TSubclassOf<class UFortGameplayAbility> GetGameplayAbility();
	class UFortDecoItemDefinition* GetDecoItemDefinition();
};

// 0x0 (0xA50 - 0xA50)
// Class FortniteGame.AthenaGadgetItemDefinition
class UAthenaGadgetItemDefinition : public UFortGadgetItemDefinition
{
public:
	//bool                                       bCanBeDroppedWhenEquipmentChangeIsBlocked;         // 0xA48(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	//bool                                       bIgnoreSingletonInventoryCheck;                    // 0xA49(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("AthenaGadgetItemDefinition");
		return Clss;
	}

};

// 0x58 (0x80 - 0x28)
// Class FortniteGame.FortTooltipManager
class UFortTooltipManager : public UObject
{
public:
	TMap<class UClass*, class UFortTooltip*>     Tooltips;                                          // 0x28(0x50)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	class AActor*                                DamageRecieverProxy;                               // 0x78(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortTooltipManager");
		return Clss;
	}

};

// 0x68 (0x90 - 0x28)
// Class FortniteGame.FortTooltip
class UFortTooltip : public UObject
{
public:
	class FText                                  Description;                                       // 0x28(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_145F[0x50];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortTooltip");
		return Clss;
	}

	void SetLocalizationText(const class FString& Name, class FText Value);
	void SetLocalizationInt(const class FString& Name, int32 Value);
	void SetLocalizationFloat(const class FString& Name, float Value);
	bool GetValueData(class UObject* ObjectToDescribe, class UFortTooltipContext* Context, struct FGameplayTag& Token, struct FFortTooltipValueData* OutData);
	bool GetTokenizedDescriptionText(class UObject* ObjectToDescribe, struct FGameplayTag& Tag, class UFortTooltipContext* Context, TArray<class FText>* OutDescription);
	bool GetTextForToken(class UObject* ObjectToDescribe, struct FGameplayTag& Tag, class UFortTooltipContext* Context, struct FGameplayTag& Token, class FText* OutText);
	bool GetNumericValue(class UObject* ObjectToDescribe, struct FGameplayTag& Tag, class UFortTooltipContext* Context, struct FGameplayTag& Token, float* OutVal);
	bool BP_GetValueData(class UObject* ObjectToDescribe, class UFortTooltipContext* Context, struct FGameplayTag& Token, struct FFortTooltipValueData* OutData);
	bool BP_GetTokenizedDescriptionText(class UObject* ObjectToDescribe, struct FGameplayTag& Tag, class UFortTooltipContext* Context, TArray<class FText>* OutDescription);
	bool BP_GetTextForToken(class UObject* ObjectToDescribe, struct FGameplayTag& Tag, class UFortTooltipContext* Context, struct FGameplayTag& Token, class FText* OutText);
	bool BP_GetNumericValue(class UObject* ObjectToDescribe, struct FGameplayTag& Tag, class UFortTooltipContext* Context, struct FGameplayTag& Token, float* OutVal);
};

// 0x0 (0x90 - 0x90)
// Class FortniteGame.FortItemDefinitionTooltip
class UFortItemDefinitionTooltip : public UFortTooltip
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortItemDefinitionTooltip");
		return Clss;
	}

};

// 0x0 (0x90 - 0x90)
// Class FortniteGame.FortWorldItemDefinitionTooltip
class UFortWorldItemDefinitionTooltip : public UFortItemDefinitionTooltip
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortWorldItemDefinitionTooltip");
		return Clss;
	}

};

// 0x0 (0x90 - 0x90)
// Class FortniteGame.AthenaGadgetItemDefinitionTooltip
class UAthenaGadgetItemDefinitionTooltip : public UFortWorldItemDefinitionTooltip
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("AthenaGadgetItemDefinitionTooltip");
		return Clss;
	}

};

// 0x348 (0x378 - 0x30)
// Class FortniteGame.AthenaGameData
class UAthenaGameData : public UPrimaryDataAsset
{
public:
	TSoftObjectPtr<class UAthenaPickaxeItemDefinition> FallbackPickaxe;                                   // 0x30(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UAthenaDanceItemDefinition> FallbackDance;                                     // 0x58(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAthenaSeasonItemDefinition*           FallbackSeason;                                    // 0x80(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<TSoftObjectPtr<class UFortItemDefinition>> ShuffleTileItemDefinitions;                        // 0x88(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, NativeAccessSpecifierPublic)
	class UAthenaBattleBusItemDefinition*        DefaultBattleBusSkin;                              // 0x98(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAthenaGliderItemDefinition*           DefaultGliderSkin;                                 // 0xA0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAthenaSkyDiveContrailItemDefinition*  DefaultContrailEffect;                             // 0xA8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAthenaMusicPackItemDefinition*        DefaultMusicPack;                                  // 0xB0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFortCosmeticItemMarkupTable*          CosmeticMarkupTable;                               // 0xB8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UDataTable>             CosmeticPreviewActionList;                         // 0xC0(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class AFortEmotePreviewActor>  EmotePreviewActorClass;                            // 0xE8(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class AFortItemWrapPreviewActor> ItemWrapPreviewActorClass;                         // 0x110(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class AFortLoadingScreenPreviewActor> LoadingScreenPreviewActorClass;                    // 0x138(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class AFortSprayPreviewActor>  SprayPreviewActorClass;                            // 0x160(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class AFortMusicPackPreviewActor> MusicPackPreviewActorClass;                        // 0x188(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class AFortSkyDiveContrailPreviewActor> SkyDiveContrailPreviewActorClass;                  // 0x1B0(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class AFortBodyPartOverridePreviewActor> BodyPartOverridePreviewActorClass;                 // 0x1D8(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class AFortPickaxePreviewActor> PickaxeCosmeticPreviewActorClass;                  // 0x200(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<enum class EAthenaCustomizationCategory, TSoftClassPtr<class AActor>> CosmeticPreviewActionMap;                          // 0x228(0x50)(Edit, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	class UFortItemWrapMappingData*              ItemWrapConfigAsset;                               // 0x278(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UTexture2D>             DeniedCosmeticThumbnail;                           // 0x280(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFortItemDefinition*                   PlaceholderItemToShowForDeniedCosmetics;           // 0x2A8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UAthenaCharacterItemDefinition*> RandomCharacters;                                  // 0x2B0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FGameplayTagMessage>           UnableToPerformActionMessages;                     // 0x2C0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	class UCurveLinearColor*                     TimeOfDayRGBForPeripherals;                        // 0x2D0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundMix*                             AthenaSoundMix;                                    // 0x2D8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundMix*                             VisualizationSoundMix;                             // 0x2E0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCameraAnim*                           DroneCameraAnim;                                   // 0x2E8(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCameraAnim*                           ThirdPersonCameraAnim;                             // 0x2F0(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCameraAnim*                           ArenaCameraAnim;                                   // 0x2F8(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<enum class ECommonInputType, class UTexture2D*> InputTypeIcons;                                    // 0x300(0x50)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<class UFortDeathReasons*>             PlayerDownedMessages;                              // 0x350(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<class UFortDeathReasons*>             PlayerDeadMessages;                                // 0x360(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class UFortRespawnDataTable*                 RespawnDataTable;                                  // 0x370(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("AthenaGameData");
		return Clss;
	}

};

// 0x0 (0x100 - 0x100)
// Class FortniteGame.AthenaGliderItem
class UAthenaGliderItem : public UAthenaCosmeticAccountItem
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("AthenaGliderItem");
		return Clss;
	}

};

// 0x120 (0x540 - 0x420)
// Class FortniteGame.AthenaGliderItemDefinition
class UAthenaGliderItemDefinition : public UAthenaCosmeticItemDefinition
{
public:
	//enum class EFortGliderType                 GliderType;                                        // 0x418(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	//bool                                       bActivateTrailsOnRotationalMovement;               // 0x419(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftClassPtr<class AFortPlayerParachute>    ParachutePrefabClass;                              // 0x420(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class USkeletalMesh>          SkeletalMesh;                                      // 0x448(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftClassPtr<class UAnimInstance>           AnimClass;                                         // 0x470(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class UParticleSystem>        TrailParticles;                                    // 0x498(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class UParticleSystem>        OwnerTrailParticles;                               // 0x4C0(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  TrailParamName;                                    // 0x4E8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class USoundBase>             OpenSound;                                         // 0x4F0(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class USoundBase>             CloseSound;                                        // 0x518(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("AthenaGliderItemDefinition");
		return Clss;
	}

	TSubclassOf<class AFortPlayerParachute> GetParachutePrefabClass();
	TSoftObjectPtr<class USkeletalMesh> GetOverrideSkelMeshPtr();
};

// 0x0 (0x430 - 0x430)
// Class FortniteGame.AthenaHatItemDefinition
class UAthenaHatItemDefinition : public UAthenaCharacterPartItemDefinition
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("AthenaHatItemDefinition");
		return Clss;
	}

};

// 0x20 (0x440 - 0x420)
// Class FortniteGame.AthenaItemWrapDefinition
class UAthenaItemWrapDefinition : public UAthenaCosmeticItemDefinition
{
public:
	//TSoftObjectPtr<class UMaterialInterface>   ItemWrapMaterial;                                  // 0x418(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1461[0x20];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("AthenaItemWrapDefinition");
		return Clss;
	}

	class UMaterialInterface* GetMaterial(enum class EItemWrapMaterialType MaterialType);
};

// 0x18 (0x48 - 0x30)
// Class FortniteGame.AthenaLayoutRequirementData
class UAthenaLayoutRequirementData : public UPrimaryDataAsset
{
public:
	TSubclassOf<class ABuildingLayoutRequirement> BuildingClass;                                     // 0x30(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<TSubclassOf<class ABuildingSMActor>>  LayoutRequirementClasses;                          // 0x38(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("AthenaLayoutRequirementData");
		return Clss;
	}

	class ABuildingLayoutRequirement* SpawnMatchingLayoutRequirement(class ABuildingSMActor* SourceActor, bool bMatchResourceType);
	bool FindMatchingLayoutRequirementClass(class ABuildingSMActor* BuildingActor, TSubclassOf<class ABuildingSMActor>* MatchingClass);
};

// 0x90 (0x4B0 - 0x420)
// Class FortniteGame.AthenaLoadingScreenItemDefinition
class UAthenaLoadingScreenItemDefinition : public UAthenaCosmeticItemDefinition
{
public:
	//TSoftObjectPtr<class UTexture2D>           BackgroundImage;                                   // 0x418(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1464[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftObjectPtr<class UObject>                BackgroundMaterialOrTexture;                       // 0x440(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class UUserWidget>             BackgroundWidget;                                  // 0x468(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             BackgroundDesiredSize;                             // 0x490(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          BackgroundColor;                                   // 0x498(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1465[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("AthenaLoadingScreenItemDefinition");
		return Clss;
	}

};

// 0x20 (0x440 - 0x420)
// Class FortniteGame.AthenaMapMarkerItemDefinition
class UAthenaMapMarkerItemDefinition : public UAthenaCosmeticItemDefinition
{
public:
	//TSoftClassPtr<class AFortMapMarkerTopperActor> TopperActorClass;                                  // 0x418(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1466[0x20];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("AthenaMapMarkerItemDefinition");
		return Clss;
	}

};

// 0x50 (0x470 - 0x420)
// Class FortniteGame.AthenaMusicPackItemDefinition
class UAthenaMusicPackItemDefinition : public UAthenaCosmeticItemDefinition
{
public:
	//TSoftObjectPtr<class USoundBase>           FrontEndLobbyMusic;                                // 0x418(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1467[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftObjectPtr<class UTexture2D>             CoverArtImage;                                     // 0x440(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1468[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("AthenaMusicPackItemDefinition");
		return Clss;
	}

	TSoftObjectPtr<class UTexture2D> GetCoverArt();
};

// 0x8 (0x5B0 - 0x5A8)
// Class FortniteGame.FortNavMesh
class AFortNavMesh : public ARecastNavMesh
{
public:
	class UFortAIHotSpotManager*                 HotSpotManager;                                    // 0x5A8(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortNavMesh");
		return Clss;
	}

};

// 0x38 (0x5E8 - 0x5B0)
// Class FortniteGame.AthenaNavMesh
class AAthenaNavMesh : public AFortNavMesh
{
public:
	int32                                        HotSpotPathfindingMaxSearchNodes;                  // 0x5B0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1469[0x34];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("AthenaNavMesh");
		return Clss;
	}

};

// 0x1F8 (0x608 - 0x410)
// Class FortniteGame.FortNavSystem
class UFortNavSystem : public UNavigationSystemV1
{
public:
	uint8                                        Pad_146B[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftClassPtr<class UNavArea>                DefaultSmashableArea;                              // 0x420(0x28)(UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class UNavArea>                JumpDownArea;                                      // 0x448(0x28)(UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class UNavArea>                JumpDownSmashableArea;                             // 0x470(0x28)(UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class UNavArea>                JumpDownSmashableArea2;                            // 0x498(0x28)(UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class UNavArea>                JumpDownSmashableArea3;                            // 0x4C0(0x28)(UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class ARecastNavMesh*>                NamedNavmeshes;                                    // 0x4E8(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	TArray<class UFortNavLinkBlockerComponent*>  NavLinkBlockers;                                   // 0x4F8(0x10)(ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPublic)
	uint8                                        Pad_146C[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UFortPathCostEstimator*>        PathEstimators;                                    // 0x518(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	TArray<class UFortInescapableZoneTracker*>   InescapableZones;                                  // 0x528(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	uint8                                        bUseStaticMeshLinks : 1;                           // Mask : 0x1 0x538(0x1)(Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bUseStaticWorldLinksDown : 1;                      // Mask : 0x2 0x538(0x1)(Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bUseStaticWorldLinksUp : 1;                        // Mask : 0x4 0x538(0x1)(Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bUseJumpLinkActors : 1;                            // Mask : 0x8 0x538(0x1)(Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_146D[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        DirtyAreasUpdateFreqInactive;                      // 0x53C(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_146E[0x90];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class AFortNavigationGraph*                  NavGraphData;                                      // 0x5D0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class AActor*>                        CompositePathGoals;                                // 0x5D8(0x10)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	TArray<struct FBox>                          AtlasCells;                                        // 0x5E8(0x10)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_146F[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortNavSystem");
		return Clss;
	}

	void OnNavDataRegistered(class ANavigationData* NavData);
	bool IsNavmeshInRadiusInitialized(class UObject* WorldContext, struct FVector& TestLocation, float TestRadius);
};

// 0x68 (0x670 - 0x608)
// Class FortniteGame.AthenaNavSystem
class UAthenaNavSystem : public UFortNavSystem
{
public:
	uint8                                        bUseBuildingGridAsNavigableSpace : 1;              // Mask : 0x1 0x608(0x1)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        bAllowAutoRebuild : 1;                             // Mask : 0x2 0x608(0x1)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1470[0x67];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("AthenaNavSystem");
		return Clss;
	}

};

// 0x18 (0x68 - 0x50)
// Class FortniteGame.AthenaNavSystemConfig
class UAthenaNavSystemConfig : public UNavigationSystemModuleConfig
{
public:
	TArray<struct FNavDataConfig>                SupportedAgents;                                   // 0x50(0x10)(Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        bUseBuildingGridAsNavigableSpace : 1;              // Mask : 0x1 0x60(0x1)(Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bAllowAutoRebuild : 1;                             // Mask : 0x2 0x60(0x1)(Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bDiscardNavDataFromSublevels : 1;                  // Mask : 0x4 0x60(0x1)(Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1471[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("AthenaNavSystemConfig");
		return Clss;
	}

};

// 0x10 (0x350 - 0x340)
// Class FortniteGame.AthenaNavSystemConfigOverride
class AAthenaNavSystemConfigOverride : public ANavSystemConfigOverride
{
public:
	TArray<struct FBox>                          DirtyAreas;                                        // 0x340(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("AthenaNavSystemConfigOverride");
		return Clss;
	}

	void LoadPreviewLevels();
};

// 0xD0 (0x3B0 - 0x2E0)
// Class FortniteGame.FortPathFollowingComponent
class UFortPathFollowingComponent : public UCrowdFollowingComponent
{
public:
	class AFortAIController*                     MyAI;                                              // 0x2E0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1472[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        MovementBlockFrustrationCooldownSpeed;             // 0x308(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1473[0xA4];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortPathFollowingComponent");
		return Clss;
	}

};

// 0x10 (0x3C0 - 0x3B0)
// Class FortniteGame.AthenaPathFollowingComponent
class UAthenaPathFollowingComponent : public UFortPathFollowingComponent
{
public:
	uint8                                        Pad_1474[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("AthenaPathFollowingComponent");
		return Clss;
	}

};

// 0x20 (0x450 - 0x430)
// Class FortniteGame.AthenaPetCarrierItemDefinition
class UAthenaPetCarrierItemDefinition : public UAthenaBackpackItemDefinition
{
public:
	class UAthenaPetItemDefinition*              DefaultPet;                                        // 0x430(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFortUICameraFrameTargetBounds        CameraFramingBounds;                               // 0x438(0x14)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_1475[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("AthenaPetCarrierItemDefinition");
		return Clss;
	}

};

// 0x60 (0x480 - 0x420)
// Class FortniteGame.AthenaPetItemDefinition
class UAthenaPetItemDefinition : public UAthenaCosmeticItemDefinition
{
public:
	//TArray<class UFortPetStimuliBank*>         StimuliBanks;                                      // 0x418(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_1476[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftClassPtr<class AFortPlayerPet>          PetPrefabClass;                                    // 0x428(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class UFortTaggedSoundBank>   PetSoundBank;                                      // 0x450(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1477[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("AthenaPetItemDefinition");
		return Clss;
	}

};

// 0x30 (0x450 - 0x420)
// Class FortniteGame.AthenaPickaxeItemDefinition
class UAthenaPickaxeItemDefinition : public UAthenaCosmeticItemDefinition
{
public:
	class UFortWeaponMeleeItemDefinition*        WeaponDefinition;                                  // 0x420(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               PickaxeImpactFXPreviewOffset;                      // 0x428(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFortUICameraFrameTargetBounds        CameraFramingBounds;                               // 0x434(0x14)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_1478[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("AthenaPickaxeItemDefinition");
		return Clss;
	}

};

// 0xB0 (0xD8 - 0x28)
// Class FortniteGame.AthenaStatsSet
class UAthenaStatsSet : public UObject
{
public:
	struct FAthenaMatchStats                     CumulativeStats;                                   // 0x28(0xA0)(NativeAccessSpecifierPublic)
	TArray<struct FAthenaMatchStats>             BestMatches;                                       // 0xC8(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("AthenaStatsSet");
		return Clss;
	}

};

// 0x60 (0x88 - 0x28)
// Class FortniteGame.AthenaSeasonStats
class UAthenaSeasonStats : public UObject
{
public:
	class UAthenaStatsSet*                       CumulativeStats;                                   // 0x28(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<class FName, class UAthenaStatsSet*>    Buckets;                                           // 0x30(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	class UAthenaSeasonItemDefinition*           SeasonDefinition;                                  // 0x80(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("AthenaSeasonStats");
		return Clss;
	}

	class UAthenaSeasonItemDefinition* GetSeasonDefintion();
};

// 0x168 (0x190 - 0x28)
// Class FortniteGame.AthenaPlayerMatchReport
class UAthenaPlayerMatchReport : public UObject
{
public:
	UMulticastDelegateProperty_                  OnRewardsAvailable;                                // 0x28(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnStatsAvailable;                                  // 0x38(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnTeamStatsAvailable;                              // 0x48(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FAthenaLevelInfo                      InitialLevelInfo;                                  // 0x58(0x24)(BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	bool                                         bHasMatchStats;                                    // 0x7C(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1479[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FAthenaMatchStats                     MatchStats;                                        // 0x80(0xA0)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	bool                                         bHasTeamStats;                                     // 0x120(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_147A[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FAthenaMatchTeamStats                 TeamStats;                                         // 0x124(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	bool                                         bHasRewards;                                       // 0x12C(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_147B[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FAthenaRewardResult                   EndOfMatchResults;                                 // 0x130(0x40)(NativeAccessSpecifierPublic)
	struct FAthenaTravelRecord                   TravelRecord;                                      // 0x170(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  TravelLogUpdated;                                  // 0x180(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("AthenaPlayerMatchReport");
		return Clss;
	}

	void GetXpRewards(TArray<struct FAthenaMatchXpReward>* XpRewards);
	int32 GetTotalSeasonalXpEarned();
	int32 GetTotalScoreEarned();
	int32 GetTotalBookXpEarned();
	void GetLootRewards(TArray<struct FAthenaMatchLootReward>* LootRewards);
	void DataAvailableEvent__DelegateSignature();
};

// 0x10 (0x40 - 0x30)
// Class FortniteGame.AthenaQuickChatBank
class UAthenaQuickChatBank : public UDataAsset
{
public:
	TArray<struct FAthenaQuickChatLeafEntry>     ChatOptions;                                       // 0x30(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("AthenaQuickChatBank");
		return Clss;
	}

};

// 0x20 (0x380 - 0x360)
// Class FortniteGame.FortEventItemDefinitionBase
class UFortEventItemDefinitionBase : public UFortAccountItemDefinition
{
public:
	int32                                        EventPriority;                                     // 0x360(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bActivateByDefault;                                // 0x364(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_147C[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  RequiredEventTag;                                  // 0x368(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  DisallowedEventTag;                                // 0x370(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_147D[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortEventItemDefinitionBase");
		return Clss;
	}

	void CreateCalendarPayload();
};

// 0x40 (0x3C0 - 0x380)
// Class FortniteGame.AthenaSeasonalDecorEvent
class UAthenaSeasonalDecorEvent : public UFortEventItemDefinitionBase
{
public:
	//TSoftClassPtr<class AFortAthenaSupplyDrop> SupplyDropOverride;                                // 0x378(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_147E[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FAthenaVehicleOverride>        VehicleOverrides;                                  // 0x3A0(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                         bForceBattleBusOverrideEvenIfCosmeticSlotted;      // 0x3B0(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_147F[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UAthenaBattleBusItemDefinition*        BattleBusOverride;                                 // 0x3B8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("AthenaSeasonalDecorEvent");
		return Clss;
	}

};

// 0x130 (0x490 - 0x360)
// Class FortniteGame.AthenaSeasonItemDefinition
class UAthenaSeasonItemDefinition : public UFortAccountItemDefinition
{
public:
	int32                                        SeasonNumber;                                      // 0x360(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        NumSeasonLevels;                                   // 0x364(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        NumBookLevels;                                     // 0x368(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EAthenaSeasonShopVisibility       SeasonShopVisibility;                              // 0x36C(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EAthenaChallengeTabVisibility     ChallengesVisibility;                              // 0x36D(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1480[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UDataTable*                            SeasonXpCurve;                                     // 0x370(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UDataTable*                            BookXpCurve;                                       // 0x378(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                SeasonStorefront;                                  // 0x380(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                BattlePassLevelOfferID;                            // 0x390(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<int32>                                FreeLevelsThatNavigateToBattlePass;                // 0x3A0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<int32>                                FreeLevelsThatAutoOpenTheAboutScreen;              // 0x3B0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	struct FAthenaRewardSchedule                 SeasonXpScheduleFree;                              // 0x3C0(0x10)(Edit, Protected, NativeAccessSpecifierProtected)
	struct FGameplayTag                          FreeSeasonItemContentTag;                          // 0x3D0(0x8)(Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FAthenaRewardSchedule                 BookXpScheduleFree;                                // 0x3D8(0x10)(Edit, Protected, NativeAccessSpecifierProtected)
	struct FGameplayTag                          BattlePassFreeItemContentTag;                      // 0x3E8(0x8)(Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FAthenaRewardSchedule                 BookXpSchedulePaid;                                // 0x3F0(0x10)(Edit, Protected, NativeAccessSpecifierProtected)
	struct FGameplayTag                          BattlePassPaidItemContentTag;                      // 0x400(0x8)(Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FAthenaSeasonBannerLevelSchedule      SeasonBannerSchedule;                              // 0x408(0x10)(Edit, Protected, NativeAccessSpecifierProtected)
	class UFortChallengeBundleScheduleDefinition* ChallengeSchedulePaid;                             // 0x418(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UFortChallengeBundleScheduleDefinition*> ChallengeSchedulesAlwaysShown;                     // 0x420(0x10)(Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	struct FAthenaRewardScheduleLevel            SeasonGrantsToEveryone;                            // 0x430(0x10)(Edit, Protected, NativeAccessSpecifierProtected)
	struct FGameplayTag                          SeasonGrantsToEveryoneItemContentTag;              // 0x440(0x8)(Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FAthenaRewardScheduleLevel            SeasonFirstWinRewards;                             // 0x448(0x10)(Edit, Protected, NativeAccessSpecifierProtected)
	struct FGameplayTag                          SeasonFirstWinItemContentTag;                      // 0x458(0x8)(Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FAthenaRewardScheduleLevel            BattleStarSubstitutionReward;                      // 0x460(0x10)(Edit, Protected, NativeAccessSpecifierProtected)
	TArray<TSoftObjectPtr<class UFortItemDefinition>> ExpiringRewardTypes;                               // 0x470(0x10)(Edit, ZeroConstructor, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	TArray<TSoftObjectPtr<class UFortItemDefinition>> TokensToRemoveAtSeasonEnd;                         // 0x480(0x10)(Edit, ZeroConstructor, Protected, UObjectWrapper, NativeAccessSpecifierProtected)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("AthenaSeasonItemDefinition");
		return Clss;
	}

};

// 0x0 (0x360 - 0x360)
// Class FortniteGame.AthenaSeasonTreasureItemDefinition
class UAthenaSeasonTreasureItemDefinition : public UFortAccountItemDefinition
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("AthenaSeasonTreasureItemDefinition");
		return Clss;
	}

};

// 0x50 (0x470 - 0x420)
// Class FortniteGame.AthenaSkyDiveContrailItemDefinition
class UAthenaSkyDiveContrailItemDefinition : public UAthenaCosmeticItemDefinition
{
public:
	//TSoftObjectPtr<class UParticleSystem>      ContrailEffect;                                    // 0x418(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1481[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftObjectPtr<class UNiagaraSystem>         NiagaraContrailEffect;                             // 0x440(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1482[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("AthenaSkyDiveContrailItemDefinition");
		return Clss;
	}

};

// 0x80 (0xA8 - 0x28)
// Class FortniteGame.AthenaSpectatorPlayerListRowData
class UAthenaSpectatorPlayerListRowData : public UObject
{
public:
	UMulticastDelegateProperty_                  OnIsSpectatorTargetChanged;                        // 0x28(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnKillsChanged;                                    // 0x38(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	int32                                        Rank;                                              // 0x48(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        TeamNumber;                                        // 0x4C(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          TeamColor;                                         // 0x50(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                PlayerName;                                        // 0x60(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Kills;                                             // 0x70(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsRecordingPlayer;                                 // 0x74(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsSpectatorTarget;                                 // 0x75(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1484[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AFortPlayerStateAthena*                PlayerState;                                       // 0x78(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FUniqueNetIdRepl                      PlayerUniqueId;                                    // 0x80(0x28)(HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("AthenaSpectatorPlayerListRowData");
		return Clss;
	}

	void SetKills(class AFortPlayerStateAthena* PS, int32 InKills);
	class AFortPlayerStateAthena* GetPlayerState();
};

// 0x60 (0x520 - 0x4C0)
// Class FortniteGame.AthenaSprayItemDefinition
class UAthenaSprayItemDefinition : public UAthenaDanceItemDefinition
{
public:
	TSoftObjectPtr<class UMaterialInterface>     DecalMaterial;                                     // 0x4C0(0x28)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  ProgressiveCosmeticStatName;                       // 0x4E8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bUseBannerAsTexture;                               // 0x4F0(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1485[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftObjectPtr<class UTexture2D>             DecalTexture;                                      // 0x4F8(0x28)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("AthenaSprayItemDefinition");
		return Clss;
	}

	bool ShouldUseBannerAsTexture();
	TSoftObjectPtr<class UTexture2D> GetDecalTexture();
	TSoftObjectPtr<class UMaterialInterface> GetDecalMaterial();
};

// 0x80 (0x540 - 0x4C0)
// Class FortniteGame.AthenaToyItemDefinition
class UAthenaToyItemDefinition : public UAthenaDanceItemDefinition
{
public:
	TSoftClassPtr<class UFortGameplayAbility>    ToySpawnAbility;                                   // 0x4C0(0x28)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftClassPtr<class AActor>                  ToyActorClass;                                     // 0x4E8(0x28)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftClassPtr<class AFortToyPreviewActor>    FrontEndPreviewActor;                              // 0x510(0x28)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1486[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("AthenaToyItemDefinition");
		return Clss;
	}

	TSoftClassPtr<class AActor> GetToyActorClass();
	void BakeLaunchPositions();
};

// 0x60 (0x480 - 0x420)
// Class FortniteGame.AthenaVehicleCosmeticItemDefinition
class UAthenaVehicleCosmeticItemDefinition : public UAthenaCosmeticItemDefinition
{
public:
	//enum class EFortVehicleDecoType            DecoType;                                          // 0x418(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTransform                            DecoSocketTransform;                               // 0x420(0x30)(Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UStaticMesh>            TestDecoMesh;                                      // 0x450(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  DecoSocketName;                                    // 0x478(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("AthenaVehicleCosmeticItemDefinition");
		return Clss;
	}

};

// 0x0 (0x480 - 0x480)
// Class FortniteGame.AthenaVictoryPoseItemDefinition
class UAthenaVictoryPoseItemDefinition : public UFortMontageItemDefinitionBase
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("AthenaVictoryPoseItemDefinition");
		return Clss;
	}

};

// 0x10 (0x390 - 0x380)
// Class FortniteGame.AthenaWeaponAlterationEvent
class UAthenaWeaponAlterationEvent : public UFortEventItemDefinitionBase
{
public:
	//TArray<struct FAthenaWeaponAlterationRule> AlterationRules;                                   // 0x378(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_1487[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bStopAfterFirstMatch;                              // 0x388(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bAllowPlayerCosmeticWeaponSkins;                   // 0x389(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1488[0x6];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("AthenaWeaponAlterationEvent");
		return Clss;
	}

};

// 0x1A0 (0x4D0 - 0x330)
// Class FortniteGame.TimeOfDayController_BlueprintBase
class ATimeOfDayController_BlueprintBase : public AActor
{
public:
	uint8                                        bOverride_FogCutoffDistance : 1;                   // Mask : 0x1 0x330(0x1)(Edit, BlueprintVisible, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bOverride_FogDensity : 1;                          // Mask : 0x2 0x330(0x1)(Edit, BlueprintVisible, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bOverride_FogHeightFalloff : 1;                    // Mask : 0x4 0x330(0x1)(Edit, BlueprintVisible, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bOverride_FogInscatteringColor : 1;                // Mask : 0x8 0x330(0x1)(Edit, BlueprintVisible, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bOverride_FogMaxOpacity : 1;                       // Mask : 0x10 0x330(0x1)(Edit, BlueprintVisible, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bOverride_FogStartDistance : 1;                    // Mask : 0x20 0x330(0x1)(Edit, BlueprintVisible, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bOverride_FogDirectionalInscatteringColor : 1;     // Mask : 0x40 0x330(0x1)(Edit, BlueprintVisible, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bOverride_FogDirectionalInscatteringExponent : 1;  // Mask : 0x80 0x330(0x1)(Edit, BlueprintVisible, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bOverride_FogDirectionalInscatteringStartDistance : 1; // Mask : 0x1 0x331(0x1)(Edit, BlueprintVisible, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bOverride_FogFullyDirectionalInscatteringColorDistance : 1; // Mask : 0x2 0x331(0x1)(Edit, BlueprintVisible, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bOverride_FogUseVolumetricFog : 1;                 // Mask : 0x4 0x331(0x1)(Edit, BlueprintVisible, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bOverride_FogVolumetricFogExtinctionScale : 1;     // Mask : 0x8 0x331(0x1)(Edit, BlueprintVisible, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bOverride_FogVolumetricFogDistance : 1;            // Mask : 0x10 0x331(0x1)(Edit, BlueprintVisible, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bOverride_FogVolumetricFogScatteringDistribution : 1; // Mask : 0x20 0x331(0x1)(Edit, BlueprintVisible, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bOverride_FogVolumetricFogAlbedo : 1;              // Mask : 0x40 0x331(0x1)(Edit, BlueprintVisible, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bOverride_TimeOfDay : 1;                           // Mask : 0x80 0x331(0x1)(Edit, BlueprintVisible, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bOverride_PostProcessBlendWeight : 1;              // Mask : 0x1 0x332(0x1)(Edit, BlueprintVisible, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bOverride_PostProcessFogOpacity : 1;               // Mask : 0x2 0x332(0x1)(Edit, BlueprintVisible, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bOverride_PostProcessFogColor : 1;                 // Mask : 0x4 0x332(0x1)(Edit, BlueprintVisible, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bOverride_DirectionalLightColor : 1;               // Mask : 0x8 0x332(0x1)(Edit, BlueprintVisible, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bOverride_DirectionalLightIntensity : 1;           // Mask : 0x10 0x332(0x1)(Edit, BlueprintVisible, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bOverride_DirectionalLightAngle : 1;               // Mask : 0x20 0x332(0x1)(Edit, BlueprintVisible, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bOverride_CloudHorizonColor : 1;                   // Mask : 0x40 0x332(0x1)(Edit, BlueprintVisible, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bOverride_SkyboxHorizonColor : 1;                  // Mask : 0x80 0x332(0x1)(Edit, BlueprintVisible, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bOverride_SkyboxZenithColor : 1;                   // Mask : 0x1 0x333(0x1)(Edit, BlueprintVisible, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bOverride_CloudAmountHorizon : 1;                  // Mask : 0x2 0x333(0x1)(Edit, BlueprintVisible, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bOverride_CloudAmountZenith : 1;                   // Mask : 0x4 0x333(0x1)(Edit, BlueprintVisible, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bOverride_CloudSpeedMaster : 1;                    // Mask : 0x8 0x333(0x1)(Edit, BlueprintVisible, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bOverride_CloudSpeedDetailTextureOne : 1;          // Mask : 0x10 0x333(0x1)(Edit, BlueprintVisible, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bOverride_CloudSpeedDetailTextureTwo : 1;          // Mask : 0x20 0x333(0x1)(Edit, BlueprintVisible, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bOverride_StormStrength : 1;                       // Mask : 0x40 0x333(0x1)(Edit, BlueprintVisible, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bOverride_SunScale : 1;                            // Mask : 0x80 0x333(0x1)(Edit, BlueprintVisible, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bOverride_SunDiscIntensity : 1;                    // Mask : 0x1 0x334(0x1)(Edit, BlueprintVisible, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bOverride_SkyLightColor : 1;                       // Mask : 0x2 0x334(0x1)(Edit, BlueprintVisible, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bOverride_SkyLightIntensity : 1;                   // Mask : 0x4 0x334(0x1)(Edit, BlueprintVisible, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bOverride_SkyLightCubemap : 1;                     // Mask : 0x8 0x334(0x1)(Edit, BlueprintVisible, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1489[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        FogCutoffDistance;                                 // 0x338(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        FogDensity;                                        // 0x33C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        FogHeightFalloff;                                  // 0x340(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLinearColor                          FogInscatteringColor;                              // 0x344(0x10)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        FogMaxOpacity;                                     // 0x354(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        FogStartDistance;                                  // 0x358(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLinearColor                          FogDirectionalInscatteringColor;                   // 0x35C(0x10)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        FogDirectionalInscatteringExponent;                // 0x36C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        FogDirectionalInscatteringStartDistance;           // 0x370(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        FogFullyDirectionalInscatteringColorDistance;      // 0x374(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         FogUseVolumetricFog;                               // 0x378(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_148A[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        FogVolumetricFogExtinctionScale;                   // 0x37C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        FogVolumetricFogDistance;                          // 0x380(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        FogVolumetricFogScatteringDistribution;            // 0x384(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FColor                                FogVolumetricFogAlbedo;                            // 0x388(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        TimeOfDay;                                         // 0x38C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        PostProcessBlendWeight;                            // 0x390(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        PostProcessFogOpacity;                             // 0x394(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLinearColor                          PostProcessFogColor;                               // 0x398(0x10)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLinearColor                          DirectionalLightColor;                             // 0x3A8(0x10)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DirectionalLightIntensity;                         // 0x3B8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               DirectionalLightAngle;                             // 0x3BC(0xC)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bResetMaterialWhenUpdatingParams;                  // 0x3C8(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_148B[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FLinearColor                          CloudHorizonColor;                                 // 0x3CC(0x10)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLinearColor                          SkyboxHorizonColor;                                // 0x3DC(0x10)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLinearColor                          SkyboxZenithColor;                                 // 0x3EC(0x10)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        CloudAmountHorizon;                                // 0x3FC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        CloudAmountZenith;                                 // 0x400(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        CloudSpeedMaster;                                  // 0x404(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        CloudSpeedDetailTextureOne;                        // 0x408(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        CloudSpeedDetailTextureTwo;                        // 0x40C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        StormStrength;                                     // 0x410(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SunScale;                                          // 0x414(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SunDiscIntensity;                                  // 0x418(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_148C[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<class FName, float>                     ScalarParameters;                                  // 0x420(0x50)(Edit, BlueprintVisible, ZeroConstructor, Interp, Protected, NativeAccessSpecifierProtected)
	TArray<class FName>                          SkyboxHorizonMaterialParameters;                   // 0x470(0x10)(Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<class FName>                          SkyboxZenithMaterialParameters;                    // 0x480(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FLinearColor                          SkyLightColor;                                     // 0x490(0x10)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SkyLightIntensity;                                 // 0x4A0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_148D[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UTextureCube*                          SkyLightCubemap;                                   // 0x4A8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AFortTimeOfDayManager*                 TODM;                                              // 0x4B0(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UExponentialHeightFogComponent*        ExponentialHeightFog;                              // 0x4B8(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UDirectionalLightComponent*            DirectionalLight;                                  // 0x4C0(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USkyLightComponent*                    SkyLight;                                          // 0x4C8(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("TimeOfDayController_BlueprintBase");
		return Clss;
	}

	void SetSunOrMoonScale();
	void SetPostProcessSettings();
};

// 0x28 (0x470 - 0x448)
// Class FortniteGame.HoverDronePawn
class AHoverDronePawn : public AFortReplaySpectatorPawnBase
{
public:
	uint8                                        Pad_148E[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UHoverDroneMovementComponent*          HoverMoveComponent;                                // 0x460(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_148F[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("HoverDronePawn");
		return Clss;
	}

	bool IsMaintainingConstantAltitude();
	float GetAltitude();
};

// 0x80 (0x4F0 - 0x470)
// Class FortniteGame.AutoFrameDronePawn
class AAutoFrameDronePawn : public AHoverDronePawn
{
public:
	uint8                                        Pad_1490[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class AActor*>                        ActorsToTrack;                                     // 0x488(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	TMap<class AActor*, float>                   TrackedActorTimes;                                 // 0x498(0x50)(ZeroConstructor, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1491[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("AutoFrameDronePawn");
		return Clss;
	}

};

// 0x80 (0xA8 - 0x28)
// Class FortniteGame.AutomationPerfMonitorManager
class UAutomationPerfMonitorManager : public UObject
{
public:
	uint8                                        Pad_1493[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class FString>                        DesiredStats;                                      // 0x30(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                         bRecording;                                        // 0x40(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1494[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        TimeSinceLastRecord;                               // 0x44(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        LastGoodFrame;                                     // 0x48(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1495[0x5C];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("AutomationPerfMonitorManager");
		return Clss;
	}

	void StopRecordingFTestPerf();
	void StartRecordingFTestPerf(const TArray<class FString>& StatsToRecord);
	bool IsRecordingFTestPerf();
	float GetStatAverage(const class FString& StatName);
	class UAutomationPerfMonitorManager* GetPerfMonitorInstance();
};

// 0x10 (0x340 - 0x330)
// Class FortniteGame.BattleBusCosmeticInstanceBase
class ABattleBusCosmeticInstanceBase : public AActor
{
public:
	uint8                                        Pad_1496[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UAthenaBattleBusItemDefinition*        ActiveSkin;                                        // 0x338(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("BattleBusCosmeticInstanceBase");
		return Clss;
	}

};

// 0x80 (0x748 - 0x6C8)
// Class FortniteGame.BGAConsumableSpawner
class ABGAConsumableSpawner : public ABuildingActor
{
public:
	uint8                                        Pad_1497[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class USceneComponent*                       DummyRoot;                                         // 0x6D8(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  SpawnLootTierGroup;                                // 0x6E0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ABuildingActor*                        AssociatedBuildingActor;                           // 0x6E8(0x8)(Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, NonPIEDuplicateTransient, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UEnvQuery*                             QueryTemplate;                                     // 0x6F0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FAIDynamicParam>               QueryConfig;                                       // 0x6F8(0x10)(Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	bool                                         bAlignSpawnedActorsToSurface;                      // 0x708(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1498[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FFortItemEntry>                ConsumablesToSpawn;                                // 0x710(0x10)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_1499[0x28];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("BGAConsumableSpawner");
		return Clss;
	}

};

// 0x30 (0x320 - 0x2F0)
// Class FortniteGame.BGAConsumableWrapperItemDefinition
class UBGAConsumableWrapperItemDefinition : public UFortItemDefinition
{
public:
	TSoftClassPtr<class ABuildingGameplayActorConsumable> ConsumableClass;                                   // 0x2F0(0x28)(Edit, DisableEditOnInstance, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_149A[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("BGAConsumableWrapperItemDefinition");
		return Clss;
	}

};

// 0x0 (0x80 - 0x80)
// Class FortniteGame.BinaryWhitelistCommandlet
class UBinaryWhitelistCommandlet : public UCommandlet
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("BinaryWhitelistCommandlet");
		return Clss;
	}

};

// 0x50 (0x660 - 0x610)
// Class FortniteGame.BuildingActorEditorComponent
class UBuildingActorEditorComponent : public UStaticMeshComponent
{
public:
	//TSoftObjectPtr<class UMaterialInterface>   CurrentlySnappedMaterial;                          // 0x608(0x28)(UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_149B[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftObjectPtr<class UStaticMesh>            CubeMesh;                                          // 0x630(0x28)(UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_149C[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("BuildingActorEditorComponent");
		return Clss;
	}

};

// 0xF0 (0x120 - 0x30)
// Class FortniteGame.BuildingActorHotSpotConfig
class UBuildingActorHotSpotConfig : public UDataAsset
{
public:
	struct FBuildingActorHotSpotDirection        DirectionSetup;                                    // 0x30(0x20)(Edit, DisableEditOnInstance, NoDestructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_149D[0xA0];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FBuildingActorHotSpotDirection        DefaultSetup;                                      // 0xF0(0x20)(Edit, DisableEditOnInstance, NoDestructor, Protected, NativeAccessSpecifierProtected)
	class UAIHotSpotConfig*                      ExtraTypeConfig;                                   // 0x110(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bHasDirectionalSetup : 1;                          // Mask : 0x1 0x118(0x1)(NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_149E[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("BuildingActorHotSpotConfig");
		return Clss;
	}

};

// 0x0 (0x570 - 0x570)
// Class FortniteGame.BuildingActorHotSpotRenderingComponent
class UBuildingActorHotSpotRenderingComponent : public UPrimitiveComponent
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("BuildingActorHotSpotRenderingComponent");
		return Clss;
	}

};

// 0x50 (0x380 - 0x330)
// Class FortniteGame.BuildingActorTickManager
class ABuildingActorTickManager : public AActor
{
public:
	TSet<class ABuildingActor*>                  Actors;                                            // 0x330(0x50)(ZeroConstructor, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("BuildingActorTickManager");
		return Clss;
	}

};

// 0x5C0 (0xC88 - 0x6C8)
// Class FortniteGame.BuildingSMActor
class ABuildingSMActor : public ABuildingActor
{
public:
	uint8                                        Pad_14A9[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UBuildingTextureData*                  TextureData;                                       // 0x6D8(0x8)(Edit, Net, ZeroConstructor, SaveGame, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_14AA[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UStaticMesh*                           StaticMesh;                                        // 0x6F8(0x8)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FTierMeshSets>                 AlternateMeshes;                                   // 0x700(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	int32                                        AltMeshIdx;                                        // 0x710(0x4)(Net, ZeroConstructor, SaveGame, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortResourceType                 ResourceType;                                      // 0x714(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnInstance, SaveGame, IsPlainOldData, RepNotify, NoDestructor, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_14AB[0x53];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	uint8                                        bAllowBuildingCheat : 1;                           // Mask : 0x1 0x768(0x1)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bMirrored : 1;                                     // Mask : 0x2 0x768(0x1)(Edit, BlueprintVisible, Net, DisableEditOnTemplate, SaveGame, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bNoCollision : 1;                                  // Mask : 0x4 0x768(0x1)(Edit, BlueprintVisible, Net, DisableEditOnInstance, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bNoCameraCollision : 1;                            // Mask : 0x8 0x768(0x1)(Edit, BlueprintVisible, Net, DisableEditOnInstance, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bCameraOnlyCollision : 1;                          // Mask : 0x10 0x768(0x1)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bNoPawnCollision : 1;                              // Mask : 0x20 0x768(0x1)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bNoAIPawnCollision : 1;                            // Mask : 0x40 0x768(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bNoWeaponCollision : 1;                            // Mask : 0x80 0x768(0x1)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bNoRangedWeaponCollision : 1;                      // Mask : 0x1 0x769(0x1)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bNoProjectileCollision : 1;                        // Mask : 0x2 0x769(0x1)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bDoNotBlockInteract : 1;                           // Mask : 0x4 0x769(0x1)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bBlocksCeilingPlacement : 1;                       // Mask : 0x8 0x769(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bBlocksAttachmentPlacement : 1;                    // Mask : 0x10 0x769(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bSupportsRepairing : 1;                            // Mask : 0x20 0x769(0x1)(Edit, BlueprintVisible, Net, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bRandomYawOnPlacement : 1;                         // Mask : 0x40 0x769(0x1)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bRandomScaleOnPlacement : 1;                       // Mask : 0x80 0x769(0x1)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bClearMIDWhenReturningToUndamagedState : 1;        // Mask : 0x1 0x76A(0x1)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        : 1;                                               // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        bNeedsMIDsForCreative : 1;                         // Mask : 0x4 0x76A(0x1)(Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        : 1;                                               // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        bAllowResourceDrop : 1;                            // Mask : 0x10 0x76A(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bHideOnDeath : 1;                                  // Mask : 0x20 0x76A(0x1)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bPlayDestructionEffects : 1;                       // Mask : 0x40 0x76A(0x1)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bSkipConstructionSounds : 1;                       // Mask : 0x80 0x76A(0x1)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bSupportedDirectly : 1;                            // Mask : 0x1 0x76B(0x1)(Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bForciblyStructurallySupported : 1;                // Mask : 0x2 0x76B(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bRegisterWithStructuralGrid : 1;                   // Mask : 0x4 0x76B(0x1)(NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bUnderConstruction : 1;                            // Mask : 0x8 0x76B(0x1)(Net, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bUnderRepair : 1;                                  // Mask : 0x10 0x76B(0x1)(Net, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bCurrentlyBeingEdited : 1;                         // Mask : 0x20 0x76B(0x1)(Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        : 1;                                               // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        bAllowWeakSpots : 1;                               // Mask : 0x80 0x76B(0x1)(Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bUseComplexForWeakSpots : 1;                       // Mask : 0x1 0x76C(0x1)(Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bCanSpawnAtLowerQuotaLevels : 1;                   // Mask : 0x2 0x76C(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bNeedsWindMaterialParameters : 1;                  // Mask : 0x4 0x76C(0x1)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bPropagatesBounceEffects : 1;                      // Mask : 0x8 0x76C(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bNeedsDamageOverlay : 1;                           // Mask : 0x10 0x76C(0x1)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bIsInitiallyBuilding : 1;                          // Mask : 0x20 0x76C(0x1)(Net, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class ELootQuotaLevel                   MaximumQuotaLevelBound;                            // 0x76D(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EBuildingAnim                     BuildingAnimation;                                 // 0x76E(0x1)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_14AC[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector2D                             RandomScaleRange;                                  // 0x770(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFortBounceData                       BounceData;                                        // 0x778(0x30)(Transient, NoDestructor, NativeAccessSpecifierPublic)
	float                                        DestroyedTime;                                     // 0x7A8(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        InfluenceMapWeight;                                // 0x7AC(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaticMeshComponent*                  BASEEffectMeshComponent;                           // 0x7B0(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FBuildingNavObstacle>          NavObstacles;                                      // 0x7B8(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, AdvancedDisplay, NativeAccessSpecifierPublic)
	TSubclassOf<class UNavArea>                  CachedNavAreaHusk;                                 // 0x7C8(0x8)(Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, AdvancedDisplay, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UNavArea>                  CachedNavAreaSmasher;                              // 0x7D0(0x8)(Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, AdvancedDisplay, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_14AD[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               BuildingPlacementDistance;                         // 0x7F0(0xC)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector_NetQuantize100                ReplicatedDrawScale3D;                             // 0x7FC(0xC)(Net, Transient, RepNotify, NoDestructor, Protected, NativeAccessSpecifierProtected)
	class UMaterialInstanceConstant*             ReplicatedMIC;                                     // 0x808(0x8)(Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FEditorOnlyBuildingInstanceMaterialParameters EditorOnlyInstanceMaterialParameters;              // 0x810(0x30)(Edit, DisableEditOnTemplate, Protected, NativeAccessSpecifierProtected)
	class UStaticMeshComponent*                  StaticMeshComponent;                               // 0x840(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UMaterialInterface*                    BaseMaterial;                                      // 0x848(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	UMulticastDelegateProperty_                  OnConstructionComplete;                            // 0x850(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FBuildingActorMinimalReplicationProxy MinimalReplicationProxy;                           // 0x860(0x18)(Net, RepNotify, NoDestructor, NativeAccessSpecifierPublic)
	bool                                         bForceReplicateSubObjects;                         // 0x878(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_14AE[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  DestructionLootTierGroup;                          // 0x87C(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FChosenQuotaInfo                      DestructionLootTierChosenQuotaInfo;                // 0x884(0xC)(Transient, NoDestructor, Protected, NativeAccessSpecifierProtected)
	class FName                                  DestructionLootTierKey;                            // 0x890(0x8)(ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FCurveTableRowHandle                  BuildingResourceAmountOverride;                    // 0x898(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        MaxResourcesToSpawn;                               // 0x8A8(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_14AF[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftObjectPtr<class UCurveLinearColor>      WindSpeedCurve;                                    // 0x8B0(0x28)(Edit, DisableEditOnInstance, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UCurveLinearColor>      WindPannerSpeedCurve;                              // 0x8D8(0x28)(Edit, DisableEditOnInstance, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<TSoftObjectPtr<class UMaterialInterface>> IntenseWindMaterials;                              // 0x900(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class USoundBase>             WindAudio;                                         // 0x910(0x28)(Edit, DisableEditOnInstance, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UParticleSystem*                       BreakEffect;                                       // 0x938(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UParticleSystem*                       DeathParticles;                                    // 0x940(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  DeathParticleSocketName;                           // 0x948(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USoundBase*                            DeathSound;                                        // 0x950(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UParticleSystem*                       ConstructedEffect;                                 // 0x958(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ShieldBuffMaterialParamValue1;                     // 0x960(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ShieldBuffMaterialParamValue2;                     // 0x964(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        AnimatingDistanceFieldSelfShadowBias;              // 0x968(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_14B0[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FRandomDayphaseFX>             RandomDayphaseFXList;                              // 0x970(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	class UAudioComponent*                       ConstructionAudioComponent;                        // 0x980(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UMaterialInstanceDynamic*>      AnimatingMIDs;                                     // 0x988(0x10)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	class UStaticMeshComponent*                  DamageOverlayComponent;                            // 0x998(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInstanceDynamic*              MIDDamageOverlay;                                  // 0x9A0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DamageAmountStart;                                 // 0x9A8(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        LastDamageAmount;                                  // 0x9AC(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FHitResult                            LastDamageHit;                                     // 0x9B0(0x88)(Transient, IsPlainOldData, NoDestructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_14B1[0x60];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	UMulticastDelegateProperty_                  OnRepairBuildingStarted;                           // 0xA98(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnRepairBuildingFinished;                          // 0xAA8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FFortConnectivityComponentData        ConnectivityData;                                  // 0xAB8(0x18)(SaveGame, NativeAccessSpecifierPublic)
	class UBuildingEditModeMetadata*             EditModePatternData;                               // 0xAD0(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        UndermineGroup;                                    // 0xAD8(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        LogicalBuildingIdx;                                // 0xADC(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FAnimatingMaterialPair>        AnimatingMaterialMappings;                         // 0xAE0(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TArray<struct FAnimatingMaterialPair>        DamagedButNotAnimatingMaterialMappings;            // 0xAF0(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	float                                        AnimatingSubObjects;                               // 0xB00(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        NumFrameSubObjects;                                // 0xB04(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UBuildingEditModeSupport>  EditModeSupportClass;                              // 0xB08(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBuildingEditModeSupport*              EditModeSupport;                                   // 0xB10(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        HealthToAutoBuild;                                 // 0xB18(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        AccumulatedAutoBuildTime;                          // 0xB1C(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EBuildingReplacementType          BuildingReplacementType;                           // 0xB20(0x1)(Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EBuildingReplacementType          ReplacementDestructionReason;                      // 0xB21(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EBuildingAnim                     CurBuildingAnimType;                               // 0xB22(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EFortDamageVisualsState           DamageVisualsState;                                // 0xB23(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        CurAnimSubObjectNum;                               // 0xB24(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        CurBuildingAnimStartTime;                          // 0xB28(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        CurAnimSubObjectTargetNum;                         // 0xB2C(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UMaterialInstanceDynamic*>      BlueprintMIDs;                                     // 0xB30(0x10)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	class UStaticMeshComponent*                  BlueprintMeshComp;                                 // 0xB40(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AFortPlayerStateZone*                  EditingPlayer;                                     // 0xB48(0x8)(Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTexture2D*                            ConnectivityIcon;                                  // 0xB50(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_14B2[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               BuildingAttachmentPointOffset;                     // 0xB70(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        BuildingAttachmentRadius;                          // 0xB7C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EBuildingAttachmentSlot           BuildingAttachmentSlot;                            // 0xB80(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EBuildingAttachmentType           BuildingAttachmentType;                            // 0xB81(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EPlacementType                    BuildingPlacementType;                             // 0xB82(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EStructuralSupportCheck           LastStructuralCheck;                               // 0xB83(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        PlayerGridSnapSize;                                // 0xB84(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ABuildingSMActor*                      ParentActorToAttachTo;                             // 0xB88(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_14B3[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class ABuildingSMActor*>              AttachedBuildingActors;                            // 0xB98(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	TArray<class ABuildingSMActor*>              BuildingActorsAttachedTo;                          // 0xBA8(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	UMulticastDelegateProperty_                  OnTrapPlacementChanged;                            // 0xBB8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnReplacementDestruction;                          // 0xBC8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TArray<class ABuildingSMActor*>              AttachmentPlacementBlockingActors;                 // 0xBD8(0x10)(Net, ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	class UBuildingConnectivityComponent*        ConnectivityComponent;                             // 0xBE8(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class ABuildingFoundation>    Foundation;                                        // 0xBF0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint16                                       LODActorIndexInFoundation;                         // 0xBF8(0x2)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint16                                       ActorIndexInFoundation;                            // 0xBFA(0x2)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_14B4[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftObjectPtr<class USoundBase>             StartRepairSound;                                  // 0xC00(0x28)(Transient, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_14B5[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class ABuildingSMActor*                      DamagerOwner;                                      // 0xC38(0x8)(BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AFortConstructorBASE*                  RelevantBASE;                                      // 0xC40(0x8)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_14B6[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AFortConstructorBASE*                  LastRelevantBASE;                                  // 0xC50(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_14B7[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FProxyGameplayCueDamagePhysical       ProxyGameplayCueDamagePhysical;                    // 0xC68(0x20)(Net, RepNotify, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("BuildingSMActor");
		return Clss;
	}

	bool WillRegisterWithStructuralGrid();
	void UpdateRepairMaterialAnim(float CurveValue);
	void UpdateLODOverrideEffect(float CurveValue);
	void UpdateDynamicShrinkAndDestroyEffect(float CurveValue);
	void TransferFromDuplicationData(const struct FBuildingDuplicationData& SourceData);
	void TransferBuildingData(class ABuildingSMActor* SourceDataActor);
	void StartBounceAnimation(float StartTime, float Radius, struct FVector& Normal, struct FVector& Center, enum class EFortBounceType InBounceType, bool bLocalInstigator);
	void SetTextureData(TArray<class UTexture2D*>& InTextures);
	void SetMirrored(bool bIsMirrored);
	void RepairBuilding(class AFortPlayerController* RepairingController, int32 ResourcesSpent);
	TArray<class UTexture2D*> ReadTextureData();
	void PreForceMove(class AController* EventInstigator);
	void PostForceMove();
	void OnRepairStarted();
	void OnRep_ResourceType(enum class EFortResourceType OldType);
	void OnRep_ReplicationProxy();
	void OnRep_ReplicatedMIC();
	void OnRep_ReplicatedDrawScale3D();
	void OnRep_RelevantBASE();
	void OnRep_ProxyGameplayCueDamagePhysical();
	void OnRep_NoCollision();
	void OnRep_NoCameraCollision();
	void OnRep_MetaData();
	void OnRep_EditingPlayer();
	void OnRep_bUnderRepair();
	void OnRep_bUnderConstruction();
	void OnRep_BuildingReplacementType();
	void OnRep_BuildingAnimation();
	void OnLODOverrideEffectFinished();
	void OnDynamicShrinkAndDestroyEffectFinished();
	void OnDetachFromBuilding(class ABuildingSMActor* AttachedToBuilding, bool bBeingDestroyed);
	void OnBounceAnimationUpdate(const struct FFortBounceData& Data);
	void OnAttachToBuilding(class ABuildingSMActor* AttachedToBuilding);
	void NetMulticast_InvokeGameplayCuesExecuted_WithParams(const struct FGameplayTagContainer& GameplayCueTags, const struct FPredictionKey& PredictionKey, const struct FGameplayCueParameters& GameplayCueParameters);
	void NetMulticast_InvokeGameplayCuesExecuted(const struct FGameplayTagContainer& GameplayCueTags, const struct FPredictionKey& PredictionKey, const struct FGameplayEffectContextHandle& EffectContext);
	void NetMulticast_InvokeGameplayCuesAddedAndWhileActive_WithParams(const struct FGameplayTagContainer& GameplayCueTags, const struct FPredictionKey& PredictionKey, const struct FGameplayCueParameters& GameplayCueParameters);
	void NetMulticast_InvokeGameplayCueExecuted_WithParams(const struct FGameplayTag& GameplayCueTag, const struct FPredictionKey& PredictionKey, const struct FGameplayCueParameters& GameplayCueParameters);
	void NetMulticast_InvokeGameplayCueExecuted_FromSpec(const struct FGameplayEffectSpecForRPC& Spec, const struct FPredictionKey& PredictionKey);
	void NetMulticast_InvokeGameplayCueExecuted(const struct FGameplayTag& GameplayCueTag, const struct FPredictionKey& PredictionKey, const struct FGameplayEffectContextHandle& EffectContext);
	void NetMulticast_InvokeGameplayCueAddedAndWhileActive_WithParams(const struct FGameplayTag& GameplayCueTag, const struct FPredictionKey& PredictionKey, const struct FGameplayCueParameters& GameplayCueParameters);
	void NetMulticast_InvokeGameplayCueAddedAndWhileActive_FromSpec(struct FGameplayEffectSpecForRPC& Spec, const struct FPredictionKey& PredictionKey);
	void NetMulticast_InvokeGameplayCueAdded_WithParams(const struct FGameplayTag& GameplayCueTag, const struct FPredictionKey& PredictionKey, const struct FGameplayCueParameters& Parameters);
	void NetMulticast_InvokeGameplayCueAdded(const struct FGameplayTag& GameplayCueTag, const struct FPredictionKey& PredictionKey, const struct FGameplayEffectContextHandle& EffectContext);
	void MulticastPlayFullHealthEffects();
	void MarkConnectedBuildingsForStructuralIntegrityCheck();
	bool IsUnderConstruction();
	bool IsSupportedByWorld();
	bool IsStructurallySupported();
	bool HasDestructionLoot();
	class UCurveLinearColor* GetWindSpeedCurveForPreview();
	class UCurveLinearColor* GetWindPannerSpeedCurveForPreview();
	enum class EBuildingReplacementType GetReplacementDestructionReason();
	class UMaterialInterface* GetOverrideMeshMaterial(class UStaticMeshComponent* MeshComp, int32 MatIdx);
	int32 GetLogicalBuildingIndex();
	bool GetIntenseWindMaterialsForPreview(TArray<class UMaterialInterface*>* Materials);
	struct FBuildingDuplicationData GetDuplicationData();
	void GetBuildingTextureData(TArray<class UBuildingTextureData*>* OutTextureDataArray);
	class UStaticMeshComponent* GetBuildingMeshComponent();
	TArray<class ABuildingSMActor*> GetAttachedBuildingActors();
	class UMaterialInstanceDynamic* GetAnimatingMID(int32 ElementIndex);
	void GameplayCue_Abilities_Activation_Generic_BannerWallBuff2(enum class EGameplayCueEvent EventType, const struct FGameplayCueParameters& Parameters);
	void GameplayCue_Abilities_Activation_Generic_BannerWallBuff1(enum class EGameplayCueEvent EventType, const struct FGameplayCueParameters& Parameters);
	void ForceIntoStructuralGridDuringRuntime();
	void EditorOnlySetInstanceMaterialVectorParameter(class FName ParamName, const struct FLinearColor& Value);
	void EditorOnlySetInstanceMaterialTextureParameter(class FName ParamName, class UTexture* Value);
	void EditorOnlySetInstanceMaterialScalarParameter(class FName ParamName, float Value);
	void EditorOnlyRemoveInstanceMaterialVectorParameter(class FName ParamName);
	void EditorOnlyRemoveInstanceMaterialTextureParameter(class FName ParamName);
	void EditorOnlyRemoveInstanceMaterialScalarParameter(class FName ParamName);
	void DetachBuildingActorFromMe(class ABuildingSMActor* ActorToAttach, bool bBeingDestroyed);
	void ClearRequestedBuildingAnimation();
	void BlueprintOnStructurallyUnstable();
	void BlueprintOnStructurallyStable();
	void AttachBuildingActorToMe(class ABuildingSMActor* ActorToAttach, bool bForceAttachment);
	void AddToGrid();
};

// 0x8 (0xC90 - 0xC88)
// Class FortniteGame.BuildingAutoNav
class ABuildingAutoNav : public ABuildingSMActor
{
public:
	uint8                                        bAutoAssignNavProperties : 1;                      // Mask : 0x1 0xC88(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_14B8[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("BuildingAutoNav");
		return Clss;
	}

};

// 0xA0 (0x830 - 0x790)
// Class FortniteGame.BuildingCapturePointActor
class ABuildingCapturePointActor : public ABuildingGameplayActor
{
public:
	uint8                                        bUseHUDIndicator : 1;                              // Mask : 0x1 0x790(0x1)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_14BB[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  HUDStyle;                                          // 0x794(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               HUDOffset;                                         // 0x79C(0xC)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bHUDClampToScreenEdge : 1;                         // Mask : 0x1 0x7A8(0x1)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_14BC[0xF];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class USphereComponent*                      CollisionComponent;                                // 0x7B8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bActivated : 1;                                    // Mask : 0x1 0x7C0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, DisableEditOnInstance, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_14BD[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	enum class EContentionRules                  ContentionRules;                                   // 0x7C4(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_14BE[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<enum class EFortTeam>                 TeamsBarredFromCapture;                            // 0x7C8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	float                                        PercentIncreasePerPlayerCaptor;                    // 0x7D8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        PercentIncreasePerAICaptor;                        // 0x7DC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        PercentDecreaseNoCaptor;                           // 0x7E0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bLocked : 1;                                       // Mask : 0x1 0x7E4(0x1)(Edit, BlueprintVisible, Net, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_14BF[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        UnlockInterval;                                    // 0x7E8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EUnlockRules                      UnlockRules;                                       // 0x7EC(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_14C0[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        NumCapturingPoint;                                 // 0x7F0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EFortTeam                         TeamCapturingPoint;                                // 0x7F4(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EFortTeam                         TeamControllingPoint;                              // 0x7F5(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EFortTeam                         TeamOwningPoint;                                   // 0x7F6(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class ECaptureState                     CaptureState;                                      // 0x7F7(0x1)(Edit, Net, ZeroConstructor, Transient, EditConst, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        CapturePercentage;                                 // 0x7F8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ReplicatedCapturePercentage;                       // 0x7FC(0x4)(Edit, Net, ZeroConstructor, Transient, EditConst, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	UMulticastDelegateProperty_                  OnCapturePointStateChanged;                        // 0x800(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	UMulticastDelegateProperty_                  OnTeamOwningPointChanges;                          // 0x810(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_14C1[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("BuildingCapturePointActor");
		return Clss;
	}

	void SetActivatedState(bool bInActivated);
	void OnRep_ReplicatedCapturePercentage();
	void OnRep_CaptureState();
	void OnRep_bLocked();
	void OnRep_bActivated();
	void OnLeaveCapturePoint(class UPrimitiveComponent* OverlappedComp, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void OnEnterCapturePoint(class UPrimitiveComponent* OverlappedComp, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult);
	void OnCapturePointStateChange(enum class ECaptureState InState, enum class EFortTeam InTeam);
	void OnCapturePointLockStateChange(bool bInLocked);
	void OnCapturePointActiveStateChange(bool bInActive);
	enum class ECaptureState GetCaptureState();
};

// 0xD0 (0x320 - 0x250)
// Class FortniteGame.BuildingConnectivityComponent
class UBuildingConnectivityComponent : public USceneComponent
{
public:
	//TArray<struct FFortConnectionData>         Connections;                                       // 0x248(0x10)(Net, ZeroConstructor, SaveGame, RepNotify, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_14C4[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class FName>                          SocketNames;                                       // 0x258(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	bool                                         bAutoConnectOnInitialize;                          // 0x268(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bDrawDebugData;                                    // 0x269(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_14C5[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class ABuildingSMActor*                      BuildingOwner;                                     // 0x270(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class ABuildingConnectivityEffect*>   ConnectionEffects;                                 // 0x278(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	bool                                         bIsPowered;                                        // 0x288(0x1)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, SaveGame, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bIsProvidingPower;                                 // 0x289(0x1)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, SaveGame, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bIsAbleToProvidePower;                             // 0x28A(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bAllowConnections;                                 // 0x28B(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bAllowsPowerToPassThrough;                         // 0x28C(0x1)(ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_14C6[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	UMulticastDelegateProperty_                  AuthorityOnConnectedDelegate;                      // 0x290(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	UMulticastDelegateProperty_                  AuthorityOnDisconnectedDelegate;                   // 0x2A0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	UMulticastDelegateProperty_                  ClientOnConnectedDelegate;                         // 0x2B0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	UMulticastDelegateProperty_                  ClientOnDisconnectedDelegate;                      // 0x2C0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	UMulticastDelegateProperty_                  AuthorityOnPoweredDelegate;                        // 0x2D0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	UMulticastDelegateProperty_                  AuthorityOnUnpoweredDelegate;                      // 0x2E0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	UMulticastDelegateProperty_                  ClientOnPoweredDelegate;                           // 0x2F0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	UMulticastDelegateProperty_                  ClientOnUnpoweredDelegate;                         // 0x300(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_14C7[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("BuildingConnectivityComponent");
		return Clss;
	}

	void OnRep_Connections();
	void OnRep_bIsProvidingPower();
	void OnRep_bIsPowered();
	void OnPlaced();
	bool K2_IsPowered();
	bool IsConnectedTo(class ABuildingSMActor* TestActor);
	void DrawDebugData();
	void DisconnectAll();
	bool CanConnectTo(class ABuildingSMActor* TestActor);
};

// 0x38 (0x368 - 0x330)
// Class FortniteGame.BuildingConnectivityEffect
class ABuildingConnectivityEffect : public AActor
{
public:
	struct FFortConnectionData                   ConnectionData;                                    // 0x330(0x30)(NoDestructor, NativeAccessSpecifierPublic)
	bool                                         bDebugDraw;                                        // 0x360(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_14C8[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("BuildingConnectivityEffect");
		return Clss;
	}

	void OnDisconnect();
	void OnConnect(struct FTransform& T1, struct FTransform& T2);
};

// 0x10 (0x340 - 0x330)
// Class FortniteGame.BuildingConnectivityManager
class ABuildingConnectivityManager : public AActor
{
public:
	TArray<class ABuildingSMActor*>              ConnectivityActors;                                // 0x330(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("BuildingConnectivityManager");
		return Clss;
	}

};

// 0x48 (0xCD8 - 0xC90)
// Class FortniteGame.BuildingTimeOfDayLights
class ABuildingTimeOfDayLights : public ABuildingAutoNav
{
public:
	TArray<class ULightComponent*>               TimeOfDayControlledLights;                         // 0xC90(0x10)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	TArray<struct FVector>                       TimeOfDayControlledLightsPositions;                // 0xCA0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<float>                                TimeOfDayControlledLightsInitalIntensities;        // 0xCB0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_14C9[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("BuildingTimeOfDayLights");
		return Clss;
	}

	void GetTimeOfDayBlueprintDefaultVariables(struct FTimeOfDayBlueprintDefaultVariables* OutVariables);
};

// 0x110 (0xDE8 - 0xCD8)
// Class FortniteGame.BuildingContainer
class ABuildingContainer : public ABuildingTimeOfDayLights
{
public:
	class USoundCue*                             SearchingSoundCueLoop;                             // 0xCD8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundCue*                             LootRepeatSoundCue;                                // 0xCE0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundCue*                             OnDamageSoundCue;                                  // 0xCE8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundCue*                             OnDeathSoundCue;                                   // 0xCF0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMesh*                           SearchedMesh;                                      // 0xCF8(0x8)(Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UMaterialInterface*>            SearchedMaterialOverrides;                         // 0xD00(0x10)(Edit, BlueprintVisible, ZeroConstructor, SaveGame, NativeAccessSpecifierPublic)
	class FName                                  SearchLootTierGroup;                               // 0xD10(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FChosenQuotaInfo                      SearchLootTierChosenQuotaInfo;                     // 0xD18(0xC)(Transient, NoDestructor, Protected, NativeAccessSpecifierProtected)
	class FName                                  ContainerLootTierKey;                              // 0xD24(0x8)(ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        ReplicatedLootTier;                                // 0xD2C(0x4)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector2D                             NumItemsToDropRange;                               // 0xD30(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SearchBounceRadiusOverride;                        // 0xD38(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_14CA[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UFortWorldItemDefinition*              LootTestingData;                                   // 0xD40(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LootNoiseRange;                                    // 0xD48(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               LootSpawnLocation;                                 // 0xD4C(0xC)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               LootFinalLocation;                                 // 0xD58(0xC)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               InstancedLoot_TossDirection;                       // 0xD64(0xC)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        InstancedLoot_TossSpeed;                           // 0xD70(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        InstancedLoot_TossConeHalfAngle;                   // 0xD74(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               LootSpawnLocation_Athena;                          // 0xD78(0xC)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                              LootTossDirection_Athena;                          // 0xD84(0xC)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	float                                        LootTossSpeed_Athena;                              // 0xD90(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LootTossConeHalfAngle_Athena;                      // 0xD94(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortRarity                       HighestRarity;                                     // 0xD98(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bAlwaysShowContainer : 1;                          // Mask : 0x1 0xD99(0x1)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bAlwaysMaintainLoot : 1;                           // Mask : 0x2 0xD99(0x1)(Edit, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bDestroyContainerOnSearch : 1;                     // Mask : 0x4 0xD99(0x1)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bAlreadySearched : 1;                              // Mask : 0x8 0xD99(0x1)(BlueprintVisible, Net, Transient, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_14CB[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	uint8                                        bBuriedTreasure : 1;                               // Mask : 0x1 0xD9B(0x1)(Edit, BlueprintVisible, Net, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bHasRaisedTreasure : 1;                            // Mask : 0x2 0xD9B(0x1)(Edit, BlueprintVisible, Net, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bStartAlreadySearched_Athena : 1;                  // Mask : 0x4 0xD9B(0x1)(Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bRegenerateLoot : 1;                               // Mask : 0x8 0xD9B(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bUseLocationForDrop : 1;                           // Mask : 0x10 0xD9B(0x1)(Edit, BlueprintVisible, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        LootedWeaponsDurabilityModifier;                   // 0xD9C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FFortSearchBounceData                 SearchBounceData;                                  // 0xDA0(0x10)(Net, Transient, RepNotify, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FCurveTableRowHandle                  SearchSpeed;                                       // 0xDB0(0x10)(Edit, BlueprintVisible, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_14CC[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UCurveFloat*                           CurrentInteractBounceCurve;                        // 0xDD0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCurveFloat*                           CurrentInteractBounceNormalCurve;                  // 0xDD8(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SavedReservedRandomValueResult;                    // 0xDE0(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        TimeUntilLootRegenerates;                          // 0xDE4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("BuildingContainer");
		return Clss;
	}

	void RaiseTreasure();
	void OnSetSearched();
	void OnSearchInterrupted();
	void OnRep_bAlreadySearched();
	void OnRaiseTreasure();
	void OnLootReset();
	void OnLootRepeat();
	void OnLoot();
	void OnBeginSearch();
	int32 GetLootTier();
	void EnableBacchusHighlight();
	void DisableBacchusHighlight();
	void BounceContainer();
};

// 0x10 (0xCA0 - 0xC90)
// Class FortniteGame.BuildingCorner
class ABuildingCorner : public ABuildingAutoNav
{
public:
	class ABuildingSMActor*                      PrimaryWall;                                       // 0xC90(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ABuildingSMActor*                      SecondaryWall;                                     // 0xC98(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("BuildingCorner");
		return Clss;
	}

};

// 0x10 (0xDF8 - 0xDE8)
// Class FortniteGame.BuildingCustomizableSpawnContainer
class ABuildingCustomizableSpawnContainer : public ABuildingContainer
{
public:
	TArray<struct FFortItemQuantityPair>         SpawnItems;                                        // 0xDE8(0x10)(Edit, BlueprintVisible, Net, ZeroConstructor, SaveGame, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("BuildingCustomizableSpawnContainer");
		return Clss;
	}

};

// 0x8 (0xC98 - 0xC90)
// Class FortniteGame.BuildingDeco
class ABuildingDeco : public ABuildingAutoNav
{
public:
	bool                                         bCastShadow;                                       // 0xC90(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_14CD[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("BuildingDeco");
		return Clss;
	}

};

// 0xE0 (0x110 - 0x30)
// Class FortniteGame.BuildingEditModeMetadata
class UBuildingEditModeMetadata : public UDataAsset
{
public:
	uint8                                        bSupportNextPieceAssist : 1;                       // Mask : 0x1 0x30(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bHasNavigableOpening : 1;                          // Mask : 0x2 0x30(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bHasCustomAttackLocation : 1;                      // Mask : 0x4 0x30(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_14CE[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UBuildingActorHotSpotConfig*           DefaultHotspotConfig;                              // 0x38(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAIHotSpotConfig*                      ShootingHotSpotConfig;                             // 0x40(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_14CF[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FConnectivityCube                     ConnectivityCubeData;                              // 0x50(0xC0)(Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("BuildingEditModeMetadata");
		return Clss;
	}

};

// 0x10 (0x120 - 0x110)
// Class FortniteGame.BuildingEditModeMetadata_BinaryToggle
class UBuildingEditModeMetadata_BinaryToggle : public UBuildingEditModeMetadata
{
public:
	TArray<enum class EBinaryToggleValues>       TileData;                                          // 0x110(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, ZeroConstructor, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("BuildingEditModeMetadata_BinaryToggle");
		return Clss;
	}

};

// 0x0 (0x120 - 0x120)
// Class FortniteGame.BuildingEditModeMetadata_Floor
class UBuildingEditModeMetadata_Floor : public UBuildingEditModeMetadata_BinaryToggle
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("BuildingEditModeMetadata_Floor");
		return Clss;
	}

};

// 0x0 (0x110 - 0x110)
// Class FortniteGame.BuildingEditModeMetadata_Pillar
class UBuildingEditModeMetadata_Pillar : public UBuildingEditModeMetadata
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("BuildingEditModeMetadata_Pillar");
		return Clss;
	}

};

// 0x10 (0x130 - 0x120)
// Class FortniteGame.BuildingEditModeMetadata_Roof
class UBuildingEditModeMetadata_Roof : public UBuildingEditModeMetadata_BinaryToggle
{
public:
	TArray<struct FAuxiliaryEditTileMeshData>    AuxEditTileMeshData;                               // 0x120(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("BuildingEditModeMetadata_Roof");
		return Clss;
	}

};

// 0x10 (0x120 - 0x110)
// Class FortniteGame.BuildingEditModeMetadata_Stair
class UBuildingEditModeMetadata_Stair : public UBuildingEditModeMetadata
{
public:
	TArray<int32>                                TileData;                                          // 0x110(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, ZeroConstructor, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("BuildingEditModeMetadata_Stair");
		return Clss;
	}

};

// 0x0 (0x120 - 0x120)
// Class FortniteGame.BuildingEditModeMetadata_Wall
class UBuildingEditModeMetadata_Wall : public UBuildingEditModeMetadata_BinaryToggle
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("BuildingEditModeMetadata_Wall");
		return Clss;
	}

};

// 0x10 (0x40 - 0x30)
// Class FortniteGame.BuildingEditModeMetadataContainer
class UBuildingEditModeMetadataContainer : public UDataAsset
{
public:
	TArray<class UBuildingEditModeMetadata*>     MetadataCollection;                                // 0x30(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("BuildingEditModeMetadataContainer");
		return Clss;
	}

};

// 0x248 (0x270 - 0x28)
// Class FortniteGame.BuildingEditModeSupport
class UBuildingEditModeSupport : public UObject
{
public:
	class ABuildingSMActor*                      OwnerBuilding;                                     // 0x28(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AFortPlayerController*                 EditingController;                                 // 0x30(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBuildingEditModeMetadata*             PreviewMetadata;                                   // 0x38(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBuildingEditModeMetadata*             ScratchpadMetadata;                                // 0x40(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UBuildingEditModeMetadata> ExpectedMetadataClass;                             // 0x48(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<TSubclassOf<class ABuildingSMActor>>  PossibleEditClasses;                               // 0x50(0x10)(ZeroConstructor, Transient, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UStaticMesh>            EditTileMesh;                                      // 0x60(0x28)(Transient, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UStaticMeshComponent*>          EditTileMeshComponents;                            // 0x88(0x10)(ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UMaterialInterface>     TileMaterialParent;                                // 0x98(0x28)(Transient, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UTexture2D>             ActiveTileTexture;                                 // 0xC0(0x28)(Transient, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UTexture2D>             InactiveTileTexture;                               // 0xE8(0x28)(Transient, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaticMeshComponent*                  LastInteractedComp;                                // 0x110(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaticMeshComponent*                  LastHighlightedComp;                               // 0x118(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaticMeshComponent*                  PreviewComponent;                                  // 0x120(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UMaterialInterface>     PreviewMaterial;                                   // 0x128(0x28)(Transient, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FEditModeState                        PreviewEditModeState;                              // 0x150(0x10)(Transient, NoDestructor, Protected, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UCurveFloat>            SuccessfulPatternMatchCurve;                       // 0x160(0x28)(Transient, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FTimeline                             SuccessfulMatchInteractTimeline;                   // 0x188(0x98)(Transient, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	uint8                                        bCanMirrorMetadataToMatch : 1;                     // Mask : 0x1 0x220(0x1)(Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bCanRotateMetadataToMatch : 1;                     // Mask : 0x2 0x220(0x1)(Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bEditActionInProgress : 1;                         // Mask : 0x4 0x220(0x1)(Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bInitializedTimelines : 1;                         // Mask : 0x8 0x220(0x1)(Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_14D0[0x4F];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("BuildingEditModeSupport");
		return Clss;
	}

	void OnSuccessfulMatchInteractParamUpdate(float NewInteractParamVal);
	void OnSuccessfulMatchInteractComplete();
};

// 0x20 (0x290 - 0x270)
// Class FortniteGame.BuildingEditModeSupport_BinaryToggle
class UBuildingEditModeSupport_BinaryToggle : public UBuildingEditModeSupport
{
public:
	class UBuildingEditModeMetadata_BinaryToggle* BinaryTogglePreviewData;                           // 0x270(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EBinaryToggleValues               CurToggleAction;                                   // 0x278(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_14D1[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FLinearColor                          DefaultBlueTileColor;                              // 0x27C(0x10)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_14D2[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("BuildingEditModeSupport_BinaryToggle");
		return Clss;
	}

};

// 0x0 (0x290 - 0x290)
// Class FortniteGame.BuildingEditModeSupport_Floor
class UBuildingEditModeSupport_Floor : public UBuildingEditModeSupport_BinaryToggle
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("BuildingEditModeSupport_Floor");
		return Clss;
	}

};

// 0x20 (0x2B0 - 0x290)
// Class FortniteGame.BuildingEditModeSupport_Roof
class UBuildingEditModeSupport_Roof : public UBuildingEditModeSupport_BinaryToggle
{
public:
	TArray<struct FTileCompInterpData>           TileInterpData;                                    // 0x290(0x10)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_14D3[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("BuildingEditModeSupport_Roof");
		return Clss;
	}

};

// 0xD0 (0x340 - 0x270)
// Class FortniteGame.BuildingEditModeSupport_Stair
class UBuildingEditModeSupport_Stair : public UBuildingEditModeSupport
{
public:
	class UBuildingEditModeMetadata_Stair*       StairPreviewMetadata;                              // 0x270(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBuildingEditModeMetadata_Stair*       LastValidMetadataConfiguration;                    // 0x278(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UStaticMesh>            AuxiliaryIndicatorMesh;                            // 0x280(0x28)(Transient, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UStaticMeshComponent*>          AuxiliaryIndicatorComponents;                      // 0x2A8(0x10)(ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	class UStaticMeshComponent*                  ActivatedAuxIndicatorComponent;                    // 0x2B8(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UMaterialInterface>     AuxIndicatorComponentParentMaterial;               // 0x2C0(0x28)(Transient, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UTexture2D>             AuxIndicatorArrowTexture;                          // 0x2E8(0x28)(Transient, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UTexture2D>             AuxIndicatorGridTexture;                           // 0x310(0x28)(Transient, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_14D4[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("BuildingEditModeSupport_Stair");
		return Clss;
	}

};

// 0x0 (0x290 - 0x290)
// Class FortniteGame.BuildingEditModeSupport_Wall
class UBuildingEditModeSupport_Wall : public UBuildingEditModeSupport_BinaryToggle
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("BuildingEditModeSupport_Wall");
		return Clss;
	}

};

// 0x58 (0x7E8 - 0x790)
// Class FortniteGame.BuildingFlagSpawn
class ABuildingFlagSpawn : public ABuildingGameplayActor
{
public:
	uint8                                        Pad_14D5[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               HUDIndicatorRelativeOffset;                        // 0x798(0xC)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bPickupOnTouch;                                    // 0x7A4(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_14D6[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class AFortCarriedObject>        CarriedObjectClass;                                // 0x7A8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               RelativeTranslation;                               // 0x7B0(0xC)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_14D7[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AFortCarriedObject*                    SpawnedObject;                                     // 0x7C0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SpawnDelay;                                        // 0x7C8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_14D8[0x1C];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("BuildingFlagSpawn");
		return Clss;
	}

	void SpawnCarriedObject();
	void OnCarriedObjectDetachedEvent();
	void OnCarriedObjectAttachedEvent();
	bool IsSpawnedObjectAwayFromBase();
};

// 0x8 (0xC90 - 0xC88)
// Class FortniteGame.BuildingFloor
class ABuildingFloor : public ABuildingSMActor
{
public:
	uint8                                        bShouldIgnoreForHorizontalHotspotSearch : 1;       // Mask : 0x1 0xC88(0x1)(Edit, DisableEditOnInstance, NoDestructor, AdvancedDisplay, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_14D9[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("BuildingFloor");
		return Clss;
	}

	bool IsBalcony();
};

// 0x280 (0xA10 - 0x790)
// Class FortniteGame.BuildingFOBConfigActor
class ABuildingFOBConfigActor : public ABuildingGameplayActor
{
public:
	UMulticastDelegateProperty_                  OnIOOperationComplete;                             // 0x790(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class FString                                ExplicitSaveFile;                                  // 0x7A0(0x10)(Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UFortBuildingInstructions> FallbackBuildingInstructions;                      // 0x7B0(0x28)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                CoreSaveFileUniqueContext;                         // 0x7D8(0x10)(Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftClassPtr<class ABuildingFOBCoreSpawnPad> CreationModeSpawnPadClass;                         // 0x7E8(0x28)(Edit, DisableEditOnInstance, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTagContainer                 SpawnPadPlacementActorRequiredTags;                // 0x810(0x20)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UObjectLibrary>         FOBCoreLibrary;                                    // 0x830(0x28)(Edit, DisableEditOnInstance, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bLoadFirstCoreInCreationMode : 1;                  // Mask : 0x1 0x858(0x1)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_14DE[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FFOBCoreChoiceArray                   FOBCoreChoices;                                    // 0x860(0xC0)(Net, Transient, Protected, NativeAccessSpecifierProtected)
	class UFortFOBCoreDecoItemDefinition*        SelectedCoreItemDef;                               // 0x920(0x8)(Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ABuildingFOBCoreActor*                 SelectedCore;                                      // 0x928(0x8)(Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ABuildingFOBCoreSpawnPad*              CoreSpawnPad;                                      // 0x930(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AFOBSaveFileBuildingInstructionsHandler* SaveFileInstructionsHandler;                       // 0x938(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FUniqueNetIdRepl                      OwnerNetID;                                        // 0x940(0x28)(Net, Transient, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EFOBMode                          FOBMode;                                           // 0x968(0x1)(Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EFOBIOStatus                      IOStatus;                                          // 0x969(0x1)(Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_14DF[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	uint8                                        bEnumeratedUserFilesSuccessfully : 1;              // Mask : 0x1 0x96C(0x1)(Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bCoreBasedDeploymentModeFinalizationRequested : 1; // Mask : 0x2 0x96C(0x1)(Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bInitialized : 1;                                  // Mask : 0x4 0x96C(0x1)(Net, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bFinalized : 1;                                    // Mask : 0x8 0x96C(0x1)(Net, Transient, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bDummyDeployment : 1;                              // Mask : 0x10 0x96C(0x1)(Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_14E0[0x4B];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	UMulticastDelegateProperty_                  OnAllBuildingsSpawned;                             // 0x9B8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	class UBoxComponent*                         ContainmentBoxComponent;                           // 0x9C8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FBox                                  ContainmentBoxStructuralGridBox;                   // 0x9D0(0x1C)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_14E1[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGameplayTagContainer                 SpawnLocationTags;                                 // 0x9F0(0x20)(Transient, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("BuildingFOBConfigActor");
		return Clss;
	}

	bool ReloadFOB();
	void OnRep_FOBMode();
	void OnRep_bFinalized();
	void OnIOOperationCompleteMulticast(enum class EFOBIOStatus IOOperation, bool bSuccess, class UFortFOBCoreDecoItemDefinition* SelectedCoreDef);
	void OnFOBModeSet(enum class EFOBMode ModeThatWasSet);
	void OnFinalized();
	void OnFinalizationPlayFX();
	void OnFinalizationFXMulticast();
	void OnCoreInitialized(class ABuildingFOBCoreActor* InitializedCore);
	bool IsPlayerControllerFOBOwner(class AFortPlayerController* FortPC);
	bool IsInitialized();
	bool IsFinalized();
	bool IsBuildingActorWithinFOB(class ABuildingActor* ActorToCheck);
	class UFortFOBCoreDecoItemDefinition* GetSelectedFOBCoreItemDefinition();
	enum class EFOBMode GetFOBMode();
	TArray<struct FFOBCoreChoice> GetAllCoreChoices();
	bool CanSaveFOB();
	bool CanReloadFOB();
	bool CanPerformIOOperation();
	bool AttemptSelectFOBCore(class UFortFOBCoreDecoItemDefinition* DefToSelect);
};

// 0x128 (0x8B8 - 0x790)
// Class FortniteGame.BuildingFOBCoreActor
class ABuildingFOBCoreActor : public ABuildingGameplayActor
{
public:
	TSoftObjectPtr<class UParticleSystem>        SimpleDeathParticles;                              // 0x790(0x28)(Edit, DisableEditOnInstance, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class USoundBase>             SimpleDeathSound;                                  // 0x7B8(0x28)(Edit, DisableEditOnInstance, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBoxComponent*                         SimpleBoundsBoxComponent;                          // 0x7E0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBoxComponent*                         TouchBoxComponent;                                 // 0x7E8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               ContainmentVolumeTouchBoxOffsetExtents;            // 0x7F0(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bRegisterAsGlobalGameplayEventListener : 1;        // Mask : 0x1 0x7FC(0x1)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bConformTouchBoxToFOBContainmentBox : 1;           // Mask : 0x2 0x7FC(0x1)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bActive : 1;                                       // Mask : 0x4 0x7FC(0x1)(Net, Transient, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bTargetable : 1;                                   // Mask : 0x8 0x7FC(0x1)(BlueprintVisible, BlueprintReadOnly, Net, Transient, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bVulnerable : 1;                                   // Mask : 0x10 0x7FC(0x1)(BlueprintVisible, BlueprintReadOnly, Net, Transient, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_14E5[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	UMulticastDelegateProperty_                  OnFOBCoreTargetableChanged;                        // 0x800(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	UMulticastDelegateProperty_                  OnFOBCoreVulnerableChanged;                        // 0x810(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	struct FUniqueNetIdRepl                      OwnerNetID;                                        // 0x820(0x28)(Net, Transient, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFortFOBCoreDecoItemDefinition*        SpawnedFromItemDef;                                // 0x848(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ABuildingFOBCoreSpawnPad*              SpawnedFromSpawnPad;                               // 0x850(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FBox                                  FOBBounds;                                         // 0x858(0x1C)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FBox                                  FOBStructuralBounds;                               // 0x874(0x1C)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	UMulticastDelegateProperty_                  OnFOBCoreDamaged;                                  // 0x890(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	UMulticastDelegateProperty_                  OnFOBCoreOutOfHealth;                              // 0x8A0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	uint8                                        bShowTargetableHUDIndicator : 1;                   // Mask : 0x1 0x8B0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_14E6[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("BuildingFOBCoreActor");
		return Clss;
	}

	void OnVulnerableStatusChanged(bool bNewTargetableStatus);
	void OnTargetableStatusChanged(bool bNewTargetableStatus);
	void OnRep_bVulnerable();
	void OnRep_bTargetable();
	void OnRep_bActive();
	void OnActiveStatusChanged(bool bNewActiveStatus);
	void MarkVulnerable();
	void MarkTargetable();
	bool IsActorWithinFOBBounds(class AActor* Actor);
	bool IsActive();
	struct FTransform GetSimpleDeathFXTransform();
	bool GetFOBBoundsCenterAndExtents(struct FVector* OutCenter, struct FVector* OutExtents);
	void GetFOBBoundsBoxOverlappedActors(TArray<class ABuildingSMActor*>* OverlappedActors, bool bSortByDistanceFromCore);
};

// 0x0 (0x790 - 0x790)
// Class FortniteGame.BuildingFOBCoreSpawnPad
class ABuildingFOBCoreSpawnPad : public ABuildingGameplayActor
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("BuildingFOBCoreSpawnPad");
		return Clss;
	}

	struct FTransform GetCoreSpawnTransform();
};

// 0x238 (0xEC0 - 0xC88)
// Class FortniteGame.BuildingFoundation
class ABuildingFoundation : public ABuildingSMActor
{
public:
	TArray<class UBuildingGroup*>                BuildingGroups;                                    // 0xC88(0x10)(Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<TSoftObjectPtr<class UWorld>>         AdditionalWorlds;                                  // 0xC98(0x10)(Edit, ZeroConstructor, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	struct FVector                               BuildingDeconstructorOrigin;                       // 0xCA8(0xC)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               BuildingDeconstructorExtent;                       // 0xCB4(0xC)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bConditionalFoundation : 1;                        // Mask : 0x1 0xCC0(0x1)(Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bServerStreamedInLevel : 1;                        // Mask : 0x2 0xCC0(0x1)(Net, Transient, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bOverrideNavigationGraphCells : 1;                 // Mask : 0x4 0xCC0(0x1)(Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bHasExcludedZone : 1;                              // Mask : 0x8 0xCC0(0x1)(Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bForceDitheringTransition : 1;                     // Mask : 0x10 0xCC0(0x1)(Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bStreamingDataBasedBounds : 1;                     // Mask : 0x20 0xCC0(0x1)(Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        : 4;                                               // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        bFoundationEnabled : 1;                            // Mask : 0x10 0xCC1(0x1)(Net, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EDynamicFoundationType            DynamicFoundationType;                             // 0xCC2(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EBuildingFoundationType           FoundationType;                                    // 0xCC3(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        NavExclusionMinX;                                  // 0xCC4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        NavExclusionMaxX;                                  // 0xCC8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        NavExclusionMinY;                                  // 0xCCC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        NavExclusionMaxY;                                  // 0xCD0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FBox                                  StreamingBoundingBox;                              // 0xCD4(0x1C)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	class FName                                  LevelToStream;                                     // 0xCF0(0x8)(Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTagContainer                 BuildingGroupTagsToPickFrom;                       // 0xCF8(0x20)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FSlateBrush                           LandIcon;                                          // 0xD18(0x88)(Edit, Protected, NativeAccessSpecifierProtected)
	struct FBuildingFoundationStreamingData      StreamingData;                                     // 0xDA0(0x58)(Transient, Protected, NativeAccessSpecifierProtected)
	TArray<class AFortHLODSMActor*>              SpawnedLODActors;                                  // 0xDF8(0x10)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	TArray<class AFortHLODSMActor*>              ChildSpawnedLODActors;                             // 0xE08(0x10)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	TArray<class ALODActor*>                     HLODActors;                                        // 0xE18(0x10)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	class ABuildingFoundation*                   ParentFoundation;                                  // 0xE28(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_14E8[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class ULevelStreaming*                       LevelStreamInfo;                                   // 0xE38(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FBuildingFoundationLODActorData> LODActorsData;                                     // 0xE40(0x10)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_14E9[0x30];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTransform                            DynamicFoundationTransform;                        // 0xE80(0x30)(Net, Transient, IsPlainOldData, RepNotify, NoDestructor, NativeAccessSpecifierPrivate)
	uint8                                        Pad_14EA[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("BuildingFoundation");
		return Clss;
	}

	void SetDynamicFoundationTransform(struct FTransform& NewTransform);
	void SetDynamicFoundationEnabled(bool bEnabled);
	void OnRep_ServerStreamedInLevel();
	void OnRep_LevelToStream();
	void OnRep_FoundationEnabled();
	void OnRep_DynamicFoundationTransform();
	void OnLevelStreamedIn();
	void OnLevelShown();
	bool EditorOnlyRemoveAdditionalWorld(class FString& LevelToRemove);
	TArray<class FString> EditorOnlyGetAdditionalWorlds();
	void EditorOnlyClearAdditionalWorlds();
	void EditorOnlyAddAdditionalWorld(class FString& LevelPackageName);
};

// 0x0 (0xEC0 - 0xEC0)
// Class FortniteGame.BuildingFoundation3x3
class ABuildingFoundation3x3 : public ABuildingFoundation
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("BuildingFoundation3x3");
		return Clss;
	}

};

// 0x0 (0xEC0 - 0xEC0)
// Class FortniteGame.BuildingFoundation5x10
class ABuildingFoundation5x10 : public ABuildingFoundation
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("BuildingFoundation5x10");
		return Clss;
	}

};

// 0x0 (0xEC0 - 0xEC0)
// Class FortniteGame.BuildingFoundation5x5
class ABuildingFoundation5x5 : public ABuildingFoundation
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("BuildingFoundation5x5");
		return Clss;
	}

};

// 0x20 (0xEE0 - 0xEC0)
// Class FortniteGame.BuildingFoundationSlab
class ABuildingFoundationSlab : public ABuildingFoundation
{
public:
	//class FText                                CreatorName;                                       // 0xEB8(0x18)(Edit, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_14EB[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGameplayTag                          MapLocationTag;                                    // 0xED0(0x8)(Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_14EC[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("BuildingFoundationSlab");
		return Clss;
	}

};

// 0x18 (0x7A8 - 0x790)
// Class FortniteGame.BuildingGameplayActorBalloon
class ABuildingGameplayActorBalloon : public ABuildingGameplayActor
{
public:
	int32                                        BalloonLocationSelection;                          // 0x790(0x4)(Edit, BlueprintVisible, Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BalloonNoAim;                                      // 0x794(0x4)(Edit, BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               CharVelZ;                                          // 0x798(0xC)(Edit, BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_14ED[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("BuildingGameplayActorBalloon");
		return Clss;
	}

};

// 0x0 (0x790 - 0x790)
// Class FortniteGame.BuildingGameplayActorBalloonRope
class ABuildingGameplayActorBalloonRope : public ABuildingGameplayActor
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("BuildingGameplayActorBalloonRope");
		return Clss;
	}

};

// 0x40 (0x7D0 - 0x790)
// Class FortniteGame.BuildingGameplayActorConsumable
class ABuildingGameplayActorConsumable : public ABuildingGameplayActor
{
public:
	TSubclassOf<class UGameplayEffect>           OnConsumeGameplayEffect;                           // 0x790(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UFortGameplayAbility>      OnConsumeMontageAbility;                           // 0x798(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAnimMontage*                          OnConsumeMontage;                                  // 0x7A0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bSpawnerCalculateRandomRotation;                   // 0x7A8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_14EF[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UParticleSystem*                       DeathParticles;                                    // 0x7B0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USoundBase*                            DeathSound;                                        // 0x7B8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MaxDrawDistanceStw;                                // 0x7C0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MaxDrawDistanceAthena;                             // 0x7C4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  StatNameWhenConsumed;                              // 0x7C8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("BuildingGameplayActorConsumable");
		return Clss;
	}

	void PrepareOnConsumeGameplayEffectSpec(struct FGameplayEffectSpecHandle& SpecHandle);
	void OnLocalBeginUse();
	bool OnInteractAllowedToConsume(class AFortPawn* InteractingPawn);
	void OnAllowedToConsumeFailed(class AFortPawn* InteractingPawn);
	struct FGameplayEffectSpecHandle MakeOnConsumeGameplayEffectSpec();
	class UAnimMontage* GetOnConsumeMontage();
	TSubclassOf<class UGameplayEffect> GetOnConsumeGameplayEffect();
	struct FTransform GetDeathFXTransform();
};

// 0x20 (0x7F0 - 0x7D0)
// Class FortniteGame.BuildingGameplayActorLockOnConsumable
class ABuildingGameplayActorLockOnConsumable : public ABuildingGameplayActorConsumable
{
public:
	float                                        SecondsBeforeDeathAfterPickup;                     // 0x7D0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        InteractRadius;                                    // 0x7D4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PawnInterpSpeed;                                   // 0x7D8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PawnDisableRotationSeconds;                        // 0x7DC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_14F0[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AFortPlayerPawn*                       InteractingPawn;                                   // 0x7E8(0x8)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("BuildingGameplayActorLockOnConsumable");
		return Clss;
	}

	void OnRep_InteractingPawn();
	void OnLocalControllersInteractingPawnSet(class AFortPlayerPawn* LocalPCPawn);
};

// 0x0 (0x7F0 - 0x7F0)
// Class FortniteGame.BuildingGameplayActorBlade
class ABuildingGameplayActorBlade : public ABuildingGameplayActorLockOnConsumable
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("BuildingGameplayActorBlade");
		return Clss;
	}

};

// 0x0 (0x790 - 0x790)
// Class FortniteGame.BuildingGameplayActorC4
class ABuildingGameplayActorC4 : public ABuildingGameplayActor
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("BuildingGameplayActorC4");
		return Clss;
	}

};

// 0x48 (0x78 - 0x30)
// Class FortniteGame.BuildingGroup
class UBuildingGroup : public UDataAsset
{
public:
	class FName                                  GroupName;                                         // 0x30(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBuildingGroup*                        FallbackGroup;                                     // 0x38(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EBuildingFoundationType           FoundationType;                                    // 0x40(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_14F1[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGameplayTagContainer                 AllBuildingLevelTags;                              // 0x48(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	TArray<struct FFortMapData>                  BuildingLevelData;                                 // 0x68(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("BuildingGroup");
		return Clss;
	}

	void GetAllMapNames(TArray<class FString>* AllMaps);
};

// 0x148 (0x8D8 - 0x790)
// Class FortniteGame.BuildingItemCollectorActor
class ABuildingItemCollectorActor : public ABuildingGameplayActor
{
public:
	uint8                                        Pad_14F9[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	enum class EFortItemCollectorBehavior        ItemCollectorBehavior;                             // 0x7B0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bRequireAllForInteraction : 1;                     // Mask : 0x1 0x7B1(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bRequireAllForTurnIn : 1;                          // Mask : 0x2 0x7B1(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bHasToHaveSomething : 1;                           // Mask : 0x4 0x7B1(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bIncrementCaptureCountWhenGoalIsReached : 1;       // Mask : 0x8 0x7B1(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bCurrentInteractionSuccess : 1;                    // Mask : 0x10 0x7B1(0x1)(BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EFortItemCollectorState           ItemCollectorState;                                // 0x7B2(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EFortItemCollectorTrackingType    TrackingType;                                      // 0x7B3(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_14FA[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AFortPlayerController*                 ControllingPlayer;                                 // 0x7B8(0x8)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  DefaultItemLootTierGroupName;                      // 0x7C0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, SaveGame, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FDataTableRowHandle                   ItemCollectorHandle;                               // 0x7C8(0x10)(Edit, SaveGame, NoDestructor, Protected, NativeAccessSpecifierProtected)
	bool                                         bCallOnLocalInteract;                              // 0x7D8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bUseInstanceLootValueOverrides;                    // 0x7D9(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_14FB[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FFortItemQuantityPair>         OverrideOutputItems;                               // 0x7E0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, SaveGame, Protected, NativeAccessSpecifierProtected)
	int32                                        OverrideGoal;                                      // 0x7F0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_14FC[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FCollectorUnitInfo>            ItemCollections;                                   // 0x7F8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnInstance, SaveGame, Protected, NativeAccessSpecifierProtected)
	UMulticastDelegateProperty_                  ManualOutputOverride;                              // 0x808(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	class UFortWorldItemDefinition*              ActiveInputItem;                                   // 0x818(0x8)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFortWorldItemDefinition*              ClientPausedActiveInputItem;                       // 0x820(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FScalableFloat                        ActiveItemRotationTime;                            // 0x828(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	float                                        ItemRotationTime;                                  // 0x848(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_14FD[0xC];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGameplayTagContainer                 AllowedItemRotationDamageTags;                     // 0x858(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                        OutputDespenseDelayTime;                           // 0x878(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	float                                        DespensingDelayTime;                               // 0x898(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               LootSpawnLocation;                                 // 0x89C(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FRotator                              LootTossDirection;                                 // 0x8A8(0xC)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	float                                        LootTossConeHalfAngle;                             // 0x8B4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        LootTossSpeed;                                     // 0x8B8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bTossOnGround;                                     // 0x8BC(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_14FE[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        StartingGoalLevel;                                 // 0x8C0(0x4)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_14FF[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FCollectorTrackedData>         TrackedInteractionData;                            // 0x8C8(0x10)(Net, ZeroConstructor, RepNotify, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("BuildingItemCollectorActor");
		return Clss;
	}

	void UpdateCollectorsActiveItem(int32 StartingSeedValue, class UFortWorldItemDefinition* InputItem, class UTexture* InputTexture, int32 CurrentGoal, int32 CurrentCollectedAmount, int32 CurrentCaptureCount, class UTexture* OutputTexture);
	void SetItemCollectorState(enum class EFortItemCollectorState InItemCollectorState);
	void ServerSpawnItem(const struct FFortItemEntry& OutputItem);
	void OnRep_TrackedInteractionData();
	void OnRep_ItemCollectorState();
	void OnRep_ControllingPlayer();
	void OnRep_ActiveInputItem();
	void OnReachedDepositGoal(class AFortPlayerController* CurrentControllingPlayer, class UFortWorldItemDefinition* CurrentActiveInputItem);
	void OnItemCollectorStateChanged(enum class EFortItemCollectorState InItemCollectorState);
	void OnForcedCycle();
	bool HasEnouphDepositItems(class AFortPlayerController* FortPC, class UFortWorldItemDefinition* InputItem, bool bAllOrNothing);
	int32 GetTeamReachedGoalCount(enum class EFortTeam InTeam);
	bool GetOverrideRarity(enum class EFortRarity* Rarity);
	int32 GetNumberOfCaptures(class AFortPlayerController* InFortPC, class UFortWorldItemDefinition* InInputItem);
	int32 GetDepositGoal(class AFortPlayerController* InFortPC, class UFortWorldItemDefinition* InInputItem);
	int32 GetDepositAmount(class AFortPlayerController* InFortPC, class UFortWorldItemDefinition* InInputItem);
	class UFortWorldItemDefinition* GetCurrentActiveItem();
};

// 0x0 (0xC88 - 0xC88)
// Class FortniteGame.BuildingPlayerPrimitivePreview
class ABuildingPlayerPrimitivePreview : public ABuildingSMActor
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("BuildingPlayerPrimitivePreview");
		return Clss;
	}

};

// 0x60 (0xCE8 - 0xC88)
// Class FortniteGame.BuildingLayoutRequirement
class ABuildingLayoutRequirement : public ABuildingPlayerPrimitivePreview
{
public:
	UMulticastDelegateProperty_                  OnLayoutSatisfied;                                 // 0xC88(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnLayoutUnSatisfied;                               // 0xC98(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TSubclassOf<class ABuildingSMActor>          LayoutRequirementSMActorClass;                     // 0xCA8(0x8)(Edit, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bIgnoreResourceTypeRequirements;                   // 0xCB0(0x1)(Edit, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bMakeSatisfyingActorIndestructibleWhileRequirementExists; // 0xCB1(0x1)(Edit, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bNeedToInitializeRequirementStatus;                // 0xCB2(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bRequirementSatisfied;                             // 0xCB3(0x1)(Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class ELayoutRequirementStatus          RequirementStatus;                                 // 0xCB4(0x1)(Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EFortResourceType                 OverrideResourceType;                              // 0xCB5(0x1)(Edit, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bAllowAnyPattern;                                  // 0xCB6(0x1)(Edit, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bAllowOccupantPatternEditing;                      // 0xCB7(0x1)(Edit, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UMaterialInterface>     LayoutDisplayMaterial;                             // 0xCB8(0x28)(Edit, DisableEditOnInstance, SaveGame, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInstanceDynamic*              LayoutDisplayMID;                                  // 0xCE0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("BuildingLayoutRequirement");
		return Clss;
	}

	bool SupportsEditingOfOccupant();
	void SetRequirementVisible(bool bVisible);
	void SetRequiredResourceType(enum class EFortResourceType DesiredResourceType);
	void OnRequirementSatisfyingActorDied(class AActor* DamagedActor, float Damage, class AController* InstigatedBy, class AActor* DamageCauser, const struct FVector& HitLocation, class UPrimitiveComponent* FHitComponent, class FName BoneName, const struct FVector& Momentum);
	void OnRep_RequirementStatus();
	void DeactivateRequirement();
	void ActivateRequirement(bool bMakeVisible);
};

// 0x0 (0xCD8 - 0xCD8)
// Class FortniteGame.BuildingProp
class ABuildingProp : public ABuildingTimeOfDayLights
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("BuildingProp");
		return Clss;
	}

};

// 0x0 (0xCD8 - 0xCD8)
// Class FortniteGame.OutpostStructureBase
class AOutpostStructureBase : public ABuildingProp
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("OutpostStructureBase");
		return Clss;
	}

};

// 0x0 (0xCD8 - 0xCD8)
// Class FortniteGame.BuildingOutpostCraftingTable
class ABuildingOutpostCraftingTable : public AOutpostStructureBase
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("BuildingOutpostCraftingTable");
		return Clss;
	}

};

// 0x0 (0xCD8 - 0xCD8)
// Class FortniteGame.BuildingOutpostFabricator
class ABuildingOutpostFabricator : public AOutpostStructureBase
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("BuildingOutpostFabricator");
		return Clss;
	}

};

// 0x0 (0xCD8 - 0xCD8)
// Class FortniteGame.BuildingOutpostStorageVault
class ABuildingOutpostStorageVault : public AOutpostStructureBase
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("BuildingOutpostStorageVault");
		return Clss;
	}

};

// 0x0 (0xCD8 - 0xCD8)
// Class FortniteGame.BuildingOutpostStormshieldUpgrade
class ABuildingOutpostStormshieldUpgrade : public AOutpostStructureBase
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("BuildingOutpostStormshieldUpgrade");
		return Clss;
	}

};

// 0x0 (0xCD8 - 0xCD8)
// Class FortniteGame.BuildingOutpostStormshieldCore
class ABuildingOutpostStormshieldCore : public ABuildingOutpostStormshieldUpgrade
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("BuildingOutpostStormshieldCore");
		return Clss;
	}

};

// 0x0 (0xC90 - 0xC90)
// Class FortniteGame.BuildingPillar
class ABuildingPillar : public ABuildingAutoNav
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("BuildingPillar");
		return Clss;
	}

};

// 0x140 (0xE18 - 0xCD8)
// Class FortniteGame.BuildingPropAtlas
class ABuildingPropAtlas : public ABuildingProp
{
public:
	class UPrimitiveComponent*                   Ring1Comp;                                         // 0xCD8(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPrimitiveComponent*                   Ring2Comp;                                         // 0xCE0(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPrimitiveComponent*                   Ring3Comp;                                         // 0xCE8(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInstanceDynamic*              RingTransitionMID;                                 // 0xCF0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAudioComponent*                       PortalAudioComp;                                   // 0xCF8(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1504[0x118];                                   // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("BuildingPropAtlas");
		return Clss;
	}

	void StopRingSpinning();
	void SetupAnimationTransition(class UMaterialInstanceDynamic* Mid, class FName ParamName, float InTransitionTime);
	void SetupAnimationSpeed(float InActivationTime, float InTotalDefenseTime, float InAnimSpeedStart, float InAnimSpeedEnd);
	void RestoreRingsHierarchy();
	void PlayRingsReset(float AnimDuration);
	void PlayRingSpinning(struct FRotator& Ring1RateMin, struct FRotator& Ring1RateMax, struct FRotator& Ring2Rate, struct FRotator& Ring3Rate);
	void PlayRingsIdleLoop(float AnimDuration, float Ring1ZOffset);
	void PlayRingDamage(float DurationMin, float DurationMax, float MagnitudeMin, float MagnitudeMax);
	void OnRingSpinningLoop();
	void InitializeRings(class UPrimitiveComponent* InRing1Comp, class UPrimitiveComponent* InRing2Comp, class UPrimitiveComponent* InRing3Comp);
	void InitializeAudio(class UAudioComponent* InPortalLoopingComp);
	float GetDefenseProgress();
	float GetDefenseAnimSpeed();
};

// 0x18 (0xCF0 - 0xCD8)
// Class FortniteGame.BuildingPropBigHealth
class ABuildingPropBigHealth : public ABuildingProp
{
public:
	int64                                        BigHealth;                                         // 0xCD8(0x8)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int64                                        BigHealthMax;                                      // 0xCE0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShowHealthBar;                                    // 0xCE8(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1505[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("BuildingPropBigHealth");
		return Clss;
	}

	void SetBigHealthMax(int64 NewHealth);
	void SetBigHealth(int64 NewHealth);
	void OnRep_BigHealth();
	class FText GetHealthValueText();
	float GetHealthValuePercent();
};

// 0x0 (0xCA0 - 0xCA0)
// Class FortniteGame.BuildingPropCorner
class ABuildingPropCorner : public ABuildingCorner
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("BuildingPropCorner");
		return Clss;
	}

};

// 0x60 (0x88 - 0x28)
// Class FortniteGame.BuildingPropMaterialCache
class UBuildingPropMaterialCache : public UObject
{
public:
	TArray<class UMaterialInstanceDynamic*>      OpenMaterials;                                     // 0x28(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	TSet<class UMaterialInstanceDynamic*>        UsedMaterials;                                     // 0x38(0x50)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("BuildingPropMaterialCache");
		return Clss;
	}

	bool ReserveMaterialInstance(class UMaterialInstanceDynamic** OutMaterialInstance);
	void ReleaseMaterialInstance(class UMaterialInstanceDynamic* MaterialInstance);
	class UBuildingPropMaterialCache* GetMaterialCache(class UMaterialInterface* SourceMaterial);
};

// 0x0 (0xCD8 - 0xCD8)
// Class FortniteGame.BuildingPropSimpleInteract
class ABuildingPropSimpleInteract : public ABuildingProp
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("BuildingPropSimpleInteract");
		return Clss;
	}

};

// 0x18 (0xCF0 - 0xCD8)
// Class FortniteGame.BuildingPropWall
class ABuildingPropWall : public ABuildingProp
{
public:
	struct FBuildingActorNavArea                 AreaPatternOverride;                               // 0xCD8(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	enum class EBuildingWallArea                 AreaShapeType;                                     // 0xCDC(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1507[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        AreaWidthOverride;                                 // 0xCE0(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1508[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	uint8                                        bOverrideAreaWidth : 1;                            // Mask : 0x1 0xCE8(0x1)(Edit, DisableEditOnInstance, NoDestructor, AdvancedDisplay, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1509[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("BuildingPropWall");
		return Clss;
	}

};

// 0x170 (0x838 - 0x6C8)
// Class FortniteGame.BuildingRift
class ABuildingRift : public ABuildingActor
{
public:
	class UFortDamageSet*                        DamageSet;                                         // 0x6C8(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DistToTarget;                                      // 0x6D0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_150A[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bSendMissionEvents;                                // 0x6D8(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDelayDeath;                                       // 0x6D9(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_150B[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        MinSpawnDelay;                                     // 0x6DC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MaxSpawnDelay;                                     // 0x6E0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        CosmeticStateIdleDelay;                            // 0x6E4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        IntroToBeginSpawningDelay;                         // 0x6E8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_150C[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UEnvQuery*                             EnvironmentQuery;                                  // 0x6F0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FEnvNamedValue>                QueryParams;                                       // 0x6F8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	float                                        QueryRadius;                                       // 0x708(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_150D[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FVector>                       FreeSpawnSlots;                                    // 0x710(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<struct FFortSpawnSlotData>            UsedSpawnSlots;                                    // 0x720(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_150E[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bRiftIsVisible;                                    // 0x740(0x1)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bRiftIsActive;                                     // 0x741(0x1)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bIsReadyToSpawnAI;                                 // 0x742(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bHasBeenInitialized;                               // 0x743(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bHasBadRiftSlots;                                  // 0x744(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_150F[0x5B];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bCreateOverlapSphere;                              // 0x7A0(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1510[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FScalableFloat                        OverlapSphereRadius;                               // 0x7A8(0x20)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	class USphereComponent*                      OverlapSphereComponent;                            // 0x7C8(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1511[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	UMulticastDelegateProperty_                  OnBuildingRiftSpawnedAI;                           // 0x7E8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	class FName                                  DestructionLootTierGroup;                          // 0x7F8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FRotator                              LootDropTossDirection;                             // 0x800(0xC)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	float                                        LootDropConeHalfAngle;                             // 0x80C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        LootDropSpeed;                                     // 0x810(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1512[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FFortRiftReservation>          RiftReservations;                                  // 0x818(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	enum class ERiftCosmeticState                CosmeticState;                                     // 0x828(0x1)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1513[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UFortSpectateClickableMapIcon*         SpectatorMapIcon;                                  // 0x830(0x8)(Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("BuildingRift");
		return Clss;
	}

	void OnStartedEncounterSpawn(class AFortAIPawn* SpawnedAI);
	void OnSpawnAI();
	void OnRep_RiftIsVisible();
	void OnRep_RiftIsActive();
	void OnRep_CosmeticState();
	void OnRemoved();
	void OnPlaced();
	void OnGameDifficultyChanged();
	void OnFinishedEncounterSpawn(class AFortAIPawn* SpawnedAI);
	void OnDeactivated();
	void OnActivated();
	void BroadcastRiftSpawningAI();
	void BP_Cosmetic_ShouldDie();
	void BP_Cosmetic_RampUp();
	void BP_Cosmetic_Intro();
	void BP_Cosmetic_Idle();
};

// 0x8 (0xC90 - 0xC88)
// Class FortniteGame.BuildingRoof
class ABuildingRoof : public ABuildingSMActor
{
public:
	uint8                                        Pad_1514[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("BuildingRoof");
		return Clss;
	}

};

// 0x8 (0xC98 - 0xC90)
// Class FortniteGame.BuildingStairs
class ABuildingStairs : public ABuildingFloor
{
public:
	enum class EBuildingStairsRailing            RailingType;                                       // 0xC90(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1515[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("BuildingStairs");
		return Clss;
	}

};

// 0x3A0 (0x3C8 - 0x28)
// Class FortniteGame.BuildingStructuralSupportSystem
class UBuildingStructuralSupportSystem : public UObject
{
public:
	uint8                                        Pad_1534[0x58];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class AController*                           BatchedRemovalInstigator;                          // 0x80(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1535[0x280];                                   // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class ABuildingLayoutRequirement*>    LayoutRequirementActorsToRegister;                 // 0x308(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1536[0xA8];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class AFortNavigationGraph*                  NavGraph;                                          // 0x3C0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("BuildingStructuralSupportSystem");
		return Clss;
	}

	bool WouldBuildingBeStructurallySupportedByNeighbors(class ABuildingSMActor* ActorToCheck, struct FVector& Location, struct FRotator& Rotation, bool bMirrored);
	void StopActorRemovalBatch();
	void StartActorRemovalBatch();
	bool K2_GetWorldLocFromGridIndices(struct FBuildingSupportCellIndex& GridIndices, struct FVector* OutWorldLoc);
	void K2_GetNeighboringBuildingActors(enum class EFortBuildingType BuildingType, struct FVector& WorldLocation, struct FBuildingSupportCellIndex* OutActorGridIndices, struct FBuildingNeighboringActorInfo* OutNeighboringActors);
	void K2_GetNeighboringActorsForWallActor(struct FVector& WorldLocation, struct FBuildingSupportCellIndex* OutActorGridIndices, struct FBuildingNeighboringActorInfo* OutNeighboringActors);
	void K2_GetNeighboringActorsForCenterCellActor(struct FVector& WorldLocation, struct FBuildingSupportCellIndex* OutActorGridIndices, struct FBuildingNeighboringActorInfo* OutNeighboringActors);
	void K2_GetLogicalBuildingActors(int32 LogicalIdx, TArray<class ABuildingSMActor*>* LogicalBuildingActors);
	bool K2_GetGridIndicesFromWorldLoc(struct FVector& WorldLoc, struct FBuildingSupportCellIndex* OutGridIndices);
	struct FBox K2_GetGridBoxFromWorldLoc(struct FVector& WorldLocation);
	bool K2_GetBuildingActorsInGridCells(TArray<struct FBuildingSupportCellIndex>& CellIndices, struct FBuildingGridActorFilter& Filter, struct FBuildingNeighboringActorInfo* OutActorsInGridCell);
	bool K2_GetBuildingActorsInGridCell(struct FVector& WorldLocation, struct FBuildingGridActorFilter& Filter, struct FBuildingNeighboringActorInfo* OutActorsInGridCell);
	enum class EFortStructuralGridQueryResults K2_CanAddWallActorToGrid(struct FVector& WorldLocation, struct FBuildingSupportCellIndex& GridIndices, enum class EFortBuildingType WallType, enum class EStructuralWallPosition* OutWallPosition, int32* OutWallIdx, TArray<class ABuildingActor*>* OutExistingBuildings, bool* OutbSupportedByWorld, bool bAllowStaticOverlap, bool bPerformCollisionChecks);
	enum class EFortStructuralGridQueryResults K2_CanAddFloorActorToGrid(struct FVector& WorldLocation, struct FBuildingSupportCellIndex& GridIndices, enum class EFortBuildingType FloorType, enum class EStructuralFloorPosition* OutFloorPosition, int32* OutFloorIdx, TArray<class ABuildingActor*>* OutExistingBuildings, bool* OutbSupportedByWorld, bool bAllowStaticOverlap, bool bPerformCollisionChecks);
	enum class EFortStructuralGridQueryResults K2_CanAddCenterCellActorToGrid(struct FVector& WorldLocation, struct FBuildingSupportCellIndex& GridIndices, enum class EFortBuildingType CenterCellType, int32* OutHorizontalGridIdx, TArray<class ABuildingActor*>* OutExistingBuildings, bool* OutbStructurallySupported, bool bAllowStaticOverlap, bool bPerformCollisionChecks);
	enum class EFortStructuralGridQueryResults K2_CanAddBuildingActorToGrid(class UObject* WorldContextObject, class ABuildingSMActor* ActorToCheck, struct FVector& Location, struct FRotator& Rotation, bool bMirrored, TArray<class ABuildingActor*>* ExistingBuildings, enum class EFortBuildPreviewMarkerOptionalAdjustment* MarkerOptionalAdjustment, bool bAllowStaticOverlap);
	bool IsWorldLocValid(struct FVector& WorldLoc);
	bool IsBuildingActorValid(class ABuildingSMActor* ActorToTest);
	bool IsBuildingActorStructurallySupported(class ABuildingSMActor* ActorToCheck);
	class ABuildingSMActor* GetWallActor(struct FBuildingSupportCellIndex& GridIndices, enum class EStructuralWallPosition WallPosition);
	void GetLogicalBuildingGroundSupportedActors(int32 LogicalIndex, TArray<class ABuildingSMActor*>* LogicalBuildingGroundSupportedActors);
	struct FBox GetGridBox(struct FBuildingSupportCellIndex& CellIndex);
	class ABuildingSMActor* GetFloorActor(struct FBuildingSupportCellIndex& GridIndices, enum class EStructuralFloorPosition FloorPosition);
	class ABuildingSMActor* GetCenterCellActor(struct FBuildingSupportCellIndex& GridIndices);
	enum class EFortStructuralGridQueryResults CanAddBuildingActorClassToGrid(class UObject* WorldContextObject, class UClass* BuildingSMActorClassToCheck, struct FVector& Location, struct FRotator& Rotation, bool bMirrored, TArray<class ABuildingActor*>* ExistingBuildings, enum class EFortBuildPreviewMarkerOptionalAdjustment* MarkerOptionalAdjustment, bool bAllowStaticOverlap);
	bool AreNeighborsConnected(class ABuildingSMActor* NeighborOne, struct FVector& NeighborOneLoc, struct FRotator& NeighborOneRot, bool bNeighborOneMirrored, class ABuildingSMActor* NeighborTwo, struct FVector& NeighborTwoLoc, struct FRotator& NeighborTwoRot, bool bNeighborTwoMirrored);
	bool AreNeighboringBuildingActorsConnected(class ABuildingSMActor* NeighborOne, class ABuildingSMActor* NeighborTwo);
	bool AreGridIndicesValid(struct FBuildingSupportCellIndex& GridIndices);
};

// 0x38 (0x68 - 0x30)
// Class FortniteGame.BuildingTextureData
class UBuildingTextureData : public UDataAsset
{
public:
	class UTexture2D*                            Diffuse;                                           // 0x30(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                            Normal;                                            // 0x38(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                            Specular;                                          // 0x40(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInterface*                    OverrideMaterial;                                  // 0x48(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortTextureDataType              Type;                                              // 0x50(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortResourceType                 ResourceType;                                      // 0x51(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1537[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        ResourceCost;                                      // 0x54(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1538[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("BuildingTextureData");
		return Clss;
	}

};

// 0x198 (0xE20 - 0xC88)
// Class FortniteGame.BuildingTrap
class ABuildingTrap : public ABuildingSMActor
{
public:
	uint8                                        Pad_1540[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class USceneComponent*                       TraceLocation;                                     // 0xC98(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USkeletalMesh*                         PlacementSkeletalMesh;                             // 0xCA0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               PlacementSkeletalMeshRelativeLocation;             // 0xCA8(0xC)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                              PlacementSkeletalMeshRelativeRotation;             // 0xCB4(0xC)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	class UStaticMesh*                           TrapRangeMesh;                                     // 0xCC0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMesh*                           TrapPreviewMesh;                                   // 0xCC8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFortTrapItemDefinition*               TrapData;                                          // 0xCD0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                  AttachmentHintText;                                // 0xCD8(0x18)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	bool                                         bShouldAffectAllPawnsInMinigames;                  // 0xCF0(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1541[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FFortTargetFilter                     TriggerFilter;                                     // 0xCF8(0x40)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FVector                               TrapPlacementOffset;                               // 0xD38(0xC)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bTriggerAbilityOnEndoverlap;                       // 0xD44(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1542[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UFortAbilitySet*                       AbilitySet;                                        // 0xD48(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFortDamageSet*                        DamageAttributeSet;                                // 0xD50(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UFortAlterationItemDefinition*> AppliedAlterations;                                // 0xD58(0x10)(Net, ZeroConstructor, SaveGame, RepNotify, Protected, NativeAccessSpecifierProtected)
	TArray<struct FFortAbilitySetHandle>         AlterationAbilitySetHandles;                       // 0xD68(0x10)(ZeroConstructor, Transient, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	class ABuildingSMActor*                      AttachedTo;                                        // 0xD78(0x8)(Net, ZeroConstructor, SaveGame, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bTargetWithAttachedTo;                             // 0xD80(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1543[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class ABuildingSMActor*                      LastAttachedTo;                                    // 0xD88(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DelayBeforeDestroyAfterDurabilityExpired;          // 0xD90(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SavedDurabilityPct;                                // 0xD94(0x4)(ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1544[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FVector>                       ShouldTriggerTraceOffsets;                         // 0xDA0(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TArray<class UPrimitiveComponent*>           TriggerComponents;                                 // 0xDB0(0x10)(ExportObject, ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	bool                                         bIgnoreBuildingObstructions;                       // 0xDC0(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1545[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UPrimitiveComponent*>           DamageComponents;                                  // 0xDC8(0x10)(ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	TArray<class UStaticMeshComponent*>          StaticMeshes;                                      // 0xDD8(0x10)(ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	int32                                        TrapLevel;                                         // 0xDE8(0x4)(Net, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1546[0x34];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("BuildingTrap");
		return Clss;
	}

	bool UseAttachedToWhenTargeted();
	bool TriggerIfAppropriate();
	void SpawnedFromItemDefinition(class UFortTrapItemDefinition* ItemDef, int32 InTrapLevel);
	void SetTeamForMinigameStart();
	void SetAttachedTo(class ABuildingSMActor* ActorAttachedTo);
	void ResetTeamOnMinigameEnd();
	void OnTriggerTouch(class UPrimitiveComponent* OverlappedComp, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult);
	void OnTriggerEndTouch(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void OnRep_ReplicatedAppliedAlterations();
	void OnRep_AttachedTo();
	void OnReloadEnd();
	void OnReloadBegin();
	void OnPlaced();
	void OnOutOfDurability();
	void OnModifyTrapIncomingDamage(float Damage, class AController* EventInstigator, class AActor* DamageCauser, float* OutDamage, bool* bOutConsumeEvent);
	void OnInitTeam();
	void OnInitCosmeticAlterations(const struct FFortCosmeticModification& CosmeticMod);
	void OnInitAlteration(class UFortAlterationItemDefinition* NewAlteration);
	void OnFinishedBuilding();
	void OnDestroy();
	bool HasDurability();
	int32 GetTrapRating();
	int32 GetTrapLevel();
	TArray<class AActor*> GetTouchingDamageTargets(struct FFortTargetFilter& Filter);
	float GetReloadTime();
	float GetMaxDurability();
	float GetFireDelay();
	float GetDurabilityPercent();
	float GetDamageDelay();
	struct FVector GetCenter();
	class ABuildingSMActor* GetBuildingAttachedTo();
	float GetArmTime();
	TArray<class UFortAlterationItemDefinition*> GetAlterations();
	void FinishTrigger();
	bool BP_ShouldTrigger(TArray<class AActor*>& TouchingActors);
	void BP_OnTrigger(TArray<class AActor*>& TouchingActors, bool* bOutConsumeEvent);
	void AttemptRetrigger(float Seconds);
	void AddTriggerComponent(class UPrimitiveComponent* TriggerComponent);
	void AddDamageComponent(class UPrimitiveComponent* DamageComponent);
};

// 0x0 (0xE20 - 0xE20)
// Class FortniteGame.BuildingTrapFloor
class ABuildingTrapFloor : public ABuildingTrap
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("BuildingTrapFloor");
		return Clss;
	}

};

// 0x28 (0xE48 - 0xE20)
// Class FortniteGame.BuildingTrap_WaypointDispenser
class ABuildingTrap_WaypointDispenser : public ABuildingTrapFloor
{
public:
	TArray<class UFortTrapItemDefinition*>       WaypointDefinitions;                               // 0xE20(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<TSubclassOf<class ABuildingTrapFloor_Waypoint>> WaypointTypes;                                     // 0xE30(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, NativeAccessSpecifierPublic)
	int32                                        WaypointTypeIndex;                                 // 0xE40(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1549[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("BuildingTrap_WaypointDispenser");
		return Clss;
	}

	class ABuildingTrapFloor_Waypoint* BP_SpawnWaypointActor(TSubclassOf<class ABuildingTrapFloor_Waypoint> Class, const struct FTransform& SpawnTransform);
};

// 0x0 (0xE20 - 0xE20)
// Class FortniteGame.BuildingTrapCeiling
class ABuildingTrapCeiling : public ABuildingTrap
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("BuildingTrapCeiling");
		return Clss;
	}

};

// 0x18 (0xE38 - 0xE20)
// Class FortniteGame.BuildingTrapCeiling_Falling
class ABuildingTrapCeiling_Falling : public ABuildingTrapCeiling
{
public:
	class UStaticMeshComponent*                  VisibleMeshComponent;                              // 0xE20(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FTransform>                    SpawnPoints;                                       // 0xE28(0x10)(BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("BuildingTrapCeiling_Falling");
		return Clss;
	}

	void TrapActivated(float CooldownDuration);
};

// 0x50 (0xE70 - 0xE20)
// Class FortniteGame.BuildingTrapDefender
class ABuildingTrapDefender : public ABuildingTrapFloor
{
public:
	enum class EFortDefenderInteractionError     LastInteractError;                                 // 0xE20(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_154D[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AFortAIPawn*                           DefenderPawn;                                      // 0xE28(0x8)(BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFortDefenderItemDefinition*           DefenderItemDefinition;                            // 0xE30(0x8)(BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        DefenderItemLevel;                                 // 0xE38(0x4)(BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_154E[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	UMulticastDelegateProperty_                  DefenderPawnOrItemSet;                             // 0xE40(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, BlueprintCallable, NativeAccessSpecifierProtected)
	uint8                                        Pad_154F[0x20];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("BuildingTrapDefender");
		return Clss;
	}

	class UFortWorldItem* TakeWeaponAwayFromDefender(class UFortWorldItem* WeaponToTakeAway);
	void SupplyDefender(class UFortWorldItem* WeaponToGive, int32 AmmoQuantity);
	class AFortAIPawn* SpawnDefenderfromItem(class UFortAccountItem* DefenderItem, class FName& DefenderSquadId, struct FTransform& SpawnTransform, class AActor* InOwner);
	void RemoveCurrentDefender(class AFortPlayerStateZone* RequestingPlayer, bool bRemovalCausedByPlayerJoin);
	void OnRep_DefenderPawn();
	void OnRep_DefenderItemDefinition();
	class FText GetLastInteractErrorText();
	struct FTransform GetDefenderSpawnTransform();
	void DeployDefender(class AFortPlayerController* ItemSelectorPC, class UFortDefenderItem* InDefenderItem, class FName& InDefenderSquadId, class UFortWorldItem* WeaponToGive, int32 AmmoQuantity);
	void ClearCurrentDefender(bool bForceKillDefender);
};

// 0x28 (0xE48 - 0xE20)
// Class FortniteGame.BuildingTrapFloor_Hoverboard
class ABuildingTrapFloor_Hoverboard : public ABuildingTrapFloor
{
public:
	class UArrowComponent*                       DirectionArrow;                                    // 0xE20(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PushAmount;                                        // 0xE28(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1550[0x1C];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("BuildingTrapFloor_Hoverboard");
		return Clss;
	}

};

// 0x20 (0xE40 - 0xE20)
// Class FortniteGame.BuildingTrapFloor_Hoverboard_Curve
class ABuildingTrapFloor_Hoverboard_Curve : public ABuildingTrapFloor
{
public:
	class USceneComponent*                       Target;                                            // 0xE20(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGameplayEffect*                       TriggeredEffect;                                   // 0xE28(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1551[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("BuildingTrapFloor_Hoverboard_Curve");
		return Clss;
	}

};

// 0x10 (0xE30 - 0xE20)
// Class FortniteGame.BuildingTrapFloor_TargetDummy
class ABuildingTrapFloor_TargetDummy : public ABuildingTrapFloor
{
public:
	TArray<struct FVector>                       PathPointLocations;                                // 0xE20(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, SaveGame, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("BuildingTrapFloor_TargetDummy");
		return Clss;
	}

};

// 0xC8 (0xEE8 - 0xE20)
// Class FortniteGame.BuildingTrapFloor_Turret
class ABuildingTrapFloor_Turret : public ABuildingTrapFloor
{
public:
	class UFortMinigameLogicComponent*           MinigameLogic;                                     // 0xE20(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USceneComponent*                       RotateComp;                                        // 0xE28(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USceneComponent*                       FiringPoint;                                       // 0xE30(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPrimitiveComponent*                   OverlapCollisionComponent;                         // 0xE38(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RotateInterval;                                    // 0xE40(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1554[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class AFortPlayerPawn*>               PlayerArray;                                       // 0xE48(0x10)(BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	class ABuildingSMActor*                      BlockingActor;                                     // 0xE58(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AFortPawn*                             Target;                                            // 0xE60(0x8)(BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinRotationSpeed;                                  // 0xE68(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxRotationSpeed;                                  // 0xE6C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CurrentRotationalSpeed;                            // 0xE70(0x4)(Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        UpdateIntervalTime;                                // 0xE74(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CachedUpdateTime;                                  // 0xE78(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        IncreaseIntervalRotationSpeed;                     // 0xE7C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DecreaseIntervalRotationSpeed;                     // 0xE80(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bCurrentlyActive : 1;                              // Mask : 0x1 0xE84(0x1)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bInSlowdownMode : 1;                               // Mask : 0x2 0xE84(0x1)(BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bUseOwnerTeam : 1;                                 // Mask : 0x4 0xE84(0x1)(BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bCanTakeDamage : 1;                                // Mask : 0x8 0xE84(0x1)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1555[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               ShootLocation;                                     // 0xE88(0xC)(BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          GTShoot;                                           // 0xE94(0x8)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          GTReload;                                          // 0xE9C(0x8)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LifeTime;                                          // 0xEA4(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FireRate;                                          // 0xEA8(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ReloadTime;                                        // 0xEAC(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               BoxExtents;                                        // 0xEB0(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1556[0x1C];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        CurrentAmmoCount;                                  // 0xED8(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        MaxAmmo;                                           // 0xEDC(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        bIsSearching : 1;                                  // Mask : 0x1 0xEE0(0x1)(BlueprintVisible, Net, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1557[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("BuildingTrapFloor_Turret");
		return Clss;
	}

	void UnbindTimers();
	void SetTarget(class AFortPawn* NewTarget);
	void RotateTurretServer();
	void RotateTurretClient();
	void PerformGunRotation(class AFortPawn* TargetActor, struct FVector& AimLocation, struct FRotator& CurrentRotation, class USceneComponent* RotateComponent);
	void OnRep_CurrentlyActive();
	void OnLeaveTurretRange(class UPrimitiveComponent* OverlappedComp, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void OnEnterTurretRange(class UPrimitiveComponent* OverlappedComp, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult);
	void MinigameStarted();
	void MinigameEnded();
	class AFortPawn* GetTarget();
	class AFortPlayerPawn* GetClosestTarget();
	void FireTurret();
	void FinishReload();
	void DeactivateTurret();
	void ConsumeAmmo();
	void BindTimers();
	void AddOverlapComponent(class UPrimitiveComponent* OverlapComponent);
	void ActivateTurret();
};

// 0x48 (0xE68 - 0xE20)
// Class FortniteGame.BuildingTrapFloor_Waypoint
class ABuildingTrapFloor_Waypoint : public ABuildingTrapFloor
{
public:
	uint8                                        Pad_1559[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FWaypointIndex                        Index;                                             // 0xE28(0x8)(BlueprintVisible, BlueprintReadOnly, Net, SaveGame, NoDestructor, NativeAccessSpecifierPublic)
	bool                                         bIsActive;                                         // 0xE30(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_155A[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class ABuildingTrapFloor_Waypoint*           NextPoint;                                         // 0xE38(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ABuildingTrapFloor_Waypoint*           PreviousPoint;                                     // 0xE40(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USceneComponent*                       SplinePointLocation;                               // 0xE48(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMeshComponent*                  DeactivatedMesh;                                   // 0xE50(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AFortWaypointInfo*                     WaypointGroup;                                     // 0xE58(0x8)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AFortWaypointInfo*                     CachedWaypointGroup;                               // 0xE60(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("BuildingTrapFloor_Waypoint");
		return Clss;
	}

	void OnWaypointReset();
	void OnWaypointCaptured();
	void OnSpawnSpline();
	void OnRep_WaypointGroup();
	bool IsCurrentWaypoint(class AFortPlayerPawn* Pawn);
	void CaptureWaypoint(class AFortPlayerPawn* Capturer);
};

// 0x20 (0xE40 - 0xE20)
// Class FortniteGame.BuildingTrapLauncher
class ABuildingTrapLauncher : public ABuildingTrapFloor
{
public:
	struct FScalableFloat                        LaunchStrength;                                    // 0xE20(0x20)(Edit, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("BuildingTrapLauncher");
		return Clss;
	}

};

// 0x0 (0xE20 - 0xE20)
// Class FortniteGame.BuildingTrapWall
class ABuildingTrapWall : public ABuildingTrap
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("BuildingTrapWall");
		return Clss;
	}

};

// 0x50 (0x148 - 0xF8)
// Class FortniteGame.BuildingTurretComponent
class UBuildingTurretComponent : public UActorComponent
{
public:
	UMulticastDelegateProperty_                  OnTurretTargetChanged;                             // 0xF8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	struct FGameplayTag                          OnFireTagTrigger;                                  // 0x108(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        FiringInterval;                                    // 0x110(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        CurrentTargetValidationInterval;                   // 0x114(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bPerformPeriodicValidationOnCurrentTarget : 1;     // Mask : 0x1 0x118(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_155F[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UPrimitiveComponent*                   TargetingOverlapComponent;                         // 0x120(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAbilitySystemComponent*               OwnerASC;                                          // 0x128(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AActor*                                CurrentTarget;                                     // 0x130(0x8)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1560[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("BuildingTurretComponent");
		return Clss;
	}

	void SetTargetingOverlapComponent(class UPrimitiveComponent* NewTargetingOverlapComponent);
	void OnTargetingEndOverlap(class UPrimitiveComponent* OverlappedComp, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void OnTargetingBeginOverlap(class UPrimitiveComponent* OverlappedComp, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult);
	void OnRep_CurrentTarget(class AActor* OldTarget);
	void OnPerformTargetValidation();
	void OnFiringTimer();
	bool IsValidTarget(class AActor* InTarget);
	class AActor* ChooseBestTarget(TArray<class AActor*>& InOutPotentialTargets);
	bool AttemptSetCurrentTarget(class AActor* NewTarget);
};

// 0x10 (0x158 - 0x148)
// Class FortniteGame.BuildingTurretComponent_MOBA
class UBuildingTurretComponent_MOBA : public UBuildingTurretComponent
{
public:
	struct FMOBATurretPrioritySetting            TargetingPriority;                                 // 0x148(0xC)(Edit, DisableEditOnInstance, NoDestructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_1561[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("BuildingTurretComponent_MOBA");
		return Clss;
	}

	void OnAllyHarmed(class AActor* InAllyActor, class AActor* InHarmingActor);
};

// 0x108 (0xD90 - 0xC88)
// Class FortniteGame.BuildingWall
class ABuildingWall : public ABuildingSMActor
{
public:
	uint8                                        Pad_1563[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftClassPtr<class UNavArea>                DoorObstacleClass;                                 // 0xC90(0x28)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FClimbLinkData                        ClimbLink;                                         // 0xCB8(0x28)(DuplicateTransient, NoDestructor, NativeAccessSpecifierPublic)
	struct FVector                               DoorOffset;                                        // 0xCE0(0xC)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1564[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class USoundBase*                            DoorOpeningSound;                                  // 0xCF0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USoundBase*                            DoorClosingSound;                                  // 0xCF8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInterface*                    DoorAnimatingMaterial;                             // 0xD00(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaticMesh*                           DoorMesh;                                          // 0xD08(0x8)(Edit, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaticMeshComponent*                  DoorComponent;                                     // 0xD10(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, DuplicateTransient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFortDoorLinkComponent*                DoorSmartLinkComp;                                 // 0xD18(0x8)(Edit, ExportObject, ZeroConstructor, Transient, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaticMeshComponent*                  DoorBlueprintMeshComp;                             // 0xD20(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UMaterialInstanceDynamic*>      DoorAnimatingMIDs;                                 // 0xD28(0x10)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_1565[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FRotator                              DoorDesiredRotOffset;                              // 0xD48(0xC)(Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_1566[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FBuildingActorNavArea                 AreaPatternOverride;                               // 0xD6C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	float                                        AreaWidthOverride;                                 // 0xD70(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1567[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	enum class EBuildingWallArea                 AreaShapeType;                                     // 0xD78(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bDoorOpen : 1;                                     // Mask : 0x1 0xD79(0x1)(Net, Transient, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bLocalDoorOpen : 1;                                // Mask : 0x2 0xD79(0x1)(Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class ECollisionEnabled                 DoorDisabledCollisionSetting;                      // 0xD7A(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bDoorCollisionDisabled : 1;                        // Mask : 0x1 0xD7B(0x1)(Net, Transient, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bLocalDoorCollisionDisabled : 1;                   // Mask : 0x2 0xD7B(0x1)(Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bOverrideAreaWidth : 1;                            // Mask : 0x4 0xD7B(0x1)(Edit, DisableEditOnInstance, NoDestructor, AdvancedDisplay, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bCreateClimbLink : 1;                              // Mask : 0x8 0xD7B(0x1)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1568[0x14];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("BuildingWall");
		return Clss;
	}

	void VerifyDoorOpenMatchesServer();
	void VerifyDoorCollisionMatchesServer();
	void OnRep_bDoorOpen();
	void OnRep_bDoorCollisionDisabled();
	bool IsDoorOpen();
	bool IsDoorComponent(class UStaticMeshComponent* MeshComponent);
};

// 0x8 (0x338 - 0x330)
// Class FortniteGame.FortClientOnlyActor
class AFortClientOnlyActor : public AActor
{
public:
	uint8                                        Pad_1569[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortClientOnlyActor");
		return Clss;
	}

};

// 0x40 (0x378 - 0x338)
// Class FortniteGame.BuildingWeakSpot
class ABuildingWeakSpot : public AFortClientOnlyActor
{
public:
	uint8                                        Pad_156A[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TWeakObjectPtr<class ABuildingSMActor>       ParentBuilding;                                    // 0x340(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bHit : 1;                                          // Mask : 0x1 0x348(0x1)(BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bFadeOut : 1;                                      // Mask : 0x2 0x348(0x1)(BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bActive : 1;                                       // Mask : 0x4 0x348(0x1)(BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_156B[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        HitCount;                                          // 0x34C(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Level;                                             // 0x350(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaxLevel;                                          // 0x354(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               StartingLocation;                                  // 0x358(0xC)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               HitNormal;                                         // 0x364(0xC)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EPhysicalSurface                  PhysicalSurfaceType;                               // 0x370(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_156C[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("BuildingWeakSpot");
		return Clss;
	}

	void OnStartDirectionEffect();
	void OnHit();
	void OnFadeOut();
	void Deactivate();
};

// 0x50 (0x148 - 0xF8)
// Class FortniteGame.BulletWhipTrackerComponentBase
class UBulletWhipTrackerComponentBase : public UActorComponent
{
public:
	float                                        PassByRadiusMax;                                   // 0xF8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        PassByRadiusMin;                                   // 0xFC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USoundBase*                            PassByFarSound;                                    // 0x100(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USoundBase*                            PassByCloseSound;                                  // 0x108(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        WhipTrackerMinimumTriggerDistance;                 // 0x110(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_156D[0x34];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("BulletWhipTrackerComponentBase");
		return Clss;
	}

	void UpdateVelocity(const struct FVector& CurrentVelocity);
	void Reset(const struct FVector& StartLocationIn);
	void Disable();
};

// 0xF0 (0x120 - 0x30)
// Class FortniteGame.CatalogMessaging
class UCatalogMessaging : public UPrimaryDataAsset
{
public:
	TMap<class FString, class FText>             StoreToast_Header;                                 // 0x30(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TMap<class FString, class FText>             StoreToast_Body;                                   // 0x80(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TMap<class FString, class FText>             Banners;                                           // 0xD0(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("CatalogMessaging");
		return Clss;
	}

};

// 0x5C0 (0x920 - 0x360)
// Class FortniteGame.FortAlterationItemDefinition
class UFortAlterationItemDefinition : public UFortAccountItemDefinition
{
public:
	enum class EFortAlteration                   AlterationType;                                    // 0x360(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_156E[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FFortCosmeticModification             DefaultCosmetic;                                   // 0x368(0x558)(Edit, NativeAccessSpecifierPrivate)
	TArray<struct FFortConditionalCosmeticModification> ConditionalCosmetics;                              // 0x8C0(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<struct FFortConditionalIncludeTags>   AdditionalGameplayTags;                            // 0x8D0(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class UFortAbilitySet>        AlterationAbilitySet;                              // 0x8E0(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FFortItemQuantityPair>         AdditionalRespecCosts;                             // 0x908(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	uint8                                        Pad_156F[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAlterationItemDefinition");
		return Clss;
	}

	enum class EFortAlteration GetAlterationType();
};

// 0x50 (0x970 - 0x920)
// Class FortniteGame.CosmeticOnlyAlterationItemDefinition
class UCosmeticOnlyAlterationItemDefinition : public UFortAlterationItemDefinition
{
public:
	//TSoftObjectPtr<class UMaterialInterface>   VehicleWrapMaterial;                               // 0x918(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1570[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftObjectPtr<class UMaterialInterface>     VehicleWrapMaterial_Masked;                        // 0x940(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1571[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("CosmeticOnlyAlterationItemDefinition");
		return Clss;
	}

};

// 0x0 (0x28 - 0x28)
// Class FortniteGame.CosmeticPreviewInterface
class UCosmeticPreviewInterface : public UInterface
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("CosmeticPreviewInterface");
		return Clss;
	}

	void PerformSpecialAction(class FName ActionName);
	void GetSpecialPreviewActions(TArray<class FName>* OutActionList);
	void CustomizePreviewInstance(class UFortItemDefinition* InItemDefinition);
};

// 0x48 (0x78 - 0x30)
// Class FortniteGame.CustomAccessoryAttachmentData
class UCustomAccessoryAttachmentData : public UDataAsset
{
public:
	struct FVector                               MaleRelativeScale;                                 // 0x30(0xC)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FVector                               FemaleRelativeScale;                               // 0x3C(0xC)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FVector                               SmallMaleRelativeScale;                            // 0x48(0xC)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FVector                               SmallFemaleRelativeScale;                          // 0x54(0xC)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FVector                               LargeMaleRelativeScale;                            // 0x60(0xC)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FVector                               LargeFemaleRelativeScale;                          // 0x6C(0xC)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("CustomAccessoryAttachmentData");
		return Clss;
	}

};

// 0x8 (0x38 - 0x30)
// Class FortniteGame.CustomColorSwatch
class UCustomColorSwatch : public UPrimaryDataAsset
{
public:
	enum class EFortCustomGender                 GenderPermitted;                                   // 0x30(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EColorSwatchType                  ColorSwatchType;                                   // 0x31(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, AssetRegistrySearchable, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1572[0x6];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("CustomColorSwatch");
		return Clss;
	}

};

// 0x20 (0x58 - 0x38)
// Class FortniteGame.CustomDynamicColorSwatch
class UCustomDynamicColorSwatch : public UCustomColorSwatch
{
public:
	TArray<struct FColorSwatchPair>              ColorPairs;                                        // 0x38(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FCustomPartTextureParameter>   TextureParameters;                                 // 0x48(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("CustomDynamicColorSwatch");
		return Clss;
	}

};

// 0x30 (0x88 - 0x58)
// Class FortniteGame.CustomAccessoryColorSwatch
class UCustomAccessoryColorSwatch : public UCustomDynamicColorSwatch
{
public:
	struct FLinearColor                          AccessoryColors;                                   // 0x58(0x10)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1573[0x20];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("CustomAccessoryColorSwatch");
		return Clss;
	}

};

// 0x0 (0x28 - 0x28)
// Class FortniteGame.CustomCharacterPartData
class UCustomCharacterPartData : public UObject
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("CustomCharacterPartData");
		return Clss;
	}

};

// 0xC0 (0xE8 - 0x28)
// Class FortniteGame.CustomCharacterAccessoryData
class UCustomCharacterAccessoryData : public UCustomCharacterPartData
{
public:
	class FName                                  AttachSocketName;                                  // 0x28(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCustomAccessoryAttachmentData*        AttachmentOverrideData;                            // 0x30(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bUseClothCollisionFromOtherParts;                  // 0x38(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bCollideWithOtherPartsCloth;                       // 0x39(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1574[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftClassPtr<class UAnimInstance>           AnimClass;                                         // 0x40(0x28)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftClassPtr<class UAnimInstance>           FrontEndAnimClass;                                 // 0x68(0x28)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftClassPtr<class UAnimInstance>           MannequinAnimClass;                                // 0x90(0x28)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UCustomAccessoryColorSwatch> AccessoryColors;                                   // 0xB8(0x28)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1575[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("CustomCharacterAccessoryData");
		return Clss;
	}

};

// 0x8 (0xF0 - 0xE8)
// Class FortniteGame.CustomCharacterBackpackData
class UCustomCharacterBackpackData : public UCustomCharacterAccessoryData
{
public:
	class FName                                  LootSocketName;                                    // 0xE8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("CustomCharacterBackpackData");
		return Clss;
	}

};

// 0xA0 (0xC8 - 0x28)
// Class FortniteGame.CustomCharacterBodyPartData
class UCustomCharacterBodyPartData : public UCustomCharacterPartData
{
public:
	TSoftClassPtr<class UAnimInstance>           AnimClass;                                         // 0x28(0x28)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftClassPtr<class UAnimInstance>           FrontEndAnimClass;                                 // 0x50(0x28)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftClassPtr<class UAnimInstance>           MannequinAnimClass;                                // 0x78(0x28)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UCustomAccessoryColorSwatch> AccessoryColors;                                   // 0xA0(0x28)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("CustomCharacterBodyPartData");
		return Clss;
	}

};

// 0x8 (0xF0 - 0xE8)
// Class FortniteGame.CustomCharacterCharmData
class UCustomCharacterCharmData : public UCustomCharacterAccessoryData
{
public:
	enum class EFortCustomPartType               PartAttachedToOverride;                            // 0xE8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1576[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("CustomCharacterCharmData");
		return Clss;
	}

};

// 0x8 (0xF0 - 0xE8)
// Class FortniteGame.CustomCharacterFaceData
class UCustomCharacterFaceData : public UCustomCharacterAccessoryData
{
public:
	enum class EFortCustomPartType               PartAttachedToOverride;                            // 0xE8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1577[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("CustomCharacterFaceData");
		return Clss;
	}

};

// 0x8 (0xF0 - 0xE8)
// Class FortniteGame.CustomCharacterHatData
class UCustomCharacterHatData : public UCustomCharacterAccessoryData
{
public:
	enum class ECustomHatType                    HatType;                                           // 0xE8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1578[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("CustomCharacterHatData");
		return Clss;
	}

};

// 0xE0 (0x1A8 - 0xC8)
// Class FortniteGame.CustomCharacterHeadData
class UCustomCharacterHeadData : public UCustomCharacterBodyPartData
{
public:
	TSoftObjectPtr<class UFortMontageLookupTable> RootSkeletonDefaultMontageLookupTable;             // 0xC8(0x28)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UFortMontageLookupTable> RootSkeletonOverrideMontageLookupTable;            // 0xF0(0x28)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UCustomSkinColorSwatch> SkinColorSwatch;                                   // 0x118(0x28)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UCustomHairColorSwatch> HairColorSwatch;                                   // 0x140(0x28)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class FName>                          CapMorphTargets;                                   // 0x168(0x10)(Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<class FName>                          HelmetMorphTargets;                                // 0x178(0x10)(Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<class FName>                          MaskMorphTargets;                                  // 0x188(0x10)(Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<class FName>                          HatMorphTargets;                                   // 0x198(0x10)(Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("CustomCharacterHeadData");
		return Clss;
	}

};

// 0x158 (0x188 - 0x30)
// Class FortniteGame.CustomCharacterPart
class UCustomCharacterPart : public UPrimaryDataAsset
{
public:
	enum class EFortCustomGender                 GenderPermitted;                                   // 0x30(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortCustomBodyType               BodyTypesPermitted;                                // 0x31(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortCustomPartType               CharacterPartType;                                 // 0x32(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1579[0x5];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGameplayTagContainer                 PartTypeTags;                                      // 0x38(0x20)(Edit, NativeAccessSpecifierPrivate)
	struct FGameplayTagContainer                 DisallowedCosmeticTags;                            // 0x58(0x20)(Edit, NativeAccessSpecifierPrivate)
	bool                                         bGameplayRelevantCosmeticPart;                     // 0x78(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bAttachToSocket;                                   // 0x79(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_157A[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftClassPtr<class ACustomCharacterPartModifier> PartModifierBlueprint;                             // 0x80(0x28)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCustomCharacterPartData*              AdditionalData;                                    // 0xA8(0x8)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UFortMontageLookupTable> DefaultMontageLookupTable;                         // 0xB0(0x28)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UFortMontageLookupTable> OverrideMontageLookupTable;                        // 0xD8(0x28)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class USkeletalMesh>          SkeletalMesh;                                      // 0x100(0x28)(Edit, AssetRegistrySearchable, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<TSoftObjectPtr<class USkeletalMesh>>  MasterSkeletalMeshes;                              // 0x128(0x10)(Edit, ZeroConstructor, AssetRegistrySearchable, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	bool                                         bSinglePieceMesh;                                  // 0x138(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AssetRegistrySearchable, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bSupportsColorSwatches;                            // 0x139(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bAllowStaticRenderPath;                            // 0x13A(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_157B[0x5];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FCustomPartMaterialOverrideData> MaterialOverrides;                                 // 0x140(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<struct FCustomPartTextureParameter>   TextureParameters;                                 // 0x150(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<struct FCustomPartScalarParameter>    ScalarParameters;                                  // 0x160(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<struct FCustomPartVectorParameter>    VectorParameters;                                  // 0x170(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	int32                                        MaterialOverrideFlags;                             // 0x180(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_157C[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("CustomCharacterPart");
		return Clss;
	}

	class USkeletalMesh* GetSkeletalMesh();
	TMap<int32, class UMaterialInterface*> GetMaterialOverridesByIndex();
};

// 0xA0 (0x310 - 0x270)
// Class FortniteGame.FortAnimInstance
class UFortAnimInstance : public UAnimInstance
{
public:
	//bool                                       bUpdateAllPawnProperties;                          // 0x268(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	//float                                      VelocityLerpAlpha;                                 // 0x26C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               PawnVelocity;                                      // 0x270(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinSpeed2DThreshold;                               // 0x27C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PawnSpeed2D;                                       // 0x280(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PawnVelocityZ;                                     // 0x284(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PawnMovementDirectionAzimuth;                      // 0x288(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PawnMovementDirectionElevation;                    // 0x28C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                              PawnDeltaRotation;                                 // 0x290(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FRotator                              PawnLastRotation;                                  // 0x29C(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FVector                               PawnLastLocation;                                  // 0x2A8(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsJumping;                                        // 0x2B4(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsFalling;                                        // 0x2B5(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShouldPredictLanding;                             // 0x2B6(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bLandingPredicted;                                 // 0x2B7(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PredictedFallTimeLeft;                             // 0x2B8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FallLookAheadSubStepping;                          // 0x2BC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        FallLookAheadMaxIterations;                        // 0x2C0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDebugLandPrediction;                              // 0x2C4(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bRecordJumpPositions;                              // 0x2C5(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsRecordingJump;                                  // 0x2C6(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_157D[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        RecordJumpFrameCount;                              // 0x2C8(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               RecordJumpInitialJumpLocation;                     // 0x2CC(0xC)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AimPitch;                                          // 0x2D8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AimYaw;                                            // 0x2DC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TimeForRecentlyFired;                              // 0x2E0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TimeToReachRelaxedLevel1;                          // 0x2E4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TimeToReachRelaxedLevel2;                          // 0x2E8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bRecentlyFired;                                    // 0x2EC(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsRelaxedLevel1;                                  // 0x2ED(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsRelaxedLevel2;                                  // 0x2EE(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_157E[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        RelaxedLevelTimeCounter;                           // 0x2F0(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SavedWeaponLastFireTime;                           // 0x2F4(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bClothEnabled : 1;                                 // Mask : 0x1 0x2F8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bAnimDynamicsEnabled : 1;                          // Mask : 0x2 0x2F8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bRigidBodyEnabled : 1;                             // Mask : 0x4 0x2F8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_157F[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FAnimTagProperty>              AnimPropertyGameplayTagBindings;                   // 0x300(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAnimInstance");
		return Clss;
	}

	class AFortPawn* TryGetFortPawn();
	class AFortAIPawn* TryGetFortAIPawn();
	void AnimNotify_RightFootStep(class UAnimNotify* Notify);
	void AnimNotify_LeftFootStep(class UAnimNotify* Notify);
};

// 0xC0 (0x3D0 - 0x310)
// Class FortniteGame.CustomCharacterPartAnimInstance
class UCustomCharacterPartAnimInstance : public UFortAnimInstance
{
public:
	uint8                                        Pad_1582[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	uint8                                        bUsesDayPhaseChange : 1;                           // Mask : 0x1 0x318(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bIgnoreSignificanceManagerAndAlwaysTick : 1;       // Mask : 0x2 0x318(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bRestrictClothToLocalPlayer : 1;                   // Mask : 0x4 0x318(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bCanPlayCustomAnimations : 1;                      // Mask : 0x8 0x318(0x1)(BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bUpdateOwnerAnimInputProperty : 1;                 // Mask : 0x10 0x318(0x1)(Edit, BlueprintVisible, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bIsSkydiving : 1;                                  // Mask : 0x20 0x318(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bIsParachuteOpened : 1;                            // Mask : 0x40 0x318(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bIsSkydiveDiveMode : 1;                            // Mask : 0x80 0x318(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bIsSkydiveFloating : 1;                            // Mask : 0x1 0x319(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bIsCrouching : 1;                                  // Mask : 0x2 0x319(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bIsTargeting : 1;                                  // Mask : 0x4 0x319(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1583[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGameplayTagAnimations                GameplayTagAnimations;                             // 0x320(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	float                                        CrouchingWithRigidBodyEnabled;                     // 0x330(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        CurrentLOD;                                        // 0x334(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FFortAnimInput_SkydivingExternalForce SkydivingExternalForceInput;                       // 0x338(0x84)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        bRegisteredForDayPhaseChange : 1;                  // Mask : 0x1 0x3BC(0x1)(Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1584[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	enum class EFortCustomPartType               PartType;                                          // 0x3C0(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1585[0xF];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("CustomCharacterPartAnimInstance");
		return Clss;
	}

	void PreDestruction();
	void OnPlayMontageFromGameplayTagQuery(struct FGameplayTagQuery& MatchingQuery, class UAnimMontage* MontagePlaying);
	void OnParachuteOpened();
	void OnParachuteClosed();
	void OnNotifyPartsStopped(class FName Context);
	void OnNotifyPartsStarted(class FName Context);
	void OnEndTargeting();
	void OnEndSkydiving();
	void OnEndCrouching();
	void OnDayPhaseChanged(enum class EFortDayPhase CurrentDayPhase, enum class EFortDayPhase PreviousDayPhase, bool bAtCreation);
	void OnBeginTargeting();
	void OnBeginSkydiving();
	void OnBeginCrouching();
	class USkeletalMeshComponent* GetPartSkeletalMeshComponent();
	float GetOwnerZVelocity();
	class USkeletalMeshComponent* GetOwnerSkeletalMeshComponent();
	float GetOwnerDirection();
	enum class EFortCustomPartType GetCharacterPartType();
	class AFortPlayerPawn* GetAssociatedPlayerPawn();
	class USkeletalMeshComponent* FindChildCommponentFromAttachSocket(class USkeletalMeshComponent* Parent, bool bIncludeAllDescendants, class FName AttachSocket);
};

// 0x30 (0x400 - 0x3D0)
// Class FortniteGame.CustomCharacterPartAnimInstance_Angel
class UCustomCharacterPartAnimInstance_Angel : public UCustomCharacterPartAnimInstance
{
public:
	float                                        SkydivingAlpha;                                    // 0x3D0(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CrouchAlpha;                                       // 0x3D4(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RearClothAlpha;                                    // 0x3D8(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ClothAlpha;                                        // 0x3DC(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FrontClothAlpha;                                   // 0x3E0(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FeatherAlpha;                                      // 0x3E4(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CrouchSkirtAlpha;                                  // 0x3E8(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FrontClothCrouchAlpha;                             // 0x3EC(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SpineRotLeft;                                      // 0x3F0(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1586[0xC];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("CustomCharacterPartAnimInstance_Angel");
		return Clss;
	}

};

// 0x20 (0x3F0 - 0x3D0)
// Class FortniteGame.CustomCharacterPartAnimInstance_AngelBackpack
class UCustomCharacterPartAnimInstance_AngelBackpack : public UCustomCharacterPartAnimInstance
{
public:
	struct FVector                               FallingAnimDynamicsUpForce;                        // 0x3D0(0xC)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SpeedAlpha;                                        // 0x3DC(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        WingRigidAlpha;                                    // 0x3E0(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1587[0xC];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("CustomCharacterPartAnimInstance_AngelBackpack");
		return Clss;
	}

};

// 0x90 (0x460 - 0x3D0)
// Class FortniteGame.CustomCharacterPartAnimInstance_Balloons
class UCustomCharacterPartAnimInstance_Balloons : public UCustomCharacterPartAnimInstance
{
public:
	class AFortPlayerPawn*                       PlayerPawn;                                        // 0x3D0(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ACharacter*                            Character;                                         // 0x3D8(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ABuildingGameplayActorBalloon*         BGABalloon;                                        // 0x3E0(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        PawnSpeed;                                         // 0x3E8(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bIsMovingBackward;                                 // 0x3EC(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1588[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        TrailVehicleAlpha;                                 // 0x3F0(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        BalloonLocationAlpha;                              // 0x3F4(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FRotator                              BalloonSideRot;                                    // 0x3F8(0xC)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	float                                        IsFloatingAlpha;                                   // 0x404(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SpringAlpha;                                       // 0x408(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        PawnZVelCheck;                                     // 0x40C(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        AimAlpha;                                          // 0x410(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1589[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<float>                                ForwardLocationAlphas;                             // 0x418(0x10)(Edit, ZeroConstructor, Transient, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TArray<float>                                BackwardLocationAlphas;                            // 0x428(0x10)(Edit, ZeroConstructor, Transient, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TArray<struct FRotator>                      ForwardRotators;                                   // 0x438(0x10)(Edit, ZeroConstructor, Transient, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TArray<struct FRotator>                      BackwardRotators;                                  // 0x448(0x10)(Edit, ZeroConstructor, Transient, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	float                                        SpringMultiplier;                                  // 0x458(0x4)(Edit, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_158A[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("CustomCharacterPartAnimInstance_Balloons");
		return Clss;
	}

};

// 0x4D0 (0x8A0 - 0x3D0)
// Class FortniteGame.CustomCharacterPartAnimInstance_BlackWidow_F
class UCustomCharacterPartAnimInstance_BlackWidow_F : public UCustomCharacterPartAnimInstance
{
public:
	struct FRotator                              BackpackRotator;                                   // 0x3D0(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	class FName                                  BackpackRotatorBoneName;                           // 0x3DC(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  BackpackRotatorBaseName;                           // 0x3E4(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             BackpackRotatorMapInputRange;                      // 0x3EC(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             BackpackRotatorMapOutputRange;                     // 0x3F4(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PawnSpeedRange;                                    // 0x3FC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             PawnSpeedMapInputRange;                            // 0x400(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             PawnSpeedMapOutputRange;                           // 0x408(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               FallingAnimDynamicsUpForce;                        // 0x410(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             FallingAnimDynamicsPerlinNoiseMapRange;            // 0x41C(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FallingAnimDynamicsForceGliderMultiplier;          // 0x424(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FallingAnimDynamicsForceGlobalMultiplier;          // 0x428(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                              LegTop01Rotation;                                  // 0x42C(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FRotator                              LegTop02Rotation;                                  // 0x438(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FRotator                              LegTop03Rotation;                                  // 0x444(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FRotator                              LegTop04Rotation;                                  // 0x450(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FRotator                              LegMid01Rotation;                                  // 0x45C(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FRotator                              LegMid03Rotation;                                  // 0x468(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FRotator                              LegMid04Rotation;                                  // 0x474(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FRotator                              LegBot01Rotation;                                  // 0x480(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FRotator                              LegBot02Rotation;                                  // 0x48C(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FRotator                              LegBot03Rotation;                                  // 0x498(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	float                                        LegRotationScaleDownRateADS;                       // 0x4A4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Legs01PoseTargetAlpha;                             // 0x4A8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Legs02PoseTargetAlpha;                             // 0x4AC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Legs03PoseTargetAlpha;                             // 0x4B0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Legs04PoseTargetAlpha;                             // 0x4B4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CollapseLegsTimeSeconds;                           // 0x4B8(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CollapsingLegs01PoseFullAlphaDelay;                // 0x4BC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CollapsingLegs02PoseFullAlphaDelay;                // 0x4C0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CollapsingLegs03PoseFullAlphaDelay;                // 0x4C4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CollapsingLegs04PoseFullAlphaDelay;                // 0x4C8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TopLegsAlpha;                                      // 0x4CC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MidLegsAlpha;                                      // 0x4D0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BotLegsAlpha;                                      // 0x4D4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LegSinAnimationFrequency;                          // 0x4D8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FBlackWidowLegSinAnimationRotator     LegTop01SinAnimation;                              // 0x4DC(0x60)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FBlackWidowLegSinAnimationRotator     LegTop02SinAnimation;                              // 0x53C(0x60)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FBlackWidowLegSinAnimationRotator     LegTop03SinAnimation;                              // 0x59C(0x60)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FBlackWidowLegSinAnimationRotator     LegTop04SinAnimation;                              // 0x5FC(0x60)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FBlackWidowLegSinAnimationRotator     LegMid01SinAnimation;                              // 0x65C(0x60)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FBlackWidowLegSinAnimationRotator     LegMid03SinAnimation;                              // 0x6BC(0x60)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FBlackWidowLegSinAnimationRotator     LegMid04SinAnimation;                              // 0x71C(0x60)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FBlackWidowLegSinAnimationRotator     LegBot01SinAnimation;                              // 0x77C(0x60)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FBlackWidowLegSinAnimationRotator     LegBot02SinAnimation;                              // 0x7DC(0x60)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FBlackWidowLegSinAnimationRotator     LegBot03SinAnimation;                              // 0x83C(0x60)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_158B[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("CustomCharacterPartAnimInstance_BlackWidow_F");
		return Clss;
	}

};

// 0x30 (0x400 - 0x3D0)
// Class FortniteGame.CustomCharacterPartAnimInstance_BlackWidow_M
class UCustomCharacterPartAnimInstance_BlackWidow_M : public UCustomCharacterPartAnimInstance
{
public:
	struct FRotator                              BackpackRotator;                                   // 0x3D0(0xC)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	class FName                                  BackpackRotatorBoneName;                           // 0x3DC(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  BackpackRotatorBaseName;                           // 0x3E4(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             BackpackRotatorMapInputRange;                      // 0x3EC(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             BackpackRotatorMapOutputRange;                     // 0x3F4(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_158C[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("CustomCharacterPartAnimInstance_BlackWidow_M");
		return Clss;
	}

};

// 0x70 (0x440 - 0x3D0)
// Class FortniteGame.CustomCharacterPartAnimInstance_Cape
class UCustomCharacterPartAnimInstance_Cape : public UCustomCharacterPartAnimInstance
{
public:
	class USkeletalMeshComponent*                MeshToCopy;                                        // 0x3D0(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClothingSimulationInteractorNv*       ClothingSimInteractor;                             // 0x3D8(0x8)(Edit, BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsDBNO;                                           // 0x3E0(0x1)(Edit, BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_158D[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               FakeWindVelocityDBNO;                              // 0x3E4(0xC)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BlendOutForksAlpha;                                // 0x3F0(0x4)(Edit, BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bBlendInBackwardPose;                              // 0x3F4(0x1)(Edit, BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_158E[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               CapeFakeVelocity;                                  // 0x3F8(0xC)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               FakeWindVelocity;                                  // 0x404(0xC)(Edit, BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               AimOffset;                                         // 0x410(0xC)(Edit, BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AimOffsetMultiplier;                               // 0x41C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               FinalCapeWindVelocity;                             // 0x420(0xC)(Edit, BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FinalCapeBlendOutAlpha;                            // 0x42C(0x4)(Edit, BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_158F[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("CustomCharacterPartAnimInstance_Cape");
		return Clss;
	}

};

// 0xD0 (0x4A0 - 0x3D0)
// Class FortniteGame.CustomCharacterPartAnimInstance_ClockBackpack_M
class UCustomCharacterPartAnimInstance_ClockBackpack_M : public UCustomCharacterPartAnimInstance
{
public:
	struct FVector                               BoneAPosition;                                     // 0x3D0(0xC)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AimOffsetMultiplier;                               // 0x3DC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                              BackpackRotator;                                   // 0x3E0(0xC)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	class FName                                  BackpackRotatorBoneName;                           // 0x3EC(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  BackpackRotatorBaseName;                           // 0x3F4(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             BackpackRotatorMapInputRange;                      // 0x3FC(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             BackpackRotatorMapOutputRange;                     // 0x404(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                              PendulumRotator;                                   // 0x40C(0xC)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	float                                        PendulumFrequency;                                 // 0x418(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PendulumAmplitude;                                 // 0x41C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PendulumDynamicsAlpha;                             // 0x420(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PendulumDynamicsSpeedThreshold;                    // 0x424(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PendulumDynamicsCrouchWalkAlpha;                   // 0x428(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             PendulumDynamicsSpeedMapInputRange;                // 0x42C(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             PendulumDynamicsSpeedMapOutputRange;               // 0x434(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                              HourHandRotator;                                   // 0x43C(0xC)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	float                                        HourHandPitchMultiplier;                           // 0x448(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                              MinuteHandRotator;                                 // 0x44C(0xC)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	float                                        MinuteHandPitchMultiplier;                         // 0x458(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsCuckooOut;                                      // 0x45C(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bCuckooOutOnKillRequested;                         // 0x45D(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1590[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        CuckooDynamicsAlpha;                               // 0x460(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CuckooOutTimeRemaining;                            // 0x464(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CuckooOutDurationOnKill;                           // 0x468(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CuckooOutDurationInFrontEnd;                       // 0x46C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        CuckooFrontEndInterval;                            // 0x470(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               CurrentLlamaScale;                                 // 0x474(0xC)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               DefaultLlamaScale;                                 // 0x480(0xC)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               CuckooOutLlamaScale;                               // 0x48C(0xC)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DefaultLlamaScaleInterpSpeed;                      // 0x498(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CuckooOutLlamaScaleInterpSpeed;                    // 0x49C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("CustomCharacterPartAnimInstance_ClockBackpack_M");
		return Clss;
	}

	void PopOutCuckooOnKill();
};

// 0x20 (0x3F0 - 0x3D0)
// Class FortniteGame.CustomCharacterPartAnimInstance_DieselPunk
class UCustomCharacterPartAnimInstance_DieselPunk : public UCustomCharacterPartAnimInstance
{
public:
	float                                        ArmPistolPadAlpha;                                 // 0x3D0(0x4)(Edit, BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ArmPistolChestAlpha;                               // 0x3D4(0x4)(Edit, BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ArmPistolAlpha;                                    // 0x3D8(0x4)(Edit, BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CrouchAlpha;                                       // 0x3DC(0x4)(Edit, BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SpeedMaskAlpha;                                    // 0x3E0(0x4)(Edit, BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SpeedMaskSpring;                                   // 0x3E4(0x4)(Edit, BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1591[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("CustomCharacterPartAnimInstance_DieselPunk");
		return Clss;
	}

};

// 0x40 (0x410 - 0x3D0)
// Class FortniteGame.CustomCharacterPartAnimInstance_DJBackpack
class UCustomCharacterPartAnimInstance_DJBackpack : public UCustomCharacterPartAnimInstance
{
public:
	bool                                         bIsKillCelebrationActive;                          // 0x3D0(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1592[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        KillCountLastFrame;                                // 0x3D4(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        KillCount;                                         // 0x3D8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CurrentSpinRate;                                   // 0x3DC(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                              BallRotator;                                       // 0x3E0(0xC)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	float                                        BaseSpinRate;                                      // 0x3EC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SpinRateMultiplier;                                // 0x3F0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DefaultSpinRate;                                   // 0x3F4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DefaultSpinRateInterpSpeed;                        // 0x3F8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        KillCelebrationSpinRate;                           // 0x3FC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        KillCelebrationSpinRateInterpSpeed;                // 0x400(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1593[0xC];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("CustomCharacterPartAnimInstance_DJBackpack");
		return Clss;
	}

};

// 0x30 (0x400 - 0x3D0)
// Class FortniteGame.CustomCharacterPartAnimInstance_LlamaRider
class UCustomCharacterPartAnimInstance_LlamaRider : public UCustomCharacterPartAnimInstance
{
public:
	class UAnimMontage*                          LlamaEmote;                                        // 0x3D0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USkeletalMeshComponent*                MeshToCopy;                                        // 0x3D8(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                              CurrentDiveJiggle;                                 // 0x3E0(0xC)(Edit, BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FVector                               FallingAnimDynUpForce;                             // 0x3EC(0xC)(Edit, BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LlamaHeadPhysAlpha;                                // 0x3F8(0x4)(Edit, BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1594[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("CustomCharacterPartAnimInstance_LlamaRider");
		return Clss;
	}

};

// 0x10 (0x3E0 - 0x3D0)
// Class FortniteGame.CustomCharacterPartAnimInstance_PetCarrier
class UCustomCharacterPartAnimInstance_PetCarrier : public UCustomCharacterPartAnimInstance
{
public:
	class AFortPlayerPawn*                       PlayerPawn;                                        // 0x3D0(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsZiplining : 1;                                  // Mask : 0x1 0x3D8(0x1)(Edit, BlueprintVisible, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsBallooning : 1;                                 // Mask : 0x2 0x3D8(0x1)(Edit, BlueprintVisible, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsFlying : 1;                                     // Mask : 0x4 0x3D8(0x1)(Edit, BlueprintVisible, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsInAirNotJumping : 1;                            // Mask : 0x8 0x3D8(0x1)(Edit, BlueprintVisible, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1595[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("CustomCharacterPartAnimInstance_PetCarrier");
		return Clss;
	}

};

// 0x10 (0x3E0 - 0x3D0)
// Class FortniteGame.CustomCharacterPartAnimInstance_Soldier
class UCustomCharacterPartAnimInstance_Soldier : public UCustomCharacterPartAnimInstance
{
public:
	class USkeletalMeshComponent*                MeshToCopy;                                        // 0x3D0(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ScarfAlpha;                                        // 0x3D8(0x4)(Edit, BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1596[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("CustomCharacterPartAnimInstance_Soldier");
		return Clss;
	}

};

// 0x10 (0x340 - 0x330)
// Class FortniteGame.CustomCharacterPartModifier
class ACustomCharacterPartModifier : public AActor
{
public:
	uint8                                        bUsesDayPhaseChange : 1;                           // Mask : 0x1 0x330(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bUsesTargetingOrFirstPersonCameraChange : 1;       // Mask : 0x2 0x330(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bRegisteredForDayPhaseChange : 1;                  // Mask : 0x4 0x330(0x1)(Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        bRegisteredForSkydiving : 1;                       // Mask : 0x8 0x330(0x1)(Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        bRegisteredForTargetingOrFirstPersonCamera : 1;    // Mask : 0x10 0x330(0x1)(Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1597[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TWeakObjectPtr<class AFortPlayerPawn>        FortPlayerPawnPtr;                                 // 0x334(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	enum class EFortCustomPartType               PartType;                                          // 0x33C(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1598[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("CustomCharacterPartModifier");
		return Clss;
	}

	void PreDestruction();
	void OnTargetingOrFirstPersonCameraChanged();
	void OnPawnAndPartChanged();
	void OnEndSkydiving();
	void OnDayPhaseChanged(enum class EFortDayPhase CurrentDayPhase, enum class EFortDayPhase PreviousDayPhase, bool bAtCreation);
	void OnBeginSkydiving();
	void HandleSetFirstPersonCameraOrPawnTargetingChanged(bool bChanged);
	enum class EFortCustomPartType GetCharacterPartType();
	class AFortPlayerPawn* GetAssociatedPlayerPawn();
};

// 0x0 (0x28 - 0x28)
// Class FortniteGame.CustomCharacterPartOwnerInterface
class UCustomCharacterPartOwnerInterface : public UInterface
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("CustomCharacterPartOwnerInterface");
		return Clss;
	}

	void PlayAnimationsMatchingQuery(struct FGameplayTagQuery& TagQueryToMatch);
	class USkeletalMeshComponent* GetCustomizationRootSkeletalMeshComponent();
};

// 0x20 (0x58 - 0x38)
// Class FortniteGame.CustomClothingColorSwatch
class UCustomClothingColorSwatch : public UCustomColorSwatch
{
public:
	struct FLinearColor                          AccessoryColors;                                   // 0x38(0x10)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1599[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("CustomClothingColorSwatch");
		return Clss;
	}

};

// 0x10 (0x38 - 0x28)
// Class FortniteGame.CustomColorComponent
class UCustomColorComponent : public UObject
{
public:
	uint8                                        Pad_159A[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("CustomColorComponent");
		return Clss;
	}

};

// 0x0 (0x58 - 0x58)
// Class FortniteGame.CustomHairColorSwatch
class UCustomHairColorSwatch : public UCustomDynamicColorSwatch
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("CustomHairColorSwatch");
		return Clss;
	}

};

// 0x28 (0x50 - 0x28)
// Class FortniteGame.CustomPlayerComponent
class UCustomPlayerComponent : public UObject
{
public:
	uint8                                        Pad_159B[0x28];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("CustomPlayerComponent");
		return Clss;
	}

};

// 0x0 (0x58 - 0x58)
// Class FortniteGame.CustomSkinColorSwatch
class UCustomSkinColorSwatch : public UCustomDynamicColorSwatch
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("CustomSkinColorSwatch");
		return Clss;
	}

};

// 0x8 (0x798 - 0x790)
// Class FortniteGame.DecoyActor
class ADecoyActor : public ABuildingGameplayActor
{
public:
	float                                        GoalOverrideRadius;                                // 0x790(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_159C[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("DecoyActor");
		return Clss;
	}

};

// 0x60 (0x7F0 - 0x790)
// Class FortniteGame.DeployableBaseCore
class ADeployableBaseCore : public ABuildingGameplayActor
{
public:
	class ADeployableBasePlot*                   Plot;                                              // 0x790(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UParticleSystem>        SimpleDeathParticles;                              // 0x798(0x28)(Edit, DisableEditOnInstance, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class USoundBase>             SimpleDeathSound;                                  // 0x7C0(0x28)(Edit, DisableEditOnInstance, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bRegisterAsGlobalGameplayEventListener : 1;        // Mask : 0x1 0x7E8(0x1)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_159D[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("DeployableBaseCore");
		return Clss;
	}

	struct FTransform GetSimpleDeathFXTransform();
};

// 0x240 (0x9D0 - 0x790)
// Class FortniteGame.DeployableBasePlot
class ADeployableBasePlot : public ABuildingGameplayActor
{
public:
	uint8                                        Pad_15A0[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FUniqueNetIdRepl                      OccupantNetID;                                     // 0x798(0x28)(Net, Transient, RepNotify, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FFortCloudSaveInfo                    OccupantNextCloudSaveInfo;                         // 0x7C0(0x18)(Transient, Protected, NativeAccessSpecifierProtected)
	class UFortDeployableBaseRecord*             OccupantDeployableBaseRecord;                      // 0x7D8(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBoxComponent*                         BuildableSpaceComponent;                           // 0x7E0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBoxComponent*                         SavableSpaceComponent;                             // 0x7E8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBoxComponent*                         EntirePlotSpaceComponent;                          // 0x7F0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USceneComponent*                       SpawnOffsetComponent;                              // 0x7F8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBoxComponent*                         BuildableAreasArray;                               // 0x800(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_15A1[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftClassPtr<class ADeployableBaseCore>     DeployableBaseCoreClass;                           // 0x818(0x28)(Edit, DisableEditOnInstance, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ADeployableBaseCore*                   DeployableBaseCore;                                // 0x840(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bDirty : 1;                                        // Mask : 0x1 0x848(0x1)(Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bDirtiedSinceLastWriteToBuffer : 1;                // Mask : 0x2 0x848(0x1)(Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bCloudFileSavedSinceLastCloudItemUpdate : 1;       // Mask : 0x4 0x848(0x1)(Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_15A2[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	enum class EDeployableBaseBuildingState      CurrentBuildingState;                              // 0x84C(0x1)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EDeployableBaseBuildingState      GoalBuildingState;                                 // 0x84D(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_15A3[0x12];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	UMulticastDelegateProperty_                  OnOccupantIdChanged;                               // 0x860(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	UMulticastDelegateProperty_                  OnDeployableBaseCoreCreated;                       // 0x870(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	UMulticastDelegateProperty_                  OnDeployableBaseCoreDestroyed;                     // 0x880(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	UMulticastDelegateProperty_                  OnDeployableBasePlotSpacesChanged;                 // 0x890(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	TArray<class AFortDeployableBasePickup*>     OutstandingAssociatedPickups;                      // 0x8A0(0x10)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	class AFortInventory*                        PlotInventory;                                     // 0x8B0(0x8)(Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_15A4[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        DeferredActorIdxToResumeAt;                        // 0x8D0(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        NumActorsFromRecordDestroyed;                      // 0x8D4(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FIntVector                            BuildableSpaceExpansionVector;                     // 0x8D8(0xC)(Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        MaxActorsToCreatePerBuildingCall;                  // 0x8E4(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        MaxActorsToDestroyPerDestroyCall;                  // 0x8E8(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DelayBetweenActorRecordBuilding;                   // 0x8EC(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DelayBetweenActorRecordDestroying;                 // 0x8F0(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_15A5[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AFortPlayerStart*                      PlayerStart;                                       // 0x8F8(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UGameplayEffect>           ConstructionTimeEffect;                            // 0x900(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FDeferredActorData>            DeferredConstructionActors;                        // 0x908(0x10)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_15A6[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FBox                                  BuildableAreasStructuralSupportBoxesArray;         // 0x920(0x1C)(Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, NativeAccessSpecifierPrivate)
	uint8                                        Pad_15A7[0x94];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("DeployableBasePlot");
		return Clss;
	}

	void SetContextComponent(class UPrimitiveComponent* ContextComponent);
	void OnRep_OccupantNetID();
	void OnRep_CurrentBuildingState();
	void OnRep_BuildableSpaceExpansionVector();
	void OnCurrentBuildingStateSet(enum class EDeployableBaseBuildingState InCurrentBuildingState);
	void OnBuildingStateTransition(enum class EDeployableBaseBuildingState InPreviousState, enum class EDeployableBaseBuildingState InCurrentState);
	bool IsOccupied();
	bool IsOccupant(struct FUniqueNetIdRepl& UserId);
	bool IsBuildingActorWithinBuildableSpace(class ABuildingActor* ActorToCheck, struct FVector& GridLocation);
	void HandleBuildingStateTransition(enum class EDeployableBaseBuildingState InPreviousState, enum class EDeployableBaseBuildingState InCurrentState);
	class AFortPlayerStart* GetPlayerStart();
	struct FUniqueNetIdRepl& GetOccupantNetID();
	int32 GetNumOfItemsInPlot();
};

// 0x38 (0x3B8 - 0x380)
// Class FortniteGame.EdgeNavLinks
class AEdgeNavLinks : public ANavLinkProxy
{
public:
	float                                        DistanceBetweenLinks;                              // 0x380(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               Start;                                             // 0x384(0xC)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               End;                                               // 0x390(0xC)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SnapRadius;                                        // 0x39C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SnapHeight;                                        // 0x3A0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        LinkProjectionHeight;                              // 0x3A4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        RightLinkForwardOffset;                            // 0x3A8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class ECollisionChannel                 CollisionChannel;                                  // 0x3AC(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_15A8[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	uint8                                        bManualAdjustment : 1;                             // Mask : 0x1 0x3B0(0x1)(Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_15A9[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("EdgeNavLinks");
		return Clss;
	}

};

// 0x0 (0x570 - 0x570)
// Class FortniteGame.EdgeNavLinksRenderingComponent
class UEdgeNavLinksRenderingComponent : public UNavLinkRenderingComponent
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("EdgeNavLinksRenderingComponent");
		return Clss;
	}

};

// 0x0 (0x28 - 0x28)
// Class FortniteGame.FEventsDataTranslator
class UFEventsDataTranslator : public UObject
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FEventsDataTranslator");
		return Clss;
	}

};

// 0x188 (0x4B8 - 0x330)
// Class FortniteGame.FortSaveFileBuildingInstructionsHandler
class AFortSaveFileBuildingInstructionsHandler : public AActor
{
public:
	class FString                                SaveFileName;                                      // 0x330(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               LoadedBuildingsScale;                              // 0x340(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               LoadedBuildingsAdditionalTranslation;              // 0x34C(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bUseAbsoluteCoordinates : 1;                       // Mask : 0x1 0x358(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bTrackDestroyedBuildings : 1;                      // Mask : 0x2 0x358(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_15AB[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftObjectPtr<class UFortBuildingInstructions> DefaultBuildingInstructions;                       // 0x360(0x28)(Edit, BlueprintVisible, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bLoadInvisible : 1;                                // Mask : 0x1 0x388(0x1)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bDespawnOnBuildingsSpawned : 1;                    // Mask : 0x2 0x388(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bSpawnBuildingsAutomaticallyAfterLoad : 1;         // Mask : 0x4 0x388(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_15AC[0x87];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FUniqueNetIdRepl                      OperationUserId;                                   // 0x410(0x28)(Transient, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_15AD[0x80];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortSaveFileBuildingInstructionsHandler");
		return Clss;
	}

	bool SaveBuildings(class AFortPlayerController* FortPC);
	bool ResetBuildings();
	void LoadBuildings(class AFortPlayerController* FortPC);
	bool AreBuildingsLoaded();
};

// 0x8 (0x4C0 - 0x4B8)
// Class FortniteGame.FOBSaveFileBuildingInstructionsHandler
class AFOBSaveFileBuildingInstructionsHandler : public AFortSaveFileBuildingInstructionsHandler
{
public:
	float                                        BuildingPieceConstructionTime;                     // 0x4B8(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_15AE[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FOBSaveFileBuildingInstructionsHandler");
		return Clss;
	}

};

// 0x28 (0x50 - 0x28)
// Class FortniteGame.FortCameraMode
class UFortCameraMode : public UObject
{
public:
	class AFortPlayerCameraBase*                 PlayerCamera;                                      // 0x28(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TransitionTime;                                    // 0x30(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TransitionOutTime;                                 // 0x34(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FViewTargetTransitionParams           TransitionParams;                                  // 0x38(0x10)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        bResetInterpolation : 1;                           // Mask : 0x1 0x48(0x1)(Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_15AF[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortCameraMode");
		return Clss;
	}

};

// 0xE8 (0x138 - 0x50)
// Class FortniteGame.Fort3PCameraMode
class UFort3PCameraMode : public UFortCameraMode
{
public:
	struct FViewOffsetData                       ViewOffsets;                                       // 0x50(0x24)(Edit, BlueprintVisible, NoDestructor, Protected, NativeAccessSpecifierProtected)
	float                                        FOV;                                               // 0x74(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               SafeLocationOffset;                                // 0x78(0xC)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bValidateSafeLoc : 1;                              // Mask : 0x1 0x84(0x1)(Edit, BlueprintVisible, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bDoPredictiveAvoidance : 1;                        // Mask : 0x2 0x84(0x1)(Edit, BlueprintVisible, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bPreventPenetration : 1;                           // Mask : 0x4 0x84(0x1)(Edit, BlueprintVisible, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_15B0[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FPenetrationAvoidanceFeeler>   PenetrationAvoidanceFeelers;                       // 0x88(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	float                                        PenetrationBlendInTime;                            // 0x98(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        PenetrationBlendOutTime;                           // 0x9C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               PivotLocInterpSpeed;                               // 0xA0(0xC)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        PivotRotInterpSpeed;                               // 0xAC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        FOVInterpSpeed;                                    // 0xB0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ViewOffsetInterpSpeed;                             // 0xB4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SafeLocationInterpSpeed;                           // 0xB8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               LastActualViewOffset;                              // 0xBC(0xC)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FVector                               LastIdealViewOffset;                               // 0xC8(0xC)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FVector                               LastSafeLocationLocal;                             // 0xD4(0xC)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FVector                               LastSafeLocation;                                  // 0xE0(0xC)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        LastSafeLocBlockedPct;                             // 0xEC(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        LastPenetrationBlockedPct;                         // 0xF0(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FVector                               LastActualPivotLoc;                                // 0xF4(0xC)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FRotator                              LastActualPivotRot;                                // 0x100(0xC)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, NativeAccessSpecifierPrivate)
	struct FVector                               LastIdealPivotLoc;                                 // 0x10C(0xC)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FRotator                              LastIdealPivotRot;                                 // 0x118(0xC)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, NativeAccessSpecifierPrivate)
	uint8                                        Pad_15B1[0x14];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("Fort3PCameraMode");
		return Clss;
	}

};

// 0x0 (0x138 - 0x138)
// Class FortniteGame.Fort3PCam_Default
class UFort3PCam_Default : public UFort3PCameraMode
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("Fort3PCam_Default");
		return Clss;
	}

};

// 0x0 (0x138 - 0x138)
// Class FortniteGame.Fort3PCam_Targeting
class UFort3PCam_Targeting : public UFort3PCameraMode
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("Fort3PCam_Targeting");
		return Clss;
	}

};

// 0x650 (0x980 - 0x330)
// Class FortniteGame.FortWeapon
class AFortWeapon : public AActor
{
public:
	uint8                                        Pad_15B7[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	UMulticastDelegateProperty_                  OnWeaponRateOfFireChanged;                         // 0x348(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_15B8[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bIsEquippingWeapon;                                // 0x360(0x1)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsReloadingWeapon;                                // 0x361(0x1)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsChargingWeapon;                                 // 0x362(0x1)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_15B9[0x5];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	UMulticastDelegateProperty_                  OnLocalAmmoChanged;                                // 0x368(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_15BA[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	UMulticastDelegateProperty_                  OnReticleColorChanged;                             // 0x380(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UFortWeaponItemDefinition*             WeaponData;                                        // 0x390(0x8)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFortWeaponItemDefinition*             CosmeticOverrideWeaponData;                        // 0x398(0x8)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bImpactFXAttachedToHitActor;                       // 0x3A0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_15BB[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FFortGameplayAbilityBehaviorDistanceData> GameplayAbilityBehaviorDistanceData;               // 0x3A8(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	class UWeaponHitNotifyAudioBank*             HitNotifyAudioBank;                                // 0x3B8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        EquippedWeaponDestroyWrapperRepCounter;            // 0x3C0(0x1)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_15BC[0xF];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        PersistentFXStartTime;                             // 0x3D0(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MinimumTimeForPersistentFX;                        // 0x3D4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bShouldDrawNativeReticle;                          // 0x3D8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_15BD[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UTexture2D*                            ReticleImage;                                      // 0x3E0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTexture2D*                            AutoFireReticleImage;                              // 0x3E8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FColor                                ReticleDefaultColor;                               // 0x3F0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FColor                                ReticleEnemyColor;                                 // 0x3F4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FColor                                ReticleBuildingColor;                              // 0x3F8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FColor                                ReticleNoTargetColor;                              // 0x3FC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTexture2D*                            HitNotifyReticleImage;                             // 0x400(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTexture2D*                            HitNotifyLocationReticleImage;                     // 0x408(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        HitNotifyDisplayDuration;                          // 0x410(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_15BE[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UTexture2D*                            ReticleCenterImage;                                // 0x418(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTexture2D*                            ReticleCenterPerfectAimImage;                      // 0x420(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTexture2D*                            ReticleInvalidTargetImage;                         // 0x428(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTexture2D*                            MuzzleBlockedReticleImage;                         // 0x430(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ReticleDefaultPrimaryStrikeAngle;                  // 0x438(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ReticleDefaultSecondaryStrikeAngle;                // 0x43C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bSupportsAutofireAtReticleTarget;                  // 0x440(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_15BF[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class UFortCameraMode>           CameraBase3PClass;                                 // 0x448(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UFortCameraMode>           CameraTargeting3PClass;                            // 0x450(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UFortCameraMode>           CameraBase1PClass;                                 // 0x458(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UFortCameraMode>           CameraTargeting1PClass;                            // 0x460(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USoundBase*                            DestroyedSound;                                    // 0x468(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USoundBase*                            OutOfAmmoSound;                                    // 0x470(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USoundBase*                            ReloadSounds;                                      // 0x478(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_15C0[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class USoundBase*                            PrimaryFireSound;                                  // 0x490(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_15C1[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class USoundBase*                            PrimaryFireStopSound;                              // 0x4A8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_15C2[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class USoundBase*                            SecondaryFireSound;                                // 0x4C0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_15C3[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class USoundBase*                            SecondaryFireStopSound;                            // 0x4D8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_15C4[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        PrimaryFireSoundFadeOutTime;                       // 0x4F0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_15C5[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class USoundBase*                            ImpactPhysicalSurfaceSounds;                       // 0x4F8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_15C6[0xC8];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UParticleSystem*                       ImpactPhysicalSurfaceEffects;                      // 0x5C8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_15C7[0xC8];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class UCameraShake>              ImpactCameraShake;                                 // 0x698(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UForceFeedbackEffect*                  PrimaryForceFeedbackEffect;                        // 0x6A0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UForceFeedbackEffect*                  SecondaryForceFeedbackEffect;                      // 0x6A8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UForceFeedbackEffect*                  PrimaryImpactForceFeedbackEffect;                  // 0x6B0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UForceFeedbackEffect*                  SecondaryImpactForceFeedbackEffect;                // 0x6B8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAudioComponent*                       FireAudioChannels;                                 // 0x6C0(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_15C8[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UAudioComponent*                       ReloadAudioChannels;                               // 0x6E0(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_15C9[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        CurrentGunFireIndex;                               // 0x6F8(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_15CA[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class USkeletalMeshComponentBudgeted*        WeaponMesh;                                        // 0x700(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UMaterialInterface*>            DefaultWeaponMaterials;                            // 0x708(0x10)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	int32                                        FireAudioChannelWantsToPlay;                       // 0x718(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_15CB[0xC];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bUsingSecondaryFireAudio;                          // 0x728(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_15CC[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FColor                                CurrentReticleColor;                               // 0x72C(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               CurrentDamageStartLocation;                        // 0x730(0xC)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               CurrentAdjustedAimDirection;                       // 0x73C(0xC)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FFortEffectDistanceQuality            FireFXSignificance;                                // 0x748(0x18)(Edit, DisableEditOnInstance, NoDestructor, Protected, NativeAccessSpecifierProtected)
	float                                        LastFireTime;                                      // 0x760(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bIsPlayingFireFX;                                  // 0x764(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bFireFXTriggered;                                  // 0x765(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_15CD[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        TimerIntervalAdjustment;                           // 0x768(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        InputQueueTimePercent;                             // 0x76C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bAllowTargeting;                                   // 0x770(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bIsTargeting;                                      // 0x771(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_15CE[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        LastTargetingTransitionTime;                       // 0x774(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               TargetSourceOffset;                                // 0x778(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               TargetSourceOffsetWhileCrouched;                   // 0x784(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               TargetSourceOffsetWhileTargeting;                  // 0x790(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bTraceThroughPawns;                                // 0x79C(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bTraceThroughWorld;                                // 0x79D(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_15CF[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        TraceThroughPawnsLimit;                            // 0x7A0(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        TraceThroughBuildingsLimit;                        // 0x7A4(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        LastReloadTime;                                    // 0x7A8(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        LastSuccessfulReloadTime;                          // 0x7AC(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        CurrentReloadDuration;                             // 0x7B0(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_15D0[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGuid                                 ItemEntryGuid;                                     // 0x7B8(0x10)(Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        WeaponLevel;                                       // 0x7C8(0x4)(Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        AmmoCount;                                         // 0x7CC(0x4)(Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_15D1[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        BurstFireCounter;                                  // 0x7D4(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ChargeTime;                                        // 0x7D8(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        CurrentShotLogIndex;                               // 0x7DC(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<uint32>                               ShotLogFlags;                                      // 0x7E0(0x10)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	uint8                                        bInitializedWeaponItem : 1;                        // Mask : 0x1 0x7F0(0x1)(Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        : 2;                                               // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        bUpdateLocalAmmoCount : 1;                         // Mask : 0x8 0x7F0(0x1)(Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bPendingDestroyDueToDurabilityOrStackCount : 1;    // Mask : 0x10 0x7F0(0x1)(Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bCompletedAppliedAlterationsLoad : 1;              // Mask : 0x1 0x7F1(0x1)(Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bCompletedWeaponLoad : 1;                          // Mask : 0x2 0x7F1(0x1)(Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_15D2[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int16                                        ChargeStatusPack;                                  // 0x7F4(0x2)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_15D3[0xE];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TWeakObjectPtr<class AFortProjectileTrajectory> AttachedTrajectoryIndicator;                       // 0x804(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_15D4[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UFortGameplayAbility*                  ActiveAbility;                                     // 0x810(0x8)(Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayAbilitySpecHandle            PrimaryAbilitySpecHandle;                          // 0x818(0x4)(Net, Transient, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayAbilitySpecHandle            SecondaryAbilitySpecHandle;                        // 0x81C(0x4)(Net, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayAbilitySpecHandle            ReloadAbilitySpecHandle;                           // 0x820(0x4)(Net, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_15D5[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FGameplayAbilitySpecHandle>    EquippedAbilityHandles;                            // 0x828(0x10)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	TArray<struct FFortAbilitySetHandle>         EquippedAbilitySetHandles;                         // 0x838(0x10)(ZeroConstructor, Transient, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	TArray<class UFortAlterationItemDefinition*> AppliedAlterations;                                // 0x848(0x10)(Net, ZeroConstructor, Transient, RepNotify, Protected, NativeAccessSpecifierProtected)
	TArray<class UFortAlterationItemDefinition*> AppliedAlterationsToSkipLoading;                   // 0x858(0x10)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	class UAthenaItemWrapDefinition*             AppliedItemWrap;                                   // 0x868(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AFortFXManager*                        CachedFXManager;                                   // 0x870(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFortSignificanceManager*              CachedSignificanceManager;                         // 0x878(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  MuzzleSocketName;                                  // 0x880(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  MuzzleFalloffSocketName;                           // 0x888(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  WeaponHandSocketNameOverride;                      // 0x890(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  LeftHandWeaponHandSocketNameOverride;              // 0x898(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_15D6[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        MaxWeaponSwitchNetworkWaitTime;                    // 0x8B8(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LastFireAbilityTime;                               // 0x8BC(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                          EquipAnimation;                                    // 0x8C0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAnimMontage*                          ReloadAnimation;                                   // 0x8C8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAnimMontage*                          WeaponEquipMontage;                                // 0x8D0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAnimMontage*                          WeaponReloadMontage;                               // 0x8D8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAnimSequence*                         PoseOffsetAnimSequence;                            // 0x8E0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EFortWeaponCoreAnimation          WeaponCoreAnimation;                               // 0x8E8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_15D7[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UFortWeaponAnimSet*                    WeaponPawnAnimSet;                                 // 0x8F0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_15D8[0x40];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UAnimMontage*                          UnableToPerformActionMontageOverride;              // 0x938(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_15D9[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class AActor*                                LockOnTargetCandidate;                             // 0x960(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_15DA[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bIgnoreTryToFireSlotCooldownRestriction;           // 0x969(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_15DB[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bFireConsumableAnalyticEvent;                      // 0x96B(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_15DC[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FWeaponHudData>                HudKeyActionData;                                  // 0x970(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortWeapon");
		return Clss;
	}

	void UseWeaponDurability(float DurabilityScale);
	void StopWeaponFireFX();
	void StopForceFeedback();
	void SetWeaponVisibility(bool bDesiredVisibility, bool bForceUpdate);
	void SetShouldDrawNativeReticle(bool bInShouldDrawReticle);
	void SetFireSoundPitchMultiplier(float NewPitch);
	void ServerSetChargeState(uint8 NewState);
	void ServerResetShotReport();
	void ServerReleaseWeaponPrimaryAbility();
	void ResetTempWeaponMaterialOverride();
	void Reload();
	void PlayWeaponFireFX(bool bSecondaryFire);
	void PlayReloadFX(enum class EFortReloadFXState ReloadStage);
	void PlayNativeImpactFX(struct FHitResult& HitResult, struct FGameplayCueParameters& GameplayCueParameters);
	void PlayForceFeedback(bool bSecondaryFire, bool bPersistentFire, bool bImpact);
	void OnWeaponVisibilityChanged(bool bVisible);
	void OnWeaponMontageStarted(class UAnimMontage* WeaponMontage);
	void OnWeaponMontageBlendingOut(class UAnimMontage* WeaponMontage, bool bInterrupted);
	void OnWeaponDetached();
	void OnWeaponAttached();
	void OnStopWeaponFireFX();
	void OnStartCharge();
	void OnSetTargeting(bool bNewIsTargeting);
	void OnRep_ReplicatedWeaponData();
	void OnRep_ReplicatedCosmeticOverrideWeaponData();
	void OnRep_ReplicatedAppliedAlterations();
	void OnRep_PrimaryAbilitySpecHandle();
	void OnRep_EquippedWeaponDestroyWrapper();
	void OnRep_ChargeStatusPack();
	void OnRep_AmmoCount(int32 OldAmmoCount);
	void OnReachedMinCharge();
	void OnReachedMaxCharge();
	void OnPlayWeaponFireFX(bool bPersistentFire, bool bSecondaryFire);
	void OnPlayReloadFX(enum class EFortReloadFXState ReloadStage);
	void OnPlayImpactFX(struct FHitResult& HitResult, enum class EPhysicalSurface ImpactPhysicalSurface, class UParticleSystemComponent* SpawnedPSC);
	void OnPawnMontageStarted(class UAnimMontage* PawnMontage);
	void OnPawnMontageBlendingOut(class UAnimMontage* PawnMontage, bool bInterrupted);
	void OnOutOfAmmoFire();
	void OnInitCosmeticAlterations(const struct FFortCosmeticModification& CosmeticMod, class UMaterialInstanceDynamic* DynamicMaterialInstance);
	void OnInitAlteration(class UFortAlterationItemDefinition* NewAlteration);
	void OnEquippedWeaponDestory();
	void OnEndCharge();
	void OnChargeUp();
	void OnChargeDown();
	void OnAmmoCountChanged();
	void K2_OnUnEquip();
	void K2_ConsumeAmmo(int32 Quantity);
	bool IsSuppressed();
	bool IsReloading();
	bool IsProjectileWeapon();
	bool HasInfiniteAmmo();
	float GetWeaponRateOfFireModifier();
	class UFortWeaponAnimSet* GetWeaponPawnAnimSet();
	bool GetSupportsAutoFireAtReticleTargetMode();
	struct FColor GetReticleColor();
	int32 GetRemainingAmmo();
	float GetReloadTime();
	float GetReloadProgress();
	float GetRange();
	float GetProjectileSpeed();
	struct FTransform GetMuzzleSocketTransform();
	struct FVector GetMuzzleLocation();
	float GetMeleeAttackPlayRate();
	int32 GetMagazineAmmoCount();
	int32 GetLocalRemainingAmmo();
	int32 GetLocalMagazineAmmoCount();
	struct FGuid GetInventoryGUID();
	TArray<struct FWeaponHudData>& GetHudKeyActionData();
	float GetFiringRate();
	struct FVector GetDamageStartLocation(struct FVector* AimDir);
	float GetCurrentMaxChargePercent();
	enum class EFortWeaponCoreAnimation GetCoreAnimation();
	float GetChargeToMinPercent();
	float GetChargePercent();
	int32 GetBulletsPerClip();
	int32 GetAmmoCostPerFire(float ChargePercentage);
	TArray<class UFortAlterationItemDefinition*> GetAlterations();
	void GameplayCue_Weapons_Activation(enum class EGameplayCueEvent EventType, const struct FGameplayCueParameters& Parameters);
	void GameplayCue_Impact(enum class EGameplayCueEvent EventType, const struct FGameplayCueParameters& Parameters);
	struct FColor DetermineReticleColor();
	void ClientReportShotFlags(uint32 ShotFlags, int32 ShotIndex);
	void ClientGivenTo(class APawn* P);
	void CheckPendingFire();
	void CancelActiveAbility();
};

// 0x58 (0x9D8 - 0x980)
// Class FortniteGame.FortDecoTool
class AFortDecoTool : public AFortWeapon
{
public:
	bool                                         bButtonDown;                                       // 0x980(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_15DE[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UFortItemDefinition*                   ItemDefinition;                                    // 0x988(0x8)(Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AFortDecoHelper*                       DecoHelper;                                        // 0x990(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AActor*                                CarriedActor;                                      // 0x998(0x8)(Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bPlaceCarriedActor;                                // 0x9A0(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_15DF[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftObjectPtr<class UParticleSystem>        SpawnEffect;                                       // 0x9A8(0x28)(Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bPreventExecutionOnOwningPlayerFalling;            // 0x9D0(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_15E0[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortDecoTool");
		return Clss;
	}

	void ServerSpawnDeco(const struct FVector& Location, const struct FRotator& Rotation, class ABuildingSMActor* AttachedActor, enum class EBuildingAttachmentType InBuildingAttachmentType);
	void OnRep_ItemDefinition();
	void OnRep_CarriedActor(class AActor* OldCarriedActor);
	void OnCarriedActorDestroyed(class AActor* DestroyedActor);
	void ClientDestroyDecoPreview();
};

// 0x28 (0xA00 - 0x9D8)
// Class FortniteGame.FortAbilityDecoTool
class AFortAbilityDecoTool : public AFortDecoTool
{
public:
	struct FAbilityToolSpawnParameters           CachedSpawnParameters;                             // 0x9D8(0x28)(Transient, NoDestructor, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAbilityDecoTool");
		return Clss;
	}

	void GetSpawnParameters(struct FAbilityToolSpawnParameters* OutSpawnParamters);
	class UFortGameplayAbility* GetPlacementAbilityInstance();
	struct FGameplayAbilitySpecHandle GetPlacementAbilityHandle();
	class ABuildingActor* AbilitySpawnDeco(struct FAbilityToolSpawnParameters& SpawnParameters);
};

// 0x38 (0x68 - 0x30)
// Class FortniteGame.FortAbilitySet
class UFortAbilitySet : public UPrimaryDataAsset
{
public:
	uint8                                        Pad_15E1[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<TSubclassOf<class UFortGameplayAbility>> GameplayAbilities;                                 // 0x38(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	TArray<struct FGameplayEffectApplicationInfoHard> GrantedGameplayEffects;                            // 0x48(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TArray<struct FGameplayEffectApplicationInfo> PassiveGameplayEffects;                            // 0x58(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAbilitySet");
		return Clss;
	}

};

// 0x1A8 (0x210 - 0x68)
// Class FortniteGame.FortAbilityKit
class UFortAbilityKit : public UFortAbilitySet
{
public:
	uint8                                        Pad_15E2[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  DisplayName;                                       // 0x70(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, AssetRegistrySearchable, NativeAccessSpecifierPublic)
	TArray<class FText>                          Description;                                       // 0x88(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, AssetRegistrySearchable, NativeAccessSpecifierPublic)
	class FText                                  TooltipDescription;                                // 0x98(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, AssetRegistrySearchable, NativeAccessSpecifierPublic)
	struct FSlateBrush                           IconBrush;                                         // 0xB0(0x88)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FSlateBrush                           PrimaryTraitIconBrushOverride;                     // 0x138(0x88)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	TArray<TSoftObjectPtr<class UFortGadgetItemDefinition>> Gadgets;                                           // 0x1C0(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<struct FAbilityKitItem>               Items;                                             // 0x1D0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<class UFortSchematicItemDefinition*>  AddedSchematics;                                   // 0x1E0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<class UFortSchematicItemDefinition*>  RemovedSchematics;                                 // 0x1F0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TSubclassOf<class UFortTooltip>              Tooltip;                                           // 0x200(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFortTooltipDisplayStatsList*          StatList;                                          // 0x208(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAbilityKit");
		return Clss;
	}

	TArray<class FText> GetDescription(class UObject* WorldContextObject);
	void BP_GetGadgets(TArray<class UFortGadgetItemDefinition*>* GadgetItemDefinitions);
};

// 0x0 (0x90 - 0x90)
// Class FortniteGame.FortAbilityKitTooltip
class UFortAbilityKitTooltip : public UFortTooltip
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAbilityKitTooltip");
		return Clss;
	}

};

// 0x0 (0x90 - 0x90)
// Class FortniteGame.FortAbilitySetTooltip
class UFortAbilitySetTooltip : public UFortTooltip
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAbilitySetTooltip");
		return Clss;
	}

};

// 0x2D8 (0x1468 - 0x1190)
// Class FortniteGame.FortAbilitySystemComponent
class UFortAbilitySystemComponent : public UAbilitySystemComponent
{
public:
	uint8                                        Pad_15E7[0x178];                                   // Fixing Size After Last Property  [ Dumper-7 ]
	struct FReplicatedMontagePair                LandingMontagePair;                                // 0x1308(0x28)(Net, NoDestructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_15E8[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGameplayAbilityRepSharedAnim         RepSharedAnimInfo;                                 // 0x1338(0x10)(Net, RepNotify, NoDestructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_15E9[0x120];                                   // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAbilitySystemComponent");
		return Clss;
	}

	void SetSharedAnimStateWithMontage(enum class EFortSharedAnimationState State, class UAnimMontage* Montage);
	void SetSharedAnimState(enum class EFortSharedAnimationState State);
	void SetLandingMontageReplication(class UAnimMontage* Montage1, class FName Section1, class UAnimMontage* Montage2, class FName Section2);
	void OnRep_SharedAnim();
	void NetMulticast_RefreshActiveGameplayEffectCueEvents();
	bool HasActiveAbilityWithAnyMatchingTag(const struct FGameplayTagContainer& Tags);
	float GetAttributeMagnitude(const struct FAttributeInfo& Info);
	struct FAttributeInfo FindAttributeInformation(const class FString& AttributeName);
	bool CanActivateAbilityWithMatchingTag(const struct FGameplayTagContainer& GameplayAbilityTags);
	void BP_UnBlockAbilitiesWithTags(struct FGameplayTagContainer& Tags);
	void BP_BlockAbilitiesWithTags(struct FGameplayTagContainer& Tags);
};

// 0x0 (0x28 - 0x28)
// Class FortniteGame.FortAbilitySystemComponentAbilityGivenListenerInterface
class UFortAbilitySystemComponentAbilityGivenListenerInterface : public UInterface
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAbilitySystemComponentAbilityGivenListenerInterface");
		return Clss;
	}

};

// 0x0 (0x1468 - 0x1468)
// Class FortniteGame.FortAbilitySystemComponentAthena
class UFortAbilitySystemComponentAthena : public UFortAbilitySystemComponent
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAbilitySystemComponentAthena");
		return Clss;
	}

};

// 0x48 (0x70 - 0x28)
// Class FortniteGame.FortTooltipContext
class UFortTooltipContext : public UObject
{
public:
	class UAbilitySystemComponent*               SourceAbilitySystem;                               // 0x28(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAbilitySystemComponent*               DestAbilitySystem;                                 // 0x30(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        TreatAsLevel;                                      // 0x38(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_15EA[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGameplayTagContainer                 TagContainer;                                      // 0x40(0x20)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	class UObject*                               ComparisonObject;                                  // 0x60(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFortRegisteredPlayerInfo*             PlayerInfo;                                        // 0x68(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortTooltipContext");
		return Clss;
	}

	class UFortTooltipContext* SpawnTooltipContextWithSource(class APlayerController* SourcePlayerController);
	class UFortTooltipContext* SpawnTooltipContextWithNetID(class UObject* WorldContextObject, struct FUniqueNetIdRepl& UniqueId);
	class UFortTooltipContext* SpawnTooltipContext();
};

// 0x28 (0x98 - 0x70)
// Class FortniteGame.FortAbilitySystemComponentTooltipContext
class UFortAbilitySystemComponentTooltipContext : public UFortTooltipContext
{
public:
	struct FGameplayAttribute                    Attribute;                                         // 0x70(0x20)(Edit, BlueprintVisible, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FActiveGameplayEffectHandle           ActiveGEHandle;                                    // 0x90(0x8)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAbilitySystemComponentTooltipContext");
		return Clss;
	}

	class UFortAbilitySystemComponentTooltipContext* SpawnAbilitySystemTooltipContextFromOtherContext(class UFortTooltipContext* OtherContext);
	class UFortAbilitySystemComponentTooltipContext* SpawnAbilitySystemTooltipContext();
};

// 0x8 (0x98 - 0x90)
// Class FortniteGame.FortAbilitySystemComponentTooltip
class UFortAbilitySystemComponentTooltip : public UFortTooltip
{
public:
	class UFortTooltipContext*                   CachedContext;                                     // 0x90(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAbilitySystemComponentTooltip");
		return Clss;
	}

};

// 0x10 (0x40 - 0x30)
// Class FortniteGame.FortTokenToAttributeTable
class UFortTokenToAttributeTable : public UDataAsset
{
public:
	TArray<struct FTokenAttributePair>           TokenToAttributeList;                              // 0x30(0x10)(Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortTokenToAttributeTable");
		return Clss;
	}

};

// 0x10 (0x258 - 0x248)
// Class FortniteGame.FortAbilitySystemGlobals
class UFortAbilitySystemGlobals : public UAbilitySystemGlobals
{
public:
	TArray<class FName>                          BROnlyAttributeSetDefaultsToExclude;               // 0x248(0x10)(ZeroConstructor, Config, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAbilitySystemGlobals");
		return Clss;
	}

};

// 0x0 (0x28 - 0x28)
// Class FortniteGame.FortAbilitySystemInterface
class UFortAbilitySystemInterface : public UInterface
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAbilitySystemInterface");
		return Clss;
	}

};

// 0x50 (0x78 - 0x28)
// Class FortniteGame.FortAbilitySystemUI
class UFortAbilitySystemUI : public UObject
{
public:
	uint8                                        Pad_15EC[0x50];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAbilitySystemUI");
		return Clss;
	}

	struct FFortGameplayEffectDescription GetStaticGameplayEffectDescription(class UGameplayEffect* Effect, float Level);
	class UGameplayEffect* GetDefaultObjectOfGameplayEffectType(TSubclassOf<class UGameplayEffect> EffectType);
};

// 0x10 (0x40 - 0x30)
// Class FortniteGame.FortAbilityTagRelationshipMapping
class UFortAbilityTagRelationshipMapping : public UDataAsset
{
public:
	TArray<struct FFortAbilityTagRelationship>   AbilityTagRelationships;                           // 0x30(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAbilityTagRelationshipMapping");
		return Clss;
	}

};

// 0x48 (0xC8 - 0x80)
// Class FortniteGame.FortAbilityTask_CommitAccountCosts
class UFortAbilityTask_CommitAccountCosts : public UAbilityTask
{
public:
	UMulticastDelegateProperty_                  OnCommitted;                                       // 0x80(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnFailed;                                          // 0x90(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	bool                                         bWasCancellable;                                   // 0xA0(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bRequestPending;                                   // 0xA1(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bCommittedLocally;                                 // 0xA2(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_15ED[0x5];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                PlayerName;                                        // 0xA8(0x10)(ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FString                                AbilityName;                                       // 0xB8(0x10)(ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAbilityTask_CommitAccountCosts");
		return Clss;
	}

	class UFortAbilityTask_CommitAccountCosts* CommitAccountCosts(class UGameplayAbility* OwningAbility);
};

// 0x70 (0xF0 - 0x80)
// Class FortniteGame.FortAbilityTask_DirectedMovement
class UFortAbilityTask_DirectedMovement : public UAbilityTask
{
public:
	UMulticastDelegateProperty_                  OnMovementComplete;                                // 0x80(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnMovementCancelled;                               // 0x90(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_15F4[0x1C];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               TargetLocation;                                    // 0xBC(0xC)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USceneComponent*                       TargetComponent;                                   // 0xC8(0x8)(ExportObject, Net, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MovementDistance;                                  // 0xD0(0x4)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        IdealArrivalDistance;                              // 0xD4(0x4)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DurationOfMovement;                                // 0xD8(0x4)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bModifyZ;                                          // 0xDC(0x1)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bCancelOnFalling;                                  // 0xDD(0x1)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_15F5[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UCharacterMovementComponent*           MovementComponent;                                 // 0xE0(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_15F6[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAbilityTask_DirectedMovement");
		return Clss;
	}

	class UFortAbilityTask_DirectedMovement* DirectedMovementToLocation(class UGameplayAbility* OwningAbility, const struct FVector& MovementTargetLocation, enum class EFortDirectedMovementSpace MovementSpaceType, float MovementDuration, float CloseEnoughDistance, bool ModifyZ, bool bCancelOnFalling);
	class UFortAbilityTask_DirectedMovement* DirectedMovementToComponent(class UGameplayAbility* OwningAbility, class USceneComponent* TargetComponent, float MaxMovementDistance, float MovementDuration, float IdealDistance, bool ModifyZ, bool bCancelOnFalling);
	class UFortAbilityTask_DirectedMovement* DirectedMovementToActor(class UGameplayAbility* OwningAbility, class AActor* TargetActor, float MaxMovementDistance, float MovementDuration, float IdealDistance, bool ModifyZ, bool bCancelOnFalling);
	class UFortAbilityTask_DirectedMovement* DirectedMovement(class UGameplayAbility* OwningAbility, const struct FVector& MovementDirection, enum class EFortDirectedMovementSpace MovementSpaceType, float MovementDistance, float MovementDuration, float IdealDistance, bool ModifyZ, bool bCancelOnFalling);
};

// 0x38 (0x148 - 0x110)
// Class FortniteGame.FortAITask_Move
class UFortAITask_Move : public UAITask_MoveTo
{
public:
	struct FFortMoveConfig                       MoveConfig;                                        // 0x110(0x28)(NoDestructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_15F7[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAITask_Move");
		return Clss;
	}

};

// 0x38 (0x180 - 0x148)
// Class FortniteGame.FortAbilityTask_MoveAI
class UFortAbilityTask_MoveAI : public UFortAITask_Move
{
public:
	UMulticastDelegateProperty_                  OnComplete;                                        // 0x148(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnInterrupted;                                     // 0x158(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnCancelled;                                       // 0x168(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_15FA[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAbilityTask_MoveAI");
		return Clss;
	}

	class UFortAbilityTask_MoveAI* CreateMoveAITask(class UGameplayAbility* OwningAbility, class FName TaskInstanceName, class AActor* MoveActor, const struct FVector& MoveLocation, enum class EPawnActionMoveMode MoveMode, enum class EPathObstacleAction PathObstacleAction, bool bStopAtEnd, enum class EAIOptionFlag AcceptPartialPath, bool bFinishOnPlayerCollision, bool bProjectGoalLocationOnNavMesh, float AcceptableRadius, TSubclassOf<class AFortPawn> PushBumpedPawnClass, TSubclassOf<class UNavigationQueryFilter> FilterClass, bool bUseContinuousGoalTracking);
};

// 0xC8 (0x148 - 0x80)
// Class FortniteGame.FortAbilityTask_PlayAnimAndWait
class UFortAbilityTask_PlayAnimAndWait : public UAbilityTask
{
public:
	UMulticastDelegateProperty_                  OnCompleted;                                       // 0x80(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnBlendOut;                                        // 0x90(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnInterrupted;                                     // 0xA0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnCancelled;                                       // 0xB0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_15FD[0x28];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FFortGameplayAbilityMontageInfo       MontageInfo;                                       // 0xE8(0x58)(Protected, NativeAccessSpecifierProtected)
	enum class EFortSharedAnimationState         AnimState;                                         // 0x140(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bStopWhenAbilityEnds;                              // 0x141(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_15FE[0x6];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAbilityTask_PlayAnimAndWait");
		return Clss;
	}

	void OnAnimInterrupted();
	void OnAnimBlendingOut(class UAnimMontage* Montage, bool bInterrupted);
	class UFortAbilityTask_PlayAnimAndWait* CreatePlayAnimAndWaitProxy(class UGameplayAbility* OwningAbility, class FName TaskInstanceName, struct FFortGameplayAbilityMontageInfo& PlayMontageInfo, enum class EFortSharedAnimationState AnimState, bool bStopWhenAbilityEnds);
};

// 0xB8 (0x138 - 0x80)
// Class FortniteGame.FortAbilityTask_PlayAnimWaitTarget
class UFortAbilityTask_PlayAnimWaitTarget : public UAbilityTask
{
public:
	UMulticastDelegateProperty_                  Triggered;                                         // 0x80(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  Cancelled;                                         // 0x90(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  Completed;                                         // 0xA0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FFortGameplayAbilityMontageInfo       MontageInfo;                                       // 0xB0(0x58)(Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_1602[0x30];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAbilityTask_PlayAnimWaitTarget");
		return Clss;
	}

	class UFortAbilityTask_PlayAnimWaitTarget* PlayAnimWithMontageInfoAndWaitForTrigger(class UGameplayAbility* OwningAbility, class FName TaskInstanceName, struct FFortGameplayAbilityMontageInfo& MontageInfo, enum class EFortSharedAnimationState AnimState);
	class UFortAbilityTask_PlayAnimWaitTarget* PlayAnimWaitTarget(class UGameplayAbility* OwningAbility, class FName TaskInstanceName, class UAnimMontage* MontageToPlay, enum class EFortSharedAnimationState AnimState, enum class EFortGameplayAbilityMontageSectionToPlay SectionToPlay, class FName OverrideSection);
	void OnTargetDataReadyCallback(struct FGameplayAbilityTargetDataHandle& TargetData, const struct FGameplayTag& ApplicationTag);
	void OnTargetDataCancelledCallback();
};

// 0xB8 (0x138 - 0x80)
// Class FortniteGame.FortAbilityTask_PlayMontageWaitTarget
class UFortAbilityTask_PlayMontageWaitTarget : public UAbilityTask
{
public:
	UMulticastDelegateProperty_                  Triggered;                                         // 0x80(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  Cancelled;                                         // 0x90(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  Completed;                                         // 0xA0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FFortGameplayAbilityMontageInfo       MontageInfo;                                       // 0xB0(0x58)(Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_1608[0x30];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAbilityTask_PlayMontageWaitTarget");
		return Clss;
	}

	class UFortAbilityTask_PlayMontageWaitTarget* PlayMontageWithCharPartsWait(class UGameplayAbility* OwningAbility, class FName TaskInstanceName, class UAnimMontage* MontageToPlay, const TArray<struct FFortCharacterPartMontageInfo>& CharacterPartMontages, float AnimPlayRate, enum class EFortGameplayAbilityMontageSectionToPlay SectionToPlay, class FName OverrideSection, float AnimRootMotionTranslationScale, enum class EFortAbilityTargetDataPolicy TargetDataPolicy);
	class UFortAbilityTask_PlayMontageWaitTarget* PlayMontageWaitTarget(class UGameplayAbility* OwningAbility, class FName TaskInstanceName, class UAnimMontage* MontageToPlay, float AnimPlayRate, enum class EFortGameplayAbilityMontageSectionToPlay SectionToPlay, class FName OverrideSection, float AnimRootMotionTranslationScale, enum class EFortAbilityTargetDataPolicy TargetDataPolicy);
	class UFortAbilityTask_PlayMontageWaitTarget* PlayMontageInfoAndWaitForTrigger(class UGameplayAbility* OwningAbility, class FName TaskInstanceName, struct FFortGameplayAbilityMontageInfo& MontageInfo, enum class EFortAbilityTargetDataPolicy TargetDataPolicy);
	void OnTargetDataReadyCallback(struct FGameplayAbilityTargetDataHandle& TargetData, const struct FGameplayTag& ApplicationTag);
	void OnTargetDataCancelledCallback();
	void EnableScalingWithRateOfFire();
};

// 0x30 (0xB0 - 0x80)
// Class FortniteGame.FortAbilityTask_SetNextMontageSectionAndWait
class UFortAbilityTask_SetNextMontageSectionAndWait : public UAbilityTask
{
public:
	UMulticastDelegateProperty_                  OnComplete;                                        // 0x80(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnInterrupted;                                     // 0x90(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_160A[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAbilityTask_SetNextMontageSectionAndWait");
		return Clss;
	}

	class UFortAbilityTask_SetNextMontageSectionAndWait* SetNextMontageSectionAndWait(class UGameplayAbility* OwningAbility, class UAnimMontage* PlayingMontage, class FName NextMontageSection);
	void OnMontageBlendingOut(class UAnimMontage* Montage, bool bInterrupted);
};

// 0x1B0 (0x230 - 0x80)
// Class FortniteGame.FortAbilityTask_SpawnProjectileAndWait
class UFortAbilityTask_SpawnProjectileAndWait : public UAbilityTask
{
public:
	UMulticastDelegateProperty_                  Created;                                           // 0x80(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  Touched;                                           // 0x90(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  Bounced;                                           // 0xA0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  Stopped;                                           // 0xB0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  Exploded;                                          // 0xC0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  Destroyed;                                         // 0xD0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class AFortProjectileBase>    SpawnedProj;                                       // 0xE0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                RequestedBy;                                       // 0xE8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               SpawnLocation;                                     // 0xF0(0xC)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                              SpawnRotation;                                     // 0xFC(0xC)(ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FRotator                              SpawnDirection;                                    // 0x108(0xC)(ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	float                                        InitialSpeed;                                      // 0x114(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFortGameplayEffectContainerSpec      EffectContainerSpecToApplyOnHit;                   // 0x118(0x80)(NativeAccessSpecifierPublic)
	struct FFortGameplayEffectContainerSpec      EffectContainerSpecToApplyOnExplode;               // 0x198(0x80)(NativeAccessSpecifierPublic)
	float                                        GravityScale;                                      // 0x218(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_160E[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AActor*                                HomingTarget;                                      // 0x220(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bAllowSpawnWhenDead;                               // 0x228(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bAllowSpawnWhenDBNO;                               // 0x229(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_160F[0x6];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAbilityTask_SpawnProjectileAndWait");
		return Clss;
	}

	class UFortAbilityTask_SpawnProjectileAndWait* SpawnProjectileAndWait(class UGameplayAbility* OwningAbility, TSubclassOf<class AFortProjectileBase> Class, class AActor* RequestedBy, struct FVector& SpawnLocation, struct FRotator& SpawnRotation, struct FRotator& SpawnDirection, float InitialSpeed, const struct FFortGameplayEffectContainerSpec& EffectContainerSpecToApplyOnHit, const struct FFortGameplayEffectContainerSpec& EffectContainerSpecToApplyOnExplode, float GravityScale, class AActor* HomingTarget, bool bAllowProjectileSpawnWhenDead, bool bAllowProjectileSpawnWhenDBNO);
	void OnProjectileDestroyed(class AActor* DestroyedActor);
	void FinishSpawningActor(class UGameplayAbility* OwningAbility, class AFortProjectileBase* SpawnedActor);
	bool BeginSpawningActor(class UGameplayAbility* OwningAbility, TSubclassOf<class AFortProjectileBase> Class, class AFortProjectileBase** SpawnedActor);
};

// 0x10 (0x90 - 0x80)
// Class FortniteGame.FortAbilityTask_Sprint
class UFortAbilityTask_Sprint : public UAbilityTask
{
public:
	UMulticastDelegateProperty_                  OnTargetLocationReached;                           // 0x80(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAbilityTask_Sprint");
		return Clss;
	}

};

// 0x68 (0xE8 - 0x80)
// Class FortniteGame.FortAbilityTask_WaitAnimBPOverride
class UFortAbilityTask_WaitAnimBPOverride : public UAbilityTask
{
public:
	UMulticastDelegateProperty_                  OnReady;                                           // 0x80(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TSoftClassPtr<class UAnimInstance>           AnimInstanceWaitingFor;                            // 0x90(0x28)(UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UFortGadgetItemDefinition> GadgetItemDefWaitingFor;                           // 0xB8(0x28)(UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AFortPlayerPawn*                       FortPlayerPawn;                                    // 0xE0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAbilityTask_WaitAnimBPOverride");
		return Clss;
	}

	class UFortAbilityTask_WaitAnimBPOverride* WaitAnimBPOverrideReady(class UGameplayAbility* OwningAbility, TSoftClassPtr<class UAnimInstance> AnimInstance, TSoftObjectPtr<class UFortGadgetItemDefinition> GadgetItemDef);
	void OnPawnAnimBPCallback();
	void OnFinishedCharacterCustomizationCallback(class AFortPlayerPawn* InPawn);
};

// 0x40 (0xC0 - 0x80)
// Class FortniteGame.FortAbilityTask_WaitTargetSelection
class UFortAbilityTask_WaitTargetSelection : public UAbilityTask
{
public:
	UMulticastDelegateProperty_                  Targeted;                                          // 0x80(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  Cancelled;                                         // 0x90(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	enum class EGameplayTargetingConfirmation    ConfirmationType;                                  // 0xA0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bForceTargetingOnServer;                           // 0xA1(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1611[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGameplayTag                          InstantTargetTag;                                  // 0xA4(0x8)(NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1612[0x14];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAbilityTask_WaitTargetSelection");
		return Clss;
	}

	class UFortAbilityTask_WaitTargetSelection* WaitTargetSelection(class UGameplayAbility* OwningAbility, class FName TaskInstanceName, const struct FGameplayTag& InApplicationTag, bool bForceTargetingOnServer);
	void OnTargetDataReadyCallback(struct FGameplayAbilityTargetDataHandle& TargetData, const struct FGameplayTag& ApplicationTag);
	void OnTargetDataCancelledCallback();
};

// 0x30 (0x360 - 0x330)
// Class FortniteGame.FortAbilityTestObserver
class AFortAbilityTestObserver : public AActor
{
public:
	uint8                                        Pad_1615[0x30];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAbilityTestObserver");
		return Clss;
	}

	bool WasAbilityTagActivated(struct FGameplayTag& AbilityTag);
	bool WasAbilityActivated(class UGameplayAbility* Ability);
	void StopObserving();
	void StartObserving(class APawn* Pawn);
};

// 0x0 (0xE0 - 0xE0)
// Class FortniteGame.FortAccountBuffCreditItem
class UFortAccountBuffCreditItem : public UFortAccountItem
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAccountBuffCreditItem");
		return Clss;
	}

};

// 0x10 (0x370 - 0x360)
// Class FortniteGame.FortConsumableAccountItemDefinition
class UFortConsumableAccountItemDefinition : public UFortAccountItemDefinition
{
public:
	bool                                         bCanActivateOnSelf;                                // 0x360(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bCanActivateOnOthers;                              // 0x361(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsAutomaticallyConsumed;                          // 0x362(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EItemProfileType                  ProfileType;                                       // 0x363(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1616[0xC];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortConsumableAccountItemDefinition");
		return Clss;
	}

};

// 0x30 (0x3A0 - 0x370)
// Class FortniteGame.FortAccountBuffCreditItemDefinition
class UFortAccountBuffCreditItemDefinition : public UFortConsumableAccountItemDefinition
{
public:
	//TSoftObjectPtr<class UFortAccountBuffItemDefinition> BuffToGrant;                                       // 0x368(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1617[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        MinutesOfBuffTimeToGrant;                          // 0x390(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1618[0xC];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAccountBuffCreditItemDefinition");
		return Clss;
	}

};

// 0x8 (0xE8 - 0xE0)
// Class FortniteGame.FortAccountBuffItem
class UFortAccountBuffItem : public UFortAccountItem
{
public:
	struct FDateTime                             Expiration_date;                                   // 0xE0(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAccountBuffItem");
		return Clss;
	}

	bool IsActive();
};

// 0x10 (0x370 - 0x360)
// Class FortniteGame.FortAccountBuffItemDefinition
class UFortAccountBuffItemDefinition : public UFortAccountItemDefinition
{
public:
	TArray<TSoftClassPtr<class UGameplayEffect>> BuffEffects;                                       // 0x360(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAccountBuffItemDefinition");
		return Clss;
	}

};

// 0x0 (0x90 - 0x90)
// Class FortniteGame.FortItemTooltip
class UFortItemTooltip : public UFortTooltip
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortItemTooltip");
		return Clss;
	}

};

// 0x0 (0x90 - 0x90)
// Class FortniteGame.FortAccountItemTooltip
class UFortAccountItemTooltip : public UFortItemTooltip
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAccountItemTooltip");
		return Clss;
	}

};

// 0x28 (0x50 - 0x28)
// Class FortniteGame.FortAccountStatProxyInstance
class UFortAccountStatProxyInstance : public UObject
{
public:
	class FString                                StatName;                                          // 0x28(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                  CachedDisplayName;                                 // 0x38(0x18)(NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAccountStatProxyInstance");
		return Clss;
	}

};

// 0x0 (0x40 - 0x40)
// Class FortniteGame.FortGameplayEffectExecutionCalculation
class UFortGameplayEffectExecutionCalculation : public UGameplayEffectExecutionCalculation
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortGameplayEffectExecutionCalculation");
		return Clss;
	}

};

// 0x0 (0x40 - 0x40)
// Class FortniteGame.FortActiveDurationExecutionCalculation
class UFortActiveDurationExecutionCalculation : public UFortGameplayEffectExecutionCalculation
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortActiveDurationExecutionCalculation");
		return Clss;
	}

};

// 0x0 (0x28 - 0x28)
// Class FortniteGame.FortActorIndicatorInterface
class UFortActorIndicatorInterface : public UInterface
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortActorIndicatorInterface");
		return Clss;
	}

};

// 0x160 (0x258 - 0xF8)
// Class FortniteGame.FortActorOptionsComponent
class UFortActorOptionsComponent : public UActorComponent
{
public:
	uint8                                        Pad_161B[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  OptionsDisplayName;                                // 0x100(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class FText                                  OptionsDescription;                                // 0x118(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UFortItemDefinition>    OptionsItemDefinition;                             // 0x130(0x28)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlaylistUserOptions*                  PlayerOptions;                                     // 0x158(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FPropertyOverrideData                 PlayerOptionData;                                  // 0x160(0xD8)(Edit, Net, DisableEditOnTemplate, EditConst, SaveGame, RepNotify, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnAnyPropertyChanged;                              // 0x238(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnPropertiesLoaded;                                // 0x248(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortActorOptionsComponent");
		return Clss;
	}

	bool SetPropertyOverrides(TMap<class FString, class FString>& NewOptions);
	void OnRep_PlayerOptionData();
	bool GetPropertyOverrides(TMap<class FString, class FString>* CurrentOptions);
	void GetOptionsText(class FText* DisplayName, class FText* Descriptions);
};

// 0x0 (0x30 - 0x30)
// Class FortniteGame.FortAttributeSet
class UFortAttributeSet : public UAttributeSet
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAttributeSet");
		return Clss;
	}

};

// 0x1B8 (0x1E8 - 0x30)
// Class FortniteGame.FortAdvancedMovementSet
class UFortAdvancedMovementSet : public UFortAttributeSet
{
public:
	struct FFortGameplayAttributeData            GroundFriction;                                    // 0x30(0x28)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            BrakingDecelerationWalking;                        // 0x58(0x28)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            BrakingDecelerationFalling;                        // 0x80(0x28)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            BrakingDecelerationFlying;                         // 0xA8(0x28)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            MaxAcceleration;                                   // 0xD0(0x28)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            MaxAccelerationFlying;                             // 0xF8(0x28)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            BrakingFrictionFactor;                             // 0x120(0x28)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            JumpZVelocity;                                     // 0x148(0x28)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            JumpHorizontalAccelerationOverride;                // 0x170(0x28)(BlueprintVisible, BlueprintReadOnly, Net, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            JumpHorizontalVelocityOverride;                    // 0x198(0x28)(BlueprintVisible, BlueprintReadOnly, Net, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            MinAnalogWalkSpeed;                                // 0x1C0(0x28)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAdvancedMovementSet");
		return Clss;
	}

	void OnRep_MinAnalogWalkSpeed();
	void OnRep_MaxAccelerationFlying();
	void OnRep_MaxAcceleration();
	void OnRep_JumpZVelocity();
	void OnRep_GroundFriction();
	void OnRep_BrakingFrictionFactor();
	void OnRep_BrakingDecelerationWalking();
	void OnRep_BrakingDecelerationFlying();
	void OnRep_BrakingDecelerationFalling();
};

// 0x30 (0x340 - 0x310)
// Class FortniteGame.FortAIAnimInstance
class UFortAIAnimInstance : public UFortAnimInstance
{
public:
	float                                        Speed;                                             // 0x310(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        UpwardVelocity;                                    // 0x314(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MovementDirection;                                 // 0x318(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LowerBodyCurrentWeight;                            // 0x31C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LowerBodyBlendTime;                                // 0x320(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        RunVariation;                                      // 0x324(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        WalkVariation;                                     // 0x328(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortMovementStyle                MovementStyle;                                     // 0x32C(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_161C[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	uint8                                        BlockGetUp : 1;                                    // Mask : 0x1 0x330(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsStunned : 1;                                    // Mask : 0x2 0x330(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsKnockedback : 1;                                // Mask : 0x4 0x330(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsStaggered : 1;                                  // Mask : 0x8 0x330(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsSleeping : 1;                                   // Mask : 0x10 0x330(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsDBNO : 1;                                       // Mask : 0x20 0x330(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsDead : 1;                                       // Mask : 0x40 0x330(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsSprinting : 1;                                  // Mask : 0x80 0x330(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsCowering : 1;                                   // Mask : 0x1 0x331(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bHasWeapon : 1;                                    // Mask : 0x2 0x331(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bAdditiveHitReactLoop : 1;                         // Mask : 0x4 0x331(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bUseAltSleepAnim : 1;                              // Mask : 0x8 0x331(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bShouldUseMovementLocomotion : 1;                  // Mask : 0x10 0x331(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bCanLookAtAimTarget : 1;                           // Mask : 0x20 0x331(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsTargeting : 1;                                  // Mask : 0x40 0x331(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bTransitionToIdle : 1;                             // Mask : 0x80 0x331(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_161D[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	enum class EFortWeaponCoreAnimation          WeaponCoreAnimation;                               // 0x334(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_161E[0xB];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAIAnimInstance");
		return Clss;
	}

};

// 0xB0 (0xD8 - 0x28)
// Class FortniteGame.FortAIAssignment
class UFortAIAssignment : public UObject
{
public:
	struct FFortAIAssignmentIdentifier           AssignmentIdentifier;                              // 0x28(0x30)(Protected, NativeAccessSpecifierProtected)
	class UFortAIAssignmentSettings*             AssignmentSettings;                                // 0x58(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFortAIGoalProvider*                   GoalProvider;                                      // 0x60(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class AFortAIController*>             ControllersOnAssignment;                           // 0x68(0x10)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_161F[0x50];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FFortAIGoal>                   Goals;                                             // 0xC8(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAIAssignment");
		return Clss;
	}

};

// 0x60 (0x90 - 0x30)
// Class FortniteGame.FortAIAssignmentSettings
class UFortAIAssignmentSettings : public UDataAsset
{
public:
	TArray<struct FGoalSelectionQueryInfo>       GoalSelectionQueryInfos;                           // 0x30(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	bool                                         bGoalLocationsAlwaysKnown;                         // 0x40(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bIsEnemyAssignment;                                // 0x41(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1620[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGameplayTagContainer                 RequiredTags;                                      // 0x48(0x20)(Edit, NativeAccessSpecifierPrivate)
	struct FGameplayTagContainer                 ProhibitedTags;                                    // 0x68(0x20)(Edit, NativeAccessSpecifierPrivate)
	float                                        MaxAIAllowedForAssignment;                         // 0x88(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        MaxAIAllowedPerGoal;                               // 0x8C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAIAssignmentSettings");
		return Clss;
	}

};

// 0xC8 (0xF8 - 0x30)
// Class FortniteGame.FortCharacterAttrSet
class UFortCharacterAttrSet : public UFortAttributeSet
{
public:
	struct FFortGameplayAttributeData            Fortitude;                                         // 0x30(0x28)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            Offense;                                           // 0x58(0x28)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            Tech;                                              // 0x80(0x28)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            Resistance;                                        // 0xA8(0x28)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            MaxCharacterLevel;                                 // 0xD0(0x28)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortCharacterAttrSet");
		return Clss;
	}

	void OnRep_Tech();
	void OnRep_Resistance();
	void OnRep_Offense();
	void OnRep_MaxCharacterLevel();
	void OnRep_Fortitude();
};

// 0x0 (0xF8 - 0xF8)
// Class FortniteGame.FortAIAttributesSet
class UFortAIAttributesSet : public UFortCharacterAttrSet
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAIAttributesSet");
		return Clss;
	}

};

// 0x48 (0x70 - 0x28)
// Class FortniteGame.FortAIDataProvider_Ability
class UFortAIDataProvider_Ability : public UAIDataProvider
{
public:
	struct FGameplayTagContainer                 AbilityTag;                                        // 0x28(0x20)(Edit, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                 AbilityBehaviorDistanceTag;                        // 0x48(0x20)(Edit, NativeAccessSpecifierPublic)
	float                                        BehaviorDistance;                                  // 0x68(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxTargetSelectionRange;                           // 0x6C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAIDataProvider_Ability");
		return Clss;
	}

};

// 0x8 (0x30 - 0x28)
// Class FortniteGame.FortAIDataProvider_AIDirector
class UFortAIDataProvider_AIDirector : public UAIDataProvider
{
public:
	float                                        AIRelevantDistanceToPlayer;                        // 0x28(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        EncounterRelevantDistanceToPlayer;                 // 0x2C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAIDataProvider_AIDirector");
		return Clss;
	}

};

// 0x28 (0x50 - 0x28)
// Class FortniteGame.FortAIDataProvider_FloatCurveOverGameDifficulty
class UFortAIDataProvider_FloatCurveOverGameDifficulty : public UAIDataProvider
{
public:
	struct FScalableFloat                        ScalableFloat;                                     // 0x28(0x20)(Edit, NativeAccessSpecifierPrivate)
	float                                        FloatValue;                                        // 0x48(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1621[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAIDataProvider_FloatCurveOverGameDifficulty");
		return Clss;
	}

};

// 0x0 (0x70 - 0x70)
// Class FortniteGame.FortAIDataProvider_GoalProviderAbility
class UFortAIDataProvider_GoalProviderAbility : public UFortAIDataProvider_Ability
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAIDataProvider_GoalProviderAbility");
		return Clss;
	}

};

// 0x30 (0x58 - 0x28)
// Class FortniteGame.FortAIDataProvider_Pawn
class UFortAIDataProvider_Pawn : public UAIDataProvider
{
public:
	float                                        SightRadius;                                       // 0x28(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HearingRadius;                                     // 0x2C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ViewLocationOffsetFromGround;                      // 0x30(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxStepHeight;                                     // 0x34(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               TetheredBoxCenterLocation;                         // 0x38(0xC)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TetheredBoxWidth;                                  // 0x44(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TetheredBoxHeight;                                 // 0x48(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TetheredBoxEQSGridSize;                            // 0x4C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TetheredBoxEQSSpaceBetween;                        // 0x50(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1622[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAIDataProvider_Pawn");
		return Clss;
	}

};

// 0xE0 (0x410 - 0x330)
// Class FortniteGame.FortAIDirectorDataManager
class AFortAIDirectorDataManager : public AActor
{
public:
	class UObject*                               OwnerObject;                                       // 0x330(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FAIDirectorEventData>          EventsToTrack;                                     // 0x338(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<struct FFortAIDirectorFactorData>     FactorsToTrack;                                    // 0x348(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_1624[0xA0];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<enum class EFortAIDirectorFactor>     FactorsBeingTracked;                               // 0x3F8(0x10)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_1625[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAIDirectorDataManager");
		return Clss;
	}

	void TriggerEvent(struct FFortAIDirectorEvent& TriggeredEvent);
	float GetAIDirectorFactorValue(enum class EFortAIDirectorFactor AIDirectorFactor);
};

// 0x10 (0x40 - 0x30)
// Class FortniteGame.FortAIDirectorDataTrackingSettings
class UFortAIDirectorDataTrackingSettings : public UDataAsset
{
public:
	TSubclassOf<class AFortAIDirectorDataManager> PlayerDataManager;                                 // 0x30(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class AFortAIDirectorDataManager> EncounterDataManager;                              // 0x38(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAIDirectorDataTrackingSettings");
		return Clss;
	}

};

// 0x50 (0x380 - 0x330)
// Class FortniteGame.FortAIDirectorEventManager
class AFortAIDirectorEventManager : public AActor
{
public:
	uint8                                        Pad_1626[0x50];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAIDirectorEventManager");
		return Clss;
	}

};

// 0xC80 (0xCA8 - 0x28)
// Class FortniteGame.FortAIEncounterInfo
class UFortAIEncounterInfo : public UObject
{
public:
	uint8                                        Pad_1630[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UFortAISpawnGroupProgressionInfo*      SpawnGroupProgressionInfo;                         // 0x38(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FFortSpawnPointsPercentageCurveSequenceInstanceInfo SpawnPointsPercentageCurveSequence;                // 0x40(0x10)(NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FFortIntensityCurveSequenceInstanceInfo IntensityCurveSequence;                            // 0x50(0x10)(NoDestructor, Protected, NativeAccessSpecifierProtected)
	float                                        BurstSpawnPointsPercentage;                        // 0x60(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SpawnPointsMultiplier;                             // 0x64(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bUseBreathers;                                     // 0x68(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1631[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FCurveTableRowHandle                  LowPlayerPerformanceBreatherTimeSecondsCurve;      // 0x70(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FCurveTableRowHandle                  NormalPlayerPerformanceBreatherTimeSecondsCurve;   // 0x80(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FCurveTableRowHandle                  HighPlayerPerformanceBreatherTimeSecondsCurve;     // 0x90(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        EncounterTimeSeconds;                              // 0xA0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1632[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FUtilityTypeFloatPair>         LockedUtilityValues;                               // 0xA8(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	int32                                        NumFreeUtilities;                                  // 0xB8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        UtilityAdjustmentPeriodSeconds;                    // 0xBC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MinSpawnDistance;                                  // 0xC0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MaxSpawnDistance;                                  // 0xC4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        NumDirections;                                     // 0xC8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bChangeDirectionsOnRest;                           // 0xCC(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1633[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        SpawnPointsPercentageLimit;                        // 0xD0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        PawnNumberLimit;                                   // 0xD4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FFortEncounterPawnNumberCaps          PawnNumberCaps;                                    // 0xD8(0x18)(Protected, NativeAccessSpecifierProtected)
	float                                        SpawningIntervalSeconds;                           // 0xF0(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1634[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	UMulticastDelegateProperty_                  OnEncounterSpawnDirectionsChosen;                  // 0xF8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	float                                        NextRiftReplacementTime;                           // 0x108(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        NextSpawningTime;                                  // 0x10C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFortAIEncounterSpawnGroupCapsProfile EncounterSpawnGroupCapsProfile;                    // 0x110(0x30)(NativeAccessSpecifierPublic)
	TArray<struct FFortAIEncounterSpawnGroupCapsCategory> AdditionalSpawnGroupCapsCategories;                // 0x140(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	struct FFortAIEncounterSpawnPointsProfile    EncounterSpawnPointsProfile;                       // 0x150(0x40)(NativeAccessSpecifierPublic)
	TArray<struct FFortAISpawnGroupUpgradeData>  AvailableUpgrades;                                 // 0x190(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FCurveTableRowHandle>          PawnDifficultyLevelModifiers;                      // 0x1A0(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FFortAIBaseLootDropRow>        BaseLootDropRows;                                  // 0x1B0(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FFortAILootDropModifierRow>    LootDropModifierRows;                              // 0x1C0(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                         bRequiresReinitializationFromProfile;              // 0x1D0(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1635[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FCurveTableRowHandle                  DesiredHostilityCurve;                             // 0x1D8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFortIntensityCurveSequenceProgression* IntensitySequenceProgression;                      // 0x1E8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1636[0x70];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        AliveMultiplier;                                   // 0x260(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortEncounterSpawnLimitType      SpawnLimitType;                                    // 0x264(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1637[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        SpawnLimit;                                        // 0x268(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        PawnNumberLimitProgress;                           // 0x26C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        SpawnPointsLimitProgress;                          // 0x270(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bSpawnLimitReached;                                // 0x274(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bHasSpawnedAllBurstSpawnAI;                        // 0x275(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bOverrideAliveCounts;                              // 0x276(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1638[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        MinAliveOverride;                                  // 0x278(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaxAliveOverride;                                  // 0x27C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HostilityThreshold;                                // 0x280(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PeakTimeSeconds;                                   // 0x284(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BreatherTimeSeconds;                               // 0x288(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxRampTimeSeconds;                                // 0x28C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinTimeBetweenBreathesSeconds;                     // 0x290(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxFadeTimeSeconds;                                // 0x294(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FadeEndIntensity;                                  // 0x298(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FadeEndRemainingSpawnPointsPercentage;             // 0x29C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CompletionPercentageToDisableBreathers;            // 0x2A0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1639[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	UMulticastDelegateProperty_                  OnEncounterAllEnemiesKilled;                       // 0x2A8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnEncounterEnemySpawned;                           // 0x2B8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnEncounterAllBurstEnemiesSpawned;                 // 0x2C8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnEncounterCompleted;                              // 0x2D8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnEncounterPawnDied;                               // 0x2E8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_163A[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bDisplayThreatVisuals;                             // 0x2FB(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BaseDesiredUtilities;                              // 0x2FC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_163B[0x40];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGameplayTagContainer                 UtilitiesRequiredTags;                             // 0x340(0x20)(Edit, NativeAccessSpecifierPublic)
	uint8                                        Pad_163C[0x1E0];                                   // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGameplayTagContainer                 InjectedTagForUtilityCheck;                        // 0x540(0x20)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	uint8                                        Pad_163D[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        MaxLargeSpawnGroupDiscountInterval;                // 0x564(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxSelectionToSpawningDelay;                       // 0x568(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_163E[0x54];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FUtilityTypeFloatPair>         CurrentDesiredUtilities;                           // 0x5C0(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	float                                        UtilityRecentSelectionPenalties;                   // 0x5D0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_163F[0x3C];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        UtilityEffectivenessMeasurements;                  // 0x610(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1640[0x3C];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FCurveTableRowHandle                  UtilityEffectivenessMultiplierCurve;               // 0x650(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        UtilityEffectivenessInfluenceCap;                  // 0x660(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1641[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FUtilityTypeFloatPair>         CurrentTopUtilityPercentages;                      // 0x668(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<enum class EFortAIUtility>            UsedTopUtilities;                                  // 0x678(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	int32                                        NumUtilitiesConsidered;                            // 0x688(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ReactivityPercentage;                              // 0x68C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bAdjustUtilitiesDuringRest;                        // 0x690(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDespawnAIsDuringRest;                             // 0x691(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1642[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        LastPlayerCombatFactorUpdateTime;                  // 0x694(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LastUtilityAdjustTime;                             // 0x698(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LastSpawnPointAdjustmentTime;                      // 0x69C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LastLargeGroupSpawnTime;                           // 0x6A0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1643[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FAIEncounterSpawnGroupWeights> EnemySpawnData;                                    // 0x6A8(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	struct FFortAIEncounterPIDController         EncounterPIDController;                            // 0x6B8(0x68)(NoDestructor, NativeAccessSpecifierPublic)
	int32                                        CurrentSpawnPointsCap;                             // 0x720(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        CurrentSpawnPointsUsed;                            // 0x724(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1644[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        FailSafeMinSpawnPoints;                            // 0x730(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1645[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FSpawnGroupInstanceInfo>       ActiveSpawnGroups;                                 // 0x738(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	float                                        EncounterEngagementDistance;                       // 0x748(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinRelevantBuildingDamagedDistance;                // 0x74C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxRelevantBuildingDamagedDistance;                // 0x750(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1646[0x14];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class AActor*                                CurrentGroupSpawnPoint;                            // 0x768(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortEncounterState               EncounterState;                                    // 0x770(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortEncounterPacingState         PacingState;                                       // 0x771(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1647[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        LastPacingStateTransitionTime;                     // 0x774(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFortAIEncounterWaveProgressEstimation WaveProgressEstimate;                              // 0x778(0x1C)(NoDestructor, NativeAccessSpecifierPublic)
	float                                        DesiredDifficultyLevel;                            // 0x794(0x4)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DifficultyLevelOverride;                           // 0x798(0x4)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1648[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AFortAIDirector*                       MyAIDirector;                                      // 0x7A0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FFortGoalActorEncounterDataManagerPair> DataManagers;                                      // 0x7A8(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	class AActor*                                TargetObjective;                                   // 0x7B8(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bOnlyActiveAtNight;                                // 0x7C0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1649[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        NumRiftsToUse;                                     // 0x7C4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MinRiftsToUse;                                     // 0x7C8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        NumRiftsUsed;                                      // 0x7CC(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFortEncounterSettings                EncounterSettings;                                 // 0x7D0(0x68)(NativeAccessSpecifierPublic)
	float                                        EncounterStartTime;                                // 0x838(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HostilityCurveStartTime;                           // 0x83C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FEncounterEnvironmentQueryInfo        DefaultEnvironmentQueryInfo;                       // 0x840(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FEncounterEnvironmentQueryInfo        FallbackEnvironmentQueryInfo;                      // 0x868(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FEncounterEnvironmentQueryInfo        OverrideEnvironmentQueryInfo;                      // 0x890(0x28)(NativeAccessSpecifierPublic)
	struct FEncounterEnvironmentQueryInfo        CurrentEnvironmentQueryInfo;                       // 0x8B8(0x28)(NativeAccessSpecifierPublic)
	bool                                         bNukeWavesAtDaybreak;                              // 0x8E0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bNukeWavesAtEncounterEnd;                          // 0x8E1(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bNukeWavesAtEncounterDeactivation;                 // 0x8E2(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_164A[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        ActiveEnemyCap;                                    // 0x8E4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CurrentHostilityLevel;                             // 0x8E8(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_164B[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	UMulticastDelegateProperty_                  OnEncounterRampStarted;                            // 0x8F0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnEncounterPeakStarted;                            // 0x900(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnEncounterFadeStarted;                            // 0x910(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnEncounterRestStarted;                            // 0x920(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnEncounterCombatParticipation;                    // 0x930(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnEncounterOptionsChanged;                         // 0x940(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TSubclassOf<class ABuildingRift>             RiftClassTemplate;                                 // 0x950(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_164C[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<TWeakObjectPtr<class AActor>, struct FFortAISpawnerData> ExternalAISpawners;                                // 0x978(0x50)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	class UFortAIEncounterRiftManager*           RiftManager;                                       // 0x9C8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FString                                AssociatedMissionName;                             // 0x9D0(0x10)(ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	enum class EFortMissionType                  AssociatedMissionType;                             // 0x9E0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_164D[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	uint8                                        bCanBeActive : 1;                                  // Mask : 0x1 0x9E4(0x1)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_164E[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UFortAIAssignment*>             EncounterAssignments;                              // 0x9E8(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	class UFortAIAssignmentSettings*             DefaultEncounterAssignmentSettings;                // 0x9F8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_164F[0x30];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        MaxActiveAlive;                                    // 0xA30(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaxSpawnPointsUsed;                                // 0xA34(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                           OverrideSpawnPointsCurve;                          // 0xA38(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1650[0x1F8];                                   // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bSendFullAnalyticsReport;                          // 0xC38(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bUseAILifespans;                                   // 0xC39(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bTrackCombatParticipation;                         // 0xC3A(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1651[0x5];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGameplayTagContainer                 ModifierTags;                                      // 0xC40(0x20)(BlueprintVisible, BlueprintReadOnly, Transient, Protected, NativeAccessSpecifierProtected)
	TArray<struct FFortAIEncounterTimedModifierTags> TimedModifierTags;                                 // 0xC60(0x10)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	struct FGameplayTagContainer                 GameContextTags;                                   // 0xC70(0x20)(BlueprintVisible, BlueprintReadOnly, Transient, Protected, NativeAccessSpecifierProtected)
	class AFortGameplayMutator_AILevelVariance*  AILevelMutator;                                    // 0xC90(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class AFortGameplayMutator_AIEncounterModifierTags*> EncounterModifierTagsMutators;                     // 0xC98(0x10)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAIEncounterInfo");
		return Clss;
	}

	void UnRegisterAISpawner(class AActor* InAISpawner);
	class AFortAIPawn* SpawnAIPawnReservedForEnemySpawner(class AActor* EnemySpawner, const struct FVector& SpawnLocation, const struct FRotator& SpawnRotation);
	void SetPawnNumberLimit(int32 InPawnNumberLimit);
	void SetEncounterActivationState(bool bEncounterActivityState);
	void RequestActivation(int32 ActivationDelay);
	void RegisterAISpawner(class AActor* InAISpawner);
	void OnRestStarted();
	void OnRampStarted();
	void OnPeakStarted();
	void OnGoalTakeDamage(class AActor* DamagedActor, float Damage, class AController* InstigatedBy, class AActor* DamageCauser, const struct FVector& HitLocation, class UPrimitiveComponent* FHitComponent, class FName BoneName, const struct FVector& Momentum);
	void OnGameDifficultyChanged();
	void OnFadeStarted();
	void OnEncounterPawnDamaged(class AActor* DamagedActor, float Damage, class AController* InstigatedBy, class AActor* DamageCauser, const struct FVector& HitLocation, class UPrimitiveComponent* FHitComponent, class FName BoneName, const struct FVector& Momentum);
	bool GroupHasAIRemainingToSpawn(struct FFortAISpawnerData& FortAISpawnerData);
	int32 GetPawnNumberLimit();
	float GetEncounterTimeSeconds();
	void GetEncounterRifts(TArray<class ABuildingRift*>* OutRifts);
	void GetEncounterGameplayTags(struct FGameplayTagContainer* OutEncounterTags);
	class AFortAIDirectorDataManager* GetEncounterDataManager();
	void GetEncounterAssignmentGoalActors(TArray<class AActor*>* OutGoalActors);
	bool GetCurrentSpawnAreaDirections(TArray<enum class EFortEncounterDirection>* OutDirections);
	bool EncounterHasReservedSpawnRequestForEnemySpawner(class AActor* EnemySpawner);
	class UFortAIAssignment* CreateEncounterAssignment(class UFortAIAssignmentSettings* AssignmentSettings, class AActor* GoalActor);
};

// 0x0 (0x28 - 0x28)
// Class FortniteGame.FortAIEncounterInfoOwnerInterface
class UFortAIEncounterInfoOwnerInterface : public UInterface
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAIEncounterInfoOwnerInterface");
		return Clss;
	}

	class UFortAIEncounterInfo* GetEncounterInfo();
};

// 0x1F0 (0x218 - 0x28)
// Class FortniteGame.FortAIEncounterRiftManager
class UFortAIEncounterRiftManager : public UObject
{
public:
	uint8                                        Pad_1652[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UFortAIEncounterInfo*                  MyEncounter;                                       // 0x38(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AFortAIDirector*                       AIDirector;                                        // 0x40(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFortAIEncounterSpawnArea             CurrentSpawnArea;                                  // 0x48(0x48)(NativeAccessSpecifierPublic)
	struct FFortAIEncounterSpawnArea             FutureSpawnArea;                                   // 0x90(0x48)(NativeAccessSpecifierPublic)
	float                                        UpdateIntervalTimeSeconds;                         // 0xD8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        NumRiftsToUse;                                     // 0xDC(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MinRiftsToUse;                                     // 0xE0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1653[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FFortEncounterSettings                EncounterSettings;                                 // 0xE8(0x68)(NativeAccessSpecifierPublic)
	float                                        ExtraSpawnLocationPercentage;                      // 0x150(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1654[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FEncounterEnvironmentQueryInfo        CurrentEnvironmentQueryInfo;                       // 0x158(0x28)(NativeAccessSpecifierPublic)
	struct FEncounterEnvironmentQueryInfo        FallbackEnvironmentQueryInfo;                      // 0x180(0x28)(NativeAccessSpecifierPublic)
	struct FFortAIEncounterQueryDirectionTracker EncounterQueryDirectionTracker;                    // 0x1A8(0x48)(NativeAccessSpecifierPublic)
	TSubclassOf<class ABuildingRift>             RiftClassTemplate;                                 // 0x1F0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LastObjectiveBatchPathCostUpdateTime;              // 0x1F8(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LastPlayerBatchPathCostUpdateTime;                 // 0x1FC(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1655[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAIEncounterRiftManager");
		return Clss;
	}

	class AFortMission* GetAssociatedMission();
};

// 0x120 (0x148 - 0x28)
// Class FortniteGame.FortAIEncounterSequence
class UFortAIEncounterSequence : public UObject
{
public:
	struct FFortGeneratedEncounterSequence       GeneratedEncounterSequence;                        // 0x28(0x30)(Protected, NativeAccessSpecifierProtected)
	int32                                        CurrentEncounterIndexInSequence;                   // 0x58(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_165A[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UFortAIEncounterInfo*                  CurrentEncounter;                                  // 0x60(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AFortAIDirector*                       AssociatedAIDirector;                              // 0x68(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AFortMission*                          AssociatedMission;                                 // 0x70(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class AActor*>                        TargetActors;                                      // 0x78(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	class UFortAIAssignmentSettings*             AssignmentSettings;                                // 0x88(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FEncounterEnvironmentQueryInfo        OverrideEnvironmentQueryInfo;                      // 0x90(0x28)(Protected, NativeAccessSpecifierProtected)
	class AActor*                                OptionalQueryActor;                                // 0xB8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTagContainer                 InjectedTags;                                      // 0xC0(0x20)(Protected, NativeAccessSpecifierProtected)
	struct FFortEncounterSettings                EncounterSettings;                                 // 0xE0(0x68)(Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAIEncounterSequence");
		return Clss;
	}

	void StopCurrentEncounter();
	class UFortAIEncounterInfo* StartCurrentEncounterWithSavedData(enum class EFortEncounterSequenceResult* OutRequestResult, int32 ActivationDelay);
	class UFortAIEncounterInfo* StartCurrentEncounter(enum class EFortEncounterSequenceResult* OutRequestResult, TArray<class AActor*>& InTargetActors, class UFortAIAssignmentSettings* InAssignmentSettings, const struct FEncounterEnvironmentQueryInfo& InOverrideEnvironmentQueryInfo, class AActor* InOptionalQueryActor, const struct FGameplayTagContainer& InInjectedTags, const struct FFortEncounterSettings& InEncounterSettings, int32 ActivationDelay);
	void SetEncounterStartingData(TArray<class AActor*>& InTargetActors, class UFortAIAssignmentSettings* InAssignmentSettings, const struct FEncounterEnvironmentQueryInfo& InOverrideEnvironmentQueryInfo, class AActor* InOptionalQueryActor, const struct FGameplayTagContainer& InInjectedTags, const struct FFortEncounterSettings& InEncounterSettings);
	enum class EFortEncounterSequenceResult Previous();
	enum class EFortEncounterSequenceResult Next();
	enum class EFortEncounterSequenceResult Last();
	bool IsOnFinalIndexInSequence();
	bool HasEncounter();
	int32 GetNumEncountersInSequence();
	int32 GetEncounterIndexInSequence();
	class UFortAIEncounterInfo* GetCurrentEncounter();
	bool EncounterBelongsToSequence(class UFortAIEncounterInfo* InEncounter);
};

// 0x0 (0x28 - 0x28)
// Class FortniteGame.FortAIEncounterTargetInterface
class UFortAIEncounterTargetInterface : public UInterface
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAIEncounterTargetInterface");
		return Clss;
	}

	bool IsFloatingTarget();
	float GetObjectiveCompletionPercentage();
};

// 0x0 (0x28 - 0x28)
// Class FortniteGame.FortAIFunctionLibrary
class UFortAIFunctionLibrary : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAIFunctionLibrary");
		return Clss;
	}

	void MakeNoiseEventAtLocation(class AActor* NoiseMaker, float MaxRange, struct FVector& NoiseLocation);
	void MakeNoiseEvent(class AActor* NoiseMaker, float MaxRange);
};

// 0x118 (0x448 - 0x330)
// Class FortniteGame.FortAIGoalManager
class AFortAIGoalManager : public AActor
{
public:
	uint8                                        Pad_1660[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UFortAIAssignment*>             WorldAssignments;                                  // 0x338(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<class UFortAIAssignment*>             WorldEnemyAssignments;                             // 0x348(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	class UFortAIAssignment*                     DefaultAttackPlayersAssignment;                    // 0x358(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1661[0x60];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UEnvQuery*>                     CombinedQueries;                                   // 0x3C0(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1662[0x50];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UFortAIAssignmentSettings*             DefaultEncounterAssignmentSettings;                // 0x420(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UFortAIAssignmentSettings*             DefaultEnemyAssignmentSettings;                    // 0x428(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FPawnGoalSelectionTableEntry>  PawnGoalSelectionTable;                            // 0x430(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1663[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAIGoalManager");
		return Clss;
	}

	void SetCurrentGoalDiscouragement(class UObject* WorldContext, class AFortAIController* AI);
	void RemoveWorldAssignment(class UObject* WorldContextObject, const struct FFortAIAssignmentIdentifier& AssignmentIdentifier);
	void RemoveGoalsFromWorldAssignment(class UObject* WorldContextObject, struct FFortAIAssignmentIdentifier& AssignmentIdentifier, TArray<struct FFortAIGoalInfo>& GoalInfos);
	void RemoveGoalFromWorldAssignment(class UObject* WorldContextObject, struct FFortAIAssignmentIdentifier& AssignmentIdentifier, struct FFortAIGoalInfo& GoalInfo);
	void MakeGoalsFromLocationsAndActor(TArray<struct FFortAIGoalInfo>* Goals, class UObject* WorldContextObject, TArray<struct FVector>& GoalLocations, class AActor* GoalActor);
	void MakeGoalsFromLocations(TArray<struct FFortAIGoalInfo>* Goals, class UObject* WorldContextObject, TArray<struct FVector>& GoalLocations);
	void MakeGoalsFromActors(TArray<struct FFortAIGoalInfo>* Goals, class UObject* WorldContextObject, TArray<class AActor*>& GoalActors, bool bActorsAlwaysPerceived, bool bGoalActorsAllowUndermining);
	void MakeGoalFromLocation(struct FFortAIGoalInfo* Goal, class UObject* WorldContextObject, struct FVector& GoalLocation);
	void MakeGoalFromActor(struct FFortAIGoalInfo* Goal, class UObject* WorldContextObject, class AActor* GoalActor, bool bActorAlwaysPerceived, bool bGoalActorAllowsUndermining);
	void CreateWorldAssignment(class UObject* WorldContextObject, const struct FFortAIAssignmentIdentifier& WorldAssignmentIdentifier, class UFortAIAssignmentSettings* AssignmentSettings, TSubclassOf<class UFortAIGoalProvider> GoalProvider, struct FFortAIAssignmentIdentifier* AssignmentIdentifier, enum class EAssignmentCreationResult* CreationResult);
	class UFortAIAssignment* AddWorldAssignment(class UFortAIAssignmentSettings* AssignmentSettings, class AActor* GoalActor);
	void AddGoalToWorldAssignment(class UObject* WorldContextObject, struct FFortAIAssignmentIdentifier& AssignmentIdentifier, struct FFortAIGoalInfo& GoalInfo);
	void AddGoalsToWorldAssignment(class UObject* WorldContextObject, struct FFortAIAssignmentIdentifier& AssignmentIdentifier, TArray<struct FFortAIGoalInfo>& GoalInfos);
	void AddGoalActorToAssignment(class UFortAIAssignment* Assignment, class AActor* GoalActor);
	void AddGoal(class AActor* GoalActor, class UFortAIAssignmentSettings* GoalSettings);
};

// 0x20 (0x48 - 0x28)
// Class FortniteGame.FortAIGoalProvider
class UFortAIGoalProvider : public UObject
{
public:
	uint8                                        Pad_1665[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UWorld*                                World;                                             // 0x30(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UFortAIAssignment*                     AssignmentOwner;                                   // 0x38(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UFortAIEncounterInfo*                  EncounterInfo;                                     // 0x40(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAIGoalProvider");
		return Clss;
	}

	void UpdateGoals();
	bool InitializeGoalProvider(class UWorld* ContextWorld, class UFortAIAssignment* Assignment);
	class UFortAIEncounterInfo* GetEncounterInfo();
};

// 0x90 (0xD8 - 0x48)
// Class FortniteGame.FortAIGoalProvider_EnvQuery
class UFortAIGoalProvider_EnvQuery : public UFortAIGoalProvider
{
public:
	uint8                                        Pad_1666[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UEnvQuery*                             GoalQuery;                                         // 0x50(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        AutomaticUpdatePeriodInSeconds;                    // 0x58(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1667[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FFortAIAssignmentIdentifier           SpecificAssignmentContext;                         // 0x60(0x30)(Edit, Protected, NativeAccessSpecifierProtected)
	TSoftClassPtr<class AFortAIPawn>             AIPawnContext;                                     // 0x90(0x28)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1668[0x20];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAIGoalProvider_EnvQuery");
		return Clss;
	}

};

// 0x10 (0x40 - 0x30)
// Class FortniteGame.FortAIEncounterGoalSelectionTable
class UFortAIEncounterGoalSelectionTable : public UDataAsset
{
public:
	TArray<struct FEncounterGoalSelectionTableEntry> EncounterGoalSelectionCriteria;                    // 0x30(0x10)(Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAIEncounterGoalSelectionTable");
		return Clss;
	}

};

// 0x28 (0x4E0 - 0x4B8)
// Class FortniteGame.FortAIHotSpot
class AFortAIHotSpot : public AAIHotSpot
{
public:
	uint8                                        Pad_1669[0x28];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAIHotSpot");
		return Clss;
	}

};

// 0x90 (0x570 - 0x4E0)
// Class FortniteGame.FortAIHotSpot_Building
class AFortAIHotSpot_Building : public AFortAIHotSpot
{
public:
	class UAIHotSpotConfig*                      ExtraTypeConfig;                                   // 0x4E0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_166A[0x88];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAIHotSpot_Building");
		return Clss;
	}

};

// 0x0 (0x4E0 - 0x4E0)
// Class FortniteGame.FortAIHotSpot_FakeBuilding
class AFortAIHotSpot_FakeBuilding : public AFortAIHotSpot
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAIHotSpot_FakeBuilding");
		return Clss;
	}

};

// 0x0 (0x4E0 - 0x4E0)
// Class FortniteGame.FortAIHotSpot_Shooting
class AFortAIHotSpot_Shooting : public AFortAIHotSpot
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAIHotSpot_Shooting");
		return Clss;
	}

};

// 0x148 (0x1C8 - 0x80)
// Class FortniteGame.FortAIHotSpotManager
class UFortAIHotSpotManager : public UAIHotSpotManagerProxy
{
public:
	TSoftObjectPtr<class UBuildingActorHotSpotConfig> FallbackHotspotConfig;                             // 0x80(0x28)(Transient, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_166B[0xF0];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FAutoAcquireSlot>              AutoAcquireSlots;                                  // 0x198(0x10)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_166C[0x20];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAIHotSpotManager");
		return Clss;
	}

};

// 0x10 (0xD0 - 0xC0)
// Class FortniteGame.FortAIHotSpotSlot
class UFortAIHotSpotSlot : public UAIHotSpotSlot
{
public:
	enum class EFortHotSpotSlot                  SlotType;                                          // 0xC0(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_166D[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	uint8                                        bHasProjectedLocation : 1;                         // Mask : 0x1 0xC4(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bProjectedOnLowArea : 1;                           // Mask : 0x2 0xC4(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsAutoGenerated : 1;                              // Mask : 0x4 0xC4(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bCanDuplicateOnProjection : 1;                     // Mask : 0x8 0xC4(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bCanProjectUp : 1;                                 // Mask : 0x10 0xC4(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_166E[0xB];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAIHotSpotSlot");
		return Clss;
	}

};

// 0x18 (0x40 - 0x28)
// Class FortniteGame.FortAIHotSpotSlotGenerator_FromConfig
class UFortAIHotSpotSlotGenerator_FromConfig : public UAIHotSpotSlotGenerator
{
public:
	class UAIHotSpotConfig*                      BuildingConfig;                                    // 0x28(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               Offset;                                            // 0x30(0xC)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bMirrorX : 1;                                      // Mask : 0x1 0x3C(0x1)(Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bMirrorY : 1;                                      // Mask : 0x2 0x3C(0x1)(Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_166F[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAIHotSpotSlotGenerator_FromConfig");
		return Clss;
	}

};

// 0x8 (0x78 - 0x70)
// Class FortniteGame.FortAIHotSpotSlotGenerator_OnBoundingBox
class UFortAIHotSpotSlotGenerator_OnBoundingBox : public UAIHotSpotSlotGenerator_OnBoundingBox
{
public:
	float                                        DistanceForRangedSlots;                            // 0x70(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DistanceForHugeSlots;                              // 0x74(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAIHotSpotSlotGenerator_OnBoundingBox");
		return Clss;
	}

};

// 0x18 (0x40 - 0x28)
// Class FortniteGame.FortAIHotSpotSlotGenerator_RampTrace
class UFortAIHotSpotSlotGenerator_RampTrace : public UAIHotSpotSlotGenerator
{
public:
	uint8                                        Pad_1670[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAIHotSpotSlotGenerator_RampTrace");
		return Clss;
	}

};

// 0x40 (0x370 - 0x330)
// Class FortniteGame.FortAIProxyActor
class AFortAIProxyActor : public AActor
{
public:
	uint8                                        Pad_1671[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	enum class EPhysicalSurface                  PrimaryPhysicalSurface;                            // 0x340(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1672[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UFortHealthSet*                        HealthSet;                                         // 0x348(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UFortDamageSet*                        DamageSet;                                         // 0x350(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UFortMovementSet*                      MovementSet;                                       // 0x358(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UFortAbilitySystemComponent*           AbilitySystemComponent;                            // 0x360(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	enum class EFortBaseWeaponDamage             BaseWeaponDamageResponseType;                      // 0x368(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1673[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAIProxyActor");
		return Clss;
	}

};

// 0x0 (0x370 - 0x370)
// Class FortniteGame.FortAIMobileProxyActor
class AFortAIMobileProxyActor : public AFortAIProxyActor
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAIMobileProxyActor");
		return Clss;
	}

};

// 0x0 (0x28 - 0x28)
// Class FortniteGame.FortAIObjectiveInterface
class UFortAIObjectiveInterface : public UInterface
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAIObjectiveInterface");
		return Clss;
	}

};

// 0x9B0 (0x1100 - 0x750)
// Class FortniteGame.FortPawn
class AFortPawn : public ACharacter
{
public:
	uint8                                        Pad_1694[0x78];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FDataTableRowHandle                   PawnStatHandle;                                    // 0x7C8(0x10)(Edit, BlueprintVisible, NoDestructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_1695[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        SlidingFriction;                                   // 0x7DC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SlidingBrakingDeceleration;                        // 0x7E0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EFortMovementStyle                CurrentMovementStyle;                              // 0x7E4(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1696[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UFortStormShieldComponent*             StormShieldComponent;                              // 0x7E8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	UMulticastDelegateProperty_                  OnStormShieldComponentCreated;                     // 0x7F0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	enum class EFortPawnPushSize                 PushSize;                                          // 0x800(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bAllowBuildingActorTeleport;                       // 0x801(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1697[0xA];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bUseBaseChanged;                                   // 0x80C(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        TeleportCounter;                                   // 0x80D(0x1)(Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1698[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        PawnUniqueID;                                      // 0x810(0x4)(Edit, BlueprintVisible, Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1699[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AFortWeapon*                           CurrentWeapon;                                     // 0x818(0x8)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class AFortWeapon*>                   CurrentWeaponList;                                 // 0x820(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	class FString                                PreviousAbilityWeaponNameForTelemetry;             // 0x830(0x10)(ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIgnoreNextFallingDamage;                          // 0x840(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_169A[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  WeaponHandSocketName;                              // 0x844(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  LeftHandWeaponHandSocketName;                      // 0x84C(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_169B[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AActor*                                SpawnSpot;                                         // 0x858(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                 DeathTags;                                         // 0x860(0x20)(Transient, NativeAccessSpecifierPublic)
	float                                        SpawnImmunityTime;                                 // 0x880(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsDying;                                          // 0x884(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, EditConst, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bPlayedDying;                                      // 0x885(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsHiddenForDeath;                                 // 0x886(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, EditConst, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_169C[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class AFortPickup*>                   IncomingPickups;                                   // 0x888(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	TArray<struct FFortPickupEntryData>          PickupDirectionData;                               // 0x898(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	bool                                         bIsKnockedback;                                    // 0x8A8(0x1)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsStunned;                                        // 0x8A9(0x1)(BlueprintVisible, Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsStaggered;                                      // 0x8AA(0x1)(BlueprintVisible, Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortControlRecoveryBehavior      ControlRecoveryBehavior;                           // 0x8AB(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        AdditiveCringeCount;                               // 0x8AC(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AdditiveCringeDuration;                            // 0x8B0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bSupportsDamageNumbersAtHitLocation;               // 0x8B4(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_169D[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector_NetQuantize                   PushMomentum;                                      // 0x8B8(0xC)(BlueprintVisible, BlueprintReadOnly, Net, Transient, RepNotify, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_169E[0x5C];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGameplayCueTag                       DeathCueTag;                                       // 0x920(0x8)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	class USkeletalMeshSocket*                   DeathHitSocket;                                    // 0x928(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsDBNO;                                           // 0x930(0x1)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bWasDBNOOnDeath;                                   // 0x931(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_169F[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        TeamBeaconMaxDist;                                 // 0x934(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FColor                                TeamBeaconTextColor;                               // 0x938(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LastTakeHitTimeTimeout;                            // 0x93C(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LastDamagedTime;                                   // 0x940(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bSkipAnalogJump;                                   // 0x944(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_16A0[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AFortWeapon*                           CurrentlyAttachedWeapon;                           // 0x948(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UPrimitiveComponent*                   CachedNavFloor;                                    // 0x950(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        MaxFootstepDistance;                               // 0x958(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_16A1[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class USoundBase*                            DefaultFootstepSound;                              // 0x960(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundBase*                            DefaultFastFootstepSound;                          // 0x968(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundBase*                            DefaultLandingSound;                               // 0x970(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundBase*                            DefaultHardLandingSound;                           // 0x978(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundBase*                            DefaultJumpSound;                                  // 0x980(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWeaponHitNotifyAudioBank*             DefaultHitNotifyAudioBank;                         // 0x988(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bCanCapsuleBeUsedForTargeting : 1;                 // Mask : 0x1 0x990(0x1)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bUseLineTestForDamageZoneBoneDetection : 1;        // Mask : 0x2 0x990(0x1)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_16A2[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        LineTestForDamageZoneBoneDetectionRadius;          // 0x994(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FPawnDamageZones                      DamageZones;                                       // 0x998(0x18)(Edit, NativeAccessSpecifierPublic)
	uint8                                        Pad_16A3[0x48];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	uint8                                        DamageZoneActiveBitMask;                           // 0x9F8(0x1)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_16A4[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        TargettingZOffset;                                 // 0x9FC(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_16A5[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	uint8                                        JumpFlashCountPacked;                              // 0xA01(0x1)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        LandingFlashCountPacked;                           // 0xA02(0x1)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_16A6[0x5];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UAudioComponent*                       EmoteAudioComp;                                    // 0xA08(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<int32, class UMeshComponent*>           EmoteMeshComps;                                    // 0xA10(0x50)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	TMap<int32, class AActor*>                   EmotePropActors;                                   // 0xA60(0x50)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	int32                                        EmoteCount;                                        // 0xAB0(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LastEmoteTime;                                     // 0xAB4(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LastEmoteEndTime;                                  // 0xAB8(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_16A7[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UFortItemDefinition*                   LastEmoteItemDef;                                  // 0xAC0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        EmoteToFireCooldownTime;                           // 0xAC8(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bMovingEmote;                                      // 0xACC(0x1)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bMovingEmoteForwardOnly;                           // 0xACD(0x1)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_16A8[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        EmoteWalkSpeed;                                    // 0xAD0(0x4)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_16A9[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	UMulticastDelegateProperty_                  OnPawnLanded;                                      // 0xAD8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnHitPawn;                                         // 0xAE8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnDied;                                            // 0xAF8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnDeathEffects;                                    // 0xB08(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_16AA[0x30];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	UMulticastDelegateProperty_                  OnDamaged;                                         // 0xB48(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UFortFootstepAudioBank*                FootstepBank;                                      // 0xB58(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETraceTypeQuery                   FootstepTraceTypeQuery;                            // 0xB60(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortFootstepSurfaceType          FootstepSurfaceType;                               // 0xB61(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_16AB[0x16];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	UMulticastDelegateProperty_                  OnWeaponEquippedDelegate;                          // 0xB78(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnWeaponUnEquippedDelegate;                        // 0xB88(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnWeaponAttachmentChangedDelegate;                 // 0xB98(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TSubclassOf<class UGameplayEffect>           HealthRegenDelayGameplayEffect;                    // 0xBA8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UGameplayEffect>           HealthRegenGameplayEffect;                         // 0xBB0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UGameplayEffect>           ShieldRegenDelayGameplayEffect;                    // 0xBB8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UGameplayEffect>           ShieldRegenGameplayEffect;                         // 0xBC0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_16AC[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bIsInvulnerable;                                   // 0xBC9(0x1)(BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_16AD[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	UMulticastDelegateProperty_                  OnHolsteredEvent;                                  // 0xBD0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnUnholsteredEvent;                                // 0xBE0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_16AE[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        WeaponHolsterCounter;                              // 0xC08(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_16AF[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class FName>                          WeaponHolsterIds;                                  // 0xC10(0x10)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	bool                                         bWeaponHolstered;                                  // 0xC20(0x1)(Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_16B0[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        StaySpottedTime;                                   // 0xC24(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  SpottedEvent;                                      // 0xC28(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bSpotted : 1;                                      // Mask : 0x1 0xC30(0x1)(Net, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bRegisterWithAISight : 1;                          // Mask : 0x2 0xC30(0x1)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_16B1[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UFortFeedbackBank*                     DefaultFeedback;                                   // 0xC38(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class AFortEmitterCameraLensEffectDirectional> DefaultSoundTrackingVisual;                        // 0xC40(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                 SoundTrackingVisibilityTags;                       // 0xC48(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<struct FFortPawnVocalChord>           VocalChords;                                       // 0xC68(0x10)(Net, ZeroConstructor, Transient, RepNotify, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_16B2[0x50];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UFortHealthSet*                        HealthSet;                                         // 0xCC8(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFortControlResistanceSet*             ControlResistanceSet;                              // 0xCD0(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFortDamageSet*                        DamageSet;                                         // 0xCD8(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFortMovementSet*                      MovementSet;                                       // 0xCE0(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFortAdvancedMovementSet*              AdvancedMovementSet;                               // 0xCE8(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bHealthSynced;                                     // 0xCF0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_16B3[0xF];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	UMulticastDelegateProperty_                  OnAbilityDecisionWindowStackUpdated;               // 0xD00(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UFortAbilitySystemComponent*           AbilitySystemComponent;                            // 0xD10(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FFortActiveMontageDecisionWindow> DecisionWindowStack;                               // 0xD18(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	bool                                         bPrimaryInputHeld;                                 // 0xD28(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bSecondaryInputHeld;                               // 0xD29(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bPrimaryInputQueued;                               // 0xD2A(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_16B4[0x5];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGameplayTagContainer                 GameplayTags;                                      // 0xD30(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	class FText                                  DisplayName;                                       // 0xD50(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, Net, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TArray<struct FDamagerInfo>                  Damagers;                                          // 0xD68(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	TArray<struct FDamageDoneInfo>               DamageDone;                                        // 0xD78(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	float                                        DamageDoneLastAtTime;                              // 0xD88(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TotalPlayerDamageDealt;                            // 0xD8C(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFortHealthBarIndicator*               HealthBarIndicator;                                // 0xD90(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          CurrentCalloutTag;                                 // 0xD98(0x8)(Net, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FCalloutEntry>                 CalloutEntries;                                    // 0xDA0(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	float                                        HealthBarWidth;                                    // 0xDB0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        HealthBarHeightMultiplier;                         // 0xDB4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_16B5[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FSlateBrush                           SpottedBrush;                                      // 0xDC0(0x88)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FVector                               SpottedIconOffset;                                 // 0xE48(0xC)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        ClientNonRenderedAnimUpdateRate;                   // 0xE54(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        MaxEvalRateForInterpolation;                       // 0xE58(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_16B6[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<float>                                AnimUpdateRateVisibleMaxDistanceFactor;            // 0xE60(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TMap<int32, int32>                           LODToFrameSkipMap;                                 // 0xE70(0x50)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	enum class EUpdateRateShiftBucket            UroShiftBucket;                                    // 0xEC0(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_16B7[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	uint8                                        bUpdateMeshComponentUpdateFlagOnServer : 1;        // Mask : 0x1 0xEC4(0x1)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_16B8[0x1B];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bPostProcessNavLocation;                           // 0xEE0(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_16B9[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FFortConversationSentence             CurrentSentence;                                   // 0xEE8(0xC8)(Net, RepNotify, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_16BA[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	UMulticastDelegateProperty_                  OnPawnHealthChanged;                               // 0xFC8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FAthenaBatchedDamageGameplayCues_Shared AccumulatedBatchData_Shared;                       // 0xFD8(0x44)(NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_16BB[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FAthenaBatchedDamageGameplayCues_NonShared AccumulatedBatchData_NonShared;                    // 0x1020(0x10)(NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_16BC[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bWeaponActivated;                                  // 0x1038(0x1)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_16BD[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGameplayCueParameters                BatchedGameplayCueParameters;                      // 0x1040(0xB8)(ContainsInstancedReference, NativeAccessSpecifierPublic)
	uint8                                        Pad_16BE[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortPawn");
		return Clss;
	}

	bool WasDBNOOnDeath();
	void TriggerFeedbackEvent(class FName EventName, class AFortPawn* InstigatorPawn, class AFortPawn* Recipient, float OverriddenDelay);
	void StopPushMomentum();
	void StopBatchedLoopingWeaponActivation();
	void StartPushMomentum(const struct FVector& NewPushMomentum, float Duration);
	class AFortSoundCameraLensEffect* SpawnSoundLensEffectDirectional(class AFortPawn* TrackedPawn, const struct FVector& HitInfo, float MaxAudibleDistance, enum class EFortSoundIndicatorTypes IndicatorType, class AActor* InstigatingActor, const struct FLinearColor& Tint, class UTexture* OverrideIcon);
	class AFortEmitterCameraLensEffectDirectional* SpawnCameraLensEffectDirectional(TSubclassOf<class AFortEmitterCameraLensEffectDirectional> LensEffectEmitterClass, class AFortPawn* DamageDealer, struct FHitResult& HitInfo, bool bDeferSpawn);
	class AEmitterCameraLensEffectBase* SpawnCameraLensEffect(TSubclassOf<class AEmitterCameraLensEffectBase> LensEffectEmitterClass);
	void SetSpawnSpot(class AActor* InSpawnSpot);
	void SetShield(float NewShieldValue);
	void SetPawnVisibility(bool bNewHidden, bool bPropagateToWeapon);
	void SetPawnAndControlRotation(const struct FRotator& NewRotation);
	void SetMovementSpeedMultiplier(float NewMovementSpeedVal);
	void SetMaxShield(float NewValue);
	void SetMaxHealth(float NewHealthVal);
	void SetIsKnockedBack(bool bKnockback);
	void SetHolsterWeapon(bool bHolster, bool bPlayEquipAnim, class FName HolsterId);
	void SetHealth(float NewHealthVal);
	void SetGravityMultiplier(float NewGravityVal);
	void SetGravityJumpMultipliers(float NewGravityVal, float NewVehicleGravityVal, float NewJumpZ, float NewJumpHorizontalAcceleration, float NewJumpHorizontalVelocity);
	void SetFNameBasedOnHitDirection(struct FVector& HitDirection, class FName* NameResult, class FName NameFront, class FName NameBack, class FName NameLeft, class FName NameRight);
	void SetControlRecoveryBehavior(enum class EFortControlRecoveryBehavior NewBehavior);
	void SetCallout(struct FGameplayTag& CalloutTagToSet, float Duration);
	void SetAimAssistTargetOverride(class USceneComponent* InOverride);
	void ServerTeleportNearLocation(const struct FVector& ActorLocation);
	void ServerInternalEquipWeapon(class AFortWeapon* Weap);
	void SafeHolsterWeapon(bool bHolster, bool bPlayEquipAnim, class FName HolsterId);
	void ResetFallingHeight();
	void RemoveNonReplicatedTagToPawn(struct FGameplayTag& Tag);
	void RemoveCallout(struct FGameplayTag& CalloutTagToRemove);
	void PrototypeCharacterMovement(enum class EMovementMode MovementMode, const struct FVector& LaunchVelocity);
	void PlaySound(class USoundBase* Sound, float VolumeMultiplier, float PitchMultiplier);
	float PlayLocalAnimMontage(class UAnimMontage* NewAnimMontage, float InPlayRate, class FName StartSectionName);
	void PlayFootStepSound(int32 FootDown);
	bool PickUpActor(class AActor* PickupTarget, class UFortDecoItemDefinition* PlacementDecoItemDefinition);
	void PawnUniqueIDSet();
	void PawnStopFire(uint8 FireModeNum);
	void PawnStartFire(uint8 FireModeNum);
	void OnWeaponEquipped(class AFortWeapon* NewWeapon, class AFortWeapon* PrevWeapon);
	void OnTeleported();
	void OnStunned();
	void OnRep_WeaponActivated();
	void OnRep_VocalChords();
	void OnRep_TeleportCounter();
	void OnRep_StormShieldComponent();
	void OnRep_Sentence();
	void OnRep_PushMomentum();
	void OnRep_PawnUniqueID();
	void OnRep_LandingFlashCount();
	void OnRep_JumpFlashCount();
	void OnRep_IsKnockedBack();
	void OnRep_IsDBNO();
	void OnRep_DamageZoneActiveBitMask();
	void OnRep_CurrentWeapon();
	void OnRep_bWeaponHolstered();
	void OnOutOfControlResistanceServer(float ImpactDamageDone, struct FGameplayTagContainer& SourceTags, struct FGameplayEffectContextHandle& EffectContext, class AController* EffectInstigator, class AActor* EffectCauser);
	void OnMontageStarted(class UAnimMontage* Montage);
	void OnMontageEnded(class UAnimMontage* Montage, bool bInterrupted);
	void OnMontageBlendingOut(class UAnimMontage* Montage, bool bInterrupted);
	void OnDisplaySentence(class FText& SpeechText);
	void OnDeathServer(float Damage, struct FGameplayTagContainer& DamageTags, const struct FVector& Momentum, struct FHitResult& HitInfo, class AController* InstigatedBy, class AActor* DamageCauser, const struct FGameplayEffectContextHandle& EffectContext);
	void OnDeathPlayEffects(float Damage, struct FGameplayTagContainer& DamageTags, const struct FVector& Momentum, struct FHitResult& HitInfo, class AFortPawn* InstigatedBy, class AActor* DamageCauser, const struct FGameplayEffectContextHandle& EffectContext);
	void OnDamageZoneStatusChanged(enum class EFortDamageZone Zone, bool bStatus);
	void OnDamageServer(float Damage, struct FGameplayTagContainer& DamageTags, const struct FVector& Momentum, struct FHitResult& HitInfo, class AController* InstigatedBy, class AActor* DamageCauser, const struct FGameplayEffectContextHandle& EffectContext);
	void OnDamagePlayEffects(float Damage, struct FGameplayTagContainer& DamageTags, const struct FVector& Momentum, struct FHitResult& HitInfo, class AFortPawn* InstigatedBy, class AActor* DamageCauser, const struct FGameplayEffectContextHandle& EffectContext);
	void OnClearSentence();
	void OnBumpPushedPawn(class AFortPawn* InstigatedBy, float PushTimeLeft);
	void OnBuildingHitPlayEffects(float Damage, struct FGameplayTagContainer& DamageTags, const struct FVector& Momentum, struct FHitResult& HitInfo, const struct FGameplayEffectContextHandle& EffectContext, bool bPlayerPlaced);
	void OnBaseChanged(class AActor* NewBase);
	void OnAllMontageInstancesEnded();
	void NetMulticast_InvokeGameplayCuesExecuted_WithParams(const struct FGameplayTagContainer& GameplayCueTags, const struct FPredictionKey& PredictionKey, const struct FGameplayCueParameters& GameplayCueParameters);
	void NetMulticast_InvokeGameplayCuesExecuted(const struct FGameplayTagContainer& GameplayCueTags, const struct FPredictionKey& PredictionKey, const struct FGameplayEffectContextHandle& EffectContext);
	void NetMulticast_InvokeGameplayCuesAddedAndWhileActive_WithParams(const struct FGameplayTagContainer& GameplayCueTags, const struct FPredictionKey& PredictionKey, const struct FGameplayCueParameters& GameplayCueParameters);
	void NetMulticast_InvokeGameplayCueExecuted_WithParams(const struct FGameplayTag& GameplayCueTag, const struct FPredictionKey& PredictionKey, const struct FGameplayCueParameters& GameplayCueParameters);
	void NetMulticast_InvokeGameplayCueExecuted_FromSpec(const struct FGameplayEffectSpecForRPC& Spec, const struct FPredictionKey& PredictionKey);
	void NetMulticast_InvokeGameplayCueExecuted(const struct FGameplayTag& GameplayCueTag, const struct FPredictionKey& PredictionKey, const struct FGameplayEffectContextHandle& EffectContext);
	void NetMulticast_InvokeGameplayCueAddedAndWhileActive_WithParams(const struct FGameplayTag& GameplayCueTag, const struct FPredictionKey& PredictionKey, const struct FGameplayCueParameters& GameplayCueParameters);
	void NetMulticast_InvokeGameplayCueAddedAndWhileActive_FromSpec(struct FGameplayEffectSpecForRPC& Spec, const struct FPredictionKey& PredictionKey);
	void NetMulticast_InvokeGameplayCueAdded_WithParams(const struct FGameplayTag& GameplayCueTag, const struct FPredictionKey& PredictionKey, const struct FGameplayCueParameters& Parameters);
	void NetMulticast_InvokeGameplayCueAdded(const struct FGameplayTag& GameplayCueTag, const struct FPredictionKey& PredictionKey, const struct FGameplayEffectContextHandle& EffectContext);
	void NetMulticast_Athena_BatchedDamageCues(const struct FAthenaBatchedDamageGameplayCues_Shared& SharedData, const struct FAthenaBatchedDamageGameplayCues_NonShared& NonSharedData);
	void MovingEmoteStopped();
	void LaunchCharacterJump(const struct FVector& LaunchVelocity, bool bXYOverride, bool bZOverride, bool bIgnoreFallDamage, bool bPlayFeedbackEvent);
	bool IsWeaponHolstered();
	bool IsStaggered();
	bool IsFrontalHit(struct FVector& HitDirection);
	bool IsDead();
	bool IsDBNO();
	bool IsAllowChainStun();
	bool IsActionInputIgnored();
	void InitializeDeathHitSocket(const struct FVector& WorldLocation, const struct FVector& WorldNormal);
	void HideBodyOnDeath();
	bool HasCurrentMontage();
	void HandleIsHiddenForDeath();
	void HandleIsDying();
	struct FTransform GetTargetingTransform(enum class EFortAbilityTargetingSource Source, class UFortGameplayAbility* SourceAbility);
	void GetSphericalHitDirection(struct FVector& HitDirection, float* Azimuth, float* Elevation);
	float GetShieldOrHealthPercent();
	float GetShield();
	class UMaterialInstanceDynamic* GetPawnMID(int32 ElementIndex);
	class AActor* GetMyMovementBaseActor();
	struct FVector GetMovementPredictionPosition(float PredictionDeltaTime);
	float GetMeleeReticleStrikeAngle(bool bPrimaryInput);
	int32 GetMeleeComboCounter();
	float GetMaxShield();
	float GetMaxHealth();
	float GetMaxControlResistance();
	class APlayerController* GetLocalViewingPlayerController();
	float GetKnockbackThreshold();
	float GetKnockbackMultiplier();
	class FName GetIgnoreFallDamageComponentTag();
	float GetHealthPercent();
	float GetHealth();
	class UFortAIEncounterInfo* GetEncounterInfo();
	struct FRotator GetDefaultTargetingRotation();
	struct FVector GetDefaultTargetingOrigin();
	enum class EFortDamageZone GetDamageZone(struct FHitResult& InHitResult);
	class FText GetCurrentSentenceSpeechText();
	float GetCurrentMontageSectionTimeLeft();
	float GetControlResistance();
	enum class EFortControlRecoveryBehavior GetControlRecoveryBehavior();
	class USkeletalMeshComponent* GetAssetSkeletalMeshComponentAttachment(class FName SocketName);
	void GameplayCue_InstantDeath(enum class EGameplayCueEvent EventType, const struct FGameplayCueParameters& Parameters);
	void GameplayCue_Damage(enum class EGameplayCueEvent EventType, const struct FGameplayCueParameters& Parameters);
	void GameplayCue(enum class EGameplayCueEvent EventType, const struct FGameplayCueParameters& Parameters);
	void ForceKill(const struct FGameplayTag& DeathReason, class AController* KillerController, class AActor* KillerActor);
	class AFortWeapon* EquipWeaponDefinition(class UFortWeaponItemDefinition* WeaponData, const struct FGuid& ItemEntryGuid);
	bool EquipBestWeapon();
	void EmoteStopped(class UFortItemDefinition* MontageItemDef);
	void EmoteStarted(class UFortItemDefinition* MontageItemDef);
	void DoFatalDamage(class UAbilitySystemComponent* KillerAbilitySystemComponent);
	void DetachAssetFromSocket(class FName SocketName);
	void ClientInternalEquipWeapon(class AFortWeapon* Weap);
	bool CanSpawnSoundVisuals();
	void AttachAssetToSocket(struct FAssetAttachment& InAttachment);
	void ApplyKnockback(float KnockbackMagnitude, float KnockbackZAngle, const struct FVector& ImpulseDir);
	void AnimMontage_LocalSetNextSectionName(class UAnimMontage* AnimMontage, class FName SectionName, class FName NextSectionName);
	bool AnimMontage_LocalJumpToSectionName(class FName SectionName);
	int32 AnimMontage_LocalJumpToRandomSection();
	void AlignRotationToHitDirection(struct FVector& HitDirection);
	void AddNonReplicatedTagToPawn(struct FGameplayTag& Tag);
};

// 0xE70 (0x1F70 - 0x1100)
// Class FortniteGame.FortAIPawn
class AFortAIPawn : public AFortPawn
{
public:
	uint8                                        Pad_16CA[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGameplayCueParameters                DeimosBatchedGameplayCueParameters;                // 0x1120(0xB8)(ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FFortAIAttributeReplicationProxy      AttributeReplicationProxy;                         // 0x11D8(0x4)(Net, RepNotify, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_16CB[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGameplayAbilityRepSharedAnim         RepSharedAnimInfo;                                 // 0x11E0(0x10)(Net, RepNotify, NoDestructor, NativeAccessSpecifierPublic)
	struct FMinimalGameplayCueReplicationProxy   SimulatedProxyGameplayCues;                        // 0x11F0(0x1C0)(Net, ContainsInstancedReference, NativeAccessSpecifierPublic)
	uint8                                        : 6;                                               // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        bHasGoalActor : 1;                                 // Mask : 0x40 0x13B0(0x1)(BlueprintVisible, Net, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bFrozen : 1;                                       // Mask : 0x80 0x13B0(0x1)(BlueprintVisible, Net, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_16CC[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	uint8                                        bUseSharedAnimation : 1;                           // Mask : 0x1 0x13B4(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bNeedsDeathNotification : 1;                       // Mask : 0x2 0x13B4(0x1)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bKilledOrDowned : 1;                               // Mask : 0x4 0x13B4(0x1)(Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bDespawnedDueToInactivity : 1;                     // Mask : 0x8 0x13B4(0x1)(Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bNotifySpawnRift : 1;                              // Mask : 0x10 0x13B4(0x1)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bUsesDBNO : 1;                                     // Mask : 0x20 0x13B4(0x1)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bHasInventory : 1;                                 // Mask : 0x40 0x13B4(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIgnoreDefender : 1;                               // Mask : 0x80 0x13B4(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bTrackNearbyPickups : 1;                           // Mask : 0x1 0x13B5(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsCharging : 1;                                   // Mask : 0x2 0x13B5(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, Transient, DisableEditOnInstance, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsCowering : 1;                                   // Mask : 0x4 0x13B5(0x1)(BlueprintVisible, Net, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bCanShowMinimapIndicator : 1;                      // Mask : 0x8 0x13B5(0x1)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bShowMinimapFarOffDirectionArrow : 1;              // Mask : 0x10 0x13B5(0x1)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bHasEngaged : 1;                                   // Mask : 0x20 0x13B5(0x1)(BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsAlwaysGameplayRelevant : 1;                     // Mask : 0x40 0x13B5(0x1)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsDebugSpawnedAI : 1;                             // Mask : 0x1 0x13B6(0x1)(Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bEncounterExpectedLifespanExpired : 1;             // Mask : 0x2 0x13B6(0x1)(Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bEnableBlockingCollisionWithOtherAI : 1;           // Mask : 0x4 0x13B6(0x1)(Net, Transient, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bSetMiniMapIconRotation : 1;                       // Mask : 0x8 0x13B6(0x1)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bHasDroppedLoot : 1;                               // Mask : 0x10 0x13B6(0x1)(Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bUseFastAbilityReplication : 1;                    // Mask : 0x20 0x13B6(0x1)(Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_16CD[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FMinimalReplicationTagCountMap        FastReplicationMinimalReplicationTags;             // 0x13B8(0x60)(Net, ContainsInstancedReference, NativeAccessSpecifierPublic)
	uint8                                        Pad_16CE[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FMinimalGameplayCueReplicationProxy   FastReplicationMinimalGameplayCueProxy;            // 0x1420(0x1C0)(Net, ContainsInstancedReference, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnInventoryUpdated;                                // 0x15E0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_16CF[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        AIDifficultyLevel;                                 // 0x1608(0x4)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortAILevelRatingDisplayType     LevelRatingDisplayType;                            // 0x160C(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_16D0[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UFortAIEncounterInfo*                  EncounterInfo;                                     // 0x1610(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        SpawnSetIndex;                                     // 0x1618(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGuid                                 SpawnGroupGuid;                                    // 0x161C(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        EnemyIndexInSpawnGroup;                            // 0x162C(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FinishEncounterSpawnFallbackTime;                  // 0x1630(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        EncounterSpawnDisableRangedAttackingTime;          // 0x1634(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        EncounterSpawnDisableMeleeAttackingTime;           // 0x1638(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_16D1[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTimerHandle                          EncounterExpectedLifespanTimerHandle;              // 0x1640(0x8)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                SpawnRift;                                         // 0x1648(0x8)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               SpawnRiftLocation;                                 // 0x1650(0xC)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_16D2[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AActor*                                SpawnSourceActor;                                  // 0x1660(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxTimeAllowedOutsideTether;                       // 0x1668(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_16D3[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UBehaviorTree*                         BehaviorTree;                                      // 0x1670(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UNavigationQueryFilter>    DefaultNavFilter;                                  // 0x1678(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UNavigationQueryFilter>    HuntingNavFilter;                                  // 0x1680(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_16D4[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        DBNOInteractionDuration;                           // 0x1690(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_16D5[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	UMulticastDelegateProperty_                  OnDowned;                                          // 0x1698(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	enum class ETInteractionType                 DBNOInteractionType;                               // 0x16A8(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortMovementStyle                MovementStyles;                                    // 0x16A9(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_16D6[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        UpdateNearbyPickupFrequency;                       // 0x16B0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          RequiredWeaponPickupTag;                           // 0x16B4(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  NoWeaponInCombatEventName;                         // 0x16BC(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  NoWeaponOutOfCombatEventName;                      // 0x16C4(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               CachedHitLocation;                                 // 0x16CC(0xC)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                 TurnTransitionGameplayAbilityTag;                  // 0x16D8(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UParticleSystem>        DeathParticles;                                    // 0x16F8(0x28)(Edit, BlueprintVisible, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        NumRunVariations;                                  // 0x1720(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        CurrentRunVariationIndex;                          // 0x1724(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RunVariationRadius;                                // 0x1728(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        EyeIndex;                                          // 0x172C(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        SkinIndex;                                         // 0x1730(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          DefaultEyeColor;                                   // 0x1734(0x10)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DefaultEyeBrightness;                              // 0x1744(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          DefaultSkinColor;                                  // 0x1748(0x10)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DefaultSkinGlow;                                   // 0x1758(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          MinimapDefaultIconColor;                           // 0x175C(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          PlayerManagerMinimapColor;                         // 0x176C(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_16D7[0x14];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FSlateBrush                           MiniMapIconBrush;                                  // 0x1790(0x88)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FSlateBrush                           MiniMapAboveBelowIconBrush;                        // 0x1818(0x88)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<struct FMinimapGoalByTagColorsData>   MinimapGoalByTagColors;                            // 0x18A0(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	int8                                         MinimapGoalByTagColorIndex;                        // 0x18B0(0x1)(Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_16D8[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  AppearanceOverrideName;                            // 0x18B4(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortAIPawnGender                 AppearanceOverrideGender;                          // 0x18BC(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortCombatEvents                 FollowPlayerEvent;                                 // 0x18BD(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortCombatEvents                 InCombatNearPlayerEvent;                           // 0x18BE(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETInteractionType                 InteractionType;                                   // 0x18BF(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FollowPlayerRange;                                 // 0x18C0(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        InteractionDuration;                               // 0x18C4(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnInteraction;                                     // 0x18C8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class ABuildingTrapDefender*                 DefenderTrap;                                      // 0x18D8(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnActorBeginCrowdOverlap;                          // 0x18E0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        : 1;                                               // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        bDebugAI : 1;                                      // Mask : 0x2 0x18F0(0x1)(Edit, BlueprintVisible, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bDebugAIAnim : 1;                                  // Mask : 0x4 0x18F0(0x1)(Edit, BlueprintVisible, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bUseBuildingAttackingHotspots : 1;                 // Mask : 0x8 0x18F0(0x1)(Edit, BlueprintVisible, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bCanMoveThroughWalls : 1;                          // Mask : 0x10 0x18F0(0x1)(Edit, BlueprintVisible, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bCanUseNavWalking : 1;                             // Mask : 0x20 0x18F0(0x1)(Edit, NoDestructor, AdvancedDisplay, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bCanUseSimpleCollisions : 1;                       // Mask : 0x40 0x18F0(0x1)(Edit, NoDestructor, AdvancedDisplay, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bCanUseStepAside : 1;                              // Mask : 0x80 0x18F0(0x1)(Edit, NoDestructor, AdvancedDisplay, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bCanUseDoors : 1;                                  // Mask : 0x1 0x18F1(0x1)(Edit, BlueprintVisible, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bCanUseShootingHotspots : 1;                       // Mask : 0x2 0x18F1(0x1)(Edit, NoDestructor, AdvancedDisplay, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bCanSleep : 1;                                     // Mask : 0x4 0x18F1(0x1)(NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bIsSleeping : 1;                                   // Mask : 0x8 0x18F1(0x1)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bShouldStartSleeping : 1;                          // Mask : 0x10 0x18F1(0x1)(Net, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bCanLookAtGoal : 1;                                // Mask : 0x20 0x18F1(0x1)(Net, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bCanUseMeshPooling : 1;                            // Mask : 0x40 0x18F1(0x1)(Edit, NoDestructor, AdvancedDisplay, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bUseCrowdSimulation : 1;                           // Mask : 0x80 0x18F1(0x1)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bControlWalkingOffLedges : 1;                      // Mask : 0x1 0x18F2(0x1)(Edit, DisableEditOnInstance, NoDestructor, AdvancedDisplay, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        : 1;                                               // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        bUseAppearanceOverride : 1;                        // Mask : 0x2 0x18F3(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bCanInteract : 1;                                  // Mask : 0x4 0x18F3(0x1)(Net, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bHideHealthBar : 1;                                // Mask : 0x8 0x18F3(0x1)(Edit, BlueprintVisible, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bHasBuildingHitEffects : 1;                        // Mask : 0x10 0x18F3(0x1)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EFortMovementUrgency              MovementUrgency;                                   // 0x18F4(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EFortressAIType                   AIType;                                            // 0x18F5(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EFortTeam                         Team;                                              // 0x18F6(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_16D9[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  SimpleCollisionsProfileName;                       // 0x18F8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FFortAISpawnGroupUpgradeUIData        UpgradeUIData;                                     // 0x1900(0xB8)(Net, Protected, NativeAccessSpecifierProtected)
	float                                        ScoreMultiplier;                                   // 0x19B8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        LootDropConeHalfAngle;                             // 0x19BC(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        LootDropSpeed;                                     // 0x19C0(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EFortHotSpotSlot                  HotspotType;                                       // 0x19C4(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EFortPartialPathUsage             PartialPathUsage;                                  // 0x19C5(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_16DA[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AFortPlayerStateZone*                  PlayerManager;                                     // 0x19C8(0x8)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                DefenderItemInstanceId;                            // 0x19D0(0x10)(Net, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  DefenderSquadId;                                   // 0x19E0(0x8)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DefenderPlacedTime;                                // 0x19E8(0x4)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        RecentlySeenInterval;                              // 0x19EC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FRotator                              CurrentAIRotationRate;                             // 0x19F0(0xC)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, NativeAccessSpecifierProtected)
	float                                        MoveSoundStimulusBroadcastInterval;                // 0x19FC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_16DB[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UShapeComponent*                       WeaponCollisionComponent;                          // 0x1A08(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AFortInventory*                        Inventory;                                         // 0x1A10(0x8)(Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class AFortPickup*>                   NearbyPickups;                                     // 0x1A18(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	TMap<class AFortPickup*, float>              UnreachablePickups;                                // 0x1A28(0x50)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_16DC[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FFortAIAppearanceOverrideEntry> AppearanceOverrideEntries;                         // 0x1A88(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	int32                                        AppearanceOverrideEntryIndex;                      // 0x1A98(0x4)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               SpawnLocation;                                     // 0x1A9C(0xC)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FRotator                              SpawnRotation;                                     // 0x1AA8(0xC)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class ABuildingActor>         SleepingFloor;                                     // 0x1AB4(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  PelvisBoneName;                                    // 0x1ABC(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  HeadBoneName;                                      // 0x1AC4(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_16DD[0xC];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        MinimapIndicatorUpdateFrequency;                   // 0x1AD8(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_16DE[0xC];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        MiniMapViewableDistance;                           // 0x1AE8(0x4)(Edit, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DistanceToPlayerManagerToShowHealthBar;            // 0x1AEC(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DistanceToOtherPlayersToShowHealthBar;             // 0x1AF0(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_16DF[0xC];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UFortAIAttributesSet*                  AttributesSet;                                     // 0x1B00(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFortCharacterAttrSet*                 CharacterAttrSet;                                  // 0x1B08(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFortWeaponAttrSet*                    WeaponAttrSet;                                     // 0x1B10(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USoundBase*                            ImpactPhysicalSurfaceSounds;                       // 0x1B18(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_16E0[0xC8];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UParticleSystem*                       ImpactPhysicalSurfaceEffects;                      // 0x1BE8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_16E1[0xC8];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UFortSimpleMiniMapIndicator*           MiniMapIndicator;                                  // 0x1CB8(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector2D                             MinimapScale;                                      // 0x1CC0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UFortAbilitySet*>               DefaultGameplayAbilitySets;                        // 0x1CC8(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TArray<class UFortAbilitySet*>               SpawnInheritedCharacterAbilitySets;                // 0x1CD8(0x10)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	TArray<class UFortGameplayModifierItemDefinition*> SpawnModifierDefinitions;                          // 0x1CE8(0x10)(Net, ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	class UFortAbilitySystemComponent*           AIPawnAbilitySystemComponent;                      // 0x1CF8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTagContainer                 WallAttackGameplayAbilityTags;                     // 0x1D00(0x20)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FGameplayTagContainer                 WallRangedAttackGameplayAbilityTags;               // 0x1D20(0x20)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FGameplayTagContainer                 CeilingAttackGameplayAbilityTags;                  // 0x1D40(0x20)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FGameplayTagContainer                 FloorAttackGameplayAbilityTags;                    // 0x1D60(0x20)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TArray<struct FGameplayTagContainer>         FailedAbilityQueryTags;                            // 0x1D80(0x10)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	class AActor*                                CurrentAimTarget;                                  // 0x1D90(0x8)(Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFortNavObstacleComponent*             NavObstacleComponent;                              // 0x1D98(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_16E2[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        BuildingHitMaxDistanceToPlayer;                    // 0x1DB0(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        BuildingHitMaxDistanceToHitLocation;               // 0x1DB4(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EFortAILODLevel                   CurrentFortAILODLevel;                             // 0x1DB8(0x1)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_16E3[0x12F];                                   // Fixing Size After Last Property  [ Dumper-7 ]
	class UFortAccountItem*                      DefenderItem;                                      // 0x1EE8(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_16E4[0x80];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAIPawn");
		return Clss;
	}

	void TurnOnSleepingOptimizations();
	void TriggerNoWeaponSpeech();
	bool ShouldUseFiringCapsuleCollision();
	bool ShouldUpdateSkeletalMesh();
	bool ShouldApplyBuildingHitEffect(float Damage, const struct FVector& Location, const struct FHitResult& HitInfo, bool bPlayerPlaced);
	void SetWeaponCollisionComponent(class UShapeComponent* InWeaponCollisionComponent);
	void SetUsesDBNO(bool bInUsesDBNO);
	void SetSkinColor(const struct FLinearColor& NewSkinColor, float NewSkinBrightness);
	void SetShouldStartSleeping(bool bHintStartSleeping);
	void SetMovementUrgency(enum class EFortMovementUrgency Urgency);
	void SetMinSignificanceForAnimationCurves(float MinSignificance);
	void SetMinimumAILOD(enum class EFortAILODLevel MinimumAILOD);
	void SetMinimapViewableDistance(float NewMinimapViewableDistance);
	void SetIsCharging(bool bNewIsCharging);
	void SetEyeColor(const struct FLinearColor& NewEyeColor, float NewEyeBrightness);
	void SetEncounterInfo(class UFortAIEncounterInfo* InEncounterInfo);
	void SetDefenderTrap(class ABuildingTrapDefender* InDefenderTrap);
	void SetCurrentAimTarget(class AActor* AimTarget);
	void SetCollisionProfileName(class FName InCollisionProfileName);
	void SetCanSleep(bool InCanSleep);
	void SetCanInteract(bool CanInteract);
	void SetBlockCollisionWithOtherAI(bool bInEnableBlockingCollisionWithOtherAI);
	void SetAIType(enum class EFortressAIType InAIType);
	void SetAIRotationRate(struct FRotator& AIRotationRate);
	void SetAIFocalPoint(class AActor* FocusTarget, const struct FVector& FocalPoint, bool bUseAttackingPriority);
	void ReviveFromDBNO();
	void ResetAIRotationRateToDefault();
	void PlayAdditiveHitReactsNative(struct FVector& HitDirection, class UAnimMontage* NewAnimMontage);
	void OnStartedEncounterSpawn();
	void OnSleepingAIsFloorBuildingActorDied(class AActor* DamagedActor, float Damage, class AController* InstigatedBy, class AActor* DamageCauser, const struct FVector& HitLocation, class UPrimitiveComponent* FHitComponent, class FName BoneName, const struct FVector& Momentum);
	void OnRep_SharedAnim();
	void OnRep_MinimapViewableDistance();
	void OnRep_Inventory();
	void OnRep_EnableBlockingCollisionWithOtherAI();
	void OnRep_CurrentFortAILODLevel();
	void OnRep_CurrentAIRotationRate();
	void OnRep_bIsSleeping();
	void OnRep_AttributeProxy();
	void OnRep_AppearanceOverrideEntryIndex();
	bool OnOutsideOfTetherBeyondMaxTimeAllowed();
	void OnFinishedEncounterSpawn();
	void OnEndSleepEffects();
	void OnEncounterSpawnEnableRangedAttacking();
	void OnEncounterSpawnEnableMeleeAttacking();
	void OnDefenderTrapSet(class ABuildingTrapDefender* OldDefenderTrap);
	void OnCheatUpdateSpecialEventGE(bool bShouldUseSpecialEventGE);
	void OnBeginSleepEffects();
	void OnAppearanceOverridden();
	void NetMulticast_BatchedDamageCues(const struct FFortAIBatchedDamageCues& Data);
	class UFortItem* K2_GetDefenderItem();
	class UFortItem* K2_FindExistingItemForDefinition(class UFortItemDefinition* ItemDefinition, bool bInStorageVault);
	bool IsInsideTetherBounds(bool bUseRelaxedTetherBounds);
	bool IsInCombat();
	bool IsDefender();
	bool HasTether();
	void GrabPickup(class AFortPickup* Pickup);
	void GiveAmmo(int32 AmmoQuantity);
	bool GetUsesDBNO();
	struct FRotator GetSpawnRotation();
	int32 GetSpawnPointValue();
	struct FVector GetSpawnLocation();
	int32 GetScoreValue();
	enum class EFortMovementUrgency GetMovementUrgency(class AFortAIPawn* FortAIPawn);
	enum class EFortMovementStyle GetMovementStyle(class AFortAIPawn* FortAIPawn);
	class USoundBase* GetImpactPhysicalSurfaceSound(struct FHitResult& Impact);
	float GetGroundSpeedForUrgency(class AFortAIPawn* FortAIPawn, enum class EFortMovementUrgency Urgency);
	float GetDifficultyRating();
	float GetDifficultyLevel();
	class FString GetDefenderItemInstanceId();
	class AActor* GetCurrentAimTarget();
	enum class EFortCustomGender GetCharacterGender();
	void ForceKillNoDBNO();
	void FinishedEncounterSpawn();
	void FastSharedReplication(struct FFortAISharedRepMovement& SharedRepMovement);
	void ClearAIFocalPoint(bool bUseAttackingPriority);
	bool CanHitTargetWithAbility(const struct FGameplayTagContainer& GameplayAbilityTag, class AActor* CanHitTarget, bool bUseIdealYawRotationToTarget);
	void AddUnreachablePickup(class AFortPickup* Pickup);
	void AddFortAbilitySet(class UFortAbilitySet* FortAbilitySet);
};

// 0x48 (0x70 - 0x28)
// Class FortniteGame.FortAIPawnVariant
class UFortAIPawnVariant : public UObject
{
public:
	TArray<TSubclassOf<class AFortAIPawn>>       PawnClasses;                                       // 0x28(0x10)(ZeroConstructor, Deprecated, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<struct FFortAIPawnVariantDefinition>  PawnVariantDefinitions;                            // 0x38(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	int32                                        MinPlayersToSpawnVariant;                          // 0x48(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_16E5[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FDataTableRowHandle                   SpawnPointValueHandle;                             // 0x50(0x10)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPrivate)
	int32                                        CachedSpawnPointValue;                             // 0x60(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        EncounterExpectedLifespan;                         // 0x64(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        VersionNum;                                        // 0x68(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_16E6[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAIPawnVariant");
		return Clss;
	}

};

// 0x0 (0x138 - 0x138)
// Class FortniteGame.FortAIPerceptionSystem
class UFortAIPerceptionSystem : public UAIPerceptionSystem
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAIPerceptionSystem");
		return Clss;
	}

};

// 0x0 (0x28 - 0x28)
// Class FortniteGame.FortAIRootAssignmentProviderInterface
class UFortAIRootAssignmentProviderInterface : public UInterface
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAIRootAssignmentProviderInterface");
		return Clss;
	}

	struct FFortAIAssignmentIdentifier& GetRootAssignmentIdentifier();
};

// 0x0 (0x330 - 0x330)
// Class FortniteGame.FortAISpawnerActorBase
class AFortAISpawnerActorBase : public AActor
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAISpawnerActorBase");
		return Clss;
	}

};

// 0x0 (0x28 - 0x28)
// Class FortniteGame.FortAISpawnerInterface
class UFortAISpawnerInterface : public UInterface
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAISpawnerInterface");
		return Clss;
	}

	bool OnReceiveSpawnGroup();
	bool IsReadyToReceiveNewSpawnGroup();
};

// 0xE0 (0x110 - 0x30)
// Class FortniteGame.FortAISpawnGroup
class UFortAISpawnGroup : public UPrimaryDataAsset
{
public:
	float                                        EnemyUtilities;                                    // 0x30(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_16E8[0x3C];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FSpawnGroupEnemy>              EnemiesToSpawn;                                    // 0x70(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	bool                                         bIsPrototype;                                      // 0x80(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bIsValidForEnemySpawners;                          // 0x81(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bIsLargeSpawnGroup;                                // 0x82(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_16E9[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        MaxDiscountRatio;                                  // 0x84(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FCurveTableRowHandle                  MaxGroupCategoryPopulationDensityCurve;            // 0x88(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FFortSpawnGroupEncounterTypeData> EncounterTypeData;                                 // 0x98(0x10)(Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	struct FGameplayTagContainer                 SpawnGroupGameplayTags;                            // 0xA8(0x20)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FGameplayTagQuery                     RequiredTagQuery;                                  // 0xC8(0x48)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAISpawnGroup");
		return Clss;
	}

	bool IsValidForEnemySpawners();
	bool IsPrototype();
	bool IsLargeSpawnGroup();
	int32 GetNumberOfEnemies();
	TSubclassOf<class UFortAIPawnVariant> GetEnemy(int32 EnemyIndex);
};

// 0x10 (0x38 - 0x28)
// Class FortniteGame.FortAISpawnGroupCapsCategorySet
class UFortAISpawnGroupCapsCategorySet : public UObject
{
public:
	TArray<struct FFortAIEncounterSpawnGroupCapsCategory> SpawnGroupCapsCategories;                          // 0x28(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAISpawnGroupCapsCategorySet");
		return Clss;
	}

};

// 0x10 (0x40 - 0x30)
// Class FortniteGame.FortAISpawnGroupProgressionInfo
class UFortAISpawnGroupProgressionInfo : public UDataAsset
{
public:
	TArray<struct FSpawnGroupProgression>        SpawnGroups;                                       // 0x30(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAISpawnGroupProgressionInfo");
		return Clss;
	}

};

// 0x140 (0x168 - 0x28)
// Class FortniteGame.FortAISpawnGroupUpgrade
class UFortAISpawnGroupUpgrade : public UObject
{
public:
	struct FGameplayTagContainer                 UpgradeTags;                                       // 0x28(0x20)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FGameplayTagQuery                     GroupRequiredTagQuery;                             // 0x48(0x48)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TArray<struct FFortAIPawnUpgrade>            BasePawnUpgrades;                                  // 0x90(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	class FName                                  AdditionalModifiersLootTierGroup;                  // 0xA0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bInvalidForEnemySpawners;                          // 0xA8(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_16EA[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        SpawnGroupDiscountPercentage;                      // 0xAC(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FFortAISpawnGroupUpgradeUIData        UIData;                                            // 0xB0(0xB8)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAISpawnGroupUpgrade");
		return Clss;
	}

};

// 0x18 (0x40 - 0x28)
// Class FortniteGame.FortAISpawnGroupUpgradeProbabilities
class UFortAISpawnGroupUpgradeProbabilities : public UObject
{
public:
	bool                                         bIsGuaranteedUpgrade;                              // 0x28(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_16EB[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FFortAIPawnUpgradeProbability> UpgradeProbabilities;                              // 0x30(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAISpawnGroupUpgradeProbabilities");
		return Clss;
	}

};

// 0x30 (0xA0 - 0x70)
// Class FortniteGame.FortAITask_AdjustToSlot
class UFortAITask_AdjustToSlot : public UAITask
{
public:
	struct FVector                               SlotLocation;                                      // 0x70(0xC)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               SlotDirection;                                     // 0x7C(0xC)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_16EC[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAITask_AdjustToSlot");
		return Clss;
	}

};

// 0x48 (0xB8 - 0x70)
// Class FortniteGame.FortAITask_ExecuteAbility
class UFortAITask_ExecuteAbility : public UAITask
{
public:
	uint8                                        Pad_16F0[0x48];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAITask_ExecuteAbility");
		return Clss;
	}

	void OnInjectedHitResultDied(class AActor* DamagedActor, float Damage, class AController* InstigatedBy, class AActor* DamageCauser, const struct FVector& HitLocation, class UPrimitiveComponent* FHitComponent, class FName BoneName, const struct FVector& Momentum);
};

// 0x20 (0x130 - 0x110)
// Class FortniteGame.FortAITask_FuzzyQueue
class UFortAITask_FuzzyQueue : public UAITask_MoveTo
{
public:
	uint8                                        Pad_16F1[0x20];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAITask_FuzzyQueue");
		return Clss;
	}

};

// 0x10 (0x80 - 0x70)
// Class FortniteGame.FortAITask_NavmeshWait
class UFortAITask_NavmeshWait : public UAITask
{
public:
	uint8                                        Pad_16F2[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAITask_NavmeshWait");
		return Clss;
	}

};

// 0x20 (0x90 - 0x70)
// Class FortniteGame.FortAITask_RotateToFace
class UFortAITask_RotateToFace : public UAITask
{
public:
	class AActor*                                FocusTarget;                                       // 0x70(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               FocalPoint;                                        // 0x78(0xC)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_16F3[0xC];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAITask_RotateToFace");
		return Clss;
	}

};

// 0x30 (0x178 - 0x148)
// Class FortniteGame.FortAITask_StepAside
class UFortAITask_StepAside : public UFortAITask_Move
{
public:
	uint8                                        Pad_16F4[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class AActor*                                GoalActor;                                         // 0x158(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_16F5[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAITask_StepAside");
		return Clss;
	}

};

// 0x0 (0x28 - 0x28)
// Class FortniteGame.FortAITetheringBoxBoundsInterface
class UFortAITetheringBoxBoundsInterface : public UInterface
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAITetheringBoxBoundsInterface");
		return Clss;
	}

	float GetTetheredBoxBoundsWidth();
	float GetTetheredBoxBoundsHeight();
	float GetTetheredBoxBoundsEQSSpaceBetween();
	float GetTetheredBoxBoundsEQSGridSize();
	struct FVector GetTetheredBoxBoundsCenter();
};

// 0x20 (0x100 - 0xE0)
// Class FortniteGame.FortAlterableItem
class UFortAlterableItem : public UFortAccountItem
{
public:
	TArray<class FString>                        Alterations;                                       // 0xE0(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<class UFortAlterationItemDefinition*> AlterationInstances;                               // 0xF0(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAlterableItem");
		return Clss;
	}

};

// 0x0 (0x360 - 0x360)
// Class FortniteGame.FortAlterableItemDefinition
class UFortAlterableItemDefinition : public UFortAccountItemDefinition
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAlterableItemDefinition");
		return Clss;
	}

};

// 0x0 (0xE0 - 0xE0)
// Class FortniteGame.FortAlterationItem
class UFortAlterationItem : public UFortAccountItem
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAlterationItem");
		return Clss;
	}

	class UFortAlterationItemDefinition* GetAlterationDefinitionBP();
};

// 0x0 (0x28 - 0x28)
// Class FortniteGame.FortAlterationFunctionLibrary
class UFortAlterationFunctionLibrary : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAlterationFunctionLibrary");
		return Clss;
	}

	class UParticleSystem* GetAlterationImpactPhysicalSurfaceEffects(enum class EPhysicalSurface HitSurface, struct FFortCosmeticModification& CosmeticMod);
};

// 0x38 (0x60 - 0x28)
// Class FortniteGame.FortAmbientOneShotInstance
class UFortAmbientOneShotInstance : public UObject
{
public:
	class UFortAmbientAudioController*           Controller;                                        // 0x28(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFortPOIAmbientAudioOneShot           Data;                                              // 0x30(0x28)(NativeAccessSpecifierPublic)
	struct FTimerHandle                          RetriggerTimer;                                    // 0x58(0x8)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAmbientOneShotInstance");
		return Clss;
	}

	void Reset();
	void OnTrigger();
};

// 0x98 (0x190 - 0xF8)
// Class FortniteGame.FortAmbientAudioController
class UFortAmbientAudioController : public UActorComponent
{
public:
	class UFortPOIAmbientAudioBank*              DefaultAudioBank;                                  // 0xF8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          RequiredTagSubstr;                                 // 0x100(0x8)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AFortPlayerController*                 PlayerController;                                  // 0x108(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAudioComponent*                       AudioComp;                                         // 0x110(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAudioComponent*                       FadingAudioComp;                                   // 0x118(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UFortPOIAmbientAudioBank*              CurrentAudioBank;                                  // 0x120(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class UFortAmbientOneShotInstance*>   CurrentOneShots;                                   // 0x128(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	class AFortTimeOfDayManager*                 TimeOfDayManager;                                  // 0x138(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TMap<struct FGameplayTag, class AFortPoiVolume*> VolumeMap;                                         // 0x140(0x50)(ZeroConstructor, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAmbientAudioController");
		return Clss;
	}

	void SetAudioBank(class UFortPOIAmbientAudioBank* NewBank);
	void OnLocationTagChanged(const struct FGameplayTag& Tag, int32 Num);
	void OnDayPhaseChanged(enum class EFortDayPhase CurrentDayPhase, enum class EFortDayPhase PreviousDayPhase, bool bAtCreation);
	void InitializePlayerState();
	class UFortPOIAmbientAudioBank* GetAudioBank();
	void Crossfade(struct FFortPOIAmbientAudioLoop* NewLoop);
};

// 0x400 (0xC70 - 0x870)
// Class FortniteGame.FortAmmoItemDefinition
class UFortAmmoItemDefinition : public UFortWorldItemDefinition
{
public:
	//struct FSlateBrush                         ClipIconBrush;                                     // 0x868(0x88)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	uint8                                        Pad_16F7[0x80];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bIsConsumed;                                       // 0x8F0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bTriggersFeedbackLines;                            // 0x8F1(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_16F8[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FScalableFloat                        RegenCooldown;                                     // 0x8F8(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FFortMultiSizeBrush                   AmmoIconBrush;                                     // 0x918(0x330)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UTexture2D>             HUDAmmoSmallPreviewImage;                          // 0xC48(0x28)(Edit, DisableEditOnInstance, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAmmoItemDefinition");
		return Clss;
	}

	TSoftObjectPtr<class UTexture2D> GetHUDAmmoSmallPreviewImage();
};

// 0x30 (0x58 - 0x28)
// Class FortniteGame.FortAnalyticsConfig
class UFortAnalyticsConfig : public UObject
{
public:
	TArray<class FString>                        AltDomains;                                        // 0x28(0x10)(ZeroConstructor, Config, NativeAccessSpecifierPublic)
	class FString                                UrlEndpoint;                                       // 0x38(0x10)(ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_16F9[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAnalyticsConfig");
		return Clss;
	}

};

// 0x38 (0x68 - 0x30)
// Class FortniteGame.FortAnalyticsData
class UFortAnalyticsData : public UDataAsset
{
public:
	struct FGameplayTagContainer                 DownedOrFinishTagWhitelist;                        // 0x30(0x20)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FGameplayTag                          BanhammerTag;                                      // 0x50(0x8)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTag                          RemovedFromGameTag;                                // 0x58(0x8)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTag                          LoggedOutTag;                                      // 0x60(0x8)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAnalyticsData");
		return Clss;
	}

};

// 0xC0 (0xF0 - 0x30)
// Class FortniteGame.FortAnalyticsItemExclusions
class UFortAnalyticsItemExclusions : public UDataAsset
{
public:
	TSet<enum class EFortRarity>                 ExcludedRarities;                                  // 0x30(0x50)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TSet<enum class EFortItemType>               ExcludedItemTypes;                                 // 0x80(0x50)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FGameplayTagContainer                 ExcludedItemTags;                                  // 0xD0(0x20)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAnalyticsItemExclusions");
		return Clss;
	}

};

// 0x0 (0x28 - 0x28)
// Class FortniteGame.FortAnimInputBlueprintLibrary
class UFortAnimInputBlueprintLibrary : public UObject
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAnimInputBlueprintLibrary");
		return Clss;
	}

	void UpdateFortAnimInput_SpeedWarping(struct FFortAnimInput_SpeedWarping& AnimInput, class UAnimInstance* InAnimInstance, float InSpeedScale);
};

// 0x8 (0x40 - 0x38)
// Class FortniteGame.FortAnimNotify_GenericNotifyGameplayAbility
class UFortAnimNotify_GenericNotifyGameplayAbility : public UAnimNotify
{
public:
	struct FGameplayTag                          NotifyTag;                                         // 0x38(0x8)(Edit, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAnimNotify_GenericNotifyGameplayAbility");
		return Clss;
	}

};

// 0x30 (0x68 - 0x38)
// Class FortniteGame.FortAnimNotify_GenericSoundIndicator
class UFortAnimNotify_GenericSoundIndicator : public UAnimNotify
{
public:
	TSoftObjectPtr<class USoundBase>             BaseSound;                                         // 0x38(0x28)(Edit, BlueprintReadOnly, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MaxAudibleDistance;                                // 0x60(0x4)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EFortSoundIndicatorTypes          IndicatorType;                                     // 0x64(0x1)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bIgnoreForLocalPlayer;                             // 0x65(0x1)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_16FB[0x2];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAnimNotify_GenericSoundIndicator");
		return Clss;
	}

};

// 0x0 (0x38 - 0x38)
// Class FortniteGame.FortAnimNotify_MeleeAnimTrails_On
class UFortAnimNotify_MeleeAnimTrails_On : public UAnimNotify
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAnimNotify_MeleeAnimTrails_On");
		return Clss;
	}

};

// 0x0 (0x38 - 0x38)
// Class FortniteGame.FortAnimNotify_MeleeAnimTrails_Off
class UFortAnimNotify_MeleeAnimTrails_Off : public UAnimNotify
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAnimNotify_MeleeAnimTrails_Off");
		return Clss;
	}

};

// 0x0 (0x38 - 0x38)
// Class FortniteGame.FortAnimNotify_MeleeComboBlocked
class UFortAnimNotify_MeleeComboBlocked : public UAnimNotify
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAnimNotify_MeleeComboBlocked");
		return Clss;
	}

};

// 0x0 (0x58 - 0x58)
// Class FortniteGame.FortAnimNotify_PlayConsumeSound
class UFortAnimNotify_PlayConsumeSound : public UAnimNotify_PlaySound
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAnimNotify_PlayConsumeSound");
		return Clss;
	}

};

// 0x0 (0x38 - 0x38)
// Class FortniteGame.FortAnimNotify_PlayEmojiItem
class UFortAnimNotify_PlayEmojiItem : public UAnimNotify
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAnimNotify_PlayEmojiItem");
		return Clss;
	}

};

// 0x8 (0x60 - 0x58)
// Class FortniteGame.FortAnimNotify_PlayEmoteMusic
class UFortAnimNotify_PlayEmoteMusic : public UAnimNotify_PlaySound
{
public:
	class USoundBase*                            Sound3P;                                           // 0x58(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAnimNotify_PlayEmoteMusic");
		return Clss;
	}

};

// 0x20 (0x58 - 0x38)
// Class FortniteGame.FortAnimNotify_PlayFeedbackLine
class UFortAnimNotify_PlayFeedbackLine : public UAnimNotify
{
public:
	struct FFortFeedbackHandle                   Event;                                             // 0x38(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	bool                                         bAllowReplication;                                 // 0x50(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_16FC[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAnimNotify_PlayFeedbackLine");
		return Clss;
	}

};

// 0x8 (0x40 - 0x38)
// Class FortniteGame.FortAnimNotify_PlayPetSound
class UFortAnimNotify_PlayPetSound : public UAnimNotify
{
public:
	struct FGameplayTag                          PetSoundTag;                                       // 0x38(0x8)(Edit, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAnimNotify_PlayPetSound");
		return Clss;
	}

};

// 0x8 (0x40 - 0x38)
// Class FortniteGame.FortAnimNotify_PlayReloadFX
class UFortAnimNotify_PlayReloadFX : public UAnimNotify
{
public:
	enum class EFortReloadFXState                ReloadStage;                                       // 0x38(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_16FD[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAnimNotify_PlayReloadFX");
		return Clss;
	}

	void SetReloadStage(enum class EFortReloadFXState InReloadStage);
};

// 0x0 (0x58 - 0x58)
// Class FortniteGame.FortAnimNotify_PlaySoundLocalOnly
class UFortAnimNotify_PlaySoundLocalOnly : public UAnimNotify_PlaySound
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAnimNotify_PlaySoundLocalOnly");
		return Clss;
	}

};

// 0x0 (0x90 - 0x90)
// Class FortniteGame.FortAnimNotify_PlayWindParticleEffect
class UFortAnimNotify_PlayWindParticleEffect : public UAnimNotify_PlayParticleEffect
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAnimNotify_PlayWindParticleEffect");
		return Clss;
	}

};

// 0x18 (0x50 - 0x38)
// Class FortniteGame.FortAnimNotify_TriggerGameplayAbility
class UFortAnimNotify_TriggerGameplayAbility : public UAnimNotify
{
public:
	struct FGameplayTag                          ApplicationTag;                                    // 0x38(0x8)(Edit, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  MontageSectionIfBlocked;                           // 0x40(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bSetNextSectionIfBlocked;                          // 0x48(0x1)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_16FE[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAnimNotify_TriggerGameplayAbility");
		return Clss;
	}

};

// 0x40 (0x70 - 0x30)
// Class FortniteGame.FortAnimNotifyState_AbilityDecisionWindow
class UFortAnimNotifyState_AbilityDecisionWindow : public UAnimNotifyState
{
public:
	struct FFortMontageInputAction               PrimaryInput;                                      // 0x30(0x14)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	struct FFortMontageInputAction               SecondaryInput;                                    // 0x44(0x14)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	class FName                                  DefaultNextSection;                                // 0x58(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PrimaryInputStrikeAngle;                           // 0x60(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SecondaryInputStrikeAngle;                         // 0x64(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        ComboCounter;                                      // 0x68(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_16FF[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAnimNotifyState_AbilityDecisionWindow");
		return Clss;
	}

};

// 0x0 (0x30 - 0x30)
// Class FortniteGame.FortAnimNotifyState_AllowBlockedActions
class UFortAnimNotifyState_AllowBlockedActions : public UAnimNotifyState
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAnimNotifyState_AllowBlockedActions");
		return Clss;
	}

};

// 0x8 (0x38 - 0x30)
// Class FortniteGame.FortAnimNotifyState_ConsumeSound
class UFortAnimNotifyState_ConsumeSound : public UAnimNotifyState
{
public:
	class USoundBase*                            ConsumeUseSound;                                   // 0x30(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAnimNotifyState_ConsumeSound");
		return Clss;
	}

};

// 0x10 (0x40 - 0x30)
// Class FortniteGame.FortAnimNotifyState_EmoteSound
class UFortAnimNotifyState_EmoteSound : public UAnimNotifyState
{
public:
	class USoundBase*                            EmoteSound1P;                                      // 0x30(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundBase*                            EmoteSound3P;                                      // 0x38(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAnimNotifyState_EmoteSound");
		return Clss;
	}

};

// 0x8 (0x38 - 0x30)
// Class FortniteGame.FortAnimNotifyState_NotifyParts
class UFortAnimNotifyState_NotifyParts : public UAnimNotifyState
{
public:
	class FName                                  Context;                                           // 0x30(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAnimNotifyState_NotifyParts");
		return Clss;
	}

};

// 0x8 (0x38 - 0x30)
// Class FortniteGame.FortAnimNotifyState_PetSound
class UFortAnimNotifyState_PetSound : public UAnimNotifyState
{
public:
	struct FGameplayTag                          PetSoundTag;                                       // 0x30(0x8)(Edit, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAnimNotifyState_PetSound");
		return Clss;
	}

};

// 0x8 (0x38 - 0x30)
// Class FortniteGame.FortAnimNotifyState_PlayPetMontage
class UFortAnimNotifyState_PlayPetMontage : public UAnimNotifyState
{
public:
	class UPetSyncedDanceItemDefinition*         PetDance;                                          // 0x30(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAnimNotifyState_PlayPetMontage");
		return Clss;
	}

};

// 0x8 (0x38 - 0x30)
// Class FortniteGame.FortAnimNotifyState_RootMotionInterrupt
class UFortAnimNotifyState_RootMotionInterrupt : public UAnimNotifyState
{
public:
	enum class EMontageInterrupt                 MontageInterrupt;                                  // 0x30(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1700[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	uint8                                        bAllowMoveInput : 1;                               // Mask : 0x1 0x34(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1701[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAnimNotifyState_RootMotionInterrupt");
		return Clss;
	}

};

// 0x80 (0xB0 - 0x30)
// Class FortniteGame.FortAnimNotifyState_SpawnProp
class UFortAnimNotifyState_SpawnProp : public UAnimNotifyState
{
public:
	class FName                                  SocketName;                                        // 0x30(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               LocationOffset;                                    // 0x38(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                              RotationOffset;                                    // 0x44(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FVector                               Scale;                                             // 0x50(0xC)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1702[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class AActor>                    ActorProp;                                         // 0x60(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USkeletalMesh*                         SkeletalMeshProp;                                  // 0x68(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimationAsset*                       SkeletalMeshPropAnimation;                         // 0x70(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bInheritScale;                                     // 0x78(0x1)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bAbsoluteScale;                                    // 0x79(0x1)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bPropAnimLooping;                                  // 0x7A(0x1)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bPrestreamTextures;                                // 0x7B(0x1)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PrestreamTextureDuration;                          // 0x7C(0x4)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMesh*                           StaticMeshProp;                                    // 0x80(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FEmotePropMaterialScalarParam> PropMaterialScalarParams;                          // 0x88(0x10)(Edit, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	int32                                        PropId;                                            // 0x98(0x4)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1703[0x14];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAnimNotifyState_SpawnProp");
		return Clss;
	}

};

// 0x0 (0xB0 - 0xB0)
// Class FortniteGame.FortAnimNotifyState_SpawnPickaxe
class UFortAnimNotifyState_SpawnPickaxe : public UFortAnimNotifyState_SpawnProp
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAnimNotifyState_SpawnPickaxe");
		return Clss;
	}

};

// 0x0 (0x30 - 0x30)
// Class FortniteGame.FortAnimNotifyState_StopMeleeAnimTrailsOnEnd
class UFortAnimNotifyState_StopMeleeAnimTrailsOnEnd : public UAnimNotifyState
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAnimNotifyState_StopMeleeAnimTrailsOnEnd");
		return Clss;
	}

};

// 0xA0 (0xD0 - 0x30)
// Class FortniteGame.FortAnimNotifyState_ToySpawn
class UFortAnimNotifyState_ToySpawn : public UAnimNotifyState
{
public:
	class FName                                  SocketName;                                        // 0x30(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               LocationOffset;                                    // 0x38(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                              RotationOffset;                                    // 0x44(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	int32                                        PropId;                                            // 0x50(0x4)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bRepositionOnSpawn;                                // 0x54(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1704[0xB];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTransform                            ComponentSpaceSpawnPoint;                          // 0x60(0x30)(Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	bool                                         bRepositionOnLaunch;                               // 0x90(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1705[0xF];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTransform                            ComponentSpaceLaunchPoint;                         // 0xA0(0x30)(Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAnimNotifyState_ToySpawn");
		return Clss;
	}

};

// 0x0 (0x30 - 0x30)
// Class FortniteGame.FortAnimNotify_WeaponCheckPlaying
class UFortAnimNotify_WeaponCheckPlaying : public UAnimNotifyState
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAnimNotify_WeaponCheckPlaying");
		return Clss;
	}

};

// 0xA8 (0xD8 - 0x30)
// Class FortniteGame.FortAnimSet
class UFortAnimSet : public UDataAsset
{
public:
	struct FDirectoryPath                        SourceRootPath;                                    // 0x30(0x10)(Edit, NativeAccessSpecifierPublic)
	TArray<struct FDirectoryPath>                TargetRootPathList;                                // 0x40(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	class UAnimSequenceBase*                     FallbackSequence;                                  // 0x50(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FName>                          UniqueInSourceAssets;                              // 0x58(0x10)(Edit, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
	TArray<class FName>                          UniqueInTargetAssets;                              // 0x68(0x10)(Edit, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
	TArray<struct FFortAnimSetRandomAnimation>   RandomAnimations;                                  // 0x78(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TMap<class FName, class UAnimationAsset*>    AssetRemapping;                                    // 0x88(0x50)(Edit, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAnimSet");
		return Clss;
	}

	void UpdateReferencesInRandomSection();
	void UpdateAssets();
};

// 0x0 (0x290 - 0x290)
// Class FortniteGame.FortAnimSharingStateInstance
class UFortAnimSharingStateInstance : public UAnimSharingStateInstance
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAnimSharingStateInstance");
		return Clss;
	}

};

// 0x10 (0x60 - 0x50)
// Class FortniteGame.FortAnimationSharingStateProcessor
class UFortAnimationSharingStateProcessor : public UAnimationSharingStateProcessor
{
public:
	float                                        RunningVelocityThreshold;                          // 0x50(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        IdleVelocityThreshold;                             // 0x54(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FallingZVelocityThreshold;                         // 0x58(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1706[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAnimationSharingStateProcessor");
		return Clss;
	}

};

// 0xF0 (0x400 - 0x310)
// Class FortniteGame.FortVehicleAnimInstance
class UFortVehicleAnimInstance : public UFortAnimInstance
{
public:
	class AFortAthenaSKVehicle*                  Vehicle;                                           // 0x310(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               AxlePositionF;                                     // 0x318(0xC)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               AxlePositionB;                                     // 0x324(0xC)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                              AxleRotationF;                                     // 0x330(0xC)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FRotator                              AxleRotationB;                                     // 0x33C(0xC)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FVector                               WheelPositionFR;                                   // 0x348(0xC)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               WheelPositionFL;                                   // 0x354(0xC)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               WheelPositionBR;                                   // 0x360(0xC)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               WheelPositionBL;                                   // 0x36C(0xC)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                              WheelSpinFR;                                       // 0x378(0xC)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FRotator                              WheelSpinFL;                                       // 0x384(0xC)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FRotator                              WheelSpinBR;                                       // 0x390(0xC)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FRotator                              WheelSpinBL;                                       // 0x39C(0xC)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FRotator                              DriveShaftSpin;                                    // 0x3A8(0xC)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FRotator                              WheelRotationFR;                                   // 0x3B4(0xC)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FRotator                              WheelRotationFL;                                   // 0x3C0(0xC)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FRotator                              WheelRotationBR;                                   // 0x3CC(0xC)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FRotator                              WheelRotationBL;                                   // 0x3D8(0xC)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FRotator                              SteeringRotation;                                  // 0x3E4(0xC)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	bool                                         bHasDriver;                                        // 0x3F0(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1707[0xF];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortVehicleAnimInstance");
		return Clss;
	}

};

// 0x20 (0x420 - 0x400)
// Class FortniteGame.FortAntelopeVehicleAnimInstance
class UFortAntelopeVehicleAnimInstance : public UFortVehicleAnimInstance
{
public:
	//class AFortAthenaAntelopeVehicle*          AntelopeVehicle;                                   // 0x3F8(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        VehicleSpeed;                                      // 0x400(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bForwardSpeedIsNearlyZero;                         // 0x404(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bForwardSpeedIsGreaterThanOne;                     // 0x405(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bReverseSpeedIsGreaterThanOne;                     // 0x406(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bSpeedIsGreaterThanFiveAndPlayerHitSpace;          // 0x407(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsBraking;                                        // 0x408(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsBoosting;                                       // 0x409(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bPlayerHitSpaceBar;                                // 0x40A(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1708[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        ChargingValue;                                     // 0x40C(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ChargingMax;                                       // 0x410(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ChargingMin;                                       // 0x414(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ChargingInterpSpeed;                               // 0x418(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1709[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAntelopeVehicleAnimInstance");
		return Clss;
	}

};

// 0x2F0 (0x318 - 0x28)
// Class FortniteGame.FortVehicleConfigs
class UFortVehicleConfigs : public UObject
{
public:
	float                                        WaterTestFrequency;                                // 0x28(0x4)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinLinearSpeedRunningVarianceSq;                   // 0x2C(0x4)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinAngularSpeedRunningVarianceSq;                  // 0x30(0x4)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        VehicleSleepCounter;                               // 0x34(0x4)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        VehicleErrorPerDistanceCentimeters;                // 0x38(0x4)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        VehicleErrorPerDistanceCentimetersPerSecond;       // 0x3C(0x4)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        VehicleErrorPerAngleDegrees;                       // 0x40(0x4)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        VehicleErrorPerAngleDegreesPerSecond;              // 0x44(0x4)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        VehicleErrorPerUpdate;                             // 0x48(0x4)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        VehicleMinSecondsBetweenUpdates;                   // 0x4C(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        VehicleMinFOV;                                     // 0x50(0x4)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        VehicleMaxFOV;                                     // 0x54(0x4)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        VehicleMinFOVSpeed;                                // 0x58(0x4)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        VehicleMaxFOVSpeed;                                // 0x5C(0x4)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        VehicleFOVInterpSpeed;                             // 0x60(0x4)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        VehicleInvalidErrorPerSecondTolerance;             // 0x64(0x4)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        VehicleInvalidErrorMaxSeconds;                     // 0x68(0x4)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        VehicleInvalidErrorMinSeconds;                     // 0x6C(0x4)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        InteractDistanceScalar;                            // 0x70(0x4)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        InPlaceRotationStrength;                           // 0x74(0x4)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        WheelRadius;                                       // 0x78(0x4)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        IdleBrakeForce;                                    // 0x7C(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TooFastBrakeForce;                                 // 0x80(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BrakeForce;                                        // 0x84(0x4)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AutoBrakeSpeed;                                    // 0x88(0x4)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        WaterDragCoefficient;                              // 0x8C(0x4)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LateralFriction;                                   // 0x90(0x4)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        VehicleCameraMaxSteerAlpha;                        // 0x94(0x4)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxForwardSpeedToSwapReverseControls;              // 0x98(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinSpeedSteeringAngle;                             // 0x9C(0x4)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxSpeedSteeringAngle;                             // 0xA0(0x4)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bSteerWithFrontWheels;                             // 0xA4(0x1)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bInvertSteeringWhenReversing;                      // 0xA5(0x1)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_170A[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        MaxRestSpeed;                                      // 0xA8(0x4)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ImpactDamageSafeDegrees;                           // 0xAC(0x4)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinSpeedToDamage;                                  // 0xB0(0x4)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxSpeedToDamage;                                  // 0xB4(0x4)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinSpeedDamage;                                    // 0xB8(0x4)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxSpeedDamage;                                    // 0xBC(0x4)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinSpeedDamageNoPlayer;                            // 0xC0(0x4)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxSpeedDamageNoPlayer;                            // 0xC4(0x4)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinSpeedAIDamage;                                  // 0xC8(0x4)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxSpeedAIDamage;                                  // 0xCC(0x4)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinSpeedAIDamageNoPlayer;                          // 0xD0(0x4)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxSpeedAIDamageNoPlayer;                          // 0xD4(0x4)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinFallDamageHeight;                               // 0xD8(0x4)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxFallDamageHeight;                               // 0xDC(0x4)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinFallDamage;                                     // 0xE0(0x4)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxFallDamage;                                     // 0xE4(0x4)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PlayerFallDamageMultiplier;                        // 0xE8(0x4)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinImpactMagnitudeToDealDamageKmH;                 // 0xEC(0x4)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxImpactDamage;                                   // 0xF0(0x4)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ImpactDamagePerImpulse;                            // 0xF4(0x4)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ImpactReductionPerTransverseVelocity;              // 0xF8(0x4)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxImpactDamageReduction;                          // 0xFC(0x4)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PlayerImpactDamageMultiplier;                      // 0x100(0x4)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        VehicleEjectCooldown;                              // 0x104(0x4)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        VehicleFlipCooldown;                               // 0x108(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CameraSpaceForwardDistanceOverride;                // 0x10C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PlayerToSocketSweepRadius;                         // 0x110(0x4)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinSpringHitNormal;                                // 0x114(0x4)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        VehicleCameraGraceZone;                            // 0x118(0x4)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        VehicleLeftAnalogSteeringDeadZone;                 // 0x11C(0x4)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        VehicleCameraLeftAnalogMultiplier;                 // 0x120(0x4)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        VehicleGravity;                                    // 0x124(0x4)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PlayerGravityMultiplier;                           // 0x128(0x4)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        InWaterTopSpeedMutliplier;                         // 0x12C(0x4)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        VehicleInPlaceThreshold;                           // 0x130(0x4)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        VehicleWeightShiftPitchStrength;                   // 0x134(0x4)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        VehicleWeightShiftRollStrength;                    // 0x138(0x4)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        VehicleWeightShiftYawStrength;                     // 0x13C(0x4)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        JumpRateMultiplier;                                // 0x140(0x4)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        VehicleDebugStrafeMultiplier;                      // 0x144(0x4)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        GravityVelocitySteerForwardThreshold;              // 0x148(0x4)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        GravityVelocitySteerErrorThreshold;                // 0x14C(0x4)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        GravitySteerMultiplier;                            // 0x150(0x4)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        InWaterPushMultiplier;                             // 0x154(0x4)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinWheelRotationSpeed;                             // 0x158(0x4)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        WheelRotationAcceleration;                         // 0x15C(0x4)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        WheelRotationDampingPerSecond;                     // 0x160(0x4)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HonkTimeMax;                                       // 0x164(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HonkCooldownMax;                                   // 0x168(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HonkTimePerHonk;                                   // 0x16C(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        VehicleLookAheadLength;                            // 0x170(0x4)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        VehicleLookAheadInAirLength;                       // 0x174(0x4)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        VehicleLookAheadMinSpeed;                          // 0x178(0x4)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        VehicleLookAheadMinNormal;                         // 0x17C(0x4)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        VehicleLookAheadStiff;                             // 0x180(0x4)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        VehicleLookAheadDamp;                              // 0x184(0x4)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        VehicleLookAheadInAirStiff;                        // 0x188(0x4)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        VehicleLookAheadInAirDamp;                         // 0x18C(0x4)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        VehicleLookAheadMaxAccel;                          // 0x190(0x4)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        VehicleLookAheadMaxAccelInAir;                     // 0x194(0x4)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        VehicleAirControlStiff;                            // 0x198(0x4)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        VehicleAirControlDamp;                             // 0x19C(0x4)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        VehicleAirYawStrength;                             // 0x1A0(0x4)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        VehicleAirPitchStrength;                           // 0x1A4(0x4)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DragCoefficient;                                   // 0x1A8(0x4)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DragCoefficient2;                                  // 0x1AC(0x4)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxDragSpeed;                                      // 0x1B0(0x4)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinLinearSpeedToWake;                              // 0x1B4(0x4)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinAngularSpeedToWake;                             // 0x1B8(0x4)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxDriveInclineAngle;                              // 0x1BC(0x4)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxAntigravityInclineAngle;                        // 0x1C0(0x4)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxDriveTiltAngle;                                 // 0x1C4(0x4)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AxleOffsetZ;                                       // 0x1C8(0x4)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SpringStiffMultiplier;                             // 0x1CC(0x4)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SpringDampMultiplier;                              // 0x1D0(0x4)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SpringMaxAccelMultiplier;                          // 0x1D4(0x4)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SpringLengthMultiplier;                            // 0x1D8(0x4)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HasGroundSweepLengthMultiplier;                    // 0x1DC(0x4)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AngularDragCoefficient;                            // 0x1E0(0x4)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PitchAngularDrag;                                  // 0x1E4(0x4)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RollAngularDrag;                                   // 0x1E8(0x4)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        VehicleAnalogReverse;                              // 0x1EC(0x4)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinFallDamageNormalScale;                          // 0x1F0(0x4)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        VehicleLookAheadMinSpeedInAir;                     // 0x1F4(0x4)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        VehicleAutoAirPitchStrength;                       // 0x1F8(0x4)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        VehicleAutoAirYawStrength;                         // 0x1FC(0x4)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        VehicleAutoAirRollStrength;                        // 0x200(0x4)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        VehicleMinVelAlongContactNormal;                   // 0x204(0x4)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        VehicleMaxVelAlongContactNormal;                   // 0x208(0x4)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinSameDirCollision;                               // 0x20C(0x4)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinCollisionSpeedToCorrect;                        // 0x210(0x4)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinCollisionBoostNormal;                           // 0x214(0x4)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CollisionSpeedBoostAlpha;                          // 0x218(0x4)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CancelIgnoreForwardThreshold;                      // 0x21C(0x4)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DriverExitLaunchScalar;                            // 0x220(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DriverExitLaunchUpScalar;                          // 0x224(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DriverExitInAirLaunchScalar;                       // 0x228(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DriverExitInAirLaunchUpScalar;                     // 0x22C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PassengerExitLaunchScalar;                         // 0x230(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PassengerExitLaunchUpScalar;                       // 0x234(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PassengerExitInAirLaunchScalar;                    // 0x238(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PassengerExitInAirLaunchUpScalar;                  // 0x23C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AngularDragCoefficientRampedUp;                    // 0x240(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PitchAngularDragRampedUp;                          // 0x244(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        VehicleAirYawStrengthRampedUp;                     // 0x248(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        VehicleAirPitchStrengthRampedUp;                   // 0x24C(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SteerBrakeMultiplier;                              // 0x250(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        WheelRadiusF;                                      // 0x254(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        WheelRadiusB;                                      // 0x258(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PitchLeanStrength;                                 // 0x25C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxForwardVelAccelLean;                            // 0x260(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxReverseVelAccelLean;                            // 0x264(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxSteerForAccelLean;                              // 0x268(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinYawSpeedForLean;                                // 0x26C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        YawLeanStrength;                                   // 0x270(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AccelerationPitchCooldown;                         // 0x274(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        YawLeanCooldown;                                   // 0x278(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxAccelPitch;                                     // 0x27C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxYawLean;                                        // 0x280(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ContactModificationOffset;                         // 0x284(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        VehicleFloorFriction;                              // 0x288(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        VehicleSideScrapeFriction;                         // 0x28C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        VehicleSideScrapeMaxCosAngle;                      // 0x290(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        GroundCheckSweepRadius;                            // 0x294(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SMSleepCounter;                                    // 0x298(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CorrectOrientationTimeout;                         // 0x29C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        NudgeOrientationTimeout;                           // 0x2A0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        NudgeDistance;                                     // 0x2A4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               CorrectOrientationCenterOfMassOffset;              // 0x2A8(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CorrectOrientationLinearCoefficient;               // 0x2B4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CorrectOrientationAngularCoefficient;              // 0x2B8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ECollisionChannel                 SpringCollisionChannel;                            // 0x2BC(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bVehicleCameraSteering;                            // 0x2BD(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bVehicleScreenSpaceSteering;                       // 0x2BE(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bVehicleCameraLeftAnalogSteering;                  // 0x2BF(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bUseKinematicReplicationWhenNotRendered;           // 0x2C0(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bCanDoTricks;                                      // 0x2C1(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShouldDriverHaveReticle;                          // 0x2C2(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_170B[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        PawnLaunchVerticalVelocityScale;                   // 0x2C4(0x4)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PawnLaunchForwardVelocityScale;                    // 0x2C8(0x4)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PawnLaunchMaxSpeed;                                // 0x2CC(0x4)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PawnLaunchAngleAdjustment;                         // 0x2D0(0x4)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DestructionTraceAheadMinSpeed;                     // 0x2D4(0x4)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DestructionTraceAheadAmount;                       // 0x2D8(0x4)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DestructionImpulseAmount;                          // 0x2DC(0x4)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               DestructionTraceHalfSize;                          // 0x2E0(0xC)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bCanDestroyProps;                                  // 0x2EC(0x1)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_170C[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        HitRequiredMinSpeed;                               // 0x2F0(0x4)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxHealthToDestroyProp;                            // 0x2F4(0x4)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaxBudgetForActorTick;                             // 0x2F8(0x4)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bSupportsWraps;                                    // 0x2FC(0x1)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_170D[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        ExitVehicleCoolDown;                               // 0x300(0x4)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bInheritScale;                                     // 0x304(0x1)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDontApplyDragInAir;                               // 0x305(0x1)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_170E[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        HoldToExitTime;                                    // 0x308(0x4)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDriverCanDamageVehicle;                           // 0x30C(0x1)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_170F[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        ForceExitZOffset;                                  // 0x310(0x4)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxWheelSpinWound;                                 // 0x314(0x4)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortVehicleConfigs");
		return Clss;
	}

};

// 0x28 (0x340 - 0x318)
// Class FortniteGame.FortSKMotorVehicleConfigs
class UFortSKMotorVehicleConfigs : public UFortVehicleConfigs
{
public:
	float                                        WheelRotationRange;                                // 0x318(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        VehicleFrontLowLateralFrictionMultiplier;          // 0x31C(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        VehicleRearLowLateralFrictionMultiplier;           // 0x320(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        VehicleFrontHighLateralFrictionMultiplier;         // 0x324(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        VehicleRearHighLateralFrictionMultiplier;          // 0x328(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LowToHighFrictionDuration;                         // 0x32C(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        UphillIncline;                                     // 0x330(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ReverseToForwardFrontFriction;                     // 0x334(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ReverseToForwardRearFriction;                      // 0x338(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ReverseToForwardMaxSpeed;                          // 0x33C(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortSKMotorVehicleConfigs");
		return Clss;
	}

};

// 0xE8 (0x428 - 0x340)
// Class FortniteGame.FortAntelopeVehicleConfigs
class UFortAntelopeVehicleConfigs : public UFortSKMotorVehicleConfigs
{
public:
	float                                        BounceCrouchTime;                                  // 0x340(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BounceCrouchTimeDeadzone;                          // 0x344(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BounceRecoilTime;                                  // 0x348(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BounceForcePerMass;                                // 0x34C(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PassengerLeanMagnitude;                            // 0x350(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PassengerLeanMinMagnitude;                         // 0x354(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PassengerLeanLeftRightInterpolationPerSecond;      // 0x358(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PassengerLeanUpInterpolationPerSecond;             // 0x35C(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PassengerLeanDownInterpolationPerSecond;           // 0x360(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PassengerLeanResetInterpolationPerSecond;          // 0x364(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PassengerLeanDeadzone;                             // 0x368(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        NaturalSlideMinAngle;                              // 0x36C(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BoostAccumulationRate;                             // 0x370(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BoostExpenseRate;                                  // 0x374(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BoostPassiveExpenseRate;                           // 0x378(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BoostTopSpeedMultiplier;                           // 0x37C(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BoostTopSpeedInAirMultiplier;                      // 0x380(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BoostSteeringMultiplier;                           // 0x384(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BoostCooldown;                                     // 0x388(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BoostSteeringMultiplierRampTime;                   // 0x38C(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BoostSlowExtraStrength;                            // 0x390(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BoostTopSpeedForceMultiplier;                      // 0x394(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        VehicleBoostFrontFrictionMultiplier;               // 0x398(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        VehicleBoostRearFrictionMultiplier;                // 0x39C(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BoostMinPushForce;                                 // 0x3A0(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BoostSmashForgivenessDuration;                     // 0x3A4(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BoostSmashForgivenessImpulse;                      // 0x3A8(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CameraShakeAmplitudeMin;                           // 0x3AC(0x4)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CameraShakeAmplitudeMax;                           // 0x3B0(0x4)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SpringFudgeFactor;                                 // 0x3B4(0x4)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CameraShakeNormalizedSpeed;                        // 0x3B8(0x4)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CameraShakeSpeedCurvePow;                          // 0x3BC(0x4)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BoostingCameraShakeAmount;                         // 0x3C0(0x4)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BoostCameraShakeFrequency;                         // 0x3C4(0x4)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SmoothedSpringCompressionMin;                      // 0x3C8(0x4)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SmoothedSpringCompressionMax;                      // 0x3CC(0x4)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ScreenShakeFrequencyMin;                           // 0x3D0(0x4)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ScreenShakeFrequencyMax;                           // 0x3D4(0x4)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PassengerCameraShakeMultiplier;                    // 0x3D8(0x4)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ScreenShakeYawFrequencyMultiplier;                 // 0x3DC(0x4)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          WheelSlideBoostColorWhenNotPowerSliding;           // 0x3E0(0x10)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TreadWidth;                                        // 0x3F0(0x4)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RumbleMultiplier;                                  // 0x3F4(0x4)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SparksRumbleMultiplier;                            // 0x3F8(0x4)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BoostCameraOffset;                                 // 0x3FC(0x4)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ADSCameraDistance;                                 // 0x400(0x4)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PassengerCameraOffset;                             // 0x404(0x4)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ADSInterpSpeed;                                    // 0x408(0x4)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxHealthToDestroyPropWhileBoosting;               // 0x40C(0x4)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BoostDestructionAngle;                             // 0x410(0x4)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        UpNormalMinProtected;                              // 0x414(0x4)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        UpForwardMinProtected;                             // 0x418(0x4)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinBoostTime;                                      // 0x41C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TractionVelocityDelta;                             // 0x420(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1710[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAntelopeVehicleConfigs");
		return Clss;
	}

};

// 0x30 (0x58 - 0x28)
// Class FortniteGame.FortAppActivationSoundMixManager
class UFortAppActivationSoundMixManager : public UObject
{
public:
	struct FFortAppActivationSoundMixPair        InAppSoundsAllowedMix;                             // 0x28(0x10)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FFortAppActivationSoundMixPair        AppActiveSoundMix;                                 // 0x38(0x10)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_1711[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAppActivationSoundMixManager");
		return Clss;
	}

};

// 0x2B8 (0x5E8 - 0x330)
// Class FortniteGame.FortGameplayEffectDeliveryActor
class AFortGameplayEffectDeliveryActor : public AActor
{
public:
	uint8                                        Pad_1716[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FFortGameplayEffectContainerSpec      EffectContainerSpecToApplyOnTouch;                 // 0x350(0x80)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	bool                                         bKillOnExplode;                                    // 0x3D0(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bSetHiddenOnKill;                                  // 0x3D1(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bKillOnMaxTargetsTouched;                          // 0x3D2(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1717[0x5];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FFortGameplayEffectContainerSpec      EffectContainerSpecToApplyOnExplode;               // 0x3D8(0x80)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	TArray<struct FFortGameplayEffectContainerSpec> AdditionalExplodeEffectContainers;                 // 0x458(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	float                                        LifespanAfterKill;                                 // 0x468(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TouchingActorsEffectApplicationUpdateTime;         // 0x46C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FOverlapRestrictions>          OverlapRestrictions;                               // 0x470(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	uint8                                        bIsBeingKilled : 1;                                // Mask : 0x1 0x480(0x1)(Net, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bHasExploded : 1;                                  // Mask : 0x2 0x480(0x1)(Net, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        : 1;                                               // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        bIgnoreInstigatorCollision : 1;                    // Mask : 0x8 0x480(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bAddHitResultToTouchApplication : 1;               // Mask : 0x10 0x480(0x1)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bExplosionTransformIgnoresRotation : 1;            // Mask : 0x20 0x480(0x1)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bCanExplodeMultipleTimes : 1;                      // Mask : 0x40 0x480(0x1)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1718[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UPrimitiveComponent*                   CollisionComponent;                                // 0x488(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FFortSpawnContext                     SpawnContext;                                      // 0x490(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditConst, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_1719[0xC0];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	uint8                                        bDoExplosionReentrancyGuard : 1;                   // Mask : 0x1 0x578(0x1)(Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_171A[0x6F];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortGameplayEffectDeliveryActor");
		return Clss;
	}

	void SetNoiseMakingInstigatorOverride(class AActor* NewActor);
	void SetIgnoreInstigatorCollision(bool bShouldIgnore);
	void SetCollisionComponent(class UPrimitiveComponent* NewCollisionComponent);
	void OnTouched(class AActor* OtherActor, class UPrimitiveComponent* OtherComp, struct FHitResult& HitResult, bool bIsOverlap);
	void OnRep_IsBeingKilled();
	void OnRep_HasExplodedReplay();
	void OnExploded(TArray<class AActor*>& HitActors, TArray<struct FHitResult>& HitResults);
	void OnComponentTouch(class UPrimitiveComponent* HitComp, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, struct FHitResult& Hit);
	void OnComponentOverlap(class UPrimitiveComponent* OverlappedComp, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult);
	void KillTimerExpired();
	void Kill();
	bool IsBeingKilled();
	class UPrimitiveComponent* GetCollisionComponent();
	void DoSingleActorHit(struct FHitResult& Hit, bool bBroadcastHit);
	void DoExplosionAtLocation(struct FVector& ExplosionLocation);
	void DoExplosion();
	void ChangeInstigator(class APawn* NewInstigator);
	void BroadcastExplosion(TArray<class AActor*>& HitActors, TArray<struct FHitResult>& HitResults);
	void AddAdditionalExplodeEffectContainer(struct FFortGameplayEffectContainerSpec& ExplodeContainer);
};

// 0x0 (0x5E8 - 0x5E8)
// Class FortniteGame.FortAreaOfEffectCloud
class AFortAreaOfEffectCloud : public AFortGameplayEffectDeliveryActor
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAreaOfEffectCloud");
		return Clss;
	}

};

// 0x20 (0x8C0 - 0x8A0)
// Class FortniteGame.FortArenaCamera
class AFortArenaCamera : public ACineCameraActor
{
public:
	uint8                                        bEnabled : 1;                                      // Mask : 0x1 0x8A0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_171B[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGameplayTag                          CameraZone;                                        // 0x8A4(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_171C[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class UFortSpectatorCameraComponent> CameraComponentType;                               // 0x8B0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_171D[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortArenaCamera");
		return Clss;
	}

};

// 0x50 (0x78 - 0x28)
// Class FortniteGame.FortHLODStreamingData
class UFortHLODStreamingData : public UObject
{
public:
	TSet<class FName>                            MediumLevelHLODPackageNames;                       // 0x28(0x50)(ZeroConstructor, Config, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortHLODStreamingData");
		return Clss;
	}

};

// 0x2F8 (0x720 - 0x428)
// Class FortniteGame.FortAssetManager
class UFortAssetManager : public UAssetManager
{
public:
	TMap<class UObject*, class FName>            GCPreventionPool;                                  // 0x428(0x50)(ZeroConstructor, NativeAccessSpecifierPrivate)
	uint8                                        Pad_171E[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class FName>                          DefaultBundleState;                                // 0x488(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<class FName>                          PlatformBundleState;                               // 0x498(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	class UFortGameData*                         GameData;                                          // 0x4A8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FString                                GameDataName;                                      // 0x4B0(0x10)(ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FString                                MobileGameDataName;                                // 0x4C0(0x10)(ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAthenaGameData*                       AthenaGameData;                                    // 0x4D0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UFortChunkDownloadManager*             ChunkDownloadManager;                              // 0x4D8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FString                                AthenaGameDataName;                                // 0x4E0(0x10)(ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FString                                FastCookTheaterPath;                               // 0x4F0(0x10)(ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FString                                PerfMemTheaterPath;                                // 0x500(0x10)(ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FString                                BROnlyTheaterPath;                                 // 0x510(0x10)(ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FString                                ActiveTheaterListPath;                             // 0x520(0x10)(ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class FName>                          BROnlyLootPackagesExclusionList;                   // 0x530(0x10)(ZeroConstructor, Config, NativeAccessSpecifierPrivate)
	uint8                                        Pad_171F[0x1E0];                                   // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAssetManager");
		return Clss;
	}

};

// 0x30 (0x60 - 0x30)
// Class FortniteGame.FortAsyncAction_AbandonSession
class UFortAsyncAction_AbandonSession : public UBlueprintAsyncActionBase
{
public:
	UMulticastDelegateProperty_                  OnSuccess;                                         // 0x30(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnFailure;                                         // 0x40(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class AFortPlayerController*                 PlayerController;                                  // 0x50(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1720[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAsyncAction_AbandonSession");
		return Clss;
	}

	class UFortAsyncAction_AbandonSession* AbandonSession(class AFortPlayerController* PlayerController);
};

// 0x18 (0x48 - 0x30)
// Class FortniteGame.FortAsyncAction_AuthorityMatchReady
class UFortAsyncAction_AuthorityMatchReady : public UBlueprintAsyncActionBase
{
public:
	UMulticastDelegateProperty_                  OnReady;                                           // 0x30(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_1721[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAsyncAction_AuthorityMatchReady");
		return Clss;
	}

	class UFortAsyncAction_AuthorityMatchReady* MatchReadyAsync(class UObject* WorldContextObject);
};

// 0x30 (0x60 - 0x30)
// Class FortniteGame.FortAsyncAction_CosmeticAdaptiveStatWatcher
class UFortAsyncAction_CosmeticAdaptiveStatWatcher : public UBlueprintAsyncActionBase
{
public:
	UMulticastDelegateProperty_                  OnStatChanged;                                     // 0x30(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class AFortPlayerPawn*                       MyPawn;                                            // 0x40(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1723[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAsyncAction_CosmeticAdaptiveStatWatcher");
		return Clss;
	}

	class UFortAsyncAction_CosmeticAdaptiveStatWatcher* WatchCosmeticStat(class AFortPlayerPawn* Pawn, const struct FFortStatManagerTag& StatTag, int32 DefaultValue);
	void OnWatchedStatChanged__DelegateSignature(class FName StatName, int32 StatValue);
};

// 0x18 (0x48 - 0x30)
// Class FortniteGame.FortAsyncAction_CurrentPlaylistReady
class UFortAsyncAction_CurrentPlaylistReady : public UBlueprintAsyncActionBase
{
public:
	UMulticastDelegateProperty_                  OnReady;                                           // 0x30(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_1724[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAsyncAction_CurrentPlaylistReady");
		return Clss;
	}

	class UFortAsyncAction_CurrentPlaylistReady* PlaylistDataReadyAsync(class UObject* WorldContextObject);
	void HandlePlaylistLoaded(class FName PlaylistName, struct FGameplayTagContainer& PlaylistContextTags);
};

// 0x28 (0x58 - 0x30)
// Class FortniteGame.FortAsyncAction_EnsureClientQuestLogin
class UFortAsyncAction_EnsureClientQuestLogin : public UBlueprintAsyncActionBase
{
public:
	UMulticastDelegateProperty_                  OnSuccess;                                         // 0x30(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnFailure;                                         // 0x40(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UFortQuestManager*                     QuestManager;                                      // 0x50(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAsyncAction_EnsureClientQuestLogin");
		return Clss;
	}

	class UFortAsyncAction_EnsureClientQuestLogin* SendEnsureClientQuestLogin(class UFortQuestManager* QuestManager);
};

// 0x18 (0x48 - 0x30)
// Class FortniteGame.FortAsyncAction_GameStateReady
class UFortAsyncAction_GameStateReady : public UBlueprintAsyncActionBase
{
public:
	UMulticastDelegateProperty_                  OnReady;                                           // 0x30(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_1725[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAsyncAction_GameStateReady");
		return Clss;
	}

	class UFortAsyncAction_GameStateReady* GameStateReadyAsync(class UObject* WorldContextObject);
};

// 0x238 (0x268 - 0x30)
// Class FortniteGame.FortAsyncAction_MakeTieredWaveEncounterSettings
class UFortAsyncAction_MakeTieredWaveEncounterSettings : public UBlueprintAsyncActionBase
{
public:
	UMulticastDelegateProperty_                  OnComplete;                                        // 0x30(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FTieredWaveSetData                    WaveData;                                          // 0x40(0x1B0)(Transient, NativeAccessSpecifierPrivate)
	struct FFortEncounterSettings                EncounterSettings;                                 // 0x1F0(0x68)(Transient, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1726[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAsyncAction_MakeTieredWaveEncounterSettings");
		return Clss;
	}

	class UFortAsyncAction_MakeTieredWaveEncounterSettings* CreateAsyncAction_MakeTieredWaveEncounterSettings(struct FTieredWaveSetData& WaveData, struct FFortEncounterSettings& InEncounterSettings);
};

// 0x60 (0x90 - 0x30)
// Class FortniteGame.FortAsyncAction_OpenChoiceUI
class UFortAsyncAction_OpenChoiceUI : public UBlueprintAsyncActionBase
{
public:
	UMulticastDelegateProperty_                  OnSuccess;                                         // 0x30(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnFailure;                                         // 0x40(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class AFortPlayerController*                 PlayerController;                                  // 0x50(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FChoiceData                           ChoiceItems;                                       // 0x58(0x30)(Transient, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1727[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAsyncAction_OpenChoiceUI");
		return Clss;
	}

	class UFortAsyncAction_OpenChoiceUI* OpenChoiceUI(class AFortPlayerController* PlayerController, const struct FChoiceData& ChoiceItems);
};

// 0x58 (0x88 - 0x30)
// Class FortniteGame.FortAsyncAction_PlayConversation
class UFortAsyncAction_PlayConversation : public UBlueprintAsyncActionBase
{
public:
	UMulticastDelegateProperty_                  OnSuccess;                                         // 0x30(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnCanceled;                                        // 0x40(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnFailure;                                         // 0x50(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class AFortPawn*                             Pawn;                                              // 0x60(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UFortConversation*                     ConversationToPlay;                                // 0x68(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1728[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAsyncAction_PlayConversation");
		return Clss;
	}

	class UFortAsyncAction_PlayConversation* PlayConversation(class AFortPawn* Pawn, class UFortConversation* ConversationToPlay);
};

// 0x30 (0x60 - 0x30)
// Class FortniteGame.FortAsyncAction_RejoinSession
class UFortAsyncAction_RejoinSession : public UBlueprintAsyncActionBase
{
public:
	UMulticastDelegateProperty_                  OnSuccess;                                         // 0x30(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnFailure;                                         // 0x40(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class AFortPlayerController*                 PlayerController;                                  // 0x50(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1729[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAsyncAction_RejoinSession");
		return Clss;
	}

	class UFortAsyncAction_RejoinSession* RejoinSession(class AFortPlayerController* PlayerController);
};

// 0xB0 (0xE0 - 0x30)
// Class FortniteGame.FortAsyncAction_SendQuestStatEvent
class UFortAsyncAction_SendQuestStatEvent : public UBlueprintAsyncActionBase
{
public:
	UMulticastDelegateProperty_                  OnSuccess;                                         // 0x30(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnIgnored;                                         // 0x40(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnFailure;                                         // 0x50(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UFortQuestManager*                     QuestManager;                                      // 0x60(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FDataTableRowHandle                   ObjectiveStat;                                     // 0x68(0x10)(Transient, NoDestructor, NativeAccessSpecifierPrivate)
	struct FGameplayTagContainer                 TargetTags;                                        // 0x78(0x20)(Transient, NativeAccessSpecifierPrivate)
	struct FGameplayTagContainer                 SourceTags;                                        // 0x98(0x20)(Transient, NativeAccessSpecifierPrivate)
	struct FGameplayTagContainer                 ContextTags;                                       // 0xB8(0x20)(Transient, NativeAccessSpecifierPrivate)
	int32                                        Count;                                             // 0xD8(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_172C[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAsyncAction_SendQuestStatEvent");
		return Clss;
	}

	class UFortAsyncAction_SendQuestStatEvent* SendClientStatEventWithTags(class UFortQuestManager* QuestManager, const struct FGameplayTagContainer& TargetTags, const struct FGameplayTagContainer& SourceTags, const struct FGameplayTagContainer& ContextTags, int32 Count);
	class UFortAsyncAction_SendQuestStatEvent* SendClientStatEvent(class UFortQuestManager* QuestManager, const struct FDataTableRowHandle& ObjectiveStat, int32 Count);
};

// 0x18 (0x48 - 0x30)
// Class FortniteGame.FortAsyncAction_TimeOfDayManagerReady
class UFortAsyncAction_TimeOfDayManagerReady : public UBlueprintAsyncActionBase
{
public:
	UMulticastDelegateProperty_                  OnReady;                                           // 0x30(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_172D[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAsyncAction_TimeOfDayManagerReady");
		return Clss;
	}

	class UFortAsyncAction_TimeOfDayManagerReady* GetTimeOfDayManagerReady(class UObject* WorldContextObject);
};

// 0x38 (0x68 - 0x30)
// Class FortniteGame.FortAsyncAction_WaitForClientAnnouncement
class UFortAsyncAction_WaitForClientAnnouncement : public UBlueprintAsyncActionBase
{
public:
	UMulticastDelegateProperty_                  OnAllClientsReady;                                 // 0x30(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnCanceled;                                        // 0x40(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FGuid                                 AnnouncementID;                                    // 0x50(0x10)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FTimerHandle                          CheckAllPlayersReadyTimerHandle;                   // 0x60(0x8)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAsyncAction_WaitForClientAnnouncement");
		return Clss;
	}

	class UFortAsyncAction_WaitForClientAnnouncement* WaitForClientAnnouncement(class UObject* InWorldContextObject, class AFortClientAnnouncement* AnnouncementToWaitFor);
};

// 0x238 (0x568 - 0x330)
// Class FortniteGame.FortAthenaAircraft
class AFortAthenaAircraft : public AActor
{
public:
	struct FLinearColor                          MinimapIconColorTeammate;                          // 0x330(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          MinimapIconColorEnemy;                             // 0x340(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_172E[0x30];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        JumpFlashCount;                                    // 0x380(0x4)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_172F[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class UFortCameraMode_AthenaAircraft> CameraModeClass;                                   // 0x388(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FRotator                              CameraInitialRotation;                             // 0x390(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FVector                               ExitLocation;                                      // 0x39C(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        NumSpawnSlots;                                     // 0x3A8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SpawnOffsetRadius;                                 // 0x3AC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1730[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FAircraftFlightInfo                   FlightInfo;                                        // 0x3C0(0x28)(Net, NoDestructor, Protected, NativeAccessSpecifierProtected)
	float                                        FlightStartTime;                                   // 0x3E8(0x4)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        FlightEndTime;                                     // 0x3EC(0x4)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DropStartTime;                                     // 0x3F0(0x4)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DropEndTime;                                       // 0x3F4(0x4)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ReplicatedFlightTimestamp;                         // 0x3F8(0x4)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        FlightElapsedTime;                                 // 0x3FC(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ClientFlightTimerDrift;                            // 0x400(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1731[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        MiniMapIconScale;                                  // 0x408(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1732[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FSlateBrush                           MiniMapIconBrush;                                  // 0x410(0x88)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	float                                        MiniMapTeamIndicatorIconScale;                     // 0x498(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1733[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FSlateBrush                           MiniMapTeamIndicatorIconBrush;                     // 0x4A0(0x88)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	class UAthenaBattleBusItemDefinition*        DefaultBusSkin;                                    // 0x528(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ABattleBusCosmeticInstanceBase*        SpawnedCosmeticActor;                              // 0x530(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAthenaBattleBusItemDefinition*        AsyncLoadingSkin;                                  // 0x538(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1734[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        AircraftIndex;                                     // 0x550(0x4)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1735[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UFortMiniMapIndicator*                 Indicator;                                         // 0x558(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFortMiniMapIndicator*                 TeamIndicator;                                     // 0x560(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAthenaAircraft");
		return Clss;
	}

	void PlayEffectsForPlayerJumped();
	void OnRep_ReplicatedFlightTimestamp();
	void OnRep_JumpFlashCount();
	float GetDropStartTime();
	float GetDropEndTime();
	void FortAthenaAircraftDelegate__DelegateSignature(class AFortAthenaAircraft* FortAthenaAircraft);
};

// 0x7F0 (0xB80 - 0x390)
// Class FortniteGame.FortAthenaVehicle
class AFortAthenaVehicle : public APawn
{
public:
	uint8                                        Pad_1754[0x38];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	enum class EPhysicalSurface                  PrimarySurfaceType;                                // 0x3C8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortBaseWeaponDamage             WeaponResponseType;                                // 0x3C9(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1755[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        SeatSwitchCooldown;                                // 0x3D0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1756[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bShowDamageNumbers;                                // 0x3D8(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bPlayDamageAudio;                                  // 0x3D9(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShowVehicleHealthBarOnPlayerHUD;                  // 0x3DA(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDestroyBuildingSMActorOnForceExit;                // 0x3DB(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1757[0x14];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGameplayTagContainer                 VehicleTags;                                       // 0x3F0(0x20)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<struct FVehicleSpringInfo>            Springs;                                           // 0x410(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FSpringGroundTriangle                 GroundTriangle;                                    // 0x420(0x18)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	TArray<struct FSMVehicleGear>                Gears;                                             // 0x438(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<struct FSMVehicleGear>                SprintGears;                                       // 0x448(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<struct FSMVehicleGear>                ReverseGears;                                      // 0x458(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	float                                        ForwardDrivingAntiGravityScaler;                   // 0x468(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CameraSpaceForwardDistanceOffset;                  // 0x46C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1758[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        CameraAssistStrength;                              // 0x474(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TimeToAutoCamera;                                  // 0x478(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CameraAssistBaseHeight;                            // 0x47C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CameraAssistUpHillScaler;                          // 0x480(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CameraAssistSteerScaler;                           // 0x484(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CameraAssistForwardScale;                          // 0x488(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinSpeedForAutoCamera;                             // 0x48C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CameraFOVOffset;                                   // 0x490(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1759[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bIgnoreAllFallingDamage;                           // 0x498(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIgnoreNextFallingDamage;                          // 0x499(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_175A[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        VehicleMinHorSpeedToDamage;                        // 0x49C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        VehicleMaxHorSpeedToDamage;                        // 0x4A0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        VehicleMinHorSpeedDamage;                          // 0x4A4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        VehicleMaxHorSpeedDamage;                          // 0x4A8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ImpulseResponseMultiplier;                         // 0x4AC(0x4)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ImpulseResponseZBias;                              // 0x4B0(0x4)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsBraking;                                        // 0x4B4(0x1)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_175B[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        BrakeAboveTopSpeedDelta;                           // 0x4B8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ChangeDirBrakeDelta;                               // 0x4BC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TimeToIdleBrake;                                   // 0x4C0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DragCoefficient;                                   // 0x4C4(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxRearLateralFriction;                            // 0x4C8(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxFrontLateralFriction;                           // 0x4CC(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CameraPitchConstraint;                             // 0x4D0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CameraYawConstraint;                               // 0x4D4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  MainBodyCollision;                                 // 0x4D8(0x8)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               TestInitialLinearVelocity;                         // 0x4E0(0xC)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               TestInitialAngularVelocity;                        // 0x4EC(0xC)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FHitResult                            LookAheadHit;                                      // 0x4F8(0x88)(Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	class UFortVehicleTrickSet*                  TrickSet;                                          // 0x580(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CachedSpeed;                                       // 0x588(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_175C[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  PushForceSocket;                                   // 0x590(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  FrontWheelsSocket;                                 // 0x598(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  RearWheelSockets;                                  // 0x5A0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWeaponHitNotifyAudioBank*             DefaultHitNotifyAudioBank;                         // 0x5A8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnHealthChanged;                                   // 0x5B0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	float                                        LifespanAfterDeath;                                // 0x5C0(0x4)(Edit, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bPlayedDying;                                      // 0x5C4(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_175D[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        LastDamagedTime;                                   // 0x5C8(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_175E[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FSeatTransitionMontage>        SeatTransitions;                                   // 0x5D0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	uint8                                        Pad_175F[0x90];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class UGameplayEffect>           PlayerCollisionGameplayEffect;                     // 0x670(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPrimitiveComponent*                   OverlapComponent;                                  // 0x678(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bHasDriver;                                        // 0x680(0x1)(Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1760[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FFortAthenaVehicleInputState          EmptyDriverInputState;                             // 0x688(0x2C)(Net, NoDestructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_1761[0xFC];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FAthenaCarPlayerSlot>          PlayerSlots;                                       // 0x7B0(0x10)(Edit, Net, ZeroConstructor, RepNotify, Protected, NativeAccessSpecifierProtected)
	TArray<int32>                                PlayerSlotPriorityList;                            // 0x7C0(0x10)(Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_1762[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        GravityMultiplier;                                 // 0x7E0(0x4)(Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1763[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UFortVehicleMovementSet*               VehicleMovementSet;                                // 0x7E8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FReplicatedAthenaVehicleAttributes    VehicleAttributes;                                 // 0x7F0(0x18)(Net, Transient, RepNotify, NoDestructor, Protected, NativeAccessSpecifierProtected)
	TArray<class ABuildingActor*>                IgnoredBuildingActors;                             // 0x808(0x10)(Net, ZeroConstructor, Transient, RepNotify, NativeAccessSpecifierPrivate)
	struct FVehicleTargetOrientation             CorrectTargetOrientation;                          // 0x818(0x24)(Net, Transient, RepNotify, NoDestructor, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1764[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               SafeTeleportLocation;                              // 0x844(0xC)(Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1765[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class UFortCameraMode_AthenaVehicle> CameraModeClass;                                   // 0x858(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FAthenaCarPlayerSlotUnreplicated> PlayerSlotsUnreplicated;                           // 0x860(0x10)(ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	TSubclassOf<class UAnimInstance>             DrivingAnimClass;                                  // 0x870(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bAwaitingCorrectionFromServer;                     // 0x878(0x1)(Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1766[0x163];                                   // Fixing Size After Last Property  [ Dumper-7 ]
	struct FFortAttributeInitializationKey       AttributeInitKey;                                  // 0x9DC(0x10)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1767[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UFortAbilitySystemComponent*           AbilitySystemComponent;                            // 0x9F0(0x8)(ExportObject, Net, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UFortHealthSet*                        HealthSet;                                         // 0x9F8(0x8)(ExportObject, Net, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UFortAthenaImpulseResponseSet*         ImpulseResponseSet;                                // 0xA00(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UFortDamageSet*                        DamageSet;                                         // 0xA08(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UFortHealthBarIndicator*               HealthBarIndicator;                                // 0xA10(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AFortPlayerPawn*                       MostRecentCosmeticSourcePawn;                      // 0xA18(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAthenaVehicleCosmeticItemDefinition*  ActiveCosmeticItem;                                // 0xA20(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AFortPlayerPawn*                       PawnAssociatedWithWrap;                            // 0xA28(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAthenaItemWrapDefinition*             ActiveCosmeticWrap;                                // 0xA30(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class USceneComponent*>               SpawnedCosmeticComponents;                         // 0xA38(0x10)(ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	bool                                         bPendingDeath;                                     // 0xA48(0x1)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1768[0x87];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGameplayTagContainer                 GameplayTags;                                      // 0xAD0(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TArray<struct FIgnoredPawn>                  PawnsToIgnoreForDamge;                             // 0xAF0(0x10)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	TArray<class UBuildingEditModeMetadata*>     WallsVehicleCanDestroy;                            // 0xB00(0x10)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	TArray<class UBuildingEditModeMetadata*>     WallsVehicleCannotDestroyWhenBoosting;             // 0xB10(0x10)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	TArray<TSubclassOf<class ABuildingActor>>    BuildingPropClassesVehicleCanDestroy;              // 0xB20(0x10)(ZeroConstructor, Transient, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	TArray<TSubclassOf<class ABuildingActor>>    BuildingPropClassesVehicleCannotDestroyWhenBoosting; // 0xB30(0x10)(ZeroConstructor, Transient, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	uint8                                        Pad_1769[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	enum class EPhysicalSurface                  SurfaceTypeVehicleOn;                              // 0xB42(0x1)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_176A[0x5];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	UMulticastDelegateProperty_                  OnSurfaceTypeVehicleIsOnChangedDelegate;           // 0xB48(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	class UFortAbilitySet*                       StartupAbilitySet;                                 // 0xB58(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bDestroyOnLastExit;                                // 0xB60(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IndicatorEnabled;                                  // 0xB61(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_176B[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        IndicatorAudibleDistance;                          // 0xB64(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture*                              IndicatorIcon;                                     // 0xB68(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          IndicatorTint;                                     // 0xB70(0x10)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAthenaVehicle");
		return Clss;
	}

	bool WheelsOnGround();
	void WakeUpOnGroundDied(class AActor* DamagedActor, float Damage, class AController* InstigatedBy, class AActor* DamageCauser, const struct FVector& HitLocation, class UPrimitiveComponent* FHitComponent, class FName BoneName, const struct FVector& Momentum);
	void WakeUp();
	void UpdateClientWithVehicleTestInput(const struct FVector& LinearVelocity, const struct FVector& AngularVelocity);
	bool ShouldShowSoundIndicator();
	void SetShootingCone(int32 SeatIdx, const struct FAthenaVehicleShootingCone& InCone);
	void SetPropDestructionParams(const TArray<TSubclassOf<class ABuildingActor>>& InBuildingPropClassesVehicleCanDestroy, const TArray<TSubclassOf<class ABuildingActor>>& InBuildingPropClassesVehicleCannotDestroyWhenBoosting, const TArray<class UBuildingEditModeMetadata*>& InWallsVehicleCanDestroy, const TArray<class UBuildingEditModeMetadata*>& InWallsVehicleCannotDestroyWhenBoosting);
	void SetImpulseResponseZBias(float ZBias);
	void SetImpulseResponseMultiplier(float Multiplier);
	void SetIgnoreNextFallingDamage(bool InIgnoreNextFallingDamage);
	void SetIgnoreAllFallingDamage(bool InIgnoreAllFallingDamage);
	void SetDyingPhysics();
	void SetCurrentFocusedSocketLocation(int32 SeatIndex);
	void ServerUsingRiftPortal(class ABuildingGameplayActor* RiftPortal);
	void ServerUpdateStateSync(TArray<uint8>& StateSyncData);
	void ServerUpdatePhysicsParams(const struct FReplicatedAthenaVehiclePhysicsState& InState);
	void ServerStartFire(uint8 FireModeNum);
	void ServerSetIgnoreNextFallingDamage(bool InIgnoreNextFallingDamage);
	void ServerSetIgnoreAllFallingDamage(bool InIgnoreAllFallingDamage);
	bool ServerOnAttemptInteract(struct FInteractionType& InteractType);
	void ServerCorrectionReceived();
	bool SeatIsTurret(int32 SeatIndex);
	bool RearLateralFrictionHasReachedMax();
	void PawnHitByVehicle(class AFortPawn* Pawn, struct FVector& ImpactPoint, struct FVector& ImpactNormal, const struct FVector& LaunchVector);
	void OnSurfaceTypeVehicleIsOnChanged(enum class EPhysicalSurface SurfaceTypeVehicleIsOn);
	void OnStopTick();
	void OnStartTick();
	void OnStartFire(uint8 FireModeNum);
	void OnRep_VehicleAttributes();
	void OnRep_SurfaceTypeVehicleOn(enum class EPhysicalSurface PreviousSurfaceOn);
	void OnRep_ServerCorrection();
	void OnRep_SafeTeleportLocation();
	void OnRep_PlayerSlots();
	void OnRep_PendingDeath();
	void OnRep_IgnoredBuildingActors();
	void OnRep_HealthSet();
	void OnRep_GravityMultiplier();
	void OnRep_CorrectTargetOrientation();
	void OnRep_AbilitySystemComponent();
	void OnPxComponentWake(class UPrimitiveComponent* WakingComponent, class FName BoneName);
	void OnPawnExitVehicle(class AFortPlayerPawn* PlayerPawn, class FName ExitSocketName);
	void OnPawnEnterVehicle(class AFortPlayerPawn* PlayerPawn, int32 SeatIdx);
	void OnIsSprintingChanged();
	void OnImpactDamageApplied(float Damage, const struct FVector& ImpactNormal);
	void OnHonk();
	void OnHoldExitStopped(class AFortPawn* ExitingPawn);
	void OnHoldExitStarted(class AFortPawn* ExitingPawn, float ExitDuration);
	void OnExitedWaterVolume(struct FVector& WaterSurfacePoint);
	void OnEnteredWaterVolume(struct FVector& WaterSurfacePoint);
	void OnDeathPlayEffects(float Damage, struct FGameplayTagContainer& DamageTags, const struct FVector& Momentum, struct FHitResult& HitInfo, class AFortPawn* InstigatedBy, class AActor* DamageCauser, const struct FGameplayEffectContextHandle& EffectContext);
	void OnDamagePlayEffects(float Damage, struct FGameplayTagContainer& DamageTags, const struct FVector& Momentum, struct FHitResult& HitInfo, class AFortPawn* InstigatedBy, class AActor* DamageCauser, const struct FGameplayEffectContextHandle& EffectContext);
	void OnDamaged(float Damage, struct FGameplayTagContainer& DamageTags, struct FGameplayEffectContextHandle& EffectContext, class AController* EventInstigator, class AActor* DamageCauser);
	void OnCollisionHitEffects(struct FVector& HitLocation, struct FVector& HitNormalImpulse, struct FVector& HitFrictionImpulse, struct FVector& HitNormal, class AActor* HitActor, enum class EPhysicalSurface HitSurfaceType);
	void OnCollisionHitDamageEffects(float DamageTaken);
	float ModifyIncomingDamage(float Damage, struct FGameplayTagContainer& InTags, struct FGameplayEffectContextHandle& EffectContext, class AController* EventInstigator, class AActor* DamageCauser);
	void K2_ApplyCosmeticWrap(class UAthenaItemWrapDefinition* LoadedWrap);
	bool IsSprinting();
	bool IsSlowEnoughToInteract();
	bool IsScrapingSidesOrTop();
	bool IsJumping();
	bool IsInWater();
	bool IsInAir();
	bool IsHonking();
	bool IsCorrectingOrientation();
	bool IsCameraControlledRotation();
	bool IsBraking();
	bool IsAsleep();
	bool IsAirControlling();
	bool HasDriver();
	struct FVector GetVehicleVelocity();
	class FName GetVehicleSeatPrimaryAction(class AFortPlayerPawn* FortPlayerPawn);
	TArray<class FText> GetVehicleSeatLabels(class AFortPlayerPawn* PlayerPawn, enum class ECommonInputType OverrideInputType);
	TArray<class FName> GetVehicleSeatActionNames(class AFortPlayerPawn* PlayerPawn, enum class ECommonInputType OverrideInputType);
	TArray<class FText> GetVehicleSeatActionLabels(class AFortPlayerPawn* PlayerPawn, enum class ECommonInputType OverrideInputType);
	class FName GetVehicleExitActionName(class AFortPlayerPawn* FortPlayerPawn);
	class FName GetVehicleChangeSeatActionName(class AFortPlayerPawn* FortPlayerPawn);
	float GetSteeringAngle();
	struct FVector GetStandingFiringOffsetForSeat(int32 SeatIdx);
	float GetSpringLengthRatio(int32 SpringIdx);
	bool GetShootingCone(int32 SeatIdx, struct FTransform* OutConeTM, struct FAthenaVehicleShootingCone* OutCone);
	struct FVector GetPreviousLinearVelocity();
	struct FVector GetPreviousLinearAcceleration();
	float GetPreviousForwardSpeedKmh();
	class AFortPlayerPawn* GetPawnAtSeat(int32 SeatIdx);
	float GetMaxHealth();
	struct FVector GetIndicatorRelativeOffset();
	float GetHealth();
	float GetForwardSpeedKmh();
	class AFortPlayerPawn* GetDriver();
	class FString GetDisplayName();
	float GetDesiredForwardVelocityDelta();
	float GetDesiredForwardVelocity();
	float GetDesiredForwardSpeedKmh();
	int32 GetCurrentGear();
	float GetCurrentFOV();
	float GetCurrentForwardVelocity();
	int32 GetCurrentBudget();
	float GetCurrentBrakeForce(float ForwardSpeedKmH);
	struct FVector GetCrouchingFiringOffsetForSeat(int32 SeatIdx);
	float GetBrakingDelta();
	TArray<class AFortPlayerPawn*> GetAllPassengers();
	void GameplayCue_Damage(enum class EGameplayCueEvent EventType, const struct FGameplayCueParameters& Parameters);
	int32 FindSeatIndex(class AFortPlayerPawn* PlayerPawn);
	bool EjectSeat(int32 SeatIndex);
	bool EjectPlayerPawn(class AFortPlayerPawn* InPlayerPawn);
	void EjectAllPlayers();
	void DisableTrickCredit();
	void DestroyVehicle();
	void DebugDrawImpactBucket(const struct FVector& Location, const struct FVector& ImpactVector, const struct FColor& Color);
	bool ContainsPlayers();
	bool ClientIsDriver();
	void ClientBroadcastHitDetection(float Radius, float Relevancy, const struct FVector& HalfPoints, const struct FVector& DoublePoints);
	void ChangeSeat();
	bool CanTeleport();
	bool CanShootFromSeat(int32 SeatIndex);
	bool CanDriveOnIncline();
	bool CanCorrectOrientation(class AFortPawn* FP);
	bool CanContainPlayers();
	bool CanAntigravityOnIncline();
	bool BP_CanInteract(class AFortPlayerController* FortPC);
	class UMaterialInstanceDynamic* ApplyMaterialAndUseWrapIfPossible(class UMaterialInterface* MaterialToUse, int32 SlotIndex, bool bAlwaysCreateMID);
	bool AnyWheelsOnGround();
};

// 0x90 (0xC10 - 0xB80)
// Class FortniteGame.FortAthenaSKVehicle
class AFortAthenaSKVehicle : public AFortAthenaVehicle
{
public:
	class USkeletalMeshComponentBudgeted*        SkeletalMesh;                                      // 0xB80(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        WheelOffsetFR;                                     // 0xB88(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        WheelOffsetFL;                                     // 0xB8C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        WheelOffsetLimitF;                                 // 0xB90(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        WheelOffsetBR;                                     // 0xB94(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        WheelOffsetBL;                                     // 0xB98(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        WheelOffsetLimitB;                                 // 0xB9C(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        WheelOffsetLerpPerSecondUp;                        // 0xBA0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        WheelOffsetLerpPerSecondDown;                      // 0xBA4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AxleOffsetZ;                                       // 0xBA8(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AxleCenterF;                                       // 0xBAC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AxleCenterB;                                       // 0xBB0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AxleRollF;                                         // 0xBB4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AxleRollB;                                         // 0xBB8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        WheelRotationFR;                                   // 0xBBC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        WheelRotationFL;                                   // 0xBC0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        WheelRotationBR;                                   // 0xBC4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        WheelRotationBL;                                   // 0xBC8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        WheelRotationVelocityFR;                           // 0xBCC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        WheelRotationVelocityFL;                           // 0xBD0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        WheelRotationVelocityBR;                           // 0xBD4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        WheelRotationVelocityBL;                           // 0xBD8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        WheelSpinFR;                                       // 0xBDC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        WheelSpinFL;                                       // 0xBE0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        WheelSpinBR;                                       // 0xBE4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        WheelSpinBL;                                       // 0xBE8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        WheelSpinVelocityFR;                               // 0xBEC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        WheelSpinVelocityFL;                               // 0xBF0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        WheelSpinVelocityBR;                               // 0xBF4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        WheelSpinVelocityBL;                               // 0xBF8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        WheelSpinDampingPerSecond;                         // 0xBFC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_176E[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAthenaSKVehicle");
		return Clss;
	}

	bool HasPermissionToAlterBuildings();
	float GetModifiedDamageForActor(float Damage, class ABuildingActor* BuildingActor);
};

// 0x80 (0xC90 - 0xC10)
// Class FortniteGame.FortAthenaSKMotorVehicle
class AFortAthenaSKMotorVehicle : public AFortAthenaSKVehicle
{
public:
	//float                                      AntiGravityScalerWhenEmpty;                        // 0xC08(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	//float                                      SpringCompressionRefireTime;                       // 0xC0C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MovementAmountParam;                               // 0xC10(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        CurrentMaxSpringCompression;                       // 0xC14(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SparksLeftParam;                                   // 0xC18(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SparksRightParam;                                  // 0xC1C(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        LeftSlowDustParam;                                 // 0xC20(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        RightSlowDustParam;                                // 0xC24(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        LeftFastDustParam;                                 // 0xC28(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        RightFastDustParam;                                // 0xC2C(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        FastDustParam;                                     // 0xC30(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        CoastingMovementParam;                             // 0xC34(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SkiddingAmountParam;                               // 0xC38(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        InAirParam;                                        // 0xC3C(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ScrapingAmountParam;                               // 0xC40(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        AudioWindParam;                                    // 0xC44(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_176F[0x48];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAthenaSKMotorVehicle");
		return Clss;
	}

	void OnSpringCompression();
	bool IsStandingInPlace();
	bool HasTraction();
	float GetStandingInPlaceSteeringAngle();
	bool GasPedalIsDown();
};

// 0x220 (0xEB0 - 0xC90)
// Class FortniteGame.FortAthenaAntelopeVehicle
class AFortAthenaAntelopeVehicle : public AFortAthenaSKMotorVehicle
{
public:
	//struct FVector                             LeanPositionBack;                                  // 0xC88(0xC)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1770[0x1C];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               LeanPositionFront;                                 // 0xCAC(0xC)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LeanPositionFrontMaxLag;                           // 0xCB8(0x4)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LeanPositionFrontLagCoefficient;                   // 0xCBC(0x4)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1771[0x24];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        LeanImpulseScaleBack;                              // 0xCE4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               BounceOffsetBack;                                  // 0xCE8(0xC)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1772[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UCurveFloat*                           BounceCurve;                                       // 0xCF8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FLinearColor>                  BoostSlideColors;                                  // 0xD00(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	float                                        HandBrakeSkidParam;                                // 0xD10(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BoostParam;                                        // 0xD14(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MovementParam;                                     // 0xD18(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BatteryParam;                                      // 0xD1C(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RumbleIntensity;                                   // 0xD20(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bBoostCameraActive;                                // 0xD24(0x1)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bLocalPlayerADS;                                   // 0xD25(0x1)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1773[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UCameraShake*                          DriverCameraShake;                                 // 0xD28(0x8)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCameraShake*                          PassengerCameraShake;                              // 0xD30(0x8)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AFortPlayerPawn*                       LocalPlayerPawn;                                   // 0xD38(0x8)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystemComponent*              PSC_Boost_Flames;                                  // 0xD40(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CachedSkidValue;                                   // 0xD48(0x4)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1774[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UFortVehicleAudioVoice*                CachedAudioEngineRevUp;                            // 0xD50(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFortVehicleAudioVoice*                CachedAudioSkid;                                   // 0xD58(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFortVehicleAudioVoice*                CachedAudioScrape;                                 // 0xD60(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFortVehicleAudioVoice*                CachedAudioWind;                                   // 0xD68(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFortVehicleAudioVoice*                CachedAudioBoost;                                  // 0xD70(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFortVehicleAudioVoice*                CachedAudioHandbrakeSkid;                          // 0xD78(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFortVehicleAudioVoice*                CachedAudioBoostCharge;                            // 0xD80(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFortVehicleAudioVoice*                CachedAudioEngineIdle;                             // 0xD88(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bOutOfRangeAudioParamsSet;                         // 0xD90(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bBudgetBasedAudioParamsCleared;                    // 0xD91(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1775[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UMaterialInstanceDynamic*              BoostMeterMID;                                     // 0xD98(0x8)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInstanceDynamic*              BodyMID;                                           // 0xDA0(0x8)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystemComponent*              PSC_ATV_Engine_Ready;                              // 0xDA8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystem*                       PS_Sputtering_Flames_Template;                     // 0xDB0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bHaveTriggeredBoostFX;                             // 0xDB8(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsUsingSputteringFlamesTemplate;                  // 0xDB9(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bAreWheelsIced;                                    // 0xDBA(0x1)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1776[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        RenderingDetailMode;                               // 0xDBC(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CacheWheelsBackOpacity;                            // 0xDC0(0x4)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CacheWheelsFrontOpacity;                           // 0xDC4(0x4)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInstanceDynamic*              WheelBlursFront;                                   // 0xDC8(0x8)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInstanceDynamic*              WheelBlursBack;                                    // 0xDD0(0x8)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMeshComponent*                  WheelBlur_BL;                                      // 0xDD8(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMeshComponent*                  WheelBlur_BR;                                      // 0xDE0(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMeshComponent*                  WheelBlur_FL;                                      // 0xDE8(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMeshComponent*                  WheelBlur_FR;                                      // 0xDF0(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1777[0x40];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UParticleSystemComponent*              PSC_WheelDust;                                     // 0xE38(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UParticleSystemComponent*              PSC_WheelSlide;                                    // 0xE40(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UParticleSystemComponent*              PSC_TrailLeft;                                     // 0xE48(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UParticleSystemComponent*              PSC_TrailRight;                                    // 0xE50(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSubclassOf<class UFortAntelopeVehicleConfigs> FortAntelopeVehicleConfigsClass;                   // 0xE58(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bPlayingBoostFX;                                   // 0xE60(0x1)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bPlayingBoostFXForward;                            // 0xE61(0x1)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1778[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        BoostFXTime;                                       // 0xE64(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        BoostFXFOVOffset;                                  // 0xE68(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1779[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UCurveFloat*                           BoostFXStrengthCurve;                              // 0xE70(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCurveFloat*                           BoostFXRumbleStrengthCurve;                        // 0xE78(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_177A[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UFortAntelopeVehicleConfigs*           FortAntelopeVehicleConfigs;                        // 0xE88(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_177B[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FPotentiallyDestroyedBuilding> PotentiallyDestroyedBuildings;                     // 0xEA0(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAthenaAntelopeVehicle");
		return Clss;
	}

	void SmashedThroughBuildingPiece(struct FVector& ImpactPoint, struct FVector& ImpactNormal);
	void SetSkidActive(bool bActive);
	void NaturalSlideEnd();
	void NaturalSlideBegin();
	bool IsSmashing();
	bool IsPassivelyExpendingBoost();
	bool IsNaturalSliding();
	bool IsLocalPlayerRiding();
	bool IsLeaningOrBouncingBack();
	bool IsInBoostSmashForgivenessPeriod();
	bool IsBoosting();
	bool IsAccumulatingBoost();
	class FName GetVehicleJumpActionName(class AFortPlayerPawn* FortPlayerPawn);
	class FName GetGolfCartReverseActionName(class AFortPlayerPawn* FortPlayerPawn);
	class FName GetGolfCartHonkActionName(class AFortPlayerPawn* FortPlayerPawn);
	class FName GetGolfCartForwardActionName(class AFortPlayerPawn* FortPlayerPawn);
	float GetBoostAccumulated();
	void ClearBoostAccumulated();
	void CacheWheelBlurStaticMeshes(class UStaticMeshComponent* InBL, class UStaticMeshComponent* InBR, class UStaticMeshComponent* InFL, class UStaticMeshComponent* InFR);
	void CacheParticleComponentPointers(class UParticleSystemComponent* WheelDust, class UParticleSystemComponent* WheelSlide, class UParticleSystemComponent* TrailLeft, class UParticleSystemComponent* TrailRight, class UParticleSystemComponent* InEngineReady);
	void CacheBoostSM(class UStaticMeshComponent* InBoost);
	void CacheAudioPointers(class UFortVehicleAudioVoice* InAudioEngineRevUp, class UFortVehicleAudioVoice* InAudioSkid, class UFortVehicleAudioVoice* InAudioScrape, class UFortVehicleAudioVoice* InAudioWind, class UFortVehicleAudioVoice* InAudioBoost, class UFortVehicleAudioVoice* InAudioHandbrakeSkid, class UFortVehicleAudioVoice* InAudioBoostCharge, class UFortVehicleAudioVoice* InAudioEngineIdle);
	void BoostFailed();
	void BoostEnd();
	void BoostBegin();
};

// 0x1D0 (0x960 - 0x790)
// Class FortniteGame.FortAthenaCreativePortal
class AFortAthenaCreativePortal : public ABuildingGameplayActor
{
public:
	uint8                                        Pad_177E[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        PortalIndex;                                       // 0x798(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_177F[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AActor*                                DestinationActor;                                  // 0x7A0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxInstantTeleportDistance;                        // 0x7A8(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1780[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  LoadingText;                                       // 0x7B0(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	class FText                                  SavingText;                                        // 0x7C8(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	class FText                                  TeleportingPlayersText;                            // 0x7E0(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	class FText                                  TeleportingVehiclesText;                           // 0x7F8(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	bool                                         bReturnToCreativeHub;                              // 0x810(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1781[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AFortVolume*                           LinkedVolume;                                      // 0x818(0x8)(Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bInErrorState;                                     // 0x820(0x1)(BlueprintVisible, Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bUserInitiatedLoad;                                // 0x821(0x1)(BlueprintVisible, Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1782[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                CreatorName;                                       // 0x828(0x10)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                UserDescription;                                   // 0x838(0x10)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                Mnemonic;                                          // 0x848(0x10)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                ImageURL;                                          // 0x858(0x10)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, RepNotify, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                VideoID;                                           // 0x868(0x10)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FText                                  VolumeDisplayName;                                 // 0x878(0x18)(BlueprintVisible, BlueprintReadOnly, Net, Transient, RepNotify, Protected, NativeAccessSpecifierProtected)
	uint8                                        CurrentPopulation;                                 // 0x890(0x1)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1783[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FUniqueNetIdRepl                      OwningPlayer;                                      // 0x898(0x28)(BlueprintVisible, BlueprintReadOnly, Net, Transient, RepNotify, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FUniqueNetIdRepl>              PlayersReady;                                      // 0x8C0(0x10)(Net, ZeroConstructor, Transient, RepNotify, Protected, NativeAccessSpecifierProtected)
	bool                                         bIsCuratedPortal;                                  // 0x8D0(0x1)(BlueprintVisible, Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1784[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FScalableFloat                        TeleportExitDistance;                              // 0x8D8(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FVector                               TeleportLocation;                                  // 0x8F8(0xC)(BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bDisallowPortalInteract;                           // 0x904(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bPortalOpen;                                       // 0x905(0x1)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1785[0x1A];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class AFortPlayerStateAthena*                CachedOwningPlayerState;                           // 0x920(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1786[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UTexture2D*                            ThumbnailTexture;                                  // 0x938(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1787[0x20];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAthenaCreativePortal");
		return Clss;
	}

	void UpdateThumbnail();
	void TeleportVehicle(class AFortAthenaVehicle* Vehicle);
	void TeleportPlayerToLinkedVolume(class AFortPlayerPawn* PlayerPawn, bool bUseSpawnTags);
	void TeleportPlayerForPlotLoadComplete(class AFortPlayerPawn* PlayerPawn);
	void TeleportPlayer(class AFortPlayerPawn* PlayerPawn, struct FRotator& TeleportRotation);
	void StartedPlotLoadForUser(struct FAsyncTaskResult& Result);
	void PortalOpenChanged();
	void PopulationChanged();
	void OwningPlayerChanged();
	void OverlappingOnBeginPlay(class AActor* Actor);
	void OnUnloadPlotComplete(struct FAsyncTaskResult& Result);
	void OnThumbnailTextureReady();
	void OnRep_PortalOpen();
	void OnRep_PopulationChanged();
	void OnRep_PlayersReady();
	void OnRep_OwningPlayer();
	void OnRep_ImageURLChanged();
	void OnRep_DisplayNameChanged();
	void OnRep_CuratedPortal();
	void OnPlayerPawnTeleported(class AFortPlayerPawn* PlayerPawn);
	void OnClientLoadedStateChanged();
	void NotifyTeleportedVehicle(class AFortAthenaVehicle* Vehicle);
	void NotifyTeleportedPlayerPawn(class AFortPlayerPawn* PlayerPawn);
	bool IsPortalOpen();
	bool IsPortalInteractable();
	class AFortPlayerStateAthena* GetPlayerState();
	class AFortVolume* GetLinkedVolume();
	void FinishedReadingCloudFiles(struct FAsyncTaskResult& Result);
	void DisplayNameChanged();
	void CuratedPortalChanged();
	void ClientSaveStateChanged(bool bSaving);
	void ClientSaveDisplayChanged(bool bSaving);
	void CheckMinigameOnTeleportComplete(class AFortPlayerPawn* PlayerPawn);
};

// 0x100 (0x890 - 0x790)
// Class FortniteGame.FortAthenaSupplyDrop
class AFortAthenaSupplyDrop : public ABuildingGameplayActor
{
public:
	struct FCollisionProfileName                 GroundCollsionProfile;                             // 0x790(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	class USoundCue*                             WaveSpawnSoundCue;                                 // 0x798(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  LootTableNameOverride;                             // 0x7A0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FHitResult                            LastGroundLocationHitResult;                       // 0x7A8(0x88)(BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	float                                        SpawnOffsetZ;                                      // 0x830(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_178B[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class USoundCue*                             SearchingSoundCueLoop;                             // 0x838(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        CachedSpecialActorIdx;                             // 0x840(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  SpecialActorID;                                    // 0x844(0x8)(Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_178C[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FScalableFloat                        InStormDespawnTimeInSeconds;                       // 0x850(0x20)(Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	float                                        CachedInStormDespawnTimeInSeconds;                 // 0x870(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_178D[0x14];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UFortSpectateClickableMapIcon*         SpectatorMapIcon;                                  // 0x888(0x8)(Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAthenaSupplyDrop");
		return Clss;
	}

	class AFortPickup* SpawnPickupFromItemEntry(class UFortWorldItemDefinition* ItemDefinition, struct FFortItemEntry& InItemEntry, int32 NumberToSpawn, class AFortPawn* TriggeringPawn, const struct FVector& Position, const struct FVector& Direction);
	class AFortPickup* SpawnPickup(class UFortWorldItemDefinition* ItemDefinition, int32 NumberToSpawn, class AFortPawn* TriggeringPawn, const struct FVector& Position, const struct FVector& Direction);
	void SpawningLootOnDestruction(class AController* EventInstigator);
	void SetLootTableNameOverride(class FName TableNameToUse);
	void SendSpawnLootAnalytics(class AFortPlayerController* FortPC, TArray<struct FFortItemEntry>& ItemsToSpawn);
	void OnLootSpawned();
	void OnDespawnDueToStorm();
	void OnCheckForBeingInStorm();
	bool IsPlayingAReplay();
	bool GroundTrace(struct FVector& TraceStart, struct FVector& TraceEnd, struct FHitResult* OutHit);
	void GetSupplyDropSpawnData(float* MinSpawnHeight, float* MaxSpawnHeight);
	struct FVector FindGroundLocationAt(struct FVector& InLocation);
};

// 0x10 (0x8A0 - 0x890)
// Class FortniteGame.FortAthenaCreativeSupplyDrop
class AFortAthenaCreativeSupplyDrop : public AFortAthenaSupplyDrop
{
public:
	TArray<struct FFortItemQuantityPair>         SpawnItems;                                        // 0x890(0x10)(Edit, BlueprintVisible, Net, ZeroConstructor, SaveGame, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAthenaCreativeSupplyDrop");
		return Clss;
	}

};

// 0x510 (0x1120 - 0xC10)
// Class FortniteGame.FortAthenaDoghouseVehicle
class AFortAthenaDoghouseVehicle : public AFortAthenaSKVehicle
{
public:
	//float                                      AntiGravityScalerWhenEmpty;                        // 0xC08(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	//float                                      CameraPitchInterpSpeed;                            // 0xC0C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CameraYawInterpSpeed;                              // 0xC10(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PropSpeed;                                         // 0xC14(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PropRotation;                                      // 0xC18(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BoostTopSpeedKmh;                                  // 0xC1C(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BoostThrust;                                       // 0xC20(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AirbrakeDragCoefficient;                           // 0xC24(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HardRollHeadingMatchRate;                          // 0xC28(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HardRollHeadingSteerRate;                          // 0xC2C(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HardRollOffsetPercent;                             // 0xC30(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DivebombSpeedMinKmh;                               // 0xC34(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DivebombSpeedMaxKmh;                               // 0xC38(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DivebombSteerPitchRate;                            // 0xC3C(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DivebombHeadingMatchRate;                          // 0xC40(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AileronRollMatchRate;                              // 0xC44(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AileronRollRotationalDampingCoefficient;           // 0xC48(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AileronRollMaxRotationalDampingTorque;             // 0xC4C(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TimeBeforeStallWithNoPassengersInAir;              // 0xC50(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TimeBeforeStallWithNoPassengersOnGround;           // 0xC54(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFlightParams                         BaseFlightParams;                                  // 0xC58(0xA4)(Edit, BlueprintVisible, BlueprintReadOnly, Config, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_178E[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FFortRechargingActionTimer            BoostAction;                                       // 0xD00(0x58)(Edit, BlueprintVisible, BlueprintReadOnly, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FAileronRoll                          AileronRoll;                                       // 0xD58(0x60)(Edit, BlueprintVisible, BlueprintReadOnly, ContainsInstancedReference, NativeAccessSpecifierPublic)
	float                                        AileronRollDoubleClickSpeed;                       // 0xDB8(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bFreelookAutoRecenter;                             // 0xDBC(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_178F[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        FreelookPitchConstraintDegrees;                    // 0xDC0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FreelookYawConstraintDegrees;                      // 0xDC4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FreelookSensitivity;                               // 0xDC8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MouseSteerSensitivity;                             // 0xDCC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FreelookInterpolation;                             // 0xDD0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FreelookReturnAcceleration;                        // 0xDD4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FreelookReturnDecelleration;                       // 0xDD8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  ShootCenterPointSocket;                            // 0xDDC(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ShootAimAheadDistance;                             // 0xDE4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1790[0x2FC];                                   // Fixing Size After Last Property  [ Dumper-7 ]
	struct FReplicatedControlState               ControlState;                                      // 0x10E4(0x1C)(Net, RepNotify, NoDestructor, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1791[0x20];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAthenaDoghouseVehicle");
		return Clss;
	}

	void ServerUpdateControlState(const struct FReplicatedControlState& InControlState);
	void ServerBeginAileronRoll(enum class EAileronRollDirection Direction);
	void OnTakeoff();
	void OnRep_ControlState();
	void OnLanding();
	void OnEngineStop();
	void OnEngineStart();
	void MultiBeginAileronRoll(enum class EAileronRollDirection Direction);
	bool IsStandingInPlace();
	bool IsStallingFromAltitude();
	bool IsRollingRight();
	bool IsRollingLeft();
	bool IsRollingInverted();
	bool IsFreelooking();
	bool IsFlying();
	bool IsEngineOn();
	bool IsEngineAutoStartingInAir();
	bool IsAileronRolling();
	float GetStandingInPlaceSteeringAngle();
	struct FVector GetShootCenterPointLocal();
	struct FVector GetShootCenterPoint();
	struct FVector GetFlightControlTorque();
	struct FFlightControlSurfaces& GetFlightControlSurfaceTargets();
	struct FFlightControlSurfaces& GetFlightControlSurfaces();
	struct FVector GetFlightControlForce();
	float GetAltitudeZ();
	struct FVector GetAimPointLocal();
	struct FVector GetAimPoint();
	enum class EAileronRollDirection GetAileronRollDirection();
	bool GasPedalIsDown();
};

// 0x10 (0x340 - 0x330)
// Class FortniteGame.FortAthenaExitCraftBalloon
class AFortAthenaExitCraftBalloon : public AActor
{
public:
	class UStaticMeshComponent*                  RootMeshComp;                                      // 0x330(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPhysicsConstraintComponent*           PhysicsComp;                                       // 0x338(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAthenaExitCraftBalloon");
		return Clss;
	}

};

// 0x190 (0xD10 - 0xB80)
// Class FortniteGame.FortAthenaExitCraft
class AFortAthenaExitCraft : public AFortAthenaVehicle
{
public:
	class UStaticMeshComponent*                  MeshComponent;                                     // 0xB80(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMeshComponent*                  OverlapMesh;                                       // 0xB88(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFortAthenaExitCraftInfo*              ExitCraftInfo;                                     // 0xB90(0x8)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1792[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  CraftSpecialActorID;                               // 0xBB0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1793[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	enum class EExitCraftState                   CurrentState;                                      // 0xBBC(0x1)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1794[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class AFortPlayerPawnAthena*>         OverlappingPawns;                                  // 0xBC0(0x10)(Net, ZeroConstructor, RepNotify, Protected, NativeAccessSpecifierProtected)
	TSubclassOf<class AFortAthenaExitCraftBalloon> BalloonClass;                                      // 0xBD0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AFortAthenaExitCraftBalloon*           BalloonActor;                                      // 0xBD8(0x8)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UFortVehicleConfigs>       FortVehicleConfigClass;                            // 0xBE0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCurveFloat*                           GettingIntoPostionCurve_Location;                  // 0xBE8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCurveFloat*                           GettingIntoPostionCurve_Rotation;                  // 0xBF0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        BuildingZOffset;                                   // 0xBF8(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1795[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGameplayTagContainer                 TagsToApplyOnAttached;                             // 0xC00(0x20)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	class FText                                  InteractText;                                      // 0xC20(0x18)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	float                                        SafetyTimerTime;                                   // 0xC38(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1796[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UMaterialInterface*>            VehicleSkins;                                      // 0xC40(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	int32                                        VehicleSkinIndex;                                  // 0xC50(0x4)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1797[0xC];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class AFortPlayerPawnAthena*>         PlayersNeedingSeats;                               // 0xC60(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1798[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FLocationLerpData                     LocationLerpData;                                  // 0xC88(0x38)(Net, RepNotify, NoDestructor, NativeAccessSpecifierPrivate)
	struct FRotationLerpData                     RotationLerpData;                                  // 0xCC0(0x50)(Net, RepNotify, NoDestructor, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAthenaExitCraft");
		return Clss;
	}

	void OnRep_VehicleSkinIndex();
	void OnRep_RotationLerpData();
	void OnRep_QualifyingPlayers();
	void OnRep_LocationLerpData();
	void OnRep_CurrentState();
	void OnRep_BalloonActor();
	void OnRemakeMIDs();
	void OnOverlapStart(class AActor* TestActor);
	void OnOverlapEnd(class AActor* TestActor);
	void OnNewState(enum class EExitCraftState NewState);
	void OnMoveStart();
	void OnMoveEnd();
	void OnDepartFinished();
	struct FVector GetBalloonLocation();
	void CheatDepart();
};

// 0x3E8 (0x418 - 0x30)
// Class FortniteGame.FortAthenaExitCraftInfo
class UFortAthenaExitCraftInfo : public UPrimaryDataAsset
{
public:
	TSubclassOf<class AFortAthenaExitCraft>      ExitCaftClass;                                     // 0x30(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class AFortAthenaExitCraftSpawner> ExitCraftSpawnerClass;                             // 0x38(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FExitCraftInfo                        ExitCraftInfo;                                     // 0x40(0x188)(Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FGameplayTag                          SpecialActorSpawnerTag;                            // 0x1C8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSlateBrush                           SpawnerMinimapIconBrush;                           // 0x1D0(0x88)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FVector2D                             SpawnerMinimapIconScale;                           // 0x258(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSlateBrush                           SpawnerCompassIconBrush;                           // 0x260(0x88)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FVector2D                             SpawnerCompassIconScale;                           // 0x2E8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          SpecialActorCraftTag;                              // 0x2F0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSlateBrush                           CraftMinimapIconBrush;                             // 0x2F8(0x88)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FVector2D                             CraftMinimapIconScale;                             // 0x380(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSlateBrush                           CraftCompassIconBrush;                             // 0x388(0x88)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FVector2D                             CraftCompassIconScale;                             // 0x410(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAthenaExitCraftInfo");
		return Clss;
	}

};

// 0x60 (0x390 - 0x330)
// Class FortniteGame.FortAthenaExitCraftSpawner
class AFortAthenaExitCraftSpawner : public AActor
{
public:
	uint8                                        Pad_1799[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UCapsuleComponent*                     DestructionOverlapCapsule;                         // 0x348(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFortAthenaExitCraftInfo*              ExitCraftInfo;                                     // 0x350(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class ABuildingSMActor*>              BuildingActorsToDestroy;                           // 0x358(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	class FName                                  SpawnerSpecialActorID;                             // 0x368(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_179A[0x20];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAthenaExitCraftSpawner");
		return Clss;
	}

	void StartExitCraftSpawnTimer();
	void DestroyBlockingActors();
};

// 0x0 (0x40 - 0x40)
// Class FortniteGame.FortAthenaExplosionImpulseExecutionCalculation
class UFortAthenaExplosionImpulseExecutionCalculation : public UFortGameplayEffectExecutionCalculation
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAthenaExplosionImpulseExecutionCalculation");
		return Clss;
	}

};

// 0x130 (0x1250 - 0x1120)
// Class FortniteGame.FortAthenaFerretVehicle
class AFortAthenaFerretVehicle : public AFortAthenaDoghouseVehicle
{
public:
	//float                                      BoostParam;                                        // 0x1118(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	//float                                      MovementParam;                                     // 0x111C(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RumbleIntensity;                                   // 0x1120(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bBoostCameraActive;                                // 0x1124(0x1)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bLocalPlayerADS;                                   // 0x1125(0x1)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_179B[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UCameraShake*                          DriverCameraShake;                                 // 0x1128(0x8)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCameraShake*                          PassengerCameraShake;                              // 0x1130(0x8)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AFortPlayerPawn*                       LocalPlayerPawn;                                   // 0x1138(0x8)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CurrentMaxSpringCompression;                       // 0x1140(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SpringCompressionRefireTime;                       // 0x1144(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SparksRightParam;                                  // 0x1148(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MovementAmountParam;                               // 0x114C(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PassengerDamageOnDestruction;                      // 0x1150(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_179C[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class UGameplayEffect>           GEDamagePassengersOnDeath;                         // 0x1158(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinPropSpeedWhenShooting;                          // 0x1160(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_179D[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AFortWeaponRangedDualFerret*           CachedWeapon;                                      // 0x1168(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFortWeaponRangedItemDefinition*       CachedWeaponDef;                                   // 0x1170(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CachedOverheatMax;                                 // 0x1178(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CachedOverheatValue;                               // 0x117C(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        OverheatValueRepped;                               // 0x1180(0x4)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bWeaponEquipped;                                   // 0x1184(0x1)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_179E[0xB];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UParticleSystemComponent*              PSC_TrailTopLeft;                                  // 0x1190(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UParticleSystemComponent*              PSC_TrailTopRight;                                 // 0x1198(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UParticleSystemComponent*              PSC_TrailBottomLeft;                               // 0x11A0(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UParticleSystemComponent*              PSC_TrailBottomRight;                              // 0x11A8(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSubclassOf<class UFortFerretVehicleConfigs> FortFerretVehicleConfigsClass;                     // 0x11B0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UStaticMeshComponent*                  BoostMeterSM;                                      // 0x11B8(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UStaticMeshComponent*                  PropellerSM;                                       // 0x11C0(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UMaterialInstanceDynamic*              BoostMID;                                          // 0x11C8(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UParticleSystemComponent*              PlaneSpeedFX;                                      // 0x11D0(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UFortVehicleAudioVoice*                FortAudioMovementClose;                            // 0x11D8(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UFortVehicleAudioVoice*                FortAudioMovementDistant;                          // 0x11E0(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UFortVehicleAudioVoice*                FortAudioWindFirstPerson;                          // 0x11E8(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UFortVehicleAudioVoice*                FortAudioDive;                                     // 0x11F0(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UFortVehicleAudioVoice*                FortAudioTaxi;                                     // 0x11F8(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UFortVehicleAudioVoice*                FortAudioSpark;                                    // 0x1200(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UFortFerretVehicleConfigs*             FortFerretVehicleConfigs;                          // 0x1208(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bWeaponOverheatDataHasBeenCached;                  // 0x1210(0x1)(Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_179F[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FFortCachedWeaponOverheatData         CachedWeaponOverheatData;                          // 0x1214(0x18)(Net, NoDestructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_17A0[0xC];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FPotentiallyDestroyedBuilding> PotentiallyDestroyedBuildings;                     // 0x1238(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	uint8                                        Pad_17A1[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAthenaFerretVehicle");
		return Clss;
	}

	void SmashedThroughBuildingPiece(struct FVector& ImpactPoint, struct FVector& ImpactNormal);
	void SetSkidActive(bool bActive);
	void OnSpringCompression();
	void OnRep_OverheatValueRepped();
	bool IsTryingToShoot();
	bool IsShooting();
	bool IsLocalPlayerRiding();
	bool IsBoosting();
	class FName GetVehicleJumpActionName(class AFortPlayerPawn* FortPlayerPawn);
	float GetOverheatScaler();
	float GetOverheatingMaxValue();
	float GetCurrentOverheatValue();
	void CachePropAndBoostMeterSM(class UStaticMeshComponent* InPropSM, class UStaticMeshComponent* InBoostSM);
	void CachePlaneFX(class UParticleSystemComponent* InPlaneSpeedFX);
	void CacheParticleComponentPointers(class UParticleSystemComponent* InTrailTopLeft, class UParticleSystemComponent* InTrailTopRight, class UParticleSystemComponent* InTrailBottomLeft, class UParticleSystemComponent* InTrailBottomRight);
	void CacheAudioVoicePointers(class UFortVehicleAudioVoice* InAudioMovementClose, class UFortVehicleAudioVoice* InAudioMovementDistant, class UFortVehicleAudioVoice* InAudioWindFirstPerson, class UFortVehicleAudioVoice* InAudioDive, class UFortVehicleAudioVoice* InAudioTaxi, class UFortVehicleAudioVoice* InAudioSpark);
	void BoostEnd();
	void BoostBegin();
};

// 0x160 (0xDF0 - 0xC90)
// Class FortniteGame.FortAthenaGoatVehicle
class AFortAthenaGoatVehicle : public AFortAthenaSKMotorVehicle
{
public:
	//struct FVector                             LeanPositionFR;                                    // 0xC88(0xC)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_17A2[0x1C];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        LeanImpulseScaleFR;                                // 0xCAC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               LeanPositionBR;                                    // 0xCB0(0xC)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_17A3[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        LeanImpulseScaleBR;                                // 0xCD4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               LeanPositionBL;                                    // 0xCD8(0xC)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_17A4[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        LeanImpulseScaleBL;                                // 0xCFC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               BounceOffsetFR;                                    // 0xD00(0xC)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               BounceOffsetBR;                                    // 0xD0C(0xC)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               BounceOffsetBL;                                    // 0xD18(0xC)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_17A5[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UCurveFloat*                           BounceCurve;                                       // 0xD28(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FLinearColor>                  BoostSlideColors;                                  // 0xD30(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	float                                        HandBrakeSkidParam;                                // 0xD40(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BoostParam;                                        // 0xD44(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MovementParam;                                     // 0xD48(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BatteryParam;                                      // 0xD4C(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RumbleIntensity;                                   // 0xD50(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bBoostCameraActive;                                // 0xD54(0x1)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bLocalPlayerADS;                                   // 0xD55(0x1)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_17A6[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UCameraShake*                          DriverCameraShake;                                 // 0xD58(0x8)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCameraShake*                          PassengerCameraShake;                              // 0xD60(0x8)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AFortPlayerPawn*                       LocalPlayerPawn;                                   // 0xD68(0x8)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_17A7[0x50];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UParticleSystemComponent*              PSC_WheelDust;                                     // 0xDC0(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UParticleSystemComponent*              PSC_WheelSlide;                                    // 0xDC8(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UParticleSystemComponent*              PSC_TrailLeft;                                     // 0xDD0(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UParticleSystemComponent*              PSC_TrailRight;                                    // 0xDD8(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSubclassOf<class UFortGoatVehicleConfigs>   FortGoatVehicleConfigsClass;                       // 0xDE0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UFortGoatVehicleConfigs*               FortGoatVehicleConfigs;                            // 0xDE8(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAthenaGoatVehicle");
		return Clss;
	}

	void SetSkidActive(bool bActive);
	void PowerSlideEnd();
	void PowerSlideBegin();
	bool IsPowerSliding();
	bool IsLocalPlayerRiding();
	bool IsLeaningOrBouncingFR();
	bool IsLeaningOrBouncingBR();
	bool IsLeaningOrBouncingBL();
	bool IsEBraking();
	bool IsBoosting();
	class FName GetVehicleJumpActionName(class AFortPlayerPawn* FortPlayerPawn);
	class FName GetGolfCartReverseActionName(class AFortPlayerPawn* FortPlayerPawn);
	class FName GetGolfCartHonkActionName(class AFortPlayerPawn* FortPlayerPawn);
	class FName GetGolfCartForwardActionName(class AFortPlayerPawn* FortPlayerPawn);
	class FName GetGolfCartEBrakeActionName(class AFortPlayerPawn* FortPlayerPawn);
	float GetBoostAccumulated();
	void EBrakeEnd();
	void EBrakeBegin();
	void ClearBoostAccumulated();
	void CacheParticleComponentPointers(class UParticleSystemComponent* WheelDust, class UParticleSystemComponent* WheelSlide, class UParticleSystemComponent* TrailLeft, class UParticleSystemComponent* TrailRight);
	void BoostIncrease(int32 AccumulationStepIndex);
	void BoostEnd();
	void BoostBegin();
};

// 0x0 (0x6C8 - 0x6C8)
// Class FortniteGame.FortAthenaGrowthManager
class AFortAthenaGrowthManager : public ABuildingActor
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAthenaGrowthManager");
		return Clss;
	}

};

// 0x90 (0xC0 - 0x30)
// Class FortniteGame.FortAthenaImpulseResponseSet
class UFortAthenaImpulseResponseSet : public UFortAttributeSet
{
public:
	struct FFortGameplayAttributeData            ImpulseMultiplier;                                 // 0x30(0x28)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            ImpulseMagnitude;                                  // 0x58(0x28)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            ImpulseZAngle;                                     // 0x80(0x28)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	uint8                                        Pad_17A8[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAthenaImpulseResponseSet");
		return Clss;
	}

};

// 0x120 (0xD30 - 0xC10)
// Class FortniteGame.FortAthenaJackalVehicle
class AFortAthenaJackalVehicle : public AFortAthenaSKVehicle
{
public:
	//TSubclassOf<class UFortAthenaJackalVehicleConfigs> FortJackalVehicleConfigsClass;                     // 0xC08(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFortAthenaJackalVehicleConfigs*       FortJackalVehicleConfigs;                          // 0xC10(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        NumBoostTimers;                                    // 0xC18(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_17AA[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FFortRechargingActionTimer>    BoostTimers;                                       // 0xC20(0x10)(Edit, BlueprintVisible, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                 AbortSprintPlayerTags;                             // 0xC30(0x20)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                 PreventBoostPlayerTags;                            // 0xC50(0x20)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	uint8                                        Pad_17AB[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class UFortCameraMode_AthenaVehicle> SprintCameraModeClass;                             // 0xC88(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UFortCameraMode_AthenaVehicle> BoostCameraModeClass;                              // 0xC90(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        JumpCharge;                                        // 0xC98(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_17AC[0xC];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UParticleSystemComponent*              CacheBoostFX;                                      // 0xCA8(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystemComponent*              CacheLoopingFX;                                    // 0xCB0(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInstanceDynamic*              BoostMID;                                          // 0xCB8(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFortVehicleAudioVoice*                CacheAudioMovement;                                // 0xCC0(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFortVehicleAudioVoice*                CacheAudioBoost;                                   // 0xCC8(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFortVehicleAudioVoice*                CacheAudioWind;                                    // 0xCD0(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               FrontSpringFXOffset;                               // 0xCD8(0xC)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               RearSpringFXOffset;                                // 0xCE4(0xC)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               FXBoostEnd;                                        // 0xCF0(0xC)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_17AD[0x24];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class UAnimInstance>             BoostingAnimClass;                                 // 0xD20(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_17AE[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAthenaJackalVehicle");
		return Clss;
	}

	void OnWeaponUnholstered();
	void OnJumped(float Charge);
	void OnJumpChargeEnd(float Charge);
	void OnJumpChargeBegin();
	void OnDriveModeChanged();
	void OnBoostEnd();
	void OnBoostBegin();
	void NativeOnBoostEnd();
	void NativeOnBoostBegin();
	bool IsDriveModeOnly();
	bool IsBoosting();
	bool GetSpringHitLocation(int32 SpringIndex, struct FVector* HitLocation);
	struct FFortRechargingActionTimer GetCurrentBoostTimer();
	int32 GetBoostCandidateIndex();
	bool CanJump();
	bool CanChargeJump();
	bool CanBoost();
	bool CanActivateBoost();
	void CacheFX(class UParticleSystemComponent* InBoostFX, class UParticleSystemComponent* InLoopingFX);
	void CacheAudioPointers(class UFortVehicleAudioVoice* InAudioMovement, class UFortVehicleAudioVoice* InAudioBoost, class UFortVehicleAudioVoice* InAudioWind);
};

// 0x108 (0x420 - 0x318)
// Class FortniteGame.FortAthenaJackalVehicleConfigs
class UFortAthenaJackalVehicleConfigs : public UFortVehicleConfigs
{
public:
	float                                        BoostTopSpeedMultiplier;                           // 0x318(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BoostTopSpeedForceMultiplier;                      // 0x31C(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BoostSteeringMultiplier;                           // 0x320(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BoostMinPushForce;                                 // 0x324(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BoostSteeringMultiplierRampTime;                   // 0x328(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BoostCameraAdditionalOffset;                       // 0x32C(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SprintTopSpeedMultiplier;                          // 0x330(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SprintTopSpeedForceMultiplier;                     // 0x334(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SprintMinPushForce;                                // 0x338(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AutoSprintDelay;                                   // 0x33C(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxCombatSpeed;                                    // 0x340(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CombatTransitionDragCoefficient;                   // 0x344(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CombatTransitionDragCoefficient2;                  // 0x348(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SprintCameraAdditionalOffset;                      // 0x34C(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TurnInPlaceSpeed;                                  // 0x350(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxSpeedForTurnInPlaceKmH;                         // 0x354(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BlendOutExtraSpeedTurnInPlaceKmH;                  // 0x358(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinJumpForce;                                      // 0x35C(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxJumpForce;                                      // 0x360(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        JumpChargeRate;                                    // 0x364(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        JumpChargeLossRate;                                // 0x368(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinJumpChargeToActivate;                           // 0x36C(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        JumpRequiredVerticalAngle;                         // 0x370(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        EmptyDragCoefficient;                              // 0x374(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        EmptyDragCoefficient2;                             // 0x378(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxEmptyDragSpeed;                                 // 0x37C(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ForwardAlphaDeadZone;                              // 0x380(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ForwardInputCutoffForSharpTurn;                    // 0x384(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinRightInputForSharpTurn;                         // 0x388(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SharpTurnLateralFrictionRuntimeMultiplier;         // 0x38C(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SharpTurnMinForwardAlpha;                          // 0x390(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        EmptyLateralFrictionRuntimeMultiplier;             // 0x394(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BumpForce;                                         // 0x398(0x4)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        InPlaceForwardPushForce;                           // 0x39C(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxSpeedForInPlaceForwardPush;                     // 0x3A0(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TorsionRollStiff;                                  // 0x3A4(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TorsionRollDamp;                                   // 0x3A8(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TorsionRollAirStiff;                               // 0x3AC(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TorsionRollAirDamp;                                // 0x3B0(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TorsionRollStrength;                               // 0x3B4(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SteerRollFactor;                                   // 0x3B8(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        VehicleMaxRollAccel;                               // 0x3BC(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CorrectionalYawMinVelocitySq;                      // 0x3C0(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CorrectionalYawDotToleranceStart;                  // 0x3C4(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CorrectionalYawDotToleranceEnd;                    // 0x3C8(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CorrectionalYawStiff;                              // 0x3CC(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CorrectionalYawDamp;                               // 0x3D0(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CorrectionalYawMaxAccel;                           // 0x3D4(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxYawCorrectionIncline;                           // 0x3D8(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AimSteeringMultiplier;                             // 0x3DC(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AimSteeringTurnMultiplier;                         // 0x3E0(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AimSteeringStrafeMultiplier;                       // 0x3E4(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bJumpForceWorldVertical;                           // 0x3E8(0x1)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_17AF[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        JumpPercentWorldUpForPureVertical;                 // 0x3EC(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        JumpPercentSurfaceNormal;                          // 0x3F0(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bJumpInstantlyFullCharge;                          // 0x3F4(0x1)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bHolsterWeaponDuringBoostOnServer;                 // 0x3F5(0x1)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bHolsterWeaponDuringBoostOnClient;                 // 0x3F6(0x1)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bPlayHolsterAnimsOnClient;                         // 0x3F7(0x1)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bSwapDriveTagsDuringBoost;                         // 0x3F8(0x1)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDisableReticleDuringBoost;                        // 0x3F9(0x1)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bUseViewRotationDuringSprint;                      // 0x3FA(0x1)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bAlwaysConstrainViewDuringCombat;                  // 0x3FB(0x1)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bAlwaysConstrainViewDuringCombatADS;               // 0x3FC(0x1)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_17B0[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        GroundForwardToUpTolerance;                        // 0x400(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TurnRateExponent;                                  // 0x404(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinSpeedMaxSteeringAngle;                          // 0x408(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxSpeedMaxSteeringAngle;                          // 0x40C(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AllowSharpTurnForwardAlpha;                        // 0x410(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SharpTurnCutoffAlpha;                              // 0x414(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bUseLookAheadTraceInAir;                           // 0x418(0x1)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_17B1[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAthenaJackalVehicleConfigs");
		return Clss;
	}

};

// 0x0 (0x790 - 0x790)
// Class FortniteGame.FortAthenaLowGravZone
class AFortAthenaLowGravZone : public ABuildingGameplayActor
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAthenaLowGravZone");
		return Clss;
	}

	void OnVehicleExitZone(class AFortAthenaVehicle* Vehicle);
	void OnVehicleEnterZone(class AFortAthenaVehicle* Vehicle, float GravityMultiplier);
};

// 0x2E8 (0x618 - 0x330)
// Class FortniteGame.FortAthenaMapInfo
class AFortAthenaMapInfo : public AActor
{
public:
	TSubclassOf<class ABuildingContainer>        TreasureChestClass;                                // 0x330(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FScalableFloat                        TreasureChestMinSpawnPercent;                      // 0x338(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FScalableFloat                        TreasureChestMaxSpawnPercent;                      // 0x358(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	TSubclassOf<class ABuildingContainer>        AmmoBoxClass;                                      // 0x378(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FScalableFloat                        AmmoBoxMinSpawnPercent;                            // 0x380(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FScalableFloat                        AmmoBoxMaxSpawnPercent;                            // 0x3A0(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	TArray<struct FVehicleClassDetails>          VehicleClassDetails;                               // 0x3C0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	TSubclassOf<class ABuildingItemCollectorActor> VendingMachineClass;                               // 0x3D0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FScalableFloat                        VendingMachineRarityCount;                         // 0x3D8(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	TSubclassOf<class AFortAthenaSupplyDrop>     LlamaClass;                                        // 0x3F8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FScalableFloat                        LlamaQuantityMin;                                  // 0x400(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FScalableFloat                        LlamaQuantityMax;                                  // 0x420(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	TArray<class UFortSupplyDropInfo*>           SupplyDropInfoList;                                // 0x440(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	struct FScalableFloat                        SupplyDropMinPlacementHeight;                      // 0x450(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FScalableFloat                        SupplyDropMaxPlacementHeight;                      // 0x470(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	TSubclassOf<class AFortAthenaAircraft>       AircraftClass;                                     // 0x490(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FBox2D                                AircraftSpawnZone;                                 // 0x498(0x14)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	struct FBox2D                                AircraftDropZone;                                  // 0x4AC(0x14)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class AVolume*                               AircraftDropVolume;                                // 0x4C0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FScalableFloat                        SkydivingScanForImpactWorldZ;                      // 0x4C8(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FScalableFloat                        SkydivingForceDeployParachuteWorldZ;               // 0x4E8(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	TArray<struct FAircraftFlightInfo>           FlightInfos;                                       // 0x508(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	struct FScalableFloat                        AircraftDeviationAngle;                            // 0x518(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                        AircraftDistanceFromMidLine;                       // 0x538(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                        AircraftHeight;                                    // 0x558(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                        AircraftSpeed;                                     // 0x578(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                        AircraftDesiredDoorOpenTime;                       // 0x598(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                        SafeZoneStartDelay;                                // 0x5B8(0x20)(Edit, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                        SafeZoneStartingRadius;                            // 0x5D8(0x20)(Edit, Protected, NativeAccessSpecifierProtected)
	TArray<struct FFortSafeZoneVolumeDefinition> SafeZoneVolumeDefinitions;                         // 0x5F8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<struct FFortSafeZoneDefinition>       SafeZoneDefinitions;                               // 0x608(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAthenaMapInfo");
		return Clss;
	}

};

// 0x30 (0x360 - 0x330)
// Class FortniteGame.FortGameplayMutator
class AFortGameplayMutator : public AInfo
{
public:
	uint8                                        Pad_17B3[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	uint8                                        bMutatorActive : 1;                                // Mask : 0x1 0x338(0x1)(Edit, BlueprintVisible, Net, DisableEditOnInstance, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_17B4[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGameplayTagContainer                 GameplayTagContainer;                              // 0x340(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortGameplayMutator");
		return Clss;
	}

	void SetMutatorActive(bool bEnable);
	void OnRep_bMutatorActive();
	bool IsMutatorActive();
};

// 0x18 (0x378 - 0x360)
// Class FortniteGame.FortAthenaMutator
class AFortAthenaMutator : public AFortGameplayMutator
{
public:
	bool                                         bMutatesGameMode;                                  // 0x360(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bMutatesGameState;                                 // 0x361(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_17B5[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AFortGameModeAthena*                   CachedGameMode;                                    // 0x368(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AFortGameStateAthena*                  CachedGameState;                                   // 0x370(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAthenaMutator");
		return Clss;
	}

};

// 0x20 (0x380 - 0x360)
// Class FortniteGame.FortAthenaMutator_AI
class AFortAthenaMutator_AI : public AFortGameplayMutator
{
public:
	TArray<class UFortMovementComp_AIChar*>      DeimosMoveComponents;                              // 0x360(0x10)(ExportObject, ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_17B6[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAthenaMutator_AI");
		return Clss;
	}

};

// 0x0 (0x378 - 0x378)
// Class FortniteGame.FortAthenaMutator_AllowADS
class AFortAthenaMutator_AllowADS : public AFortAthenaMutator
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAthenaMutator_AllowADS");
		return Clss;
	}

};

// 0x788 (0xB00 - 0x378)
// Class FortniteGame.FortAthenaMutator_Barrier
class AFortAthenaMutator_Barrier : public AFortAthenaMutator
{
public:
	TSubclassOf<class AAthenaBigBaseWall>        BigBaseWallClass;                                  // 0x378(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class AAthenaBarrierFlag>        ObjectiveFlag;                                     // 0x380(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_17B7[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FBarrierHeadData                      FoodHeadData;                                      // 0x398(0x10)(Edit, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_17B8[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FBarrierMountedTurretData             MountedTurretOverrideMaterials;                    // 0x3B8(0x18)(Edit, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_17B9[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class AAthenaBigBaseWall*                    BigBaseWall;                                       // 0x3E8(0x8)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FBarrierTeamState                     Team_0_State;                                      // 0x3F0(0x28)(Net, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FBarrierTeamState                     Team_1_State;                                      // 0x418(0x28)(Net, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                        ObjectiveDistanceFromWall;                         // 0x440(0x20)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                        SafeZonePhaseToStartObjectiveDestructionTimer;     // 0x460(0x20)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                        ObjectiveDestructionTimer;                         // 0x480(0x20)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                        ObjectiveZOffset;                                  // 0x4A0(0x20)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                        ObjectiveMaxZDiff;                                 // 0x4C0(0x20)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                        ObjectiveMaxSpawnHeight;                           // 0x4E0(0x20)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                        ObjectiveHealthTiers;                              // 0x500(0x20)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_17BA[0x100];                                   // Fixing Size After Last Property  [ Dumper-7 ]
	struct FScalableFloat                        WallGravity;                                       // 0x620(0x20)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                        SafeZonePhaseWhenToBringDownWall;                  // 0x640(0x20)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                        TimeToBringDownWall;                               // 0x660(0x20)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FFortRespawnLogicData                 RespawnLogicData;                                  // 0x680(0xE0)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                        SafeZonePhaseToTurnOffRespawning;                  // 0x760(0x20)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FAthenaGameMessageData                GameMsg_Intro;                                     // 0x780(0x38)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FAthenaGameMessageData                GameMsg_WallComingDown;                            // 0x7B8(0x38)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FAthenaGameMessageData                GameMsg_WallDown;                                  // 0x7F0(0x38)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FAthenaGameMessageData                GameMsg_Objective_Destroyed_Friendly;              // 0x828(0x38)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FAthenaGameMessageData                GameMsg_Objective_Destroyed_Enemy;                 // 0x860(0x38)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FAthenaGameMessageData                GameMsg_NoMoreRespawnsWarning_Friendly;            // 0x898(0x38)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FAthenaGameMessageData                GameMsg_NoMoreRespawns_Friendly;                   // 0x8D0(0x38)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FAthenaGameMessageData                GameMsg_ObjectiveDamageState_Friendly;             // 0x908(0x38)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_17BB[0x1C0];                                   // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAthenaMutator_Barrier");
		return Clss;
	}

	void OnMutatorGameplayEvent(int32 EventId, int32 EventParam1, int32 EventParam2, int32 EventParam3);
	void OnGamePhaseStepChanged(enum class EAthenaGamePhaseStep GamePhaseStep);
	void CheckHealthThreshold(enum class EFortTeam TeamNum);
};

// 0x8 (0x380 - 0x378)
// Class FortniteGame.FortAthenaMutator_BlockBuilding
class AFortAthenaMutator_BlockBuilding : public AFortAthenaMutator
{
public:
	bool                                         bBlockBuilding;                                    // 0x378(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_17BC[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAthenaMutator_BlockBuilding");
		return Clss;
	}

};

// 0xC0 (0x438 - 0x378)
// Class FortniteGame.FortAthenaMutator_ButterflyEvent
class AFortAthenaMutator_ButterflyEvent : public AFortAthenaMutator
{
public:
	UMulticastDelegateProperty_                  OnPawnBroadcast;                                   // 0x378(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_17BD[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        PawnGatherFrequency;                               // 0x3A8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_17BE[0xC];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FScalableFloat                        PawnSpawnLocationX;                                // 0x3B8(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                        PawnSpawnLocationY;                                // 0x3D8(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                        PawnSpawnMinDistance;                              // 0x3F8(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                        PawnSpawnMaxDistance;                              // 0x418(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAthenaMutator_ButterflyEvent");
		return Clss;
	}

	void UpdatePawnBroadcasting();
	void StopGatheringPawns();
	void StartGatheringPawns();
};

// 0x1E0 (0x558 - 0x378)
// Class FortniteGame.FortAthenaMutator_CreativeTutorial
class AFortAthenaMutator_CreativeTutorial : public AFortAthenaMutator
{
public:
	struct FAthenaGameMessageData                GameMsg_LandOnHub;                                 // 0x378(0x38)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FAthenaGameMessageData                GameMsg_LandOnIsland;                              // 0x3B0(0x38)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FAthenaGameMessageData                GameMsg_Inventory;                                 // 0x3E8(0x38)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FAthenaGameMessageData                GameMsg_IslandMenu;                                // 0x420(0x38)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FAthenaGameMessageData                GameMsg_BackToHub;                                 // 0x458(0x38)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FAthenaGameMessageData                GameMsg_ExploreFriendsIslands;                     // 0x490(0x38)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FAthenaGameMessageData                GameMsg_Permissions;                               // 0x4C8(0x38)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FAthenaGameMessageData                ServerShutdownInitiated;                           // 0x500(0x38)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	bool                                         bHasSeenInventoryTutorial;                         // 0x538(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bHasSeenReturnToCreativeHubTutorial;               // 0x539(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bHasSeenMyIslandTutorial;                          // 0x53A(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bHasSeenWelcomeTutorial;                           // 0x53B(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bHasSeenPermissionsTutorial;                       // 0x53C(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bCanShowMyIslandMessage;                           // 0x53D(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_17BF[0x12];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        ServerShutdownTimeRemaining;                       // 0x550(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_17C0[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAthenaMutator_CreativeTutorial");
		return Clss;
	}

	void StartTrackingEndSkydiving();
	void OnVolumeManagerReplicated();
	void OnPlayerJoinedCreativeIsland();
	void OnPlayerCreativeVolumeChanged(class AFortVolume* Volume);
	void OnMutatorGameplayEvent(int32 EventId, int32 EventParam1, int32 EventParam2, int32 EventParam3);
	void OnGamePhaseChanged(enum class EAthenaGamePhase GamePhase);
	void OnEndSkydiving();
	void OnActorEnteredVolume(class APlayerState* PS, class AFortVolume* Volume);
	void DisplayBackToHubMessage();
};

// 0x8 (0x380 - 0x378)
// Class FortniteGame.FortAthenaMutator_DBNOSetting
class AFortAthenaMutator_DBNOSetting : public AFortAthenaMutator
{
public:
	enum class EDBNOMutatorType                  DBNOSetting;                                       // 0x378(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_17C1[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAthenaMutator_DBNOSetting");
		return Clss;
	}

};

// 0x68 (0x3E0 - 0x378)
// Class FortniteGame.FortAthenaMutator_DeimosSurvival
class AFortAthenaMutator_DeimosSurvival : public AFortAthenaMutator
{
public:
	uint8                                        Pad_17C5[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftObjectPtr<class UEnvQuery>              AdjustSafezoneCentersQuery;                        // 0x380(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FFortAthenaMutator_SurvivalObjectiveData> ObjectivesData;                                    // 0x3A8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	uint8                                        Pad_17C6[0x28];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAthenaMutator_DeimosSurvival");
		return Clss;
	}

	void OnSafezoneChanged();
	void OnPlaylistDataLoaded(class FName PlaylistName, struct FGameplayTagContainer& PlaylistContainerTag);
	void OnBuildingActorDestroyed(class AActor* DamagedActor, float Damage, class AController* InstigatedBy, class AActor* DamageCauser, const struct FVector& HitLocation, class UPrimitiveComponent* FHitComponent, class FName BoneName, const struct FVector& Momentum);
};

// 0x500 (0x878 - 0x378)
// Class FortniteGame.FortAthenaMutator_Disco
class AFortAthenaMutator_Disco : public AFortAthenaMutator
{
public:
	struct FScalableFloat                        GoalScoreToWin;                                    // 0x378(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                        PointAccrualFrequency;                             // 0x398(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                        LastRespawnableSafeZone;                           // 0x3B8(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                        LastSafeZone;                                      // 0x3D8(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FFortRespawnLogicData                 RespawnLogicData;                                  // 0x3F8(0xE0)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	int32                                        LastRespawnableSafeZoneIndex;                      // 0x4D8(0x4)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bRespawnWarningGiven;                              // 0x4DC(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_17C9[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        LastSafeZoneIndex;                                 // 0x4E0(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_17CA[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FControlPointAssetData                ControlPointAssets;                                // 0x4E8(0x38)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TArray<struct FControlPointSpawnData>        ControlPointSpawnData;                             // 0x520(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TArray<struct FControlPointInstanceData>     SpawnedControlPoints;                              // 0x530(0x10)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	TArray<class AFortPlayerStateAthena*>        DancingPlayerList;                                 // 0x540(0x10)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	TArray<class AFortPlayerStateAthena*>        PrevDancingPlayerList;                             // 0x550(0x10)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	float                                        TimeUntilPointAccrual;                             // 0x560(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        SentDiscoOpenedMessagesIndex;                      // 0x564(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FAthenaGameMessageData                GameMsg_Intro;                                     // 0x568(0x38)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FAthenaGameMessageData                GameMsg_FirstCapturePointsEnabled;                 // 0x5A0(0x38)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FAthenaGameMessageData                GameMsg_SecondCapturePointsEnabled;                // 0x5D8(0x38)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FAthenaGameMessageData                GameMsg_ThirdCapturePointsEnabled;                 // 0x610(0x38)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FAthenaGameMessageData                GameMsg_LastCapturePointsEnabled;                  // 0x648(0x38)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FAthenaGameMessageData                GameMsg_CapturePointsEnabled;                      // 0x680(0x38)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FAthenaGameMessageData                GameMsg_CapturePointsDisabled;                     // 0x6B8(0x38)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FAthenaGameMessageData                GameMsg_EnemyCapturedAllPoints;                    // 0x6F0(0x38)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FAthenaGameMessageData                GameMsg_AlliesCapturedAllPoints;                   // 0x728(0x38)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FAthenaGameMessageData                GameMsg_AllyCapturePointLost;                      // 0x760(0x38)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FAthenaGameMessageData                GameMsg_EnemyAboutToWin;                           // 0x798(0x38)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FAthenaGameMessageData                GameMsg_AlliesAboutToWin;                          // 0x7D0(0x38)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FAthenaGameMessageData                GameMsg_NoMoreRespawnsWarning;                     // 0x808(0x38)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FAthenaGameMessageData                GameMsg_NoMoreRespawns;                            // 0x840(0x38)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAthenaMutator_Disco");
		return Clss;
	}

	void OnMutatorGameplayEvent(int32 EventId, int32 EventParam1, int32 EventParam2, int32 EventParam3);
	void OnGamePhaseStepChanged(enum class EAthenaGamePhaseStep GamePhaseStep);
	void OnGamePhaseChanged(enum class EAthenaGamePhase GamePhase);
	void OnCaptureLockBroken(class AAthenaCapturePoint* CapturePoint, enum class EFortTeam LockTeam, enum class EFortTeam BreakTeam);
	void OnCaptureLock(class AAthenaCapturePoint* CapturePoint, enum class EFortTeam LockTeam, bool bIsNewLock);
	bool IsRespawningAllowed();
};

// 0x58 (0x3D0 - 0x378)
// Class FortniteGame.FortAthenaMutator_EnvironmentalDamage
class AFortAthenaMutator_EnvironmentalDamage : public AFortAthenaMutator
{
public:
	struct FGameplayTagQuery                     DamageTagQuery;                                    // 0x378(0x48)(Edit, BlueprintVisible, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	float                                        DamageMultiplier;                                  // 0x3C0(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bExcludeActorsAddedToVolume;                       // 0x3C4(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_17CB[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        WorldActivationTime;                               // 0x3C8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_17CC[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAthenaMutator_EnvironmentalDamage");
		return Clss;
	}

};

// 0x0 (0x28 - 0x28)
// Class FortniteGame.FortAthenaMutator_EQSProviderInterface
class UFortAthenaMutator_EQSProviderInterface : public UInterface
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAthenaMutator_EQSProviderInterface");
		return Clss;
	}

};

// 0x8 (0x380 - 0x378)
// Class FortniteGame.FortAthenaMutator_FallDamageMultiplier
class AFortAthenaMutator_FallDamageMultiplier : public AFortAthenaMutator
{
public:
	float                                        FallDamageMultiplier;                              // 0x378(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_17CD[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAthenaMutator_FallDamageMultiplier");
		return Clss;
	}

};

// 0x18 (0x390 - 0x378)
// Class FortniteGame.FortAthenaMutator_Flag
class AFortAthenaMutator_Flag : public AFortAthenaMutator
{
public:
	class FText                                  GameMsgText_Intro;                                 // 0x378(0x18)(Edit, BlueprintVisible, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAthenaMutator_Flag");
		return Clss;
	}

	void OnMutatorGameplayEvent(int32 EventId, int32 EventParam1, int32 EventParam2, int32 EventParam3);
};

// 0x20 (0x398 - 0x378)
// Class FortniteGame.FortAthenaMutator_GameDifficulty
class AFortAthenaMutator_GameDifficulty : public AFortAthenaMutator
{
public:
	struct FScalableFloat                        GameDifficultyOverride;                            // 0x378(0x20)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAthenaMutator_GameDifficulty");
		return Clss;
	}

};

// 0x18 (0x390 - 0x378)
// Class FortniteGame.FortAthenaMutator_GiveItemsAtPhase
class AFortAthenaMutator_GiveItemsAtPhase : public AFortAthenaMutator
{
public:
	enum class EAthenaGamePhaseStep              PhaseToGiveItems;                                  // 0x378(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_17CE[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FItemsToGive>                  ItemsToGive;                                       // 0x380(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAthenaMutator_GiveItemsAtPhase");
		return Clss;
	}

	void OnGamePhaseStepChanged(enum class EAthenaGamePhaseStep GamePhaseStep);
};

// 0x8 (0x380 - 0x378)
// Class FortniteGame.FortAthenaMutator_GliderRedeploy
class AFortAthenaMutator_GliderRedeploy : public AFortAthenaMutator
{
public:
	bool                                         bGliderRedeploy;                                   // 0x378(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_17CF[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAthenaMutator_GliderRedeploy");
		return Clss;
	}

};

// 0x18 (0x390 - 0x378)
// Class FortniteGame.FortAthenaMutator_Goose
class AFortAthenaMutator_Goose : public AFortAthenaMutator
{
public:
	TSubclassOf<class AFortAthenaFerretVehicle>  VehicleClass;                                      // 0x378(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class AFortAthenaFerretVehicle*>      SpawnedPlanes;                                     // 0x380(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAthenaMutator_Goose");
		return Clss;
	}

};

// 0x18 (0x390 - 0x378)
// Class FortniteGame.FortAthenaMutator_GravityMultiplier
class AFortAthenaMutator_GravityMultiplier : public AFortAthenaMutator
{
public:
	int32                                        GravityOverride;                                   // 0x378(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_17D0[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FGravityMovementData>          CustomGravityData;                                 // 0x380(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAthenaMutator_GravityMultiplier");
		return Clss;
	}

};

// 0x8 (0x380 - 0x378)
// Class FortniteGame.FortAthenaMutator_Hardcore
class AFortAthenaMutator_Hardcore : public AFortAthenaMutator
{
public:
	uint8                                        Pad_17D1[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAthenaMutator_Hardcore");
		return Clss;
	}

};

// 0x18 (0x390 - 0x378)
// Class FortniteGame.FortAthenaMutator_HealthAndShield
class AFortAthenaMutator_HealthAndShield : public AFortAthenaMutator
{
public:
	enum class EAthenaMutatorEvaluators          NumericalMutatorOverride;                          // 0x378(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_17D2[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        MaxHealth;                                         // 0x37C(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        StartingHealth;                                    // 0x380(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MaxShield;                                         // 0x384(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        StartingShield;                                    // 0x388(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_17D3[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAthenaMutator_HealthAndShield");
		return Clss;
	}

};

// 0x628 (0x9A0 - 0x378)
// Class FortniteGame.FortAthenaMutator_Heist
class AFortAthenaMutator_Heist : public AFortAthenaMutator
{
public:
	class UFortAthenaExitCraftInfo*              ExitCraftInfo;                                     // 0x378(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FHeistExitCraftSpawnData>      HeistExitCraftSpawnData;                           // 0x380(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TArray<struct FHeistBlingDropSpawnData>      HeistBlingDropSpawnData;                           // 0x390(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	class USoundCue*                             HeistVictorySoundCue;                              // 0x3A0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FScalableFloat                        SpawnExitCraftInitialDelay;                        // 0x3A8(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                        BlingCarryingEnemiesVisibleTime;                   // 0x3C8(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_17D4[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FHeistExitCraftData>           SpawnedExitCraftList;                              // 0x3F0(0x10)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	bool                                         bCurrExitCraftDeparted;                            // 0x400(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_17D5[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class AFortPlayerPawnAthena*>         ExitCraftOverlappingPawns;                         // 0x408(0x10)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	float                                        SpawnExitCraftTime;                                // 0x418(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        CurrExitCraftIndexToSpawn;                         // 0x41C(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SupplyDropStartingAngle;                           // 0x420(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ExitCraftStartingAngle;                            // 0x424(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        CurrBlingSupplyDropIndexHandled;                   // 0x428(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_17D6[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<int32>                                RemainingExitCraftSpawnIndexes;                    // 0x430(0x10)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	TArray<int32>                                RemainingSupplyDropSpawnIndexes;                   // 0x440(0x10)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	int32                                        NumUnspawnedExitCrafts;                            // 0x450(0x4)(Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        NumSpawnedExitCrafts;                              // 0x454(0x4)(Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        NumDepartedExitCrafts;                             // 0x458(0x4)(Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_17D7[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<int32>                                NumPlayersAliveOnDeparture;                        // 0x460(0x10)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	int32                                        JewelsLostToStorm;                                 // 0x470(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        SafesLostToStorm;                                  // 0x474(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TMap<enum class EFortTeam, struct FHeistTeamHoldingJewelInfo> JewelHeldByTeamMap;                                // 0x478(0x50)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	struct FGameplayTag                          BlingTrackingCategoryTag;                          // 0x4C8(0x8)(Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTag                          SafeSupplyDropTag;                                 // 0x4D0(0x8)(Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTag                          BlingItemTag;                                      // 0x4D8(0x8)(Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTag                          CarryingBlingItemTag;                              // 0x4E0(0x8)(Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTag                          ExitCraftTag;                                      // 0x4E8(0x8)(Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTag                          BlingLootItemTag;                                  // 0x4F0(0x8)(Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        LastAcquiredEnemyMsgTime;                          // 0x4F8(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MinTimeAllowedBetweenAcquiredEnemyMessages;        // 0x4FC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FAthenaGameMessageData                GameMsg_Intro;                                     // 0x500(0x38)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FAthenaGameMessageData                GameMsg_InitialBlingIncoming;                      // 0x538(0x38)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FAthenaGameMessageData                GameMsg_InitialExitCraftsIncoming;                 // 0x570(0x38)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FAthenaGameMessageData                GameMsg_FinalExitCraftIncoming;                    // 0x5A8(0x38)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FAthenaGameMessageData                GameMsg_HeistCompleted;                            // 0x5E0(0x38)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FAthenaGameMessageData                GameMsg_HeistCompletedOneRemains;                  // 0x618(0x38)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FAthenaGameMessageData                GameMsg_DiamondAcquiredByEnemy;                    // 0x650(0x38)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FAthenaGameMessageData                GameMsg_DiamondAcquiredByAlly;                     // 0x688(0x38)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FAthenaGameMessageData                GameMsg_DiamondAcquiredByAllyNoVans;               // 0x6C0(0x38)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FAthenaGameMessageData                GameMsg_DiamondAcquiredByLocalPlayer;              // 0x6F8(0x38)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FAthenaGameMessageData                GameMsg_DiamondAcquiredByLocalPlayerNoVans;        // 0x730(0x38)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FSlateBrush                           FriendlyCarrierBrush;                              // 0x768(0x88)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FVector2D                             FriendlyCarrierBrushScale;                         // 0x7F0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FSlateBrush                           CompassFriendlyCarrierBrush;                       // 0x7F8(0x88)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FSlateBrush                           EnemyCarrierBrush;                                 // 0x880(0x88)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FVector2D                             EnemyCarrierBrushScale;                            // 0x908(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FSlateBrush                           CompassEnemyCarrierBrush;                          // 0x910(0x88)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	class UTexture2D*                            IconToShowInSquadBar;                              // 0x998(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAthenaMutator_Heist");
		return Clss;
	}

	void SendPlayerAcquiredMessage(class AFortPlayerStateAthena* CarryingPlayerState);
	void OnSpecialActorRemoved(struct FSpecialActorRepData& SpecialActorData);
	void OnSpecialActorAdded(struct FSpecialActorRepData& SpecialActorData);
	void OnMutatorGenericIntegerUpdated(int32 GenericIntegerIndex, int32 NewIntegerValue);
	void OnMutatorGameplayEvent(int32 EventId, int32 EventParam1, int32 EventParam2, int32 EventParam3);
	void OnGamePhaseStepChanged(enum class EAthenaGamePhaseStep GamePhaseStep);
	void OnGamePhaseChanged(enum class EAthenaGamePhase GamePhase);
	void OnExitCraftSpawned(class AFortAthenaExitCraft* ExitCraft, class AFortAthenaExitCraftSpawner* ExitCraftSpawner);
	void OnExitCraftIsDestroying(class AFortAthenaExitCraft* ExitCraft);
};

// 0x8 (0x380 - 0x378)
// Class FortniteGame.FortAthenaMutator_InfiniteAmmo
class AFortAthenaMutator_InfiniteAmmo : public AFortAthenaMutator
{
public:
	bool                                         bInfiniteAmmo;                                     // 0x378(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_17D8[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAthenaMutator_InfiniteAmmo");
		return Clss;
	}

};

// 0x8 (0x380 - 0x378)
// Class FortniteGame.FortAthenaMutator_InfiniteResources
class AFortAthenaMutator_InfiniteResources : public AFortAthenaMutator
{
public:
	bool                                         bInfiniteResources;                                // 0x378(0x1)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_17D9[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAthenaMutator_InfiniteResources");
		return Clss;
	}

};

// 0x20 (0x398 - 0x378)
// Class FortniteGame.FortAthenaMutator_InventoryOverride
class AFortAthenaMutator_InventoryOverride : public AFortAthenaMutator
{
public:
	enum class EAthenaLootDropOverride           DropAllItemsOverride;                              // 0x378(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EAthenaLootDropOverride           TrapDropOverride;                                  // 0x379(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EAthenaLootDropOverride           WeaponDropOverride;                                // 0x37A(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EAthenaLootDropOverride           MaterialDropOverride;                              // 0x37B(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EAthenaLootDropOverride           GadgetDropOverride;                                // 0x37C(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EAthenaLootDropOverride           ConsumableDropOverride;                            // 0x37D(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EAthenaLootDropOverride           AmmoDropOverride;                                  // 0x37E(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EAthenaInventorySpawnOverride     InventoryUpdateOverride;                           // 0x37F(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FItemLoadoutContainer>         InventoryLoadouts;                                 // 0x380(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	int32                                        InventoryLoadoutIndex;                             // 0x390(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_17DA[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAthenaMutator_InventoryOverride");
		return Clss;
	}

};

// 0xB8 (0x430 - 0x378)
// Class FortniteGame.FortAthenaMutator_ItemDropOnDeath
class AFortAthenaMutator_ItemDropOnDeath : public AFortAthenaMutator
{
public:
	enum class ERespawnRequirements              RespawnRequirements;                               // 0x378(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_17DB[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FScalableFloat                        PercentAmmoToDrop;                                 // 0x380(0x20)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                        AmmoDespawnTime;                                   // 0x3A0(0x20)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                        AmmoStormDespawnTime;                              // 0x3C0(0x20)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                        MaxAmmoTypeDrops;                                  // 0x3E0(0x20)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                        MaxResourceTypeDrops;                              // 0x400(0x20)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TArray<struct FItemsToDropOnDeath>           ItemsToDrop;                                       // 0x420(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAthenaMutator_ItemDropOnDeath");
		return Clss;
	}

};

// 0x8 (0x380 - 0x378)
// Class FortniteGame.FortAthenaMutator_JumpPenalty
class AFortAthenaMutator_JumpPenalty : public AFortAthenaMutator
{
public:
	bool                                         bApplyJumpPenalty;                                 // 0x378(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_17DC[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAthenaMutator_JumpPenalty");
		return Clss;
	}

};

// 0x10 (0x388 - 0x378)
// Class FortniteGame.FortAthenaMutator_Missions
class AFortAthenaMutator_Missions : public AFortAthenaMutator
{
public:
	TArray<class UFortMissionInfo*>              Missions;                                          // 0x378(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAthenaMutator_Missions");
		return Clss;
	}

};

// 0x8 (0x380 - 0x378)
// Class FortniteGame.FortAthenaMutator_MovementSpeed
class AFortAthenaMutator_MovementSpeed : public AFortAthenaMutator
{
public:
	float                                        MovementSpeed;                                     // 0x378(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_17DD[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAthenaMutator_MovementSpeed");
		return Clss;
	}

};

// 0x8 (0x380 - 0x378)
// Class FortniteGame.FortAthenaMutator_NamePlate
class AFortAthenaMutator_NamePlate : public AFortAthenaMutator
{
public:
	enum class EIndicatorDisplayMode             DisplayMode;                                       // 0x378(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_17DE[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAthenaMutator_NamePlate");
		return Clss;
	}

};

// 0x50 (0x3C8 - 0x378)
// Class FortniteGame.FortAthenaMutator_Omaha
class AFortAthenaMutator_Omaha : public AFortAthenaMutator
{
public:
	struct FOmahaCharacterVariantInfoData        CharacterVariantInfoData;                          // 0x378(0x10)(Edit, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_17DF[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FOmahaCharacterVariantInfoData        SpecialCharacterVariantInfoData;                   // 0x398(0x10)(Edit, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_17E0[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        SpecialTeamMembersCount;                           // 0x3B8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_17E1[0xC];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAthenaMutator_Omaha");
		return Clss;
	}

};

// 0x8 (0x380 - 0x378)
// Class FortniteGame.FortAthenaMutator_PickaxeDamage
class AFortAthenaMutator_PickaxeDamage : public AFortAthenaMutator
{
public:
	bool                                         PickaxeInstantDestroy;                             // 0x378(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_17E2[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAthenaMutator_PickaxeDamage");
		return Clss;
	}

};

// 0x50 (0x3C8 - 0x378)
// Class FortniteGame.FortAthenaMutator_PlayerDamage
class AFortAthenaMutator_PlayerDamage : public AFortAthenaMutator
{
public:
	struct FGameplayTagQuery                     DamageTagQuery;                                    // 0x378(0x48)(Edit, BlueprintVisible, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	float                                        DamageMultiplier;                                  // 0x3C0(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_17E3[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAthenaMutator_PlayerDamage");
		return Clss;
	}

};

// 0x8 (0x380 - 0x378)
// Class FortniteGame.FortAthenaMutator_PlayerFly
class AFortAthenaMutator_PlayerFly : public AFortAthenaMutator
{
public:
	bool                                         bFlyEnabled;                                       // 0x378(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_17E4[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAthenaMutator_PlayerFly");
		return Clss;
	}

};

// 0x10 (0x388 - 0x378)
// Class FortniteGame.FortAthenaMutator_POIOverride
class AFortAthenaMutator_POIOverride : public AFortAthenaMutator
{
public:
	TArray<struct FMapLocation>                  MapLocations;                                      // 0x378(0x10)(Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAthenaMutator_POIOverride");
		return Clss;
	}

};

// 0x50 (0x3C8 - 0x378)
// Class FortniteGame.FortAthenaMutator_PreloadAssets
class AFortAthenaMutator_PreloadAssets : public AFortAthenaMutator
{
public:
	TArray<class UMaterialInstance*>             MaterialInstances;                                 // 0x378(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TArray<class USkeletalMesh*>                 SkeletalMeshes;                                    // 0x388(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TArray<class UStaticMesh*>                   StaticMeshes;                                      // 0x398(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TArray<class UDataAsset*>                    DataAssets;                                        // 0x3A8(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TArray<class UAnimBlueprint*>                AnimBlueprints;                                    // 0x3B8(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAthenaMutator_PreloadAssets");
		return Clss;
	}

};

// 0x58 (0x3D0 - 0x378)
// Class FortniteGame.FortAthenaMutator_RespawnLocation
class AFortAthenaMutator_RespawnLocation : public AFortAthenaMutator
{
public:
	bool                                         bRespawnInAir;                                     // 0x378(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_17E5[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGameplayTagQuery                     LocationQuery;                                     // 0x380(0x48)(Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	bool                                         bRespawnAtDeath;                                   // 0x3C8(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_17E6[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        RespawnHeight;                                     // 0x3CC(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAthenaMutator_RespawnLocation");
		return Clss;
	}

};

// 0x8 (0x380 - 0x378)
// Class FortniteGame.FortAthenaMutator_RespawnTime
class AFortAthenaMutator_RespawnTime : public AFortAthenaMutator
{
public:
	float                                        RespawnTime;                                       // 0x378(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_17E7[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAthenaMutator_RespawnTime");
		return Clss;
	}

};

// 0x1C0 (0x538 - 0x378)
// Class FortniteGame.FortAthenaMutator_Score
class AFortAthenaMutator_Score : public AFortAthenaMutator
{
public:
	int32                                        NumCoinWaves;                                      // 0x378(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bSupportsRespawnConfig;                            // 0x37C(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bRespawnsAllowed;                                  // 0x37D(0x1)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_17E8[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FScalableFloat                        StopRespawnPhase;                                  // 0x380(0x20)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FFortRespawnLogicData                 RespawnLogicData;                                  // 0x3A0(0xE0)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	class FText                                  GameMsgText_Intro;                                 // 0x480(0x18)(Edit, BlueprintVisible, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	class FText                                  GameMsgText_FirstCoinsSpawned;                     // 0x498(0x18)(Edit, BlueprintVisible, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	class FText                                  GameMsgText_CoinsSpawned;                          // 0x4B0(0x18)(Edit, BlueprintVisible, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FAthenaGameMessageData                GameMsg_NoMoreRespawnsWarning;                     // 0x4C8(0x38)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FAthenaGameMessageData                GameMsg_NoMoreRespawns;                            // 0x500(0x38)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAthenaMutator_Score");
		return Clss;
	}

	void OnMutatorGameplayEvent(int32 EventId, int32 EventParam1, int32 EventParam2, int32 EventParam3);
	void OnGamePhaseStepChanged(enum class EAthenaGamePhaseStep GamePhaseStep);
};

// 0x8 (0x380 - 0x378)
// Class FortniteGame.FortAthenaMutator_ShowSafeZoneCircle
class AFortAthenaMutator_ShowSafeZoneCircle : public AFortAthenaMutator
{
public:
	bool                                         bShowSafeZoneCircle;                               // 0x378(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_17E9[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAthenaMutator_ShowSafeZoneCircle");
		return Clss;
	}

};

// 0x90 (0x408 - 0x378)
// Class FortniteGame.FortAthenaMutator_SpawningPolicyBase
class AFortAthenaMutator_SpawningPolicyBase : public AFortAthenaMutator
{
public:
	float                                        SpawnFailureLockoutTime;                           // 0x378(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	enum class EAthenaGamePhase                  GamePhaseToStartSpawning;                          // 0x37C(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_17EA[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	uint8                                        bShouldCenterGroundCheckAtFoundLocation : 1;       // Mask : 0x1 0x380(0x1)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        bShouldMaintainItemCount : 1;                      // Mask : 0x2 0x380(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        bAllowedDespawnToMaintainItemCount : 1;            // Mask : 0x4 0x380(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_17EB[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UFortAthenaMutator_SpawningPolicyData* ItemDataRemovalQueryPending;                       // 0x388(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FScalableFloat                        MinRespawnTime;                                    // 0x390(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FScalableFloat                        MaxRespawnTime;                                    // 0x3B0(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	uint8                                        Pad_17EC[0x38];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAthenaMutator_SpawningPolicyBase");
		return Clss;
	}

};

// 0x78 (0xA8 - 0x30)
// Class FortniteGame.FortAthenaMutator_SpawningPolicyData
class UFortAthenaMutator_SpawningPolicyData : public UDataAsset
{
public:
	struct FScalableFloat                        NumItemsToSpawn;                                   // 0x30(0x20)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class UEnvQuery>              ItemPlacementQuery;                                // 0x50(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class UEnvQuery>              ItemRemovalQuery;                                  // 0x78(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        RemovalQueryInterval;                              // 0xA0(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_17ED[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAthenaMutator_SpawningPolicyData");
		return Clss;
	}

};

// 0xA0 (0x4A8 - 0x408)
// Class FortniteGame.FortAthenaMutator_SpawningPolicySafezone
class AFortAthenaMutator_SpawningPolicySafezone : public AFortAthenaMutator_SpawningPolicyBase
{
public:
	uint8                                        Pad_17EE[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FScalableFloat                        MinInitialSpawnDelayTime;                          // 0x410(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FScalableFloat                        MaxInitialSpawnDelayTime;                          // 0x430(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	TArray<class UFortAthenaMutator_SpawningPolicyData*> ItemSpawningMutatorPerSafeZonePhase;               // 0x450(0x10)(Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	float                                        BaseQueryingAttemptIntervalTimeSeconds;            // 0x460(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_17EF[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftObjectPtr<class UEnvQuery>              BasePlacementQuery;                                // 0x468(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_17F0[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAthenaMutator_SpawningPolicySafezone");
		return Clss;
	}

};

// 0x48 (0x3C0 - 0x378)
// Class FortniteGame.FortAthenaMutator_SpawnLocationQuery
class AFortAthenaMutator_SpawnLocationQuery : public AFortAthenaMutator
{
public:
	struct FGameplayTagQuery                     LocationQuery;                                     // 0x378(0x48)(Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAthenaMutator_SpawnLocationQuery");
		return Clss;
	}

};

// 0x98 (0x410 - 0x378)
// Class FortniteGame.FortAthenaMutator_SpecialEvent
class AFortAthenaMutator_SpecialEvent : public AFortAthenaMutator
{
public:
	uint8                                        Pad_17F2[0x58];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bPlayersAreInvincible;                             // 0x3D0(0x1)(Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_17F3[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bDisableHUD;                                       // 0x3E9(0x1)(Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_17F4[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        AllPlayerTeleportedCount;                          // 0x3EC(0x4)(Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FFortDelayRTMMData                    DelayPlayersFromReturningToLobbyData;              // 0x3F0(0xC)(Net, Transient, RepNotify, NoDestructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_17F5[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	UMulticastDelegateProperty_                  TeleportAllPlayersFinished;                        // 0x400(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAthenaMutator_SpecialEvent");
		return Clss;
	}

	void ToggleHUDs(bool bHide);
	void ToggleDisableWeapons(bool bDisableWeapons);
	void ToggleAllPlayersInvincibility(bool bInvincible);
	void TeleportAllPlayers(const struct FGameplayTagContainer& EventTags, int32 TeleportsPerFrame);
	void StartSafeZoneOverrideForEvent(int32 SafeZoneIndexForEvent);
	void ResetSafeZoneOverrideAfterEvent(int32 MinResetSafeZoneIndex, float MinDelayReturnToMainMenu, float MaxDelayReturnToMainMenu);
	void PauseSupplyDrops(bool bPause);
	void PauseStormProgression(bool bPause);
	void PauseStormDamage(bool bPause);
	void OnRep_DelayPlayersFromReturningToLobbyData();
	void OnRep_bPlayersAreInvincible();
	void OnRep_bDisableHUD();
	void OnRep_AllPlayerTeleportedCount();
	void OnGamePhaseStepChanged(enum class EAthenaGamePhaseStep GamePhaseStep);
	void ForceSafeZoneFinalLocation(const struct FVector& NewFinalLocation, float DefaultAircraftOffsetFromMidLine, float MinDefaultMidlineAngle, float MaxDefaultMidlineAngle);
};

// 0x10 (0x388 - 0x378)
// Class FortniteGame.FortAthenaMutator_StartingInventory
class AFortAthenaMutator_StartingInventory : public AFortAthenaMutator
{
public:
	TArray<struct FItemAndCount>                 StartingInventory;                                 // 0x378(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAthenaMutator_StartingInventory");
		return Clss;
	}

};

// 0x48 (0x3C0 - 0x378)
// Class FortniteGame.FortAthenaMutator_Storm
class AFortAthenaMutator_Storm : public AFortAthenaMutator
{
public:
	uint8                                        Pad_17F6[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FScalableFloat                        SafeZoneFinalDestinationX;                         // 0x380(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                        SafeZoneFinalDestinationY;                         // 0x3A0(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAthenaMutator_Storm");
		return Clss;
	}

	void PauseStormProgression(bool bPause);
	void PauseStormDamage(bool bPause);
};

// 0xA0 (0x418 - 0x378)
// Class FortniteGame.FortAthenaMutator_SupplyDrop
class AFortAthenaMutator_SupplyDrop : public AFortAthenaMutator
{
public:
	uint8                                        Pad_17F7[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FScalableFloat                        SpawnFailureLockoutTime;                           // 0x380(0x20)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	class UEnvQuery*                             BasePlacementQuery;                                // 0x3A0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        BaseQueryingAttemptIntervalTimeSeconds;            // 0x3A8(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_17F8[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FFortSupplyDropMutatorData>    SafeZoneMutatorData;                               // 0x3B0(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TArray<struct FVector>                       BaseQueryResults;                                  // 0x3C0(0x10)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UEnvQuery>              SupplyDropRemovalQuery;                            // 0x3D0(0x28)(Edit, DisableEditOnInstance, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SupplyDropRemovalQueryInterval;                    // 0x3F8(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_17F9[0x1C];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAthenaMutator_SupplyDrop");
		return Clss;
	}

	void RemoveOutOfStormSupplyDrop();
};

// 0x30 (0xD8 - 0xA8)
// Class FortniteGame.FortAthenaMutator_SupplyDropSpawningPolicyData
class UFortAthenaMutator_SupplyDropSpawningPolicyData : public UFortAthenaMutator_SpawningPolicyData
{
public:
	TSoftObjectPtr<class UFortSupplyDropInfo>    SupplyDropInfo;                                    // 0xA8(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AFortGameStateAthena*                  CachedGameState;                                   // 0xD0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAthenaMutator_SupplyDropSpawningPolicyData");
		return Clss;
	}

};

// 0x140 (0x4B8 - 0x378)
// Class FortniteGame.FortAthenaMutator_TDM
class AFortAthenaMutator_TDM : public AFortAthenaMutator
{
public:
	struct FScalableFloat                        NumKillsForVictory;                                // 0x378(0x20)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_17FA[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bIsTwoTeamTDM;                                     // 0x39C(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_17FB[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FFortRespawnLogicData                 RespawnLogicData;                                  // 0x3A0(0xE0)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FAthenaGameMessageData                GameMsg_Intro;                                     // 0x480(0x38)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAthenaMutator_TDM");
		return Clss;
	}

	void OnMutatorGameplayEvent(int32 EventId, int32 EventParam1, int32 EventParam2, int32 EventParam3);
	void OnGamePhaseStepChanged(enum class EAthenaGamePhaseStep GamePhaseStep);
};

// 0x20 (0x398 - 0x378)
// Class FortniteGame.FortAthenaMutator_TeamPartSwapper
class AFortAthenaMutator_TeamPartSwapper : public AFortAthenaMutator
{
public:
	TArray<enum class EFortTeam>                 TeamNums;                                          // 0x378(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<struct FPartSwapData>                 SwapData;                                          // 0x388(0x10)(Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAthenaMutator_TeamPartSwapper");
		return Clss;
	}

};

// 0x8 (0x380 - 0x378)
// Class FortniteGame.FortAthenaMutator_TimeStep
class AFortAthenaMutator_TimeStep : public AFortAthenaMutator
{
public:
	float                                        TimeStep;                                          // 0x378(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_17FC[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAthenaMutator_TimeStep");
		return Clss;
	}

};

// 0x30 (0x3A8 - 0x378)
// Class FortniteGame.FortAthenaMutator_TODOverride
class AFortAthenaMutator_TODOverride : public AFortAthenaMutator
{
public:
	enum class EAthenaTimeOfDayOverride          TimeOfDayOverride;                                 // 0x378(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_17FD[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        TimeOverride;                                      // 0x37C(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SpeedOverride;                                     // 0x380(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_17FE[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FTimeOfDayPhase>               TimeOfDayPhases;                                   // 0x388(0x10)(Edit, ZeroConstructor, Config, NativeAccessSpecifierPrivate)
	TArray<struct FTimeOfDaySpeed>               TimeOfDaySpeeds;                                   // 0x398(0x10)(Edit, ZeroConstructor, Config, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAthenaMutator_TODOverride");
		return Clss;
	}

	TArray<class FText> GetTimeOfDaySpeedNames();
	TArray<class FText> GetTimeOfDayPhaseNames();
};

// 0x8 (0x380 - 0x378)
// Class FortniteGame.FortAthenaMutator_WarmupTime
class AFortAthenaMutator_WarmupTime : public AFortAthenaMutator
{
public:
	float                                        WarmupTime;                                        // 0x378(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_17FF[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAthenaMutator_WarmupTime");
		return Clss;
	}

};

// 0x0 (0x28 - 0x28)
// Class FortniteGame.FortAthenaMutatorUtilities
class UFortAthenaMutatorUtilities : public UObject
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAthenaMutatorUtilities");
		return Clss;
	}

};

// 0x8 (0x7D8 - 0x7D0)
// Class FortniteGame.FortAthenaRiftPortal
class AFortAthenaRiftPortal : public ABuildingGameplayActorConsumable
{
public:
	uint8                                        Pad_1801[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAthenaRiftPortal");
		return Clss;
	}

	void TeleportVehicle(class AFortAthenaVehicle* Vehicle, struct FVector& TeleportLocation);
	void OverlappingOnBeginPlay(class AActor* Actor);
	void NotifyTeleportedVehicle(class AFortAthenaVehicle* Vehicle);
};

// 0x20 (0xBA0 - 0xB80)
// Class FortniteGame.FortAthenaSimpleCar
class AFortAthenaSimpleCar : public AFortAthenaVehicle
{
public:
	class UFortAthenaSimpleCarMovementComponent* WheeledVehicleMovementComponent;                   // 0xB80(0x8)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USkeletalMeshComponent*                MeshComponent;                                     // 0xB88(0x8)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1802[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAthenaSimpleCar");
		return Clss;
	}

};

// 0x90 (0xCA0 - 0xC10)
// Class FortniteGame.FortAthenaSKPushVehicle
class AFortAthenaSKPushVehicle : public AFortAthenaSKVehicle
{
public:
	//float                                      AntiGravityScalerWhenEmpty;                        // 0xC08(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	//float                                      AntiGravityScalerWhenCoasting;                     // 0xC0C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SpringCompressionRefireTime;                       // 0xC10(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MovementAmountParam;                               // 0xC14(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        CurrentMaxSpringCompression;                       // 0xC18(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SparksLeftParam;                                   // 0xC1C(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SparksRightParam;                                  // 0xC20(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        LeftSlowDustParam;                                 // 0xC24(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        RightSlowDustParam;                                // 0xC28(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        LeftFastDustParam;                                 // 0xC2C(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        RightFastDustParam;                                // 0xC30(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        FastDustParam;                                     // 0xC34(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        CoastingMovementParam;                             // 0xC38(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SkiddingAmountParam;                               // 0xC3C(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        InAirParam;                                        // 0xC40(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ScrapingAmountParam;                               // 0xC44(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        AudioWindParam;                                    // 0xC48(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1803[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class UFortSKPushVehicleConfigs> SKPushVehicleConfigsClass;                         // 0xC50(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFortSKPushVehicleConfigs*             SKPushVehicleConfigs;                              // 0xC58(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1804[0x40];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAthenaSKPushVehicle");
		return Clss;
	}

	bool PlayerWantsToCoast();
	void OnSpringCompression();
	void OnIsCoastingChanged();
	bool IsStandingInPlace();
	bool IsReadyToPedalFromCoast();
	bool IsMounting();
	bool IsEndCoasting();
	bool IsDismountingFromCoast();
	bool IsCoasting();
	bool IsApplyingPedalForce();
	class FName GetVehicleJumpActionName(class AFortPlayerPawn* FortPlayerPawn);
	float GetStandingInPlaceSteeringAngle();
	class FName GetShoppingCartCoastActionName(class AFortPlayerPawn* FortPlayerPawn);
	enum class ECoastState GetCoastState();
};

// 0x10 (0xB90 - 0xB80)
// Class FortniteGame.FortAthenaSMVehicle
class AFortAthenaSMVehicle : public AFortAthenaVehicle
{
public:
	class UStaticMeshComponent*                  Mesh;                                              // 0xB80(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1805[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAthenaSMVehicle");
		return Clss;
	}

};

// 0x28 (0x358 - 0x330)
// Class FortniteGame.FortAthenaSpawningPolicyManager
class AFortAthenaSpawningPolicyManager : public AActor
{
public:
	uint8                                        Pad_1806[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class AFortAthenaMutator_SpawningPolicyBase*> SpawningPolicyMutatorList;                         // 0x338(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	class AFortGameModeAthena*                   GameModeAthena;                                    // 0x348(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AFortGameStateAthena*                  GameStateAthena;                                   // 0x350(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAthenaSpawningPolicyManager");
		return Clss;
	}

};

// 0x0 (0xC88 - 0xC88)
// Class FortniteGame.FortAthenaSupplyDropBalloon
class AFortAthenaSupplyDropBalloon : public ABuildingSMActor
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAthenaSupplyDropBalloon");
		return Clss;
	}

};

// 0x0 (0x330 - 0x330)
// Class FortniteGame.FortStaticReplicatedActor
class AFortStaticReplicatedActor : public AActor
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortStaticReplicatedActor");
		return Clss;
	}

};

// 0x0 (0x330 - 0x330)
// Class FortniteGame.FortAthenaWater
class AFortAthenaWater : public AFortStaticReplicatedActor
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAthenaWater");
		return Clss;
	}

};

// 0x18 (0x2F0 - 0x2D8)
// Class FortniteGame.FortAthenaHoverCarMovementComponent
class UFortAthenaHoverCarMovementComponent : public USimpleWheeledVehicleMovementComponent
{
public:
	uint8                                        Pad_1807[0xC];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FReplicatedAthenaVehicleState         ReplicatedAthenaState;                             // 0x2E4(0xC)(Net, Transient, NoDestructor, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAthenaHoverCarMovementComponent");
		return Clss;
	}

	void ServerUpdateAthenaState(float InThrottleInput, float InSteeringInput, const struct FVector& InForwardVectorTarget);
};

// 0x0 (0x450 - 0x450)
// Class FortniteGame.FortAthenaSimpleCarMovementComponent
class UFortAthenaSimpleCarMovementComponent : public UWheeledVehicleMovementComponent4W
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAthenaSimpleCarMovementComponent");
		return Clss;
	}

};

// 0x60 (0x390 - 0x330)
// Class FortniteGame.FortAthenaZipline
class AFortAthenaZipline : public AActor
{
public:
	struct FScalableFloat                        ZiplineVelocity;                                   // 0x330(0x20)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FScalableFloat                        ZiplineAcceleration;                               // 0x350(0x20)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FVector                               StartPosition;                                     // 0x370(0xC)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               EndPosition;                                       // 0x37C(0xC)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bInitialized;                                      // 0x388(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1808[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAthenaZipline");
		return Clss;
	}

	void Initialize(struct FVector& NewStartPosition, struct FVector& NewEndPosition);
};

// 0x1A0 (0x788 - 0x5E8)
// Class FortniteGame.FortProjectileBase
class AFortProjectileBase : public AFortGameplayEffectDeliveryActor
{
public:
	uint8                                        Pad_1809[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FCurveTableRowHandle                  VerticleFireOffset;                                // 0x600(0x10)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FCurveTableRowHandle                  InitialSpeed;                                      // 0x610(0x10)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FCurveTableRowHandle                  MaxSpeed;                                          // 0x620(0x10)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ReplicatedMaxSpeed;                                // 0x630(0x4)(Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        GravityScale;                                      // 0x634(0x4)(Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ChargePercent;                                     // 0x638(0x4)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MomentumTransfer;                                  // 0x63C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bAddOwnerVelocity;                                 // 0x640(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bSpawnPointCanBeUsedByOtherPlayers;                // 0x641(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_180A[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        PlayerSpawnOffset;                                 // 0x644(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bCanBePickedUpWhenStopped;                         // 0x648(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_180B[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UCapsuleComponent*                     CapsuleComponent;                                  // 0x650(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UProjectileMovementComponent*          ProjectileMovementComponent;                       // 0x658(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bDummyProjectile;                                  // 0x660(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bStopSimulatingOnHit;                              // 0x661(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDisableCollisionOnStop;                           // 0x662(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bStoppedSimulatingDueToHit;                        // 0x663(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bReplicateStopSimulationLocation;                  // 0x664(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bClientInterpMovement;                             // 0x665(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bClientInterpRotation;                             // 0x666(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bAutoSelectAttachedForInterp;                      // 0x667(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FHitResult                            SimulationStoppingHit;                             // 0x668(0x88)(Net, IsPlainOldData, RepNotify, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	uint8                                        Pad_180C[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bFiredWhileTargeting;                              // 0x6F4(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_180D[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        ResumeSimulationCount;                             // 0x6F8(0x4)(Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_180E[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	enum class EFortBaseWeaponDamage             WeaponResponseType;                                // 0x704(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_180F[0x33];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGameplayTagContainer                 DefaultTags;                                       // 0x738(0x20)(Edit, BlueprintVisible, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_1810[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class USceneComponent*                       CachedPassByPawn;                                  // 0x760(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1811[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class UBulletWhipTrackerComponentBase> BulletWhipTrackerComponentClass;                   // 0x778(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBulletWhipTrackerComponentBase*       BulletWhipTrackerComponent;                        // 0x780(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortProjectileBase");
		return Clss;
	}

	void SetGravityScale(float InitialGravityScale);
	void ResumeSimulation();
	void OnStoppedOnServer();
	void OnStopCallback(struct FHitResult& Hit);
	void OnStop(struct FHitResult& Hit);
	void OnShot(struct FHitResult& Hit);
	void OnResumeSimulation();
	void OnRep_SimulationStoppingHit();
	void OnRep_ResumeSimulationCount();
	void OnRep_ReplicatedMaxSpeed();
	void OnRep_GravityScale();
	void OnBounceCallback(struct FHitResult& Hit, struct FVector& ImpactVelocity);
	void OnBounce(struct FHitResult& Hit);
	class AFortPlayerController* GetOwnerPlayerController();
	float GetGravityScale();
};

// 0xB8 (0x840 - 0x788)
// Class FortniteGame.FortAttachableProjectileBase
class AFortAttachableProjectileBase : public AFortProjectileBase
{
public:
	struct FAttachedInfo                         AttachedInfo;                                      // 0x788(0xB8)(Net, Transient, RepNotify, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAttachableProjectileBase");
		return Clss;
	}

	void ServerAttachToActor(struct FHitResult& Hit, class AActor* AttachToActor, float StickyOffsetFromPhysicsMesh, float StickyOffsetFromBoneCenter, float NarrowPlacementAgainstVelocityThreshold);
	void OnRep_ReplicatedAttachedInfo();
	void OnFinalizeAttachmentSocketLocandRot(const struct FVector& InWorldPos, const struct FRotator& InWorldRot, class FName InSocketName, bool bFoundClosestOnPhysicsAsset, struct FVector* OutWorldPos, struct FRotator* OutWorldRot, class FName* OutSocketName);
	void OnAttachedToDied(class AActor* DamagedActor, float Damage, class AController* InstigatedBy, class AActor* DamageCauser, const struct FVector& HitLocation, class UPrimitiveComponent* FHitComponent, class FName BoneName, const struct FVector& Momentum);
	class AActor* GetAttachedToActor();
};

// 0x0 (0x28 - 0x28)
// Class FortniteGame.FortAttachToActorInterface
class UFortAttachToActorInterface : public UInterface
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAttachToActorInterface");
		return Clss;
	}

	class AActor* GetActorAttachedTo();
};

// 0x10 (0x40 - 0x30)
// Class FortniteGame.FortAttributeCategory
class UFortAttributeCategory : public UDataAsset
{
public:
	TArray<struct FMyFortCategoryData>           Categories;                                        // 0x30(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAttributeCategory");
		return Clss;
	}

};

// 0x0 (0x28 - 0x28)
// Class FortniteGame.FortAttributeFuelInterface
class UFortAttributeFuelInterface : public UInterface
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAttributeFuelInterface");
		return Clss;
	}

};

// 0x60 (0x90 - 0x30)
// Class FortniteGame.FortAttributeLookupTable
class UFortAttributeLookupTable : public UDataAsset
{
public:
	TArray<struct FFortAttributeInfo>            AttributeInfoList;                                 // 0x30(0x10)(Edit, EditFixedSize, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_1817[0x50];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAttributeLookupTable");
		return Clss;
	}

};

// 0x0 (0x28 - 0x28)
// Class FortniteGame.FortAutoFireTargetInterface
class UFortAutoFireTargetInterface : public UInterface
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAutoFireTargetInterface");
		return Clss;
	}

};

// 0x8 (0x30 - 0x28)
// Class FortniteGame.FortAwardDetector
class UFortAwardDetector : public UObject
{
public:
	class UFortAwardItemDefinition*              AwardDefinition;                                   // 0x28(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAwardDetector");
		return Clss;
	}

};

// 0x8 (0x38 - 0x30)
// Class FortniteGame.FortAwardDetectorFirstKill
class UFortAwardDetectorFirstKill : public UFortAwardDetector
{
public:
	uint8                                        Pad_1818[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAwardDetectorFirstKill");
		return Clss;
	}

};

// 0x0 (0x30 - 0x30)
// Class FortniteGame.FortAwardDetectorKillDeveloper
class UFortAwardDetectorKillDeveloper : public UFortAwardDetector
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAwardDetectorKillDeveloper");
		return Clss;
	}

};

// 0x8 (0x38 - 0x30)
// Class FortniteGame.FortAwardDetectorKillStreak
class UFortAwardDetectorKillStreak : public UFortAwardDetector
{
public:
	int32                                        NeededKills;                                       // 0x30(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1819[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAwardDetectorKillStreak");
		return Clss;
	}

};

// 0x10 (0x370 - 0x360)
// Class FortniteGame.FortAwardItemDefinition
class UFortAwardItemDefinition : public UFortAccountItemDefinition
{
public:
	bool                                         bSingleSharedDetector;                             // 0x360(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bCanEarnMultipleTimes;                             // 0x361(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_181A[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class UFortAwardDetector>        DetectorClass;                                     // 0x368(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAwardItemDefinition");
		return Clss;
	}

};

// 0x18 (0x40 - 0x28)
// Class FortniteGame.FortAwardManager
class UFortAwardManager : public UObject
{
public:
	class AFortPlayerController*                 PlayerController;                                  // 0x28(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class UFortAwardDetector*>            ActiveAwards;                                      // 0x30(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAwardManager");
		return Clss;
	}

	void GetSourceAndContextTags(struct FGameplayTagContainer* OutSourceTags, struct FGameplayTagContainer* OutContextTags);
};

// 0x0 (0x870 - 0x870)
// Class FortniteGame.FortBackpackItemDefinition
class UFortBackpackItemDefinition : public UFortWorldItemDefinition
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortBackpackItemDefinition");
		return Clss;
	}

};

// 0x80 (0x8F0 - 0x870)
// Class FortniteGame.FortBadgeItemDefinition
class UFortBadgeItemDefinition : public UFortWorldItemDefinition
{
public:
	//class FText                                DisplayText;                                       // 0x868(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	uint8                                        Pad_181C[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  FailedDisplayText;                                 // 0x880(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FLinearColor                          BadgeColor;                                        // 0x898(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDataTableRowHandle                   BadgeScoringValuesHandle;                          // 0x8A8(0x10)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class UFortCardPackItemDefinition> BadgeCardPackReward;                               // 0x8B8(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FFortItemQuantityPair>         ItemRewards;                                       // 0x8E0(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortBadgeItemDefinition");
		return Clss;
	}

	int32 GetScoreAwarded(class APlayerController* PlayerController);
	int32 GetMissionPoints();
	int32 GetBadgeScoreThreshold();
	enum class EStatCategory GetBadgeScoreCategory();
};

// 0x18 (0x348 - 0x330)
// Class FortniteGame.FortBallSpawner
class AFortBallSpawner : public AActor
{
public:
	uint8                                        Pad_181D[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class ABuildingGameplayActor>    BallToSpawn;                                       // 0x338(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USphereComponent*                      SphereComp;                                        // 0x340(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortBallSpawner");
		return Clss;
	}

};

// 0x0 (0x28 - 0x28)
// Class FortniteGame.FortBannerUtilities
class UFortBannerUtilities : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortBannerUtilities");
		return Clss;
	}

	struct FLinearColor GetSecondaryColor(struct FHomebaseBannerColor& BannerColor);
	class FName GetRowNameForBannerIconItem(class UFortHomebaseBannerIconItem* BannerIcon);
	class FName GetRowNameForBannerColorItem(class UFortHomebaseBannerColorItem* BannerColor);
	struct FLinearColor GetPrimaryColor(struct FHomebaseBannerColor& BannerColor);
	TSoftObjectPtr<class UTexture2D> GetBannerSmallIconAssetFromRowName(class FName& BannerIconRowName, enum class EBannerUsageContext Usage);
	TSoftObjectPtr<class UTexture2D> GetBannerSmallIconAsset(class UFortHomebaseBannerIconItem* BannerIcon, enum class EBannerUsageContext Usage);
	TSoftObjectPtr<class UTexture2D> GetBannerLargeIconAssetFromRowName(class FName& BannerIconRowName, enum class EBannerUsageContext Usage);
	TSoftObjectPtr<class UTexture2D> GetBannerLargeIconAsset(class UFortHomebaseBannerIconItem* BannerIcon, enum class EBannerUsageContext Usage);
	void GetBannerIconsForCategory(class AFortPlayerController* FortPC, class FName& CategoryRowName, TArray<class UFortAccountItem*>* BannerIcons);
	class UFortHomebaseBannerIconItem* GetBannerIconItemFromRowName(class AFortPlayerController* FortPC, class FName& BannerIconRowName);
	class FName GetBannerIconCategoryRowName(class FName& BannerIconRowName);
	class FText GetBannerIconCategoryName(class FName& CategoryRowName);
	bool GetBannerFullUsageRightsFromRowName(class FName& BannerIconRowName);
	void GetBannerColorsForCategory(class AFortPlayerController* FortPC, class FName& CategoryRowName, TArray<class UFortAccountItem*>* BannerColors);
	struct FLinearColor GetBannerColorSecondaryColorFromRowName(class FName& BannerColorRowName);
	struct FLinearColor GetBannerColorSecondaryColor(class UFortHomebaseBannerColorItem* BannerColor);
	struct FLinearColor GetBannerColorPrimaryColorFromRowName(class FName& BannerColorRowName);
	struct FLinearColor GetBannerColorPrimaryColor(class UFortHomebaseBannerColorItem* BannerColor);
	class UFortHomebaseBannerColorItem* GetBannerColorItemFromRowName(class AFortPlayerController* FortPC, class FName& BannerColorRowName);
	struct FHomebaseBannerColor GetBannerColorFromRowName(class FName& BannerColorRowName);
	class FName GetBannerColorCategoryRowName(class FName& BannerColorRowName);
	class FText GetBannerColorCategoryName(class FName& CategoryRowName);
	struct FHomebaseBannerColor GetBannerColor(class UFortHomebaseBannerColorItem* BannerColor);
};

// 0x58 (0x80 - 0x28)
// Class FortniteGame.FortBenchManager
class UFortBenchManager : public UObject
{
public:
	uint8                                        Pad_1823[0x58];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortBenchManager");
		return Clss;
	}

	void StopFortBench();
};

// 0x0 (0x28 - 0x28)
// Class FortniteGame.FortBlueprintAnalytics
class UFortBlueprintAnalytics : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortBlueprintAnalytics");
		return Clss;
	}

	void FireQuestAnalyticsEvent_BlueprintArray(class UObject* SourceBp, const class FString& EventName, class UFortQuestItem* Quest, TArray<struct FFortAnalyticsEventAttribute>& Attributes);
	void FireQuestAnalyticsEvent_Blueprint(class UObject* SourceBp, const class FString& EventName, class UFortQuestItem* Quest);
	void FireMissionAnalyticsEvent_BlueprintArray(class UObject* SourceBp, const class FString& EventName, TArray<struct FFortAnalyticsEventAttribute>& Attributes);
	void FireMissionAnalyticsEvent_Blueprint(class UObject* SourceBp, const class FString& EventName, struct FFortAnalyticsEventAttribute& Attribute);
	void FireEvent_MatchmakingClientStatusTextChanged(class UObject* SourceBp, bool bMatchmakingIsLocal, bool bUserIsMatchmaking, bool bPartyIsPostMatchmaking, bool bIsStormShieldMission, class FString& QueueState, enum class EMatchmakingState MatchmakingState);
	void FireEvent_MatchmakingClientStarted(class UObject* SourceBp, bool bMatchmakingStarted, bool bClientPartyStateMatchmaking, bool bClientPartyStateChangedPostMatchmaking);
	void FireEvent_MatchmakingClientEnded(class UObject* SourceBp, bool bPartyStateIsWorldView, bool bPartyStateIsTheaterView, bool bPartyStateIsReturningToFrontEnd, bool bMatchmakingComplete, bool bLobbyStarted, bool bMatchmakingCancelled);
	void FireEvent_ItemThrownBP(class UObject* SourceBp, const class FString& ItemName, struct FVector& Velocity);
	void FireEvent_GrapplingHookAttachEvent(class UObject* SourceBp, bool bAttached);
	void FireEvent_BuildLimitProgressIncremented(class UObject* SourceBp, class AFortPlayerController* FortPC, class AFortMission* Mission, enum class EFortBuildingType BuildingType, int32 BuildLimitProgress, int32 BuildLimit);
	void FireEvent_BuildLimitProgressDecremented(class UObject* SourceBp, class AController* Destroyer, class AFortMission* Mission, enum class EFortBuildingType BuildingType, int32 BuildLimitProgress, int32 BuildLimit);
	void FireAnalyticsEvent_BlueprintArray(class UObject* SourceBp, const class FString& EventName, TArray<struct FFortAnalyticsEventAttribute>& Attributes);
	void FireAnalyticsEvent_Blueprint(class UObject* SourceBp, const class FString& EventName, struct FFortAnalyticsEventAttribute& Attribute);
	void FireAnalyticEventEnvironmentalItemUsed(class AFortPlayerController* FortPC, class AActor* EnvironmentalItem);
	struct FFortAnalyticsEventAttribute ConstructAnalyticsAttribute(const class FString& AttributeName, const class FString& StringValue, const struct FGuid& FGuidValue, int32 IntValue, float FloatValue, bool BoolValue);
};

// 0x0 (0x28 - 0x28)
// Class FortniteGame.FortOnboardingAnalytics
class UFortOnboardingAnalytics : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortOnboardingAnalytics");
		return Clss;
	}

	void FireAnalyticsEvent_VinderTipPlayed(class UObject* SourceBp, const class FString& VinderTipTag);
	void FireAnalyticsEvent_TutorialStartupFailed(class UObject* SourceBp, int32 MatchmakingResult);
	void FireAnalyticsEvent_TutorialCompleted(class UObject* SourceBp, bool WasSuccessful);
	void FireAnalyticsEvent_TutorialCanceled(class UObject* SourceBp);
	void FireAnalyticsEvent_MineCartDestroyed(class UObject* SourceBp);
	void FireAnalyticsEvent_CinematicSkipped(class UObject* SourceBp, const class FString& CinematicName);
};

// 0x0 (0x28 - 0x28)
// Class FortniteGame.FortOutpostAnalytics
class UFortOutpostAnalytics : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortOutpostAnalytics");
		return Clss;
	}

	void FireAnalyticsEvent_OutpostSupplyDropPickedUp(class UObject* SourceBp, TArray<struct FFortAnalyticsEventAttribute>& Resourcees);
	void FireAnalyticsEvent_OutpostLoaded(class UObject* SourceBp, int32 DefenseLeg);
	void FireAnalyticsEvent_OutpostLeaveOutpost(class UObject* SourceBp, const class FString& BuildingType, int32 NumWavesStarted, int32 DefenseLeg);
	void FireAnalyticsEvent_OutpostDefenseStart(class UObject* SourceBp, int32 NumWavesTotal, int32 DefenseLeg);
	void FireAnalyticsEvent_OutpostDefenseEnd(class UObject* SourceBp, int32 NumWavesStarted, int32 NumWavesTotal, bool bSucceeded, bool bAbandoned, int32 DefenseLeg);
	void FireAnalyticsEvent_OutpostBuildingDefended(class UObject* SourceBp, const class FString& BuildingType, int32 NumMissionsCompleted);
	void FireAnalyticsEvent_OutpostBuildingActivated(class UObject* SourceBp, const class FString& BuildingType, int32 NumMissionsCompleted);
	void FireAnalyticsEvent_OutpostAttackWaveStarted(class UObject* SourceBp, const class FString& BuildingType, int32 NumWavesStarted, const class FString& Direction, int32 DefenseLeg);
	void FireAnalyticsEvent_OutpostAttackWaveCompleted(class UObject* SourceBp, const class FString& BuildingType, int32 NumWavesCompleted, bool Succeeded, const class FString& Direction, int32 DefenseLeg);
};

// 0x0 (0x28 - 0x28)
// Class FortniteGame.FortDeployableBaseAnalytics
class UFortDeployableBaseAnalytics : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortDeployableBaseAnalytics");
		return Clss;
	}

	void FireAnalyticsEvent_Neighborhood_ConsoleOpened(class AFortPlayerController* FortPC, struct FUniqueNetIdRepl& OwnerId);
	void FireAnalyticsEvent_CombatZone_WaveStarted(class AFortPlayerController* FortPC, int32 Tier, int32 Wave, int32 NumberOfPlayers, TArray<class ADeployableBaseCore*>& TargetCores, TArray<class ADeployableBaseCore*>& AllCores, struct FFortTierCollectionLayoutOutput& CollectionData);
	void FireAnalyticsEvent_CombatZone_WaveFailed(class AFortPlayerController* FortPC, int32 Tier, int32 Wave, int32 NumberOfPlayers, TArray<class ADeployableBaseCore*>& TargetCores, TArray<class ADeployableBaseCore*>& AllCores, struct FFortTierCollectionLayoutOutput& CollectionData);
	void FireAnalyticsEvent_CombatZone_TierStarted(class AFortPlayerController* FortPC, int32 Tier, int32 NumberOfPlayers, struct FFortTierCollectionLayoutOutput& CollectionData);
	void FireAnalyticsEvent_CombatZone_TierFailed(class AFortPlayerController* FortPC, int32 Tier, int32 Wave, int32 NumberOfPlayers, struct FFortTierCollectionLayoutOutput& CollectionData);
	void FireAnalyticsEvent_CombatZone_TierCompleted(class AFortPlayerController* FortPC, int32 Tier, int32 FinalWave, int32 NumberOfPlayers, TArray<class ADeployableBaseCore*>& TargetCores, TArray<class ADeployableBaseCore*>& AllCores, struct FFortTierCollectionLayoutOutput& CollectionData);
	void FireAnalyticsEvent_CombatZone_ConsoleOpened(class AFortPlayerController* FortPC);
};

// 0x0 (0x28 - 0x28)
// Class FortniteGame.FortExpeditionAnalytics
class UFortExpeditionAnalytics : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortExpeditionAnalytics");
		return Clss;
	}

};

// 0x0 (0x28 - 0x28)
// Class FortniteGame.FortCollectionBookAnalytics
class UFortCollectionBookAnalytics : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortCollectionBookAnalytics");
		return Clss;
	}

};

// 0x0 (0x28 - 0x28)
// Class FortniteGame.FortSurvivorAnalytics
class UFortSurvivorAnalytics : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortSurvivorAnalytics");
		return Clss;
	}

};

// 0x0 (0x28 - 0x28)
// Class FortniteGame.FortTwitchAnalytics
class UFortTwitchAnalytics : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortTwitchAnalytics");
		return Clss;
	}

};

// 0x0 (0x28 - 0x28)
// Class FortniteGame.FortBlueprintContext
class UFortBlueprintContext : public UBlueprintContextBase
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortBlueprintContext");
		return Clss;
	}

};

// 0x90 (0x3C0 - 0x330)
// Class FortniteGame.FortBluGloManager
class AFortBluGloManager : public AActor
{
public:
	float                                        BluGloPerMinute;                                   // 0x330(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_183D[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FSlateBrush                           BluGloIcon;                                        // 0x338(0x88)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortBluGloManager");
		return Clss;
	}

	class UFortItemDefinition* GetBluGloItemDefinition();
};

// 0x20 (0x350 - 0x330)
// Class FortniteGame.FortBodyPartOverridePreviewActor
class AFortBodyPartOverridePreviewActor : public AActor
{
public:
	uint8                                        Pad_183E[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UAthenaCharacterPartItemDefinition*    MyCosmeticItem;                                    // 0x338(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	UDelegateProperty_                           OnSettingsChangedDelegate;                         // 0x340(0x10)(ZeroConstructor, InstancedReference, NoDestructor, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortBodyPartOverridePreviewActor");
		return Clss;
	}

	void OnPreviewCosmeticItem();
	void ApplyMyCosmeticItemToHero(class AFortPlayerPawn* PawnToModify, class AFortPlayerController* FortPC);
};

// 0x8 (0x538 - 0x530)
// Class FortniteGame.FortBotController
class AFortBotController : public AFortAIController
{
public:
	class UFortBotMissionLogic*                  CurrentMissionLogic;                               // 0x530(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortBotController");
		return Clss;
	}

};

// 0x50 (0x78 - 0x28)
// Class FortniteGame.FortBotMissionLogic
class UFortBotMissionLogic : public UObject
{
public:
	class AFortMission*                          Mission;                                           // 0x28(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class AActor*>                        Goals;                                             // 0x30(0x10)(BlueprintVisible, ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	TArray<class AFortBotStructureBuilder*>      Builders;                                          // 0x40(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	class UBehaviorTree*                         CurrentBehaviorAsset;                              // 0x50(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class AFortBotController*>            AssignedAI;                                        // 0x58(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	TArray<uint8>                                GoalHasLocator;                                    // 0x68(0x10)(BlueprintVisible, ZeroConstructor, Transient, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortBotMissionLogic");
		return Clss;
	}

	class AFortBotStructureBuilder* SpawnStructureBuilder(class AActor* MissionGoal, class UFortBuildingInstructions* BuildingInstructions);
	void SetGoalsInvulnerable(bool bGodMode);
	void SetCurrentBehavior(class UBehaviorTree* Behavior);
	void ResetBehavior();
	void OnMissionStarted();
	void OnMissionFinished();
	void OnMissionActivated();
	bool OnInteractWithMissionGoal(class AFortAIController* BotAI, class AActor* MissionGoal);
	bool OnCanStartOtherMission(class AFortAIController* BotAI, class AFortMission* OtherMission);
	void OnAssignedBehavior(class AFortAIController* BotAI);
	void MarkSingleLocator(class AActor* LocatorActor);
	void MarkAllLocated();
	void ClearAllLocated();
};

// 0xA8 (0xD0 - 0x28)
// Class FortniteGame.FortBotMissionManager
class UFortBotMissionManager : public UObject
{
public:
	TSoftClassPtr<class AFortPawn>               BotPawnClass;                                      // 0x28(0x28)(UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class AFortPawn*>                     BotPawns;                                          // 0x50(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<class UFortBotMissionLogic*>          ActiveMissionsLogicData;                           // 0x60(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	class UFortBotMissionLogic*                  PrimaryMissionLogicData;                           // 0x70(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1841[0x58];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortBotMissionManager");
		return Clss;
	}

};

// 0x0 (0x1F70 - 0x1F70)
// Class FortniteGame.FortBotPawn
class AFortBotPawn : public AFortAIPawn
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortBotPawn");
		return Clss;
	}

};

// 0x38 (0x368 - 0x330)
// Class FortniteGame.FortBotStructureBuilder
class AFortBotStructureBuilder : public AActor
{
public:
	class UFortBuildingInstructions*             BuildingInstructions;                              // 0x330(0x8)(Edit, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class ABuildingActor*>                BuiltActors;                                       // 0x338(0x10)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	class AActor*                                CachedGoal;                                        // 0x348(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1845[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortBotStructureBuilder");
		return Clss;
	}

	void RunDeconstructor();
	void OnBuildingDied(class AActor* DamagedActor, float Damage, class AController* InstigatedBy, class AActor* DamageCauser, const struct FVector& HitLocation, class UPrimitiveComponent* FHitComponent, class FName BoneName, const struct FVector& Momentum);
	void BuildAll();
};

// 0x1B0 (0x4E0 - 0x330)
// Class FortniteGame.FortBroadcastRemoteClientInfo
class AFortBroadcastRemoteClientInfo : public AActor
{
public:
	uint8                                        Pad_184A[0x50];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bActive;                                           // 0x380(0x1)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bRemoteIsInteracting;                              // 0x381(0x1)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_184B[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<int32>                                RemoteEditTileData;                                // 0x388(0x10)(Net, ZeroConstructor, RepNotify, NativeAccessSpecifierPrivate)
	TSubclassOf<class ABuildingSMActor>          RemoteBuildableClass;                              // 0x398(0x8)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	enum class EFortResourceType                 RemoteBuildingMaterial;                            // 0x3A0(0x1)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bRemoteIsFullScreenMapActive;                      // 0x3A1(0x1)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bRemoteIsInventoryActive;                          // 0x3A2(0x1)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bRemoteCanDBNORevive;                              // 0x3A3(0x1)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FAthenaQuickChatActiveEntry           RemoteChatEntry;                                   // 0x3A4(0x14)(Net, RepNotify, NoDestructor, NativeAccessSpecifierPrivate)
	struct FBuildingWeakSpotData                 RemoteWeakspotData;                                // 0x3B8(0x38)(Net, RepNotify, NoDestructor, NativeAccessSpecifierPrivate)
	uint8                                        Pad_184C[0xF0];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortBroadcastRemoteClientInfo");
		return Clss;
	}

	void ServerSetPlayerInventoryActive(bool bInventorypActive);
	void ServerSetPlayerInteracting(bool bInteracting);
	void ServerSetPlayerFullScreenMapActive(bool bFullscreenMapActive);
	void ServerSetPlayerEditTileData(TArray<int32>& EditTileData);
	void ServerSetPlayerCanDBNORevive(bool bCanDBNORevive);
	void ServerSetPlayerBuildingMaterial(enum class EFortResourceType Material);
	void ServerSetPlayerBuildableClass(TSubclassOf<class ABuildingSMActor> BuildableClass);
	void OnServerPlayerWeakspotSpawned(struct FBuildingWeakSpotData* WeakspotData);
	void OnServerPlayerQuickChatEntryChanged(struct FAthenaQuickChatActiveEntry& ChatEntry);
	void OnServerPlayerDamagedResourceBuilding(class ABuildingSMActor* BuildingSMActor, enum class EFortResourceType PotentialResourceType, int32 PotentialResourceCount, bool bDestroyed, bool bJustHitWeakspot);
	void OnRep_RemoteWeakspotData();
	void OnRep_RemoteIsInventoryActive();
	void OnRep_RemoteIsInteracting();
	void OnRep_RemoteIsFullScreenMapActive();
	void OnRep_RemoteEditTileData();
	void OnRep_RemoteChatEntry();
	void OnRep_RemoteCanDBNORevive();
	void OnRep_RemoteBuildingMaterial();
	void OnRep_RemoteBuildableClass();
	void OnRep_bActive();
	void OnPlayerInventoryActiveChanged(bool bInventoryActive);
	void OnPlayerInteractLongUseChanged(bool bInteracting);
	void OnPlayerFullScreenMapActiveChanged(bool bFullscreenMapActive);
	void OnPlayerEditPreviewChanged(class ABuildingSMActor* EditedActor);
	void OnPlayerCanDBNOReviveChanged(bool bCanDBNORevive);
	void OnPlayerBuildingMaterialChanged();
	void OnPlayerBuildableClassChanged();
	void ClientRemotePlayerDamagedResourceBuilding(class ABuildingSMActor* BuildingSMActor, enum class EFortResourceType PotentialResourceType, int32 PotentialResourceCount, bool bDestroyed, bool bJustHitWeakspot);
};

// 0x90 (0x3C0 - 0x330)
// Class FortniteGame.FortBroadcastSpectatorInfo
class AFortBroadcastSpectatorInfo : public AInfo
{
public:
	uint8                                        Pad_184D[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FFortBroadcastInfoPerPlayer>   PerPlayerInfo;                                     // 0x348(0x10)(Net, ZeroConstructor, RepNotify, NativeAccessSpecifierPrivate)
	TMap<class AFortPlayerStateAthena*, int32>   PlayerIndexInInfoArray;                            // 0x358(0x50)(ZeroConstructor, NativeAccessSpecifierPrivate)
	class UFortResourceItemDefinition*           WoodItemDef;                                       // 0x3A8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UFortResourceItemDefinition*           StoneItemDef;                                      // 0x3B0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UFortResourceItemDefinition*           MetalItemDef;                                      // 0x3B8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortBroadcastSpectatorInfo");
		return Clss;
	}

	void OnRep_PerPlayerInfo();
	void HandleInventoryResourceCountChanged(class AFortInventory* Inventory);
	void HandleGamePhaseChanged(enum class EAthenaGamePhase GamePhase);
};

// 0x0 (0x70 - 0x70)
// Class FortniteGame.FortBTService_ContextOverride
class UFortBTService_ContextOverride : public UBTService
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortBTService_ContextOverride");
		return Clss;
	}

};

// 0x8 (0x78 - 0x70)
// Class FortniteGame.FortBTContext_MoveUrgency
class UFortBTContext_MoveUrgency : public UFortBTService_ContextOverride
{
public:
	enum class EFortMovementUrgency              MoveUrgency;                                       // 0x70(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_184E[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortBTContext_MoveUrgency");
		return Clss;
	}

};

// 0x0 (0x70 - 0x70)
// Class FortniteGame.FortBTContext_SkipNotPerceivedGoals
class UFortBTContext_SkipNotPerceivedGoals : public UFortBTService_ContextOverride
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortBTContext_SkipNotPerceivedGoals");
		return Clss;
	}

};

// 0x8 (0x78 - 0x70)
// Class FortniteGame.FortBTContext_SuppressGoalUpdate
class UFortBTContext_SuppressGoalUpdate : public UFortBTService_ContextOverride
{
public:
	bool                                         bUnregisterFromGoalManager;                        // 0x70(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_184F[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortBTContext_SuppressGoalUpdate");
		return Clss;
	}

};

// 0x0 (0x90 - 0x90)
// Class FortniteGame.FortBTDecorator_CanBeConsideredAirborne
class UFortBTDecorator_CanBeConsideredAirborne : public UBTDecorator_BlackboardBase
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortBTDecorator_CanBeConsideredAirborne");
		return Clss;
	}

};

// 0x68 (0xD0 - 0x68)
// Class FortniteGame.FortBTDecorator_DistanceBetween
class UFortBTDecorator_DistanceBetween : public UBTDecorator
{
public:
	enum class EArithmeticKeyOperation           Operator;                                          // 0x68(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1850[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FBlackboardKeySelector                BlackboardKeyA;                                    // 0x70(0x28)(Edit, Protected, NativeAccessSpecifierProtected)
	struct FBlackboardKeySelector                BlackboardKeyB;                                    // 0x98(0x28)(Edit, Protected, NativeAccessSpecifierProtected)
	float                                        SpecifiedDistance;                                 // 0xC0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bUseSelf : 1;                                      // Mask : 0x1 0xC4(0x1)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bCalculateAs2D : 1;                                // Mask : 0x2 0xC4(0x1)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1851[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        DistanceCalculationUpdateRate;                     // 0xC8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1852[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortBTDecorator_DistanceBetween");
		return Clss;
	}

};

// 0x70 (0xD8 - 0x68)
// Class FortniteGame.FortBTDecorator_QueryGameplayAbility
class UFortBTDecorator_QueryGameplayAbility : public UBTDecorator
{
public:
	struct FGameplayTagContainer                 GameplayAbilityTag;                                // 0x68(0x20)(Edit, Protected, NativeAccessSpecifierProtected)
	struct FBlackboardKeySelector                Target;                                            // 0x88(0x28)(Edit, Protected, NativeAccessSpecifierProtected)
	struct FGameplayTagContainer                 ActiveAbilityTagsToSkipTesting;                    // 0xB0(0x20)(Edit, Protected, NativeAccessSpecifierProtected)
	bool                                         bUseTarget;                                        // 0xD0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1853[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortBTDecorator_QueryGameplayAbility");
		return Clss;
	}

};

// 0x0 (0xD8 - 0xD8)
// Class FortniteGame.FortBTDecorator_GameplayAbility_CanActivate
class UFortBTDecorator_GameplayAbility_CanActivate : public UFortBTDecorator_QueryGameplayAbility
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortBTDecorator_GameplayAbility_CanActivate");
		return Clss;
	}

};

// 0x8 (0xE0 - 0xD8)
// Class FortniteGame.FortBTDecorator_GameplayAbility_CanHitTarget
class UFortBTDecorator_GameplayAbility_CanHitTarget : public UFortBTDecorator_QueryGameplayAbility
{
public:
	uint8                                        UseIdealYawRotationToTarget : 1;                   // Mask : 0x1 0xD8(0x1)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1854[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortBTDecorator_GameplayAbility_CanHitTarget");
		return Clss;
	}

};

// 0x10 (0xE8 - 0xD8)
// Class FortniteGame.FortBTDecorator_GameplayAbility_CompareDistance
class UFortBTDecorator_GameplayAbility_CompareDistance : public UFortBTDecorator_QueryGameplayAbility
{
public:
	TArray<struct FDistanceToTargetComparison>   DistanceComparisons;                               // 0xD8(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortBTDecorator_GameplayAbility_CompareDistance");
		return Clss;
	}

};

// 0x0 (0xD8 - 0xD8)
// Class FortniteGame.FortBTDecorator_GameplayAbility_DoesTargetHaveProhibitedTags
class UFortBTDecorator_GameplayAbility_DoesTargetHaveProhibitedTags : public UFortBTDecorator_QueryGameplayAbility
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortBTDecorator_GameplayAbility_DoesTargetHaveProhibitedTags");
		return Clss;
	}

};

// 0x20 (0x88 - 0x68)
// Class FortniteGame.FortBTDecorator_GameplayAbility_HasGameplayAbility
class UFortBTDecorator_GameplayAbility_HasGameplayAbility : public UBTDecorator
{
public:
	struct FGameplayTagContainer                 GameplayAbilityTag;                                // 0x68(0x20)(Edit, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortBTDecorator_GameplayAbility_HasGameplayAbility");
		return Clss;
	}

};

// 0x0 (0xD8 - 0xD8)
// Class FortniteGame.FortBTDecorator_GameplayAbility_IsOnCooldown
class UFortBTDecorator_GameplayAbility_IsOnCooldown : public UFortBTDecorator_QueryGameplayAbility
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortBTDecorator_GameplayAbility_IsOnCooldown");
		return Clss;
	}

};

// 0x0 (0xD8 - 0xD8)
// Class FortniteGame.FortBTDecorator_GameplayAbility_IsRotatedToAttackTarget
class UFortBTDecorator_GameplayAbility_IsRotatedToAttackTarget : public UFortBTDecorator_QueryGameplayAbility
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortBTDecorator_GameplayAbility_IsRotatedToAttackTarget");
		return Clss;
	}

};

// 0x0 (0xD8 - 0xD8)
// Class FortniteGame.FortBTDecorator_GameplayAbility_IsWithinMaxTargetSelectionRange
class UFortBTDecorator_GameplayAbility_IsWithinMaxTargetSelectionRange : public UFortBTDecorator_QueryGameplayAbility
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortBTDecorator_GameplayAbility_IsWithinMaxTargetSelectionRange");
		return Clss;
	}

};

// 0x0 (0x90 - 0x90)
// Class FortniteGame.FortBTDecorator_IsGoalPawn
class UFortBTDecorator_IsGoalPawn : public UBTDecorator_BlackboardBase
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortBTDecorator_IsGoalPawn");
		return Clss;
	}

};

// 0x0 (0x68 - 0x68)
// Class FortniteGame.FortBTDecorator_IsTakerAirborne
class UFortBTDecorator_IsTakerAirborne : public UBTDecorator
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortBTDecorator_IsTakerAirborne");
		return Clss;
	}

};

// 0x30 (0x98 - 0x68)
// Class FortniteGame.FortBTDecorator_WeaponStatus
class UFortBTDecorator_WeaponStatus : public UBTDecorator
{
public:
	float                                        WeaponStatusUpdateRate;                            // 0x68(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bTestIfCurrentWeaponIsValid : 1;                   // Mask : 0x1 0x6C(0x1)(Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bCurrentWeaponShouldBeValid : 1;                   // Mask : 0x2 0x6C(0x1)(Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bTestAllowedCurrentWeaponTags : 1;                 // Mask : 0x4 0x6C(0x1)(Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1855[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGameplayTagContainer                 AllowedCurrentWeaponTags;                          // 0x70(0x20)(Edit, Protected, NativeAccessSpecifierProtected)
	uint8                                        bTestIfCurrentWeaponIsReloading : 1;               // Mask : 0x1 0x90(0x1)(Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bCurrentWeaponShouldBeReloading : 1;               // Mask : 0x2 0x90(0x1)(Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bTestIfCurrentWeaponHasAmmoInMagazine : 1;         // Mask : 0x4 0x90(0x1)(Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bCurrentWeaponShouldHaveAmmoInMagazine : 1;        // Mask : 0x8 0x90(0x1)(Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bTestIfCurrentWeaponHasExtraAmmo : 1;              // Mask : 0x10 0x90(0x1)(Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bCurrentWeaponShouldHaveExtraAmmo : 1;             // Mask : 0x20 0x90(0x1)(Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bAllInterestedTestsMustPass : 1;                   // Mask : 0x40 0x90(0x1)(Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1856[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortBTDecorator_WeaponStatus");
		return Clss;
	}

};

// 0x50 (0xC0 - 0x70)
// Class FortniteGame.FortBTService_UpdateBotMissionBuilding
class UFortBTService_UpdateBotMissionBuilding : public UBTService
{
public:
	struct FBlackboardKeySelector                InterestLocationKey;                               // 0x70(0x28)(Edit, NativeAccessSpecifierPublic)
	struct FBlackboardKeySelector                BuildOrderKey;                                     // 0x98(0x28)(Edit, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortBTService_UpdateBotMissionBuilding");
		return Clss;
	}

};

// 0x8 (0xA0 - 0x98)
// Class FortniteGame.FortBTService_UpdateBotMissionGoal
class UFortBTService_UpdateBotMissionGoal : public UBTService_BlackboardBase
{
public:
	uint8                                        bRequireInteraction : 1;                           // Mask : 0x1 0x98(0x1)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bRequireInteractionOrLocator : 1;                  // Mask : 0x2 0x98(0x1)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bRequireEncounter : 1;                             // Mask : 0x4 0x98(0x1)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bPickClosest : 1;                                  // Mask : 0x8 0x98(0x1)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1857[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortBTService_UpdateBotMissionGoal");
		return Clss;
	}

};

// 0x0 (0x98 - 0x98)
// Class FortniteGame.FortBTTask_BotMissionBuild
class UFortBTTask_BotMissionBuild : public UBTTask_BlackboardBase
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortBTTask_BotMissionBuild");
		return Clss;
	}

};

// 0x0 (0x98 - 0x98)
// Class FortniteGame.FortBTTask_BotMissionInteract
class UFortBTTask_BotMissionInteract : public UBTTask_BlackboardBase
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortBTTask_BotMissionInteract");
		return Clss;
	}

};

// 0x20 (0x98 - 0x78)
// Class FortniteGame.FortBTTask_ExecuteGameplayAbility
class UFortBTTask_ExecuteGameplayAbility : public UBTTask_GameplayTaskBase
{
public:
	struct FGameplayTagContainer                 GameplayAbilityTag;                                // 0x78(0x20)(Edit, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortBTTask_ExecuteGameplayAbility");
		return Clss;
	}

};

// 0x40 (0xF0 - 0xB0)
// Class FortniteGame.FortBTTask_GameMoveTo
class UFortBTTask_GameMoveTo : public UBTTask_MoveTo
{
public:
	struct FBlackboardKeySelector                FocalPointWhileMoving;                             // 0xB0(0x28)(Edit, NativeAccessSpecifierPublic)
	enum class EPathObstacleAction               PathObstacleAction;                                // 0xD8(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1858[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class AFortPawn>                 PushBumpedPawnClass;                               // 0xE0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bDetectUnexpectedPathBlockingObstacles : 1;        // Mask : 0x1 0xE8(0x1)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bEnableSlowdownAtGoal : 1;                         // Mask : 0x2 0xE8(0x1)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bFinishMoveOnOverlap : 1;                          // Mask : 0x4 0xE8(0x1)(Edit, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bDeimosFlavor : 1;                                 // Mask : 0x8 0xE8(0x1)(Edit, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1859[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortBTTask_GameMoveTo");
		return Clss;
	}

};

// 0x0 (0xF0 - 0xF0)
// Class FortniteGame.FortBTTask_GameMoveDirectlyToward
class UFortBTTask_GameMoveDirectlyToward : public UFortBTTask_GameMoveTo
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortBTTask_GameMoveDirectlyToward");
		return Clss;
	}

};

// 0x0 (0x70 - 0x70)
// Class FortniteGame.FortBTTask_RequestUndermining
class UFortBTTask_RequestUndermining : public UBTTaskNode
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortBTTask_RequestUndermining");
		return Clss;
	}

};

// 0x8 (0x78 - 0x70)
// Class FortniteGame.FortBTTask_SetFrustrationDiscouragement
class UFortBTTask_SetFrustrationDiscouragement : public UBTTaskNode
{
public:
	float                                        DiscouragementDuration;                            // 0x70(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_185A[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortBTTask_SetFrustrationDiscouragement");
		return Clss;
	}

};

// 0x0 (0x70 - 0x70)
// Class FortniteGame.FortBTTask_Sleep
class UFortBTTask_Sleep : public UBTTaskNode
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortBTTask_Sleep");
		return Clss;
	}

};

// 0x0 (0xB0 - 0xB0)
// Class FortniteGame.FortBTTask_TakerMoveToNavmesh
class UFortBTTask_TakerMoveToNavmesh : public UBTTask_MoveTo
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortBTTask_TakerMoveToNavmesh");
		return Clss;
	}

};

// 0x30 (0xA0 - 0x70)
// Class FortniteGame.FortBTTask_TriggerVOEvent
class UFortBTTask_TriggerVOEvent : public UBTTaskNode
{
public:
	uint8                                        bUseFeedbackBank : 1;                              // Mask : 0x1 0x70(0x1)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_185B[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                CustomEventName;                                   // 0x78(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                SelectedEvent;                                     // 0x88(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFortFeedbackBank*                     FeedbackBank;                                      // 0x98(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortBTTask_TriggerVOEvent");
		return Clss;
	}

};

// 0x310 (0x340 - 0x30)
// Class FortniteGame.FortHealthSet
class UFortHealthSet : public UFortAttributeSet
{
public:
	struct FFortGameplayAttributeData            Health;                                            // 0x30(0x28)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            MaxHealth;                                         // 0x58(0x28)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            CurrentShield;                                     // 0x80(0x28)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            Shield;                                            // 0xA8(0x28)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            Armor;                                             // 0xD0(0x28)(BlueprintVisible, BlueprintReadOnly, Net, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            DamageResistance;                                  // 0xF8(0x28)(BlueprintVisible, BlueprintReadOnly, Net, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            DamageVulnerability;                               // 0x120(0x28)(BlueprintVisible, BlueprintReadOnly, Net, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            ReflectDamageAbsolute;                             // 0x148(0x28)(BlueprintVisible, BlueprintReadOnly, Net, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            ReflectDamageFromSource;                           // 0x170(0x28)(BlueprintVisible, BlueprintReadOnly, Net, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            HealingSourceBaseMultiplier;                       // 0x198(0x28)(BlueprintVisible, BlueprintReadOnly, Net, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            Damage;                                            // 0x1C0(0x28)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            ShieldDamage;                                      // 0x1E8(0x28)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            HealingSource;                                     // 0x210(0x28)(BlueprintVisible, BlueprintReadOnly, Net, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            HealingBonusTarget;                                // 0x238(0x28)(BlueprintVisible, BlueprintReadOnly, Net, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            Healing;                                           // 0x260(0x28)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	uint8                                        Pad_185C[0xB8];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortHealthSet");
		return Clss;
	}

	void OnRep_Shield();
	void OnRep_MaxHealth();
	void OnRep_Health();
	void OnRep_CurrentShield();
};

// 0x50 (0x390 - 0x340)
// Class FortniteGame.FortBuildingActorSet
class UFortBuildingActorSet : public UFortHealthSet
{
public:
	struct FFortGameplayAttributeData            BuildTime;                                         // 0x340(0x28)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            RepairTime;                                        // 0x368(0x28)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortBuildingActorSet");
		return Clss;
	}

	void OnRep_RepairTime();
	void OnRep_BuildTime();
};

// 0x480 (0x4B0 - 0x30)
// Class FortniteGame.FortBuildingAudioBank
class UFortBuildingAudioBank : public UDataAsset
{
public:
	struct FFortBuildingSoundsPerResourceType    Sounds;                                            // 0x30(0x120)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_185D[0x360];                                   // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortBuildingAudioBank");
		return Clss;
	}

};

// 0x90 (0xC0 - 0x30)
// Class FortniteGame.FortBuildingInstructions
class UFortBuildingInstructions : public UDataAsset
{
public:
	TArray<struct FFortBuildingInstruction>      Instructions;                                      // 0x30(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, SaveGame, NativeAccessSpecifierPublic)
	struct FBoxSphereBounds                      Bounds;                                            // 0x40(0x1C)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, SaveGame, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	int32                                        NumOfPiecesToSpawnAtOnce;                          // 0x5C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TimeBetweenSpawns;                                 // 0x60(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bSetOwnerID;                                       // 0x64(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bUsePlayerBuildAnimations;                         // 0x65(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_185E[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                MapName;                                           // 0x68(0x10)(ZeroConstructor, SaveGame, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_185F[0x48];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortBuildingInstructions");
		return Clss;
	}

};

// 0x330 (0xBA0 - 0x870)
// Class FortniteGame.FortWeaponItemDefinition
class UFortWeaponItemDefinition : public UFortWorldItemDefinition
{
public:
	//TSoftClassPtr<class AFortWeapon>           WeaponActorClass;                                  // 0x868(0x28)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1861[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftObjectPtr<class USkeletalMesh>          WeaponMeshOverride;                                // 0x890(0x28)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FDataTableRowHandle                   WeaponStatHandle;                                  // 0x8B8(0x10)(Edit, NoDestructor, Protected, NativeAccessSpecifierProtected)
	class FName                                  AlterationSlotsLoadoutRow;                         // 0x8C8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  BaselineAlterationSlotsLoadoutRow;                 // 0x8D0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UFortAlterationItemDefinition> BaseAlteration;                                    // 0x8D8(0x28)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UFortAlterationItemDefinition> BaseCosmeticAlteration;                            // 0x900(0x28)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftClassPtr<class UFortGameplayAbility>    PrimaryFireAbility;                                // 0x928(0x28)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftClassPtr<class UFortGameplayAbility>    SecondaryFireAbility;                              // 0x950(0x28)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftClassPtr<class UFortGameplayAbility>    ReloadAbility;                                     // 0x978(0x28)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<TSoftClassPtr<class UFortGameplayAbility>> EquippedAbilities;                                 // 0x9A0(0x10)(Edit, ZeroConstructor, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UFortWorldItemDefinition> AmmoData;                                          // 0x9B0(0x28)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        LowAmmoPercentage;                                 // 0x9D8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DegradedPercentage;                                // 0x9DC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EFortWeaponTriggerType            TriggerType;                                       // 0x9E0(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EFortDisplayTier                  DisplayTier;                                       // 0x9E1(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bUsesCustomAmmoType : 1;                           // Mask : 0x1 0x9E2(0x1)(Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bAllowTargetingDuringReload : 1;                   // Mask : 0x2 0x9E2(0x1)(Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bTargetingPreventsReload : 1;                      // Mask : 0x4 0x9E2(0x1)(Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bAlwaysChargeUpToMin : 1;                          // Mask : 0x8 0x9E2(0x1)(Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bReticleCornerOutsideSpreadRadius : 1;             // Mask : 0x10 0x9E2(0x1)(Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bValidForLastEquipped : 1;                         // Mask : 0x20 0x9E2(0x1)(NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bPreventDefaultPreload : 1;                        // Mask : 0x40 0x9E2(0x1)(Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1862[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        HitNotifyDuration;                                 // 0x9E4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UTexture2D>             ReticleImage;                                      // 0x9E8(0x28)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UTexture2D>             ReticleAutoFireImage;                              // 0xA10(0x28)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<float>                                ReticleCornerAngles;                               // 0xA38(0x10)(Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UTexture2D>             HitNotifyImage;                                    // 0xA48(0x28)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UTexture2D>             HitNotifyLocationImage;                            // 0xA70(0x28)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UTexture2D>             MuzzleBlockedImage;                                // 0xA98(0x28)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UTexture2D>             ReticleCenterImage;                                // 0xAC0(0x28)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UTexture2D>             ReticleCenterPerfectAimImage;                      // 0xAE8(0x28)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector2D                             ReticleCenterImageOffset;                          // 0xB10(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UTexture2D>             ReticleInvalidTargetImage;                         // 0xB18(0x28)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UCurveFloat>            HitNotifyOpacityCurve;                             // 0xB40(0x28)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTagContainer                 AnalyticTags;                                      // 0xB68(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	TArray<class FName>                          ActualAnalyticFNames;                              // 0xB88(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_1863[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortWeaponItemDefinition");
		return Clss;
	}

	bool TargetingPreventsReload();
	bool ShouldAllowTargetingDuringReload();
	bool HasUniqueAmmo();
	struct FDataTableRowHandle GetWeaponStatHandle();
	class USkeletalMesh* GetWeaponMeshOverride();
	TSubclassOf<class AFortWeapon> GetWeaponActorClass();
	bool GetUsesCustomAmmoType();
	enum class EFortWeaponTriggerType GetTriggerType();
	class FText GetShortDisplayName();
	TSubclassOf<class UFortGameplayAbility> GetSecondaryFireAbility();
	class UTexture2D* GetReticleInvalidTargetImage();
	class UTexture2D* GetReticleImage();
	TArray<float>& GetReticleCornerAngles();
	class UTexture2D* GetReticleCenterPerfectAimImage();
	struct FVector2D GetReticleCenterImageOffset();
	class UTexture2D* GetReticleCenterImage();
	class UTexture2D* GetReticleAutoFireImage();
	TSubclassOf<class UFortGameplayAbility> GetReloadAbility();
	TSubclassOf<class UFortGameplayAbility> GetPrimaryFireAbility();
	class UTexture2D* GetMuzzleBlockedImage();
	float GetLowAmmoPercentage();
	class UCurveFloat* GetHitNotifyOpacityCurve();
	class UTexture2D* GetHitNotifyLocationImage();
	class UTexture2D* GetHitNotifyImage();
	float GetHitNotifyDuration();
	TArray<TSubclassOf<class UFortGameplayAbility>> GetEquippedAbilities();
	class FText GetDisplayTierAsText(enum class EFortDisplayTier DisplayTier);
	enum class EFortDisplayTier GetDisplayTier();
	float GetDegradedPercentage();
	class UFortAlterationItemDefinition* GetBaseCosmeticAlteration();
	class UFortAlterationItemDefinition* GetBaseAlteration();
	TArray<class FName>& GetAnalyticTags();
	bool AlwaysChargeUpToMin();
};

// 0x20 (0xBC0 - 0xBA0)
// Class FortniteGame.FortBuildingItemDefinition
class UFortBuildingItemDefinition : public UFortWeaponItemDefinition
{
public:
	//TSoftObjectPtr<class UBuildingEditModeMetadata> BuildingMetaData;                                  // 0xB98(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1864[0x20];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortBuildingItemDefinition");
		return Clss;
	}

};

// 0xF8 (0x488 - 0x390)
// Class FortniteGame.FortBuildingTrapSet
class UFortBuildingTrapSet : public UFortBuildingActorSet
{
public:
	struct FFortGameplayAttributeData            Durability;                                        // 0x390(0x28)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            MaxDurability;                                     // 0x3B8(0x28)(BlueprintVisible, BlueprintReadOnly, Net, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            DurabilityCostPerFire;                             // 0x3E0(0x28)(BlueprintVisible, BlueprintReadOnly, Net, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            ArmTime;                                           // 0x408(0x28)(BlueprintVisible, BlueprintReadOnly, Net, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            ReloadTime;                                        // 0x430(0x28)(BlueprintVisible, BlueprintReadOnly, Net, NativeAccessSpecifierPublic)
	uint8                                        Pad_1865[0x30];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortBuildingTrapSet");
		return Clss;
	}

	void OnRep_Durability();
};

// 0x40 (0x880 - 0x840)
// Class FortniteGame.FortCameraBase
class AFortCameraBase : public ACameraActor
{
public:
	float                                        MinDistanceToDrag;                                 // 0x840(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DefaultFieldOfView;                                // 0x844(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FRotator                              DefaultRotation;                                   // 0x848(0xC)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FVector                               DefaultLocation;                                   // 0x854(0xC)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AFortExhibitActor*                     ExhibitActor;                                      // 0x860(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bExhibitActorChanged;                              // 0x868(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         CheckForDragBegin;                                 // 0x869(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1866[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector2D                             DownDelta;                                         // 0x86C(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1867[0xC];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortCameraBase");
		return Clss;
	}

	void OnDragEnd();
	void OnDragBegin();
	void OnDeactivated();
	void OnActivated();
	void Exhibit(class AFortExhibitActor* TargetActor);
};

// 0x0 (0x28 - 0x28)
// Class FortniteGame.FortUICameraFrameInterface
class UFortUICameraFrameInterface : public UInterface
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortUICameraFrameInterface");
		return Clss;
	}

};

// 0x0 (0x28 - 0x28)
// Class FortniteGame.FortItemPreviewBoundsInterface
class UFortItemPreviewBoundsInterface : public UInterface
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortItemPreviewBoundsInterface");
		return Clss;
	}

};

// 0x0 (0x28 - 0x28)
// Class FortniteGame.FortUICameraFrameTargetInterface
class UFortUICameraFrameTargetInterface : public UInterface
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortUICameraFrameTargetInterface");
		return Clss;
	}

	void SetFrameTargetSettingsChangedDelegate(UDelegateProperty_& Delegate);
	struct FFortUICameraFrameTargetSettings GetZoomedOutCameraFramingSettings();
	struct FFortUICameraFrameTargetSettings GetZoomedInCameraFramingSettings();
};

// 0x0 (0x28 - 0x28)
// Class FortniteGame.FortUICameraFramingFunctionLibrary
class UFortUICameraFramingFunctionLibrary : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortUICameraFramingFunctionLibrary");
		return Clss;
	}

	struct FFortUICameraFrameTargetBounds CalculateComponentSetBoundsForCameraFraming(TSet<class USceneComponent*>& Components);
	struct FFortUICameraFrameTargetBounds CalculateComponentBoundsForCameraFraming(class USceneComponent* ParentComponent, bool bIncludePSCs);
	struct FFortUICameraFrameTargetBounds CalculateCharacterCapsuleForCameraFraming(class ACharacter* Character);
	struct FFortUICameraFrameTargetBounds CalculateCharacterBoundsForCameraFraming(class AFortPlayerPawn* PlayerPawn);
	struct FFortUICameraFrameTargetBounds CalculateActorBoundsForCameraFraming(class AActor* Actor);
};

// 0xC00 (0xC50 - 0x50)
// Class FortniteGame.FortCameraMode_ThirdPerson
class UFortCameraMode_ThirdPerson : public UFortCameraMode
{
public:
	float                                        FOV;                                               // 0x50(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        CameraSpaceForwardDistance;                        // 0x54(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bClampCameraPitch;                                 // 0x58(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bClampCameraYaw;                                   // 0x59(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_186D[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        CameraPitchMin;                                    // 0x5C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        CameraPitchMax;                                    // 0x60(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        CameraYawMin;                                      // 0x64(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        CameraYawMax;                                      // 0x68(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class ECameraOrigin                     CameraOrigin;                                      // 0x6C(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_186E[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  CameraOriginSocketName;                            // 0x70(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               CameraOriginInterpSpeed;                           // 0x78(0xC)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_186F[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FInterpOffset                         ViewTargetSpaceViewOffset;                         // 0x88(0x10)(Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	struct FInterpOffset                         ViewTargetSpaceViewOffset_Crouch;                  // 0x98(0x10)(Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	struct FVector                               ViewTargetSpaceViewOffseInterpSpeed;               // 0xA8(0xC)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1870[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FInterpOffset                         CameraSpaceViewOffset;                             // 0xB8(0x10)(Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	float                                        ViewTargetAlignmentFlipInterpDuration;             // 0xC8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bSupportsShoulderSwap;                             // 0xCC(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1871[0x33];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               LastCameraOrigin;                                  // 0x100(0xC)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FVector                               CameraOriginLocalOffset;                           // 0x10C(0xC)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        PenetrationBlendInTime;                            // 0x118(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PenetrationBlendOutTime;                           // 0x11C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bPreventPenetration;                               // 0x120(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDoPredictiveAvoidance;                            // 0x121(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1872[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        CollisionPushOutDistance;                          // 0x124(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HidePawnPenetrationPercent;                        // 0x128(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1873[0x34];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  LastAttachSocketName;                              // 0x160(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1874[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FMinimalViewInfo                      LastBasePOV;                                       // 0x170(0x530)(Transient, NativeAccessSpecifierPublic)
	struct FMinimalViewInfo                      DeltaBasePOV;                                      // 0x6A0(0x530)(Transient, NativeAccessSpecifierPublic)
	float                                        BlendAlpha;                                        // 0xBD0(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1875[0x14];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FPenetrationAvoidanceFeeler>   PenetrationAvoidanceFeelers;                       // 0xBE8(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	float                                        SafeLocToAimLineBlockedPct;                        // 0xBF8(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        AimLineToDesiredPosBlockedPct;                     // 0xBFC(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        LastDrawDebugTime;                                 // 0xC00(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               LastViewTargetSpaceViewOffset;                     // 0xC04(0xC)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               LastViewTargetAlignmentUp;                         // 0xC10(0xC)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ViewTargetAlignmentFlipInterpTime;                 // 0xC1C(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               LastCameraPivot;                                   // 0xC20(0xC)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1876[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AActor*                                IgnoreActorForCameraPenetration;                   // 0xC30(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bWasInVehicle : 1;                                 // Mask : 0x1 0xC38(0x1)(Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1877[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AActor*                                PreviousIgnoreActorForCameraPenetration;           // 0xC40(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1878[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortCameraMode_ThirdPerson");
		return Clss;
	}

};

// 0x10 (0xC60 - 0xC50)
// Class FortniteGame.FortCameraMode_AthenaAircraft
class UFortCameraMode_AthenaAircraft : public UFortCameraMode_ThirdPerson
{
public:
	//struct FVector                             CameraOriginInterpSpeedToPawn;                     // 0xC48(0xC)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1879[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortCameraMode_AthenaAircraft");
		return Clss;
	}

};

// 0x10 (0xC60 - 0xC50)
// Class FortniteGame.FortCameraMode_AthenaVehicle
class UFortCameraMode_AthenaVehicle : public UFortCameraMode_ThirdPerson
{
public:
	//struct FVector                             CameraOriginOffset;                                // 0xC48(0xC)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_187A[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortCameraMode_AthenaVehicle");
		return Clss;
	}

};

// 0xC8 (0x1A8 - 0xE0)
// Class FortniteGame.FortCampaignHeroLoadoutItem
class UFortCampaignHeroLoadoutItem : public UFortAccountItem
{
public:
	class FString                                Loadout_name;                                      // 0xE0(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Loadout_index;                                     // 0xF0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_187D[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<class FString, class FString>           Crew_members;                                      // 0xF8(0x50)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FFilledGadgetSlot>             Gadgets;                                           // 0x148(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TMap<class FName, class FString>             CrewMembers;                                       // 0x158(0x50)(ZeroConstructor, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortCampaignHeroLoadoutItem");
		return Clss;
	}

	bool IsTeamLeadPerkProgressive();
	bool IsTeamLeadPerkActive();
	int32 GetTeamLeadPerkMaxActivationLevel();
	int32 GetTeamLeadPerkActivationLevelAndSatisfyingSlotIndices(TArray<int32>* OutSatisfyingSlotIndices);
	int32 GetTeamLeadPerkActivationLevel();
	void GetSupportHeroesAndSupportSlotIndices(TArray<class UFortHero*>* OutHeroes, TArray<int32>* OutSupportSlotIndices);
	void GetSupportHeroes(TArray<class UFortHero*>* OutHeroes);
	class FName GetSlotNameByHero(class UFortHero* Hero);
	int32 GetLoadoutOrdinal();
	class UFortHero* GetLeaderHero();
	void GetHeroesBySlotTag(struct FGameplayTagQuery& TagQuery, TArray<class UFortHero*>* OutHeroes);
	void GetHeroes(TArray<class UFortHero*>* OutHeroes);
	class UFortHero* GetHeroBySlotName(class FName& SlotName);
	class UFortGadgetItemDefinition* GetGadgetDefinitionBySlotIndex(int32 SlotIndex);
	class UFortHero* GetCommanderHero();
};

// 0x100 (0x460 - 0x360)
// Class FortniteGame.FortCampaignHeroLoadoutItemDefinition
class UFortCampaignHeroLoadoutItemDefinition : public UFortAccountItemDefinition
{
public:
	TArray<struct FFortCrewSlotInformation>      CrewSlots;                                         // 0x360(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FGameplayTagQuery                     CommanderSlotQuery;                                // 0x370(0x48)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FGameplayTagQuery                     TeamLeadSlotQuery;                                 // 0x3B8(0x48)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FGameplayTagQuery                     SupportHeroSlotQuery;                              // 0x400(0x48)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	int32                                        GadgetSlotsAllowed;                                // 0x448(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  SlotUnlockSquadName;                               // 0x44C(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_187E[0xC];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortCampaignHeroLoadoutItemDefinition");
		return Clss;
	}

	struct FFortCrewSlotInformation& GetTeamLeadSlot();
	TArray<struct FFortCrewSlotInformation>& GetSlots();
	int32 GetSlotIndexByName(class FName& SlotName);
	struct FFortCrewSlotInformation& GetCommanderSlot();
};

// 0x0 (0xD30 - 0xD30)
// Class FortniteGame.FortCampaignJackalVehicle
class AFortCampaignJackalVehicle : public AFortAthenaJackalVehicle
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortCampaignJackalVehicle");
		return Clss;
	}

	void ExitVehicle(class AFortPlayerController* PlayerController);
	void EnterVehicle(class AFortPlayerController* PlayerController);
};

// 0x20 (0x100 - 0xE0)
// Class FortniteGame.FortCardPackItem
class UFortCardPackItem : public UFortAccountItem
{
public:
	TArray<struct FMcpLootEntry>                 Options;                                           // 0xE0(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	class FString                                Pack_source;                                       // 0xF0(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortCardPackItem");
		return Clss;
	}

	bool IsChoicePack();
	void GetChoices(TArray<class UFortAccountItemDefinition*>* Choices);
	bool CanStoreOpen();
};

// 0x80 (0x3E0 - 0x360)
// Class FortniteGame.FortCardPackItemDefinition
class UFortCardPackItemDefinition : public UFortAccountItemDefinition
{
public:
	bool                                         bIsLlama;                                          // 0x360(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bIsChoicePack;                                     // 0x361(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bAutoOpenAsReward;                                 // 0x362(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_187F[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        LootTier;                                          // 0x364(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FString                                LootTierGroup;                                     // 0x368(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        DisplayRarityLevel;                                // 0x378(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1880[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftObjectPtr<class UTexture>               PackImage;                                         // 0x380(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FLinearColor                          PackColor;                                         // 0x3A8(0x10)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class UFortPackPersonality>   PackPersonality;                                   // 0x3B8(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortCardPackItemDefinition");
		return Clss;
	}

	bool IsLlama();
	bool IsChoicePack();
	class UFortPackPersonality* GetPackPersonality();
	class UTexture* GetPackImage();
	struct FLinearColor GetPackColor();
	int32 GetDisplayRarityLevel();
};

// 0x168 (0x498 - 0x330)
// Class FortniteGame.FortCarriedObject
class AFortCarriedObject : public AActor
{
public:
	uint8                                        Pad_1881[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UProjectileMovementComponent*          ProjectileComp;                                    // 0x348(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1882[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FCarriedObjectAttachmentInfo          HolderInfo;                                        // 0x358(0x28)(Net, RepNotify, NoDestructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_1883[0x28];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               IndicatorRelativeOffset;                           // 0x3A8(0xC)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1884[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FSlateBrush                           Indicator;                                         // 0x3B8(0x88)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	struct FSlateColor                           DefaultIndicatorColor;                             // 0x440(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	struct FVector                               RelativeTranslation;                               // 0x468(0xC)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FRotator                              RelativeRotation;                                  // 0x474(0xC)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	bool                                         bPickupOnTouch;                                    // 0x480(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EFortTeam                         Team;                                              // 0x481(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1885[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class ABuildingFlagSpawn*                    SpawnPointActor;                                   // 0x488(0x8)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1886[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortCarriedObject");
		return Clss;
	}

	void ReturnToSpawnPoint();
	void OnRep_HolderInfo(struct FCarriedObjectAttachmentInfo* PreviousInfo);
	class AActor* GetHoldingActor();
};

// 0x0 (0x28 - 0x28)
// Class FortniteGame.FortCarriedObjectHolderInterface
class UFortCarriedObjectHolderInterface : public UInterface
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortCarriedObjectHolderInterface");
		return Clss;
	}

	void OnCarriedObjectDetach(class AActor* DetachedObject);
	void OnCarriedObjectAttach(class AActor* AttachedObject);
	void GetCarriedObjectAttachmentInfo(struct FCarriedObjectAttachmentInfo* OutAttachInfo);
	class USceneComponent* GetAttachmentComponent(class FName SocketName);
	bool CanHoldObject(class AActor* CarriableObject);
};

// 0x0 (0x28 - 0x28)
// Class FortniteGame.FortCarriedObjectInterface
class UFortCarriedObjectInterface : public UInterface
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortCarriedObjectInterface");
		return Clss;
	}

};

// 0x18 (0xF8 - 0xE0)
// Class FortniteGame.FortChallengeBundleItem
class UFortChallengeBundleItem : public UFortAccountItem
{
public:
	TArray<class FString>                        GrantedQuestInstanceIds;                           // 0xE0(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	int32                                        Num_quests_completed;                              // 0xF0(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Num_progress_quests_completed;                     // 0xF4(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortChallengeBundleItem");
		return Clss;
	}

	void GetQuests(class UFortQuestManager* QuestManager, enum class EChallengeBundleQuestVisualStyle QuestStyle, TArray<class UFortQuestItem*>* OwnedQuests, TArray<class UFortQuestItemDefinition*>* UnownedQuests, bool bGetAllQuestsInChain);
	float GetPercentageComplete();
	class UFortChallengeBundleItemDefinition* GetChallengeDefinitionBP();
	void GetAchievedCount(int32* OutTotalAchievedCount, int32* OutTotalRequiredCount);
};

// 0x80 (0x3E0 - 0x360)
// Class FortniteGame.FortChallengeBundleItemDefinition
class UFortChallengeBundleItemDefinition : public UFortAccountItemDefinition
{
public:
	TArray<struct FFortChallengeBundleQuestEntry> QuestInfos;                                        // 0x360(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	class FString                                EventName;                                         // 0x370(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FString                                CalendarEventName;                                 // 0x380(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FText                                  ShortName;                                         // 0x390(0x18)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	class FText                                  ShortNameNumber;                                   // 0x3A8(0x18)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	TArray<struct FFortChallengeBundleRewards>   BundleCompletionRewards;                           // 0x3C0(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	enum class EChallengeBundleVisualStyle       VisualStyle;                                       // 0x3D0(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_188D[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        MaxChainDepth;                                     // 0x3D4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_188E[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortChallengeBundleItemDefinition");
		return Clss;
	}

	bool IsLinearChainQuest(class UFortQuestItemDefinition* InQuestDef, int32* ChainLength, int32* ChainPos);
	enum class EChallengeBundleVisualStyle GetVisualStyle();
	class FText GetShortNameNumber();
	class FText GetShortName();
	int32 GetRewardCompletionThreshold();
	void GetQuests(class UFortQuestManager* QuestManager, enum class EChallengeBundleQuestVisualStyle QuestStyle, TArray<class UFortQuestItem*>& GrantedQuests, TArray<class UFortQuestItem*>* OwnedQuests, TArray<class UFortQuestItemDefinition*>* UnownedQuests, bool bGetAllQuestsInChain);
	int32 GetNumVisibleQuests();
	int32 GetNumQuests();
	class FString GetEventName();
	TArray<struct FAthenaRewardItemReference> GetCompletionRewards();
	class FString GetCalendarEventName();
};

// 0xA0 (0x400 - 0x360)
// Class FortniteGame.FortChallengeBundleScheduleDefinition
class UFortChallengeBundleScheduleDefinition : public UFortAccountItemDefinition
{
public:
	TArray<struct FFortChallengeBundleScheduleEntry> ScheduleEntries;                                   // 0x360(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	class FString                                EventName;                                         // 0x370(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FString                                CalendarEventName;                                 // 0x380(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGameplayTag                          RequiredMcpContextTags;                            // 0x390(0x8)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class UFortGiftBoxItemDefinition> GiftBoxToUseOnBundleUnlock;                        // 0x398(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FFortGiftBoxFortmatData>       GiftBoxFormatData;                                 // 0x3C0(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	class FName                                  CategoryId;                                        // 0x3D0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FText                                  CategoryName;                                      // 0x3D8(0x18)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	int32                                        SortPriority;                                      // 0x3F0(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         CleanUpOnBundleCompletion;                         // 0x3F4(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_188F[0xB];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortChallengeBundleScheduleDefinition");
		return Clss;
	}

	int32 GetSortPriority();
	struct FGameplayTag GetRequiredMcpContextTags();
	int32 GetNumBundles();
	class FString GetEventName();
	class FText GetCategoryName();
	class FName GetCategoryID();
	class FString GetCalendarEventName();
	TArray<class UFortChallengeBundleItemDefinition*> GetBundleDefinitions();
	bool DoesChallengeBundleScheduleExpire();
};

// 0x0 (0xE0 - 0xE0)
// Class FortniteGame.FortChallengeBundleScheduleItem
class UFortChallengeBundleScheduleItem : public UFortAccountItem
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortChallengeBundleScheduleItem");
		return Clss;
	}

	class UFortChallengeBundleScheduleDefinition* GetScheduleDefinitionBP();
	float GetPercentageComplete();
	void GetAchievedCount(int32* OutTotalAchievedCount, int32* OutTotalRequiredCount);
};

// 0x18 (0xF8 - 0xE0)
// Class FortniteGame.FortCharacter
class UFortCharacter : public UFortAccountItem
{
public:
	class FString                                Squad_id;                                          // 0xE0(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Squad_slot_idx;                                    // 0xF0(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1890[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortCharacter");
		return Clss;
	}

};

// 0x10 (0xF0 - 0xE0)
// Class FortniteGame.FortCharacterCosmeticItem
class UFortCharacterCosmeticItem : public UFortAccountItem
{
public:
	class FString                                Equipped_character_id;                             // 0xE0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortCharacterCosmeticItem");
		return Clss;
	}

};

// 0x40 (0x3A0 - 0x360)
// Class FortniteGame.FortCharacterCosmeticItemDefinition
class UFortCharacterCosmeticItemDefinition : public UFortAccountItemDefinition
{
public:
	enum class EFortCharacterCosmetic            Cosmetic_Type;                                     // 0x360(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bModifyColor;                                      // 0x361(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1891[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<TSoftObjectPtr<class UFortHeroType>>  Hero_Types_Allowed;                                // 0x368(0x10)(Edit, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class UCustomColorSwatch>     ColorAlteration;                                   // 0x378(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortCharacterCosmeticItemDefinition");
		return Clss;
	}

};

// 0x190 (0x1B8 - 0x28)
// Class FortniteGame.FortCharacterCosmeticManager
class UFortCharacterCosmeticManager : public UObject
{
public:
	uint8                                        Pad_1892[0x190];                                   // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortCharacterCosmeticManager");
		return Clss;
	}

};

// 0x30 (0xC0 - 0x90)
// Class FortniteGame.FortCharacterTooltip
class UFortCharacterTooltip : public UFortAccountItemTooltip
{
public:
	uint8                                        Pad_1893[0x30];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortCharacterTooltip");
		return Clss;
	}

};

// 0x0 (0x360 - 0x360)
// Class FortniteGame.FortCharacterType
class UFortCharacterType : public UFortAccountItemDefinition
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortCharacterType");
		return Clss;
	}

};

// 0x0 (0x58 - 0x58)
// Class FortniteGame.FortChat
class UFortChat : public UChatroom
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortChat");
		return Clss;
	}

};

// 0x130 (0x2A8 - 0x178)
// Class FortniteGame.FortChatManager
class UFortChatManager : public USocialChatManager
{
public:
	uint8                                        Pad_1894[0x80];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UFortChatRoomJoinHelper*               GlobalChatJoinHelper;                              // 0x1F8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UFortChatRoomJoinHelper*               FoundersChatJoinHelper;                            // 0x200(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bShouldJoinGlobalChat;                             // 0x208(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bShouldRequestGeneralChatRooms;                    // 0x209(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bShouldJoinFounderChat;                            // 0x20A(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bIsAthenaGlobalChatEnabled;                        // 0x20B(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        RecommendChatFailureDelay;                         // 0x20C(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        RecommendChatBackoffMultiplier;                    // 0x210(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        RecommendChatRandomWindow;                         // 0x214(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        RecommendChatFailureCountCap;                      // 0x218(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1895[0xC];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                ReserveChatURL;                                    // 0x228(0x10)(ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FString                                GlobalChatName;                                    // 0x238(0x10)(ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1896[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                FounderChatName;                                   // 0x260(0x10)(ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1897[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                ProfileTokenVerifyURL;                             // 0x288(0x10)(ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1898[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortChatManager");
		return Clss;
	}

};

// 0xB0 (0xD8 - 0x28)
// Class FortniteGame.FortChatRoomJoinHelper
class UFortChatRoomJoinHelper : public UObject
{
public:
	uint8                                        Pad_1899[0xA0];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class USocialChatChannel*                    JoinedChannel;                                     // 0xC8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_189A[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortChatRoomJoinHelper");
		return Clss;
	}

};

// 0x1590 (0x1C10 - 0x680)
// Class FortniteGame.FortPlayerController
class AFortPlayerController : public APlayerController
{
public:
	uint8                                        Pad_18D8[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	UMulticastDelegateProperty_                  OnPlayerPawnPossessed;                             // 0x690(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_18D9[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	UMulticastDelegateProperty_                  OnInputFiltered;                                   // 0x6B8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_18DA[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	uint8                                        bFailedToRespawn : 1;                              // Mask : 0x1 0x6E0(0x1)(Net, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsDisconnecting : 1;                              // Mask : 0x2 0x6E0(0x1)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsBeingKicked : 1;                                // Mask : 0x4 0x6E0(0x1)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bHasInitiallySpawned : 1;                          // Mask : 0x8 0x6E0(0x1)(Net, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bAssignedStartSpawn : 1;                           // Mask : 0x10 0x6E0(0x1)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bReadyToStartMatch : 1;                            // Mask : 0x20 0x6E0(0x1)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bClientPawnIsLoaded : 1;                           // Mask : 0x40 0x6E0(0x1)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_18DB[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               SpawnLoc;                                          // 0x6E4(0xC)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        NumPreviousSpawns;                                 // 0x6F0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_18DC[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	UMulticastDelegateProperty_                  OnBlueprintReadyCheckCompleted;                    // 0x6F8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_18DD[0x30];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                RegisteredPartnerId;                               // 0x738(0x10)(ZeroConstructor, Transient, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTag                          RegisteredPartnerTag;                              // 0x748(0x8)(Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class AFortAIPawn*>                   ManagedAIs;                                        // 0x750(0x10)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	class AFortPlayerPawn*                       MyFortPawn;                                        // 0x760(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AFortPlayerPawn*                       MyFortPawnBeforeTakeoverOfScriptedPawn;            // 0x768(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AFortPlayerController*                 ScriptedPawnControllerBeforeTakeover;              // 0x770(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bHasClientFinishedLoading;                         // 0x778(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bHasServerFinishedLoading;                         // 0x779(0x1)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_18DE[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        TimeStartedWaiting;                                // 0x77C(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        TimeFinishedNavigationBuild;                       // 0x780(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_18DF[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UMaterialParameterCollection*          MaterialParameterCollection;                       // 0x788(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               PendingSpectatorLocation;                          // 0x790(0xC)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class AActor>                 ActorUnderReticle;                                 // 0x79C(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class AActor>                 AutoFireReticleTarget;                             // 0x7A4(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_18E0[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTimerHandle                          AutofireTimerHandle;                               // 0x7B0(0x8)(Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_18E1[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TWeakObjectPtr<class ABuildingWeakSpot>      WeakspotUnderReticle;                              // 0x7C0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FBuildingWeakSpotData>         ActiveWeakSpots;                                   // 0x7C8(0x10)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	float                                        LastActiveTime;                                    // 0x7D8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_18E2[0x34];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UInputComponent*                       VehicleInputComponent;                             // 0x810(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AutoFireReticleWeaponDistanceScale;                // 0x818(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bSupportNextPieceAssist;                           // 0x81C(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bNoControllerLighting;                             // 0x81D(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_18E3[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        ReturnToMainMenuTimeoutDelay;                      // 0x820(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_18E4[0x1C];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	UMulticastDelegateProperty_                  OnMcpProfilesInitializedEvent;                     // 0x840(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	UMulticastDelegateProperty_                  OnQuestObjectiveStateChanged;                      // 0x850(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_18E5[0x160];                                   // Fixing Size After Last Property  [ Dumper-7 ]
	UMulticastDelegateProperty_                  OnEnterVehicleDriver;                              // 0x9C0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_18E6[0xB0];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UAudioComponent*                       LongInteractAudioComponent;                        // 0xA80(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_18E7[0x14];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bUseTeamInteractQuestProgress;                     // 0xA9C(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_18E8[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UFortInteractContextInfo*              PossibleInteractContextInfo;                       // 0xAA0(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFortInteractContextInfo*              InteractResponse;                                  // 0xAA8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AActor*                                InteractActor;                                     // 0xAB0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_18E9[0x14];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        MobileUpdateCachedInteractActorsCooldown;          // 0xACC(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MobileUpdateCachedInteractActorsCooldownLength;    // 0xAD0(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bWantsToSprint;                                    // 0xAD4(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bHoldingSprint;                                    // 0xAD5(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bSprintToggleable;                                 // 0xAD6(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bSprintByDefault;                                  // 0xAD7(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bSprintCancelsReload;                              // 0xAD8(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bSprintWasCancelledByReload;                       // 0xAD9(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bAutoRunOn;                                        // 0xADA(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bTapInteractEnabled;                               // 0xADB(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bTargetingToggleable;                              // 0xADC(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bMovementDisabledDueToCancellableAction;           // 0xADD(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bIsPlayerActivelyMoving;                           // 0xADE(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_18EA[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        InMovementCancellableAction;                       // 0xAE0(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bHoldingUse;                                       // 0xAE4(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bRetryUse;                                         // 0xAE5(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bAllowRetryUse;                                    // 0xAE6(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bAllowHoldForAmmoCrafting;                         // 0xAE7(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        AutoLevelCameraStartPitch;                         // 0xAE8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        AutoLevelCameraStartTime;                          // 0xAEC(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bIsClientTimingOut;                                // 0xAF0(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_18EB[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        ClientTimeoutBlockInputTime;                       // 0xAF4(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        LastMoveInputTime;                                 // 0xAF8(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        LastPressGamepadSprintTime;                        // 0xAFC(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bAutoRunWasHoldingForward;                         // 0xB00(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bAtNameBaseScreen;                                 // 0xB01(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bInventoryToggledByAlt;                            // 0xB02(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_18EC[0x5];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	UMulticastDelegateProperty_                  OnSetFirstPersonCamera;                            // 0xB08(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_18ED[0x58];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class UFortCinematicCamera>      CinematicCameraClassOverride;                      // 0xB70(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bOnPressExecuteJetpack;                            // 0xB78(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_18EE[0x1F];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UFortInteractContextInfo*              AutoDoorInteractResponse;                          // 0xB98(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	UMulticastDelegateProperty_                  OnUiChoiceCompleted;                               // 0xBA0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnRegainedFocus;                                   // 0xBB0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnToggleFullscreenMap;                             // 0xBC0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnOpenVoteDialog;                                  // 0xBD0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_18EF[0x258];                                   // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bIsInQuickToggleCursorMode;                        // 0xE38(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bGamepadAbilityPending;                            // 0xE39(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bForceAllowCursorMode;                             // 0xE3A(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bForceAllowCameraMode;                             // 0xE3B(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bDragDropPending;                                  // 0xE3C(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bSuppressEventNotifications;                       // 0xE3D(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_18F0[0x6A];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        LastSpotTime;                                      // 0xEA8(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_18F1[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<TWeakObjectPtr<class AFortMarkActor>> CurrentMarks;                                      // 0xEB0(0x10)(ZeroConstructor, Transient, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	uint8                                        Pad_18F2[0x50];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UFortGameplayAbility*                  PreviewAbility;                                    // 0xF10(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FAIDirectorDebugInfo                  IntensityGraphInfo;                                // 0xF18(0x28)(Net, RepNotify, NativeAccessSpecifierPublic)
	struct FAIDirectorDebugInfo                  PIDValuesGraphInfo;                                // 0xF40(0x28)(Net, RepNotify, NativeAccessSpecifierPublic)
	struct FAIDirectorDebugInfo                  PIDContributionsGraphInfo;                         // 0xF68(0x28)(Net, RepNotify, NativeAccessSpecifierPublic)
	class AFortCombatManager*                    CombatManager;                                     // 0xF90(0x8)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AFortAIDirectorDataManager*            AIDirectorDataManager;                             // 0xF98(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AFortMusicManager*                     MusicManager;                                      // 0xFA0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_18F3[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bUsePredictedBuildingActors;                       // 0xFC8(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_18F4[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        PredictedActorLifespan;                            // 0xFCC(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class ABuildingSMActor*>              PredictedBuildingSMActors;                         // 0xFD0(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	uint8                                        Pad_18F5[0xF0];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UInputComponent*                       BuildPreviewModeInputComponent;                    // 0x10D0(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ABuildingPlayerPrimitivePreview*       BuildPreviewMarker;                                // 0x10D8(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ABuildingPlayerPrimitivePreview*       BuildPreviewMarkerExtraPiece;                      // 0x10E0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_18F6[0x38];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bAllowBuildingPreviewAutoRotation;                 // 0x1120(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_18F7[0xA7];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class ABuildingActor*                        TargetedBuilding;                                  // 0x11C8(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AFortAthenaVehicle*                    TargetedVehicle;                                   // 0x11D0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class ABuildingSMActor>          ContextualConversionClass;                         // 0x11D8(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class USoundBase>             StartUpgradeSound;                                 // 0x11E0(0x28)(Transient, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class ABuildingActor*>                HighlightedPrimaryBuildings;                       // 0x1208(0x10)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	TArray<class ABuildingActor*>                HighlightedInteractionBuildings;                   // 0x1218(0x10)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class ABuildingActor>         HighlightedPrimaryBuilding;                        // 0x1228(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UMaterialInterface>     BuildPreviewMarkerParentMaterial;                  // 0x1230(0x28)(Transient, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UMaterialInstanceDynamic*>      BuildPreviewMarkerMIDs;                            // 0x1258(0x10)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	uint8                                        BuildPreviewRotationIterations;                    // 0x1268(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_18F8[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	uint8                                        bBuildPreviewMirrored : 1;                         // Mask : 0x1 0x126C(0x1)(Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_18F9[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	enum class EFortBuildPreviewMarkerOptionalAdjustment BuildPreviewMarkerOptionalAdjustment;              // 0x1270(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_18FA[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	uint8                                        bBuildFree : 1;                                    // Mask : 0x1 0x1274(0x1)(BlueprintVisible, BlueprintReadOnly, Net, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bCraftFree : 1;                                    // Mask : 0x2 0x1274(0x1)(Net, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_18FB[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	enum class EFortCostInfoTypes                CurrentCostInfoType;                               // 0x1278(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_18FC[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class ABuildingSMActor>          CurrentBuildableClass;                             // 0x1280(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class ABuildingSMActor>          PreviousBuildableClass;                            // 0x1288(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EFortResourceLevel                CurrentResourceLevel;                              // 0x1290(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EFortResourceType                 CurrentResourceType;                               // 0x1291(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_18FD[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FLastBuildableState                   LastBuildableStateData;                            // 0x1298(0x10)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_18FE[0xC0];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FFortDamageNumberInfo>         QueuedDamageNumbers;                               // 0x1368(0x10)(ZeroConstructor, Transient, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	class AFortDamageNumbersActor*               DamageNumbersActor;                                // 0x1378(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UInputComponent*                       EditModeInputComponent;                            // 0x1380(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ABuildingSMActor*                      EditBuildingActor;                                 // 0x1388(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        EditModeDistance;                                  // 0x1390(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               LastBuildPreviewGridSnapLoc;                       // 0x1394(0xC)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FRotator                              LastBuildPreviewGridSnapRot;                       // 0x13A0(0xC)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FVector                               LastBuildPreviewGridSnapCentroid;                  // 0x13AC(0xC)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UInputComponent*                       PickerInputComponent;                              // 0x13B8(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AFortDecoHelper*                       TrapPickerDecoHelper;                              // 0x13C0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FHitResult>                    TouchEditResults;                                  // 0x13C8(0x10)(ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	bool                                         bBuildingPlacementTraceSkipInitialPenetrationOfBuildingSMActor; // 0x13D8(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bBuildingPlacementTraceSkipInitialPenetrationOfStaticMesh; // 0x13D9(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_18FF[0xE];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AFortQuickBars*                        QuickBars;                                         // 0x13E8(0x8)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1900[0x38];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class FString>                        PinnedSchematics;                                  // 0x1428(0x10)(Net, ZeroConstructor, RepNotify, NativeAccessSpecifierPublic)
	uint8                                        Pad_1901[0x98];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	uint8                                        bAutoEquipBetterItems : 1;                         // Mask : 0x1 0x14D0(0x1)(Net, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1902[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AFortInventory*                        WorldInventory;                                    // 0x14D8(0x8)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AFortInventory*                        OutpostInventory;                                  // 0x14E0(0x8)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1903[0x4C];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bHasInitializedWorldInventory;                     // 0x1534(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bHasInitializedHeroInventory;                      // 0x1535(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bAccountInventoryWasUpdated;                       // 0x1536(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bIsSavingGadgetLoadout;                            // 0x1537(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1904[0x78];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UFortClientPilot_Base*                 BotPilot;                                          // 0x15B0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1905[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UFortClientBotManager*                 BotManager;                                        // 0x15D0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1906[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class UFortClientBotManager>     ClientBotManagerClass;                             // 0x15E0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFortCustomizationAssetLoader*         LocalPawnCustomizationAssetLoader;                 // 0x15E8(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1907[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bDropWeaponsDuringAllMissionStates;                // 0x1608(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1908[0x1F];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FFortRewardReport                     LatestRewardReport;                                // 0x1628(0x70)(Net, RepNotify, Protected, NativeAccessSpecifierProtected)
	class UFortRegisteredPlayerInfo*             MyPlayerInfo;                                      // 0x1698(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FFortUpdatedObjectiveStat>     UpdatedObjectiveStats;                             // 0x16A0(0x10)(Net, ZeroConstructor, RepNotify, Protected, NativeAccessSpecifierProtected)
	bool                                         bHasUnsavedPrimaryMissionProgress;                 // 0x16B0(0x1)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1909[0x3F];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UStatManager*                          StatManager;                                       // 0x16F0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UHeartbeatManager*                     HeartbeatManager;                                  // 0x16F8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFortStatEventManager*                 StatEventManager;                                  // 0x1700(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFortPersistentGameplayStatContainer  CachedPersistentGameplayStats;                     // 0x1708(0x10)(Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_190A[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UFortMontageItemDefinitionBase*        LastEmotePlayed;                                   // 0x1728(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TMap<class UFortMontageItemDefinitionBase*, int32> EmoteUsageCounts;                                  // 0x1730(0x50)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	TArray<struct FVector>                       AnalyticsBuildingWallTooLowLocations;              // 0x1780(0x10)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	class UMcpProfileGroup*                      McpProfileGroup;                                   // 0x1790(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFortMcpProfileCommonPublic*           CommonPublicMcpProfile;                            // 0x1798(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFortMcpProfileCommonCore*             CommonCoreMcpProfile;                              // 0x17A0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFortMcpProfileCampaign*               MainMcpProfile;                                    // 0x17A8(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFortMcpProfileAthena*                 AthenaProfile;                                     // 0x17B0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFortMcpProfileMetadata*               MetadataProfile;                                   // 0x17B8(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFortMcpProfileCreative*               CreativeModeProfile;                               // 0x17C0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortPCTutorialCompletedState     TutorialCompletedState;                            // 0x17C8(0x1)(Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_190B[0x1F];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bShouldReceiveCriticalMatchBonus;                  // 0x17E8(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_190C[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	UMulticastDelegateProperty_                  OnServerPlayerChangedBuildMode;                    // 0x17F0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnAutoRunEnabled;                                  // 0x1800(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_190D[0x130];                                   // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               LocationUnderReticle;                              // 0x1940(0xC)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bEnableVoiceChatPTT : 1;                           // Mask : 0x1 0x194C(0x1)(Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bInfiniteAmmo : 1;                                 // Mask : 0x2 0x194C(0x1)(Net, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bInfiniteMagazine : 1;                             // Mask : 0x4 0x194C(0x1)(Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bNoCoolDown : 1;                                   // Mask : 0x8 0x194C(0x1)(Net, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bInfiniteDurability : 1;                           // Mask : 0x10 0x194C(0x1)(Net, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bUsePickers : 1;                                   // Mask : 0x20 0x194C(0x1)(Transient, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bPickerOpen : 1;                                   // Mask : 0x40 0x194C(0x1)(Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bCheatGhost : 1;                                   // Mask : 0x80 0x194C(0x1)(Net, Transient, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bCheatFly : 1;                                     // Mask : 0x1 0x194D(0x1)(Net, Transient, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        : 1;                                               // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        bEnableShotLogging : 1;                            // Mask : 0x4 0x194D(0x1)(Net, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsNearActiveEncounters : 1;                       // Mask : 0x8 0x194D(0x1)(Net, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_190E[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        OverriddenBackpackSize;                            // 0x1950(0x4)(Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint32                                       AimHelpMode;                                       // 0x1954(0x4)(Net, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortJumpStaminaCost              JumpStaminaCost;                                   // 0x1958(0x1)(Net, ZeroConstructor, Transient, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_190F[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  CameraPrototypeName;                               // 0x195C(0x8)(Net, ZeroConstructor, Transient, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1910[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bHideHudEnglishText;                               // 0x1974(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bTurboBuild;                                       // 0x1975(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1911[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        TurboBuildFirstInterval;                           // 0x1978(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TurboBuildInterval;                                // 0x197C(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TurboPlaceFirstInterval;                           // 0x1980(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TurboPlaceInterval;                                // 0x1984(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bCreativeTurboDelete;                              // 0x1988(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1912[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        TurboDeleteFirstInterval;                          // 0x198C(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TurboDeleteInterval;                               // 0x1990(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bAutoChangeMaterial;                               // 0x1994(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bCurrentWeaponDroppedDuringAbility;                // 0x1995(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1913[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        EmoteOffCooldownTime;                              // 0x1998(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SprayOffCooldownTime;                              // 0x199C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class AFortSprayDecalInstance*>       ActiveSprayInstances;                              // 0x19A0(0x10)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	TArray<class AActor*>                        ActiveToyInstances;                                // 0x19B0(0x10)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	TMap<class UClass*, int32>                   ToySummonCounts;                                   // 0x19C0(0x50)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	bool                                         bPushEmoteAudioDataToCosmeticMaterials;            // 0x1A10(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1914[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        LastEmoteMusicFFT100hz;                            // 0x1A14(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        LastEmoteMusicFFT2000hz;                           // 0x1A18(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        EmoteMusicBeatThreshold;                           // 0x1A1C(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        EmoteMusicEnvelopeBeatCount;                       // 0x1A20(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1915[0x13C];                                   // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bClientSideEditPrediction;                         // 0x1B60(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1916[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        ClientSideEditPredictionTimeout;                   // 0x1B64(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1917[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class ABuildingSMActor*                      PendingEnterModeActor;                             // 0x1B70(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        RandomCharacterIndex;                              // 0x1B78(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        AntiAddictionPlayTimeMultiplier;                   // 0x1B7C(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1918[0x2C];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FLockOnInfo                           LockOnInfo;                                        // 0x1BAC(0x38)(Transient, NoDestructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_1919[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UFortIndicatorManager*                 IndicatorManager;                                  // 0x1BE8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_191A[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bFinalXPUpdateFailed;                              // 0x1C08(0x1)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bEnableVoiceChatOnLoadingScreens;                  // 0x1C09(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_191B[0x6];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortPlayerController");
		return Clss;
	}

	void UnMutePlayer(struct FUniqueNetIdRepl& UniqueNetId);
	void TogglePersonalVehicle(bool bOn);
	void ToggleInventory();
	void ToggleFullScreenMap();
	void ToggleClientBot();
	void SwapQuickBarFocus(enum class EFortQuickBars InQuickBar, int32 SlotOverride, bool bForceExecution);
	void SuppressEventNotifications(bool bSuppress);
	void Suicide();
	bool StartReadyCheck(class FText QueryText, class FText YesText, class FText NoText, float PercentageToPass);
	void StartAutoLevelCamera();
	class AActor* SpawnToyInstance(TSubclassOf<class AActor> ToyClass, const struct FTransform& SpawnPosition);
	void SetRotatePawnToCamera(bool bNewRotatePawnToCamera);
	void SetLockOnTargetStickCoords(struct FVector2D& Coords);
	void SetInputYawScale(float InInputYawScale);
	void SetInputPitchScale(float InInputPitchScale);
	void SetFullscreenMapVisible(bool Visible);
	void SetFirstPersonCamera(bool bNewUseFirstPersonCamera);
	void SetCinematicOverrideClass(TSubclassOf<class UFortCinematicCamera> OverrideCameraClass);
	void SetCinematicModeWithWeapon(bool bInCinematicMode, bool bHidePlayer, bool bHideWeapon, bool bAffectsHUD, bool bAffectsMovement, bool bAffectsTurning);
	void SetBuildingHighlight(TArray<class ABuildingActor*>& TargetedBuildings, enum class EBuildingHighlightType HighlightType, bool bValidHighlight);
	void SetAutoLevelCamera(bool bShouldLevel);
	void SetAtNameHomeBaseScreen(bool AtScreen);
	void ServerUpgradeBuildingActor(class ABuildingActor* BuildingActorToUpgrade, int32 NewUpgradeLevel);
	void ServerUpdateGameplayOptions(TArray<class FString>& UserOptionsKeys, TArray<class FString>& UserOptionsValues);
	void ServerUpdateActorOptions(class AActor* OptionsTarget, TArray<class FString>& OptionsKeys, TArray<class FString>& OptionsValues);
	void ServerUIChoiceCompleted(int32 ChosenItem, int32 MenuIdentifier);
	void ServerTriggerGenericObjectiveEvent(class AFortObjectiveBase* Objective);
	void ServerTriggerCombatEventBatch(TArray<struct FFortCombatManagerEvent>& Payload);
	void ServerTriggerCombatEvent(enum class EFortCombatEvents TriggeredEvent, float HeatMultiplier);
	void ServerTouchActiveTime();
	void ServerTeleportToReticle(const struct FVector& TeleportLocation);
	void ServerTeamChatRoomReady(const class FString& ChatRoomId);
	void ServerSuicide();
	void ServerStartPIDValueGraphing();
	void ServerStartPIDContributionsGraphing();
	void ServerStartIntensityGraphing();
	void ServerSpotActor(class AActor* NewlySpottedActor);
	void ServerSpawnMark(class AActor* ActorToAttachTo, const struct FVector& AttachOffset, class FText& PreapprovedText);
	void ServerSetShouldUsePilotComponent(bool InValue);
	void ServerSetShouldUseBotManager(bool InValue);
	void ServerSetReadyToContinue(bool bReady, enum class EFortGameplayState RequestedState, bool bTryStartTimer);
	void ServerSetPartyOwner(struct FUniqueNetIdRepl& PartyOwnerUniqueId);
	void ServerSetMarkText(class AFortMarkActor* MarkActor, const class FString& MarkText);
	void ServerSetInventoryStateValue(const struct FGuid& ItemGuid, const struct FFortItemEntryStateValue& StateValue);
	void ServerSetHero(const class FString& NewHeroID);
	void ServerSetClientHasFinishedLoading(bool bInHasFinishedLoading);
	void ServerSetAutoEquipBetterItems(bool bAutoEquip);
	void ServerSetAntiAddictionPlayTimeMultiplier(float NewPlayTimeRewardRate);
	void ServerSendClientProgressUpdate(int32 ClientProgressState, TArray<uint64>& ClientProgressUpdate);
	void ServerReturnToMainMenu();
	void ServerRequestGameplayAction(enum class EFortRequestedGameplayAction RequestedAction);
	void ServerRequestAttributeSources(const struct FGameplayAttribute& Attribute, class UFortAbilitySystemComponent* AbilitySystemComponent);
	void ServerRequestAIDebug();
	void ServerReportClientFPS(float ClientAvgFPS, uint8 ClientAvgFrameScore, uint8 ClientMaxFrameScore);
	void ServerReplyToReadyCheck(bool bReady);
	void ServerRepairBuildingActor(class ABuildingSMActor* BuildingActorToRepair);
	void ServerRemoveInventoryStateValue(const struct FGuid& ItemGuid, enum class EFortItemEntryState StateValueType);
	void ServerRemoveInventoryItem(const struct FGuid& ItemGuid, int32 Count, bool bForceRemoveFromQuickBars, bool bForceRemoval);
	void ServerRemoveDefender(class ABuildingTrapDefender* DefenderTrap);
	void ServerReleaseInventoryItemKey(enum class EFortQuickBars InQuickBar, int32 Slot);
	void ServerReadyToStartMatch();
	void ServerPlayEmoteItem(class UFortMontageItemDefinitionBase* EmoteAsset);
	void ServerPingMinimap(const struct FVector& WorldLocation, const struct FLinearColor& PingColor, enum class EFortTeam RequiredTeam);
	void ServerModifyStat(class FName StatName, int32 Amount, enum class EStatMod ModType, bool bForceStatSave);
	void ServerModDurability(const struct FGuid& ItemGuid, float DurabilityMod, bool bForceSet);
	void ServerLoadingScreenDropped();
	void ServerKillAllAIPawnsAroundPlayer();
	void ServerKickPlayer(struct FUniqueNetIdRepl& PlayerToKick, class FText& Reason);
	void ServerItemWillBeDestroyed(const struct FGuid& DestroyedItemGuid, int32 Count);
	void ServerHandleMissionEvent_ToggledEditMode(class AFortPlayerController* PlayerThatToggledEditMode, class ABuildingSMActor* EditableActor, bool bOpened);
	void ServerHandleMissionEvent_ToggledCursorMode(class AFortPlayerController* PlayerThatToggledCursorMode, bool bOpened);
	void ServerHandleMissionEvent_StartLeavingZone();
	void ServerGiftInventoryItemToOtherPlayer(const struct FGuid& ItemGuid, const struct FUniqueNetIdRepl& PlayerID, int32 Quantity);
	void ServerExecutePresetTeamChat(class FText& ChatText, const struct FUniqueNetIdRepl& SenderID);
	void ServerExecuteInventoryItem(const struct FGuid& ItemGuid);
	void ServerEndEditingBuildingActor(class ABuildingSMActor* BuildingActorToStopEditing);
	void ServerEmote(class FName& AssetName);
	void ServerEditBuildingActor(class ABuildingSMActor* BuildingActorToEdit, TSubclassOf<class ABuildingSMActor> NewBuildingClass, int32 RotationIterations, bool bMirrored);
	void ServerDropCarriedObject();
	void ServerDropAllItems(class UFortItemDefinition* IgnoreItemDef);
	void ServerDisassembleInventoryItems(TArray<struct FGuid>& ItemGuids, TArray<int32>& ItemCounts);
	void ServerDeployDefender(class ABuildingTrapDefender* DefenderTrap, const class FString& SelectedItemInstanceId, class FName& DefenderSquadId, const struct FGuid& WeaponToGiveGuid, int32 AmmoQuantity);
	void ServerCreateCombatManager();
	void ServerCreateBuildingActor(const struct FBuildingClassData& BuildingClassData, const struct FVector_NetQuantize10& BuildLoc, const struct FRotator& BuildRot, bool bMirrored, float SyncKey);
	void ServerCreateAIDirectorDataManager();
	void ServerCraftSchematic(const class FString& ItemId, int32 PostCraftSlot, int32 CraftAmount, enum class EFortItemTier RequestedTier, bool bIsQuickCrafted);
	void ServerCombineInventoryItems(const struct FGuid& TargetItemGuid, const struct FGuid& SourceItemGuid);
	void ServerClientPawnLoaded(bool bIsPawnLoaded);
	void ServerCheatAll(const class FString& Msg);
	void ServerCheat(const class FString& Msg);
	void ServerBroadcastUIFeedbackEvent(class FName EventName);
	void ServerBeginEditingBuildingActor(class ABuildingSMActor* BuildingActorToEdit);
	void ServerAttemptUnpinSchematic(const class FString& ItemId, bool bSave);
	void ServerAttemptPinSchematic(const class FString& ItemId, bool bSave);
	void ServerAttemptInventoryDrop(const struct FGuid& ItemGuid, int32 Count);
	void ServerAttemptInteract(class AActor* ReceivingActor, class UPrimitiveComponent* InteractComponent, enum class ETInteractionType InteractType, class UObject* OptionalObjectData);
	void ServerAnnouncementStoppedOnClient(const struct FGuid& AnnouncementID);
	void ServerAddPawnMovementInput(class AFortPawn* InChar, const struct FVector& WorldDirection, float ScaleValue, bool bForce);
	void SendMessage(class FText& MESSAGE);
	void ReturnToMainMenu();
	void ResetInputRotationScale();
	void RemoveItemFromQuickBars(class UFortItemDefinition* ItemDefinition);
	void PrintEventInfo();
	void PrintDebugInfo();
	void PreparePlayerForDisplay();
	void PostHeroStatSkillPointsEarned(int32 NumSkillPoints);
	void PostHeroStatMissionCompleted(int32 DifficultyRating);
	void PostHeroStatCollectionBookProgressMade(int32 LevelReached);
	void PlaySpatialSound(class USoundBase* Sound, const struct FVector& Location);
	void PlayEmoteItem(class UFortMontageItemDefinitionBase* EmoteAsset);
	bool OwnsIslandVolume(class AFortVolume* Volume);
	bool OwnsCurrentIslandVolume();
	void OpenVoteDialog();
	void OpenChoiceUI(const struct FChoiceData& ChoiceData);
	void OnRep_UpdatedUnsavedPrimaryMissionProgress();
	void OnRep_UpdatedObjectiveStats();
	void OnRep_QuickBar();
	void OnRep_PinnedSchematics();
	void OnRep_PIDValuesGraphInfo();
	void OnRep_PIDContributionsGraphInfo();
	void OnRep_LatestRewardReport();
	void OnRep_IntensityGraphInfo();
	void OnRep_CombatManager();
	void OnRep_CheatMovement();
	void OnRep_bHasServerFinishedLoading();
	void OnMinigameVolumeStateChanged(enum class EVolumeState NewState, class AFortVolume* Volume);
	void OnLocalInteraction(class AActor* ReceivingActor);
	void OnLeaveVolume(class AFortVolume* Volume);
	void OnEnterVolume(class AFortVolume* Volume);
	void OnDisplayHitMarker(struct FGameplayTagContainer& HitTags, enum class EFortDamageZone Zone);
	void MutePlayer(struct FUniqueNetIdRepl& UniqueNetId);
	void ModifyStat(class FName StatName, int32 Amount, enum class EStatMod ModType, bool bForceStatSave);
	void LocalStopForceFeedback(class UForceFeedbackEffect* ForceFeedbackEffect, class FName Tag);
	void LocalPlayForceFeedback(class UForceFeedbackEffect* ForceFeedbackEffect, bool bLooping, class FName Tag);
	void LocalOverrideBuildMode(bool bVisible, TSubclassOf<class ABuildingSMActor> InBuildingClass, const struct FVector& BuildingOverrideDistance, class UMaterialInterface* PreviewMaterial, const struct FVector& NewScale, const struct FRotator& NewRotation);
	void LocalOnUiChoiceCompleted(int32 ChosenItem, int32 MenuIdentifier);
	void LocalOnBlueprintEdit(class ABuildingSMActor* EditedActor);
	class UFortInteractContextInfo* K2_GetInteractResponse();
	bool IsUsingTouch();
	bool IsUsingHarvestingTool();
	bool IsUsingGamepad();
	bool IsUsingFirstPersonCamera();
	bool IsRequirementsMet(struct FFortRequirementsInfo& InRequirements);
	bool IsPlayingEmote();
	bool IsPersonalVehicleAvailable();
	bool IsPersonalVehicleActive();
	bool IsNearActiveEncounters();
	bool IsInRespawnCountdown();
	bool IsInBuildMode();
	bool IsFullscreenMapVisible();
	bool IsClientTimingOut();
	bool IsClientBot();
	bool IsBuildToolOverridden();
	bool IsActionInputIgnored();
	void HideFullScreenMap();
	bool HasPermissionToEditWorld(class ABuildingActor* Building, struct FVector& Location, struct FRotator& Rotation);
	bool HasLockOnTarget();
	void HandleWorldInventoryLocalUpdate();
	void HandleOutpostInventoryLocalUpdate();
	void GivePlayerAmmo(int32 AmmoCount);
	float GetTimeRemainingForRespawnBP();
	bool GetRotatePawnToCamera();
	class UFortRegisteredPlayerInfo* GetRegisteredPlayerInfo();
	class UAthenaCharacterItemDefinition* GetRandomDefaultAthenaCharacterDefinition(class UFortMcpProfileAthena* McpAthenaProfile);
	class UFortQuestManager* GetQuestManager(enum class ESubGame SubGame);
	class AFortPlayerPawn* GetPlayerPawn();
	int32 GetNumQuickbarSlots(enum class EFortQuickBars QuickBarType);
	class UFortMinigameManager* GetMinigameManager(enum class ESubGame SubGame);
	enum class ELockOnState GetLockOnState();
	int32 GetItemNumInStackByGuid(const struct FGuid& ItemGuid);
	class UFortItem* GetItemInQuickbarSlot(enum class EFortQuickBars QuickBarType, int32 SlotIndex);
	struct FUniqueNetIdRepl GetGameAccountId();
	bool GetForceAllowCameraMode();
	class UFortCollectionBookManager* GetCollectionBookManager();
	class ABuildingSMActor* GetBuildPreviewMarker();
	class UFortAwardManager* GetAwardManager(enum class ESubGame SubGame);
	bool GetAtNameHomeBaseScreen();
	class AFortAIDirectorDataManager* GetAIDirectorDataManager();
	class AActor* GetActorUnderReticle();
	int32 GetAccountLevel();
	class UFortAccountItem* GetAccountItem(const class FString& ID);
	void FortClientPlaySoundAtLocation(class USoundBase* Sound, const struct FVector& Location, float VolumeMultiplier, float PitchMultiplier);
	void FortClientPlaySound(class USoundBase* Sound, float VolumeMultiplier, float PitchMultiplier);
	void ForceUpdateQuickbar(enum class EFortQuickBars QuickbarToRefresh);
	void ForceCancelBuildingTool();
	void FixupInteractionWidgetsOnUnzoom();
	void Emote(class FName& AssetName);
	void DumpHomebaseRatingInfo();
	void DropSpecificItem(class UFortItemDefinition* DropItemDef);
	void DropAllItems(class UFortItemDefinition* IgnoreItemDef, bool bIgnoreBuildingMaterials);
	void DeployDefender(class ABuildingTrapDefender* DefenderTrap, class UFortDefenderItem* DefenderItem, class FName& DefenderSquadId, class UFortItem* WeaponItem, int32 AmmoQuantity);
	void ClientUpdateRichPresence(enum class ERichPresenceStateChange RichPresenceChange, bool bImportant);
	void ClientUpdatePlayerList();
	void ClientTriggerUIFeedbackEvent(class FName EventName);
	void ClientStopUIFeedbackEvent(class FName EventName);
	void ClientStayWithParty(bool bStayWithParty);
	void ClientSpawnWeakSpotOnBuildingActor(const struct FBuildingWeakSpotData& ReplicatedWeakSpotData);
	void ClientSideEditPredictionTimedOut();
	void ClientSetSpectatorCamera(const struct FVector& CameraLocation, const struct FRotator& CameraRotation);
	void ClientSetInviteFlags(struct FJoinabilitySettings& Settings);
	void ClientSetActionMappingEnabled(class FName ActionName, bool bEnabled);
	void ClientSendMessage(class FText& MESSAGE);
	void ClientSendConfirmationMessage(class FText& ConfirmationMessage, bool bClientQuitAfterMessage);
	void ClientRequestReadyCheck(class FText& QueryText, class FText& YesText, class FText& NoText);
	void ClientReportDamagedResourceBuilding(class ABuildingSMActor* BuildingSMActor, enum class EFortResourceType PotentialResourceType, int32 PotentialResourceCount, bool bDestroyed, bool bJustHitWeakspot);
	void ClientRegisterWithParty();
	void ClientRefreshPlayerList();
	void ClientReceivePresetTeamChat(class FText& ChatText, const struct FUniqueNetIdRepl& SenderID);
	void ClientReceivedAttributeSources(const struct FGameplayAttribute& Attribute, class UFortAbilitySystemComponent* AbilitySystemComponent, TArray<struct FAttributeModifierInfo>& Sources);
	void ClientReadyCheckComplete(bool bPassed);
	void ClientPingMinimap(const struct FVector& WorldLocation, const struct FLinearColor& PingColor);
	void ClientOpenChoiceUI(const struct FChoiceData& ChoiceItems);
	void ClientOnGenericPlayerInitialization();
	void ClientJoinConsoleSession(const class FString& ConsoleSession);
	void ClientGivePlayerLocalAccountItem(class UFortAccountItemDefinition* ItemDefinition, int32 Count);
	void ClientForceProfileQuery();
	void ClientForceCancelBuildingTool();
	void ClientFinishedInteractionInZone();
	void ClientFailedToBeginEditingBuildingActor(class ABuildingSMActor* BuildingActorToStopEditing);
	void ClientExecuteInventoryItem(const struct FGuid& ItemGuid, float Delay, bool bForceExecute, bool bActivateSlotAfterSettingFocused);
	void ClientEndAbilityWeapon();
	void ClientCreateOrJoinChatRoom(const class FString& ChatRoomId);
	void ClientCancelCrafting();
	void ClientBotSetModuleToUse(const class FString& PilotCategory, const class FString& NewModule, bool bResetNow);
	void ClientBotEnqueueCommand(const class FString& CommandToEnqueue);
	void ClientAddScoreNumber(int32 Score, enum class EStatCategory ScoreCategory, struct FVector_NetQuantize& ScoreLocation, bool bDisplayScoreOnPlayer);
	void ClientAddHeroSpecialization(class UFortHeroSpecialization* NewSpecialization);
	void CheatAll(const class FString& Msg);
	void Cheat_ForcePlayEmoteItem(class UFortMontageItemDefinitionBase* EmoteAsset);
	void Cheat_ForceAthenaCosmeticItemInSlot(class UFortAccountItemDefinition* CosmeticItem, enum class EAthenaCustomizationCategory Slot, int32 Index);
	void Cheat_ClearForcedCosmeticItems();
	void Cheat(const class FString& Msg);
	void ChangeActiveVariantForCosmeticItem(class FName ItemTemplateToChange, const struct FGameplayTag& VariantChannelToChange, const struct FGameplayTag& DesiredActiveVariant);
	bool CanAlterHostileWalls();
	class UFortItem* BP_GetInventoryItemWithGuid(const struct FGuid& ItemGuid);
	void BP_FindItemInstancesFromDefinition(class UFortItemDefinition* ItemDefinition, TArray<class UFortItem*>& ItemArray);
	class UFortItem* BP_FindExistingItemForDefinition(class UFortItemDefinition* ItemDefinition, bool bInStorageVault);
	void AddItemToQuickBars(class UFortItemDefinition* ItemDefinition, enum class EFortQuickBars QuickBarType, int32 SlotIndex);
	void ActivateSlot(enum class EFortQuickBars InQuickBar, int32 Slot, float ActivateDelay, bool bUpdatePreviousFocusedSlot, bool bForceExecution);
};

// 0x60 (0xD8 - 0x78)
// Class FortniteGame.FortCheatManager
class UFortCheatManager : public UCheatManager
{
public:
	uint8                                        Pad_1937[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	uint8                                        bDebugInteractTrace : 1;                           // Mask : 0x1 0x88(0x1)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bDebugPickupSpline : 1;                            // Mask : 0x2 0x88(0x1)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bDebugFloorsOnMiniMap : 1;                         // Mask : 0x4 0x88(0x1)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bEnableScoreboard : 1;                             // Mask : 0x8 0x88(0x1)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bDebugBounceCurve : 1;                             // Mask : 0x10 0x88(0x1)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bDebugBeautyMode : 1;                              // Mask : 0x20 0x88(0x1)(Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bDisplayWindDebugging : 1;                         // Mask : 0x40 0x88(0x1)(Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bDebugStructuralSupportSystem : 1;                 // Mask : 0x80 0x88(0x1)(Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bInfiniteStamina : 1;                              // Mask : 0x1 0x89(0x1)(Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bShowGameDifficultyHUD : 1;                        // Mask : 0x2 0x89(0x1)(Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bShowIntensityHUD : 1;                             // Mask : 0x4 0x89(0x1)(Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bShowMaxAIHUD : 1;                                 // Mask : 0x8 0x89(0x1)(Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bShowItemIDsOnCards : 1;                           // Mask : 0x10 0x89(0x1)(Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bEnableContextMenus : 1;                           // Mask : 0x20 0x89(0x1)(Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bUnlimitedHealth : 1;                              // Mask : 0x40 0x89(0x1)(Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bCanExitWorld : 1;                                 // Mask : 0x80 0x89(0x1)(Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bUnlimitedAIHealth : 1;                            // Mask : 0x1 0x8A(0x1)(Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bPickersUseLeftThumbstick : 1;                     // Mask : 0x2 0x8A(0x1)(Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bFreezeAILOD : 1;                                  // Mask : 0x4 0x8A(0x1)(Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bForceAILOD : 1;                                   // Mask : 0x8 0x8A(0x1)(Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bUnlockAllDefenders : 1;                           // Mask : 0x10 0x8A(0x1)(Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bUseNewFrontEndCameraManagement : 1;               // Mask : 0x20 0x8A(0x1)(Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1938[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	enum class EFortAILODLevel                   ForcedAILODValue;                                  // 0x8C(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1939[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftObjectPtr<class UBuildingTextureData>   TransparentTextureData;                            // 0x90(0x28)(Transient, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_193A[0x20];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortCheatManager");
		return Clss;
	}

	void WriteLootReport();
	void WriteLevelSaveComponentsToDisk();
	void WannaGun();
	void ViewStuck();
	void UnlockAllZones();
	void UnlockAllDefenders(bool InUnlockAllDefenders);
	void UnforceAILODs();
	void TutorialRemoveHighlight(class FName Highlight);
	void TutorialRemoveHidden(class FName Hidden);
	void TutorialListHighlights();
	void TutorialListHidden();
	void TutorialListAll();
	void TutorialAddHighlight(class FName Highlight);
	void TutorialAddHidden(class FName Hidden);
	void TriggerOutOfStaminaFeedback();
	void TriggerDelayReturnToLobby(int32 MinTime, int32 MaxTime);
	void ToggleWindDebugVolumeDisplay();
	void ToggleWindDebugDisplay(float NewRefreshRate);
	void ToggleWindDebugDeltaBoundsDisplay();
	void ToggleWalkOnWalls();
	void ToggleVoiceDebug();
	void ToggleUtilitiesGraph();
	void ToggleUseNewItemCards();
	void ToggleUnlimitedHealth();
	void ToggleUnlimitedAIHealth();
	void ToggleTreeVisibility();
	void ToggleSpawnPointsHUD();
	void ToggleShotLogging();
	void ToggleSecondaryMissionHeaders();
	void TogglePlayerNames();
	void TogglePIDValuesGraph();
	void TogglePIDContributionsGraph();
	void TogglePickupSpline();
	void TogglePickers();
	void ToggleNoCoolDown();
	void ToggleNewFrontEndCameraManagement();
	void ToggleMustUseJetpackToggle();
	void ToggleMaxAIHUD();
	void ToggleLogCharacterCustomization();
	void ToggleItemIdsOnCards();
	void ToggleInWorldScoreNumbers();
	void ToggleInvincibleCornerstones();
	void ToggleInteractTrace();
	void ToggleIntensityHUD();
	void ToggleIntensityGraph();
	void ToggleInfiniteStamina();
	void ToggleInfiniteDurability();
	void ToggleInfiniteAmmo();
	void ToggleIndestructibleKeep();
	void ToggleHeroVisibility();
	void ToggleGameDifficultyHUD();
	void ToggleFreezeAILOD();
	void ToggleForceUsingGamepad();
	void ToggleFloorsOnMiniMap();
	void ToggleFactorGraph();
	void ToggleExplorationLogging();
	void ToggleExplorationBadgeView();
	void ToggleEncounterModifierTags();
	void ToggleEncounterEQSDebug();
	void ToggleDrawTurnTransitionDebug();
	void ToggleDrawTargetSelectionDebugByClass(TSubclassOf<class AActor> TargetSelectionDebugSourceClass);
	void ToggleDrawTargetSelectionDebug();
	void ToggleDrawRunVariationDebug();
	void ToggleDebugHUDObjectiveHeight();
	void ToggleContextMenus();
	void ToggleCombatGraph();
	void ToggleCharacterHeadAccessories();
	void ToggleCharacterBackpack();
	void ToggleBuildingHighlights();
	void ToggleBuildingActorsTransparency();
	void ToggleAISpawning();
	void ToggleAISpawnCap();
	void ToggleAIDirectorLogging();
	void ToggleAIDespawning();
	void ToggleAIAnim();
	void TestUpgradeOutpostItem(const class FString& ItemTemplateId);
	void TestTournamentOver();
	void TestSuddenPortChange(uint32 NumConnections);
	void TestStun(float StunStime);
	void TestSetOutpostDefenseActive(bool bActive);
	void TestSafeZoneLocations(int32 NumPasses, int32 PhaseToDraw);
	void TestRegenId();
	void TestPlayerCollector(int32 NumPackets, const class FString& Payload);
	void TestOutpostUI();
	void TestLeaveGame();
	void TestKnockback(float KnockbackMagnitude, float KnockbackZAngle);
	void TestJoin();
	void TestEncryptAPI(const class FString& InUserId, const class FString& InSessionId);
	void TestDisconnect();
	void TestCloseClientConfirmationMessage();
	void TestCheckBansAtMatchStart();
	void TestChangePartySize(int32 NewSize);
	void TestChangePartyPrivacy(bool bPrivate, bool bLeaderFriendsOnly, bool bLeaderInvitesOnly);
	void TestCancelLobby();
	void TestBanhammer(const class FString& InUserId, int32 BanCode, const class FString& BanReason, int32 DesiredAction, int32 BanhammerActivation, int32 BanhammerTiming, int32 BanhammerMessageType, const class FString& BanhammerCustomMessage, const class FString& BanhammerDetails);
	void TestAddingNonTeamPlayerStates();
	void TeleportToMissionActor();
	void TeleportToLocation(float X, float Y, float Z);
	void TeleportToActor(const class FString& ClassOrInstanceName);
	void TakeoverScriptedPawn();
	void SwitchTeam();
	void SwapPickerThumbstick();
	void StopHighlights();
	void StopDummyDebugEncounter();
	void StartLiveStreamingWindow(float Seconds);
	void SpawnVehicle(const class FString& CarName);
	void SpawnScriptedPawnsInFormation(const class FString& ProfileName, int32 RowWidth, int32 ColumnDepth, float Spacing);
	class AFortPlayerPawn* SpawnScriptedPawn(const class FString& ProfileName);
	void SpawnPickup(const class FString& ItemName, int32 NumItems, float SpawnDistance, float SpawnRotation);
	class AFortPawn* SpawnPawn(const class FString& PawnType);
	void SpawnFoodFightObjective();
	class AFortPlayerPawn* SpawnEnemyPlayer(float MaxHealth, float MaxShield);
	void SpawnContainer(const class FString& ContainerClassName);
	void SpawnAthenaSupplyDrop(class FString& SupplyDropInfoName, bool bShouldCenterGroundCheckAtFoundLocation);
	void SpawnAIGroupWithUpgrade(const class FString& SpawnGroupName, const class FString& UpgradeName);
	void SpawnAIGroupFromExternalSpawner(const class FString& SpawnGroupName);
	void SpawnAIGroup(const class FString& SpawnGroupName);
	void SkipSafeZones();
	void SkipAircraft();
	void SimulateLootDrops();
	void SimulateLoot(class FName TierGroup, int32 LootTier, int32 LootLevel);
	void ShowHUDElement(const struct FGameplayTag& HUDElementTag);
	void ShowHighlightSummary();
	void ShowGameplayCaptureUI();
	void ShowEventsDebugInfo(bool bShowDebugInfo);
	void ShowAllMinimapIcons();
	void ShowActiveGameplayModifiers();
	bool ShouldUseNewHeroLoadoutUI(class APlayerController* PC);
	void SetWorldLevel(float Level);
	void SetWorldDaysElapsed(float Days);
	void SetWallTimer(float Seconds);
	void SetUnlimitedHealth(bool bInValue);
	void SetTeamOnScriptedPawn(int32 NewTeamIndex);
	void SetTeam(int32 TeamIndex);
	void SetShieldPercent(float Percent);
	void SetScriptedPawnVariantChannel(const class FString& ChannelTag, const class FString& ActiveTag);
	void SetScriptedPawnTargeting(bool bIsTargeting);
	void SetScriptedPawnRotation(float Yaw);
	void SetScriptedPawnLocation(float X, float Y, float Z);
	void SetSafeZoneRadius(float NewRadius);
	void SetSafeZoneLocationToPlayer();
	void SetRiftCosmeticState(enum class ERiftCosmeticState NewValue);
	void SetRespawnTimerOverride(float TimeUntilRespawn);
	void SetReplStat(enum class EFortReplicatedStat Stat, int32 Amount);
	void SetRandomAircraftFlightPath();
	void SetPvPStalemateTime(int32 NumSeconds);
	void SetPvPRoundTime(int32 NumSeconds, int32 CriticalThreshold);
	void SetMaxClouds(int32 MaxClouds);
	void SetLFG(bool bLFG);
	void SetJumpStaminaCost(class FName ModeName);
	void SetInteractionDistances(float InteractionDistance, float InteractionHighlightDistance);
	void SetInteractExtent(float Extent);
	void SetInputPresetName(const class FString& PresetName);
	void SetInfiniteAmmo(bool bInValue);
	void SetHordePlotExpansionSize(int32 XSize, int32 YSize, int32 ZSize);
	void SetHeroLevel(int32 Level);
	void SetHeroClass(const class FString& NewHeroName, int32 Level);
	void SetHealthPercent(float Percent);
	void SetHeadHealthPercent(float HealthPercent);
	void SetHasSeenSeasonSevenTrailer(bool bInHasSeen);
	void SetGlobalWind(float Magnitude, float HeadingDegrees);
	void SetGameStat(const class FString& StatName, int32 Amount);
	void SetGameDifficultyOverride(float GameDifficultyOverrideValue);
	void SetFrameSyncMode(int32 Mode);
	void SetEventCalendarTime(const class FString& TimeString);
	void SetEncounterTopUtilityPercentages(const class FString& UtilitiesAndPercentages);
	void SetEncounterSpawnPointsCurve(const class FString& CurveName);
	void SetEncounterSpawnPointsCap(int32 SpawnPointsCap);
	void SetEncounterSimulatedNumberOfPlayers(int32 NumPlayers);
	void SetEncounterGraphsHistoryLength(int32 Seconds);
	void SetEncounterDirections(const TArray<enum class EFortEncounterDirection>& Directions);
	void SetDifficultyIncreaseRewardTier(int32 RewardTier);
	void SetCurrentEncounterToDebug(int32 EncounterIndex);
	void SetCullValues(float MinCullObjectSize, float MinCullDistance, float MaxCullObjectSize, float MaxCullDistance);
	void SetCrossplayPreference(int32 NewPreference);
	void SetConsole60FPSMode(bool bEnabled);
	void SetCombatGraphHistoryLength(int32 Seconds);
	void SetCloudAltitude(float CloudAltitude);
	void SetCapturePercentage(float NewCapturePercentage);
	void SetCanBeDamagedOnTraceActor(bool bCanBeDamaged);
	void SetCameraPrototype(class FName ProtoName);
	void SetCameraFOVMultiplier(float Multiplier);
	void SetCameraDistanceMultiplier(float XMultiplier, float YMultiplier, float ZMultiplier);
	void SetBuildFree(bool bNewValue);
	void SetBackpackOnScriptedPawn(const class FString& NewBackpack);
	void SetAthenaHeroOnScriptedPawn(const class FString& NewHeroName);
	void SetAthenaHero(const class FString& NewHeroName);
	void SetAircraftFlightPath(float StartDegrees, float OffsetFactor);
	void SetAimMode(uint32 Mode);
	void SetActionMappingEnabled(class FName Action, bool bEnabled);
	void SendTwitchToastNotification(const class FString& Title, const class FString& Description);
	void SendRemoteBotCommand(const class FString& CommandToSend);
	void SendQuestEvent(class FName Type, class FName TargetTag, class FName SourceTag, class FName ContextTag);
	void SendMissionEvent(const class FString& MissionEventName);
	void ScriptedPawnToggleFiringWithInfiniteAmmo();
	void ScriptedPawnToggleCrouch();
	void ScriptedPawnStopIntervalFiring();
	void ScriptedPawnIntervalFiring(float TimeBetweenShots, int32 BurstAmount, float TimeBetweenBursts);
	void SafeTeleport(float X, float Y, float Z, float Pitch, float Yaw, float Roll);
	void RunPerfMemCheatScript(bool bStartStatFiles);
	void RunPawnScriptLocally(const class FString& ProfileName);
	void RunMonteCarlo(int32 X, int32 Y, const class FString& TileGroup, int32 NumIterations);
	void ReviveFromDBNO();
	void RetestFailedBanhammerActions();
	void RestartMinigame();
	void RespawnPlayerServer();
	void RespawnPlayer();
	void ResetWall();
	void ResetMaxAITracking();
	void ResetLastSeenAthenaStoreRefreshTime();
	void ResetForcedAthenaCosmeticItems();
	void ResetEncounterWave();
	void ReRandomizeTiles();
	void ReplayLastPerfTest(const class FString& Params);
	void RemoveGameplayModifier(const class FString& ModifierName);
	void RemoveFavoriteIsland(const class FString& IslandCode);
	void RemoveDebugSpawnAIGroupTag(class FName Tag);
	void RemoveDebugEncounterTag(class FName Tag);
	void ReloadUMG();
	void ReloadUI();
	void ReloadLevelStream();
	void ReleaseScriptedPawn();
	void ReInitHUD();
	void RegenerateZoneMissionsWithDifficultyLevel(float DifficultyLevelOverride);
	void RegenerateZoneMissions();
	void RefreshTournamentManager();
	void RefreshTheaters();
	void RefreshAllCalendars();
	void RedoHuskSpecialEventModifiers(float TargetRate);
	void ReadLevelSaveComponentsFromDisk();
	void QueryHighlightCount();
	void PublishCreativePlot(const class FString& Title, const class FString& Description);
	void PrintTileWorld();
	void PrintShotReport();
	void PrintScriptedActionManagerState();
	void PlayAthenaEmoteOnScriptedPawn(const class FString& EmoteName);
	void PlaceInCurrentEventsWindow(class FString* TournamentId, class FString* EventWindowId, int32 NumElims, int32 FinalPlacement, const class FString& TeamType);
	void PerfMemStatMonitor(const class FString& ToggleState);
	void PauseWarmup();
	void Pain(float Amount);
	void OpenAllContainersAndWriteLootEconomy();
	void ModItemDurability(float InValue);
	void MMS(const class FString& Command);
	void MissionForceSuccess(const class FString& MissionName, float FractionCompleted);
	void MissionForcePrimarySuccess(float FractionCompleted);
	void MissionForcePrimaryFailure();
	void MissionForceFailure(const class FString& MissionName);
	void McpUpgradeItem(const class FString& ItemToUpgrade);
	void McpTestVerifyProfileToken();
	void McpTestFriendCodes_OnQueryUnredeemedFriendCodes(bool bSuccess, TArray<struct FFriendCode>& FriendCodes);
	void McpTestFriendCodes(const class FString& TokenId);
	void McpStorageTransfer(TArray<class FString>& ItemIdsToMoveToOutpost, TArray<class FString>& ItemIdsToMoveToTheater);
	void McpSlotItem(const class FString& ItemToSlot);
	void McpResetPersistence();
	void McpRemoveAllTestProfileMocks();
	void McpRefreshProfile();
	void McpRefreshCatalog();
	void McpRedeemPurchases();
	void McpRecycleItem(const class FString& ItemToRecycle);
	void McpPrintPartyInviteToken(bool OnlyPrintIfJoinable);
	void McpPrintFriendInviteToken(const class FString& FriendName, bool OnlyPrintIfJoinable);
	void McpOpenCardPack(const class FString& CardPackItemId, int32 SelectionIdx);
	void McpLogout();
	void McpJoinFromPartyInviteToken(const class FString& Token, bool bIsFromInvite);
	void McpIssueCodeToken(const class FString& TokenId);
	void McpHostGetPlayers();
	void McpHostGetAllPlayerCachedPersistence();
	void McpGetVersion();
	void McpGetUnredeemedCodes();
	void McpGetSchematicXP();
	void McpGetPrivacySettings();
	void McpGetPersonnelXP();
	void McpGetHexMission();
	void McpGetCurrencyAmount();
	void McpGetCachedPersistence();
	void McpForceHttpFailRate(float Factor);
	void McpEquipCharCosmetic(const class FString& CharacterId, const class FString& CosmeticId, int32 CosmeticType);
	void McpEarnScore(int32 ScoreAmount);
	void McpConvertItem(const class FString& ItemToConvert, int32 ConversionIdx);
	void McpCompleteHexMission();
	void McpClaimAllResourceCollectors(bool bDebugPrint);
	void McpClaimAllAvailableCollectionBookRewards();
	void McpCheat();
	void McpApplyStash(const class FString& StashName);
	void McpApplyAlteration(const class FString& Schematic, const class FString& Alteration);
	void McpAddTestStatsMock();
	void MassSuicide();
	void MakeGods(TSubclassOf<class AFortPawn> AClass);
	void MakeBuildingActorsGod();
	void MakeAIsGod();
	void LoadMissionGenerator(const class FString& GeneratorName);
	void LoadMission(const class FString& MissionName);
	void LoadCreativePlotFromMnemonic(const class FString& Mnemonic);
	void LiveStreamingSelectedViewers(const TArray<class FString>& Names);
	void ListWeapons();
	void ListTraps();
	void ListSupplyDrops();
	void ListSpawnGroups();
	void ListPlayerIDs();
	void ListMissions();
	void ListMissionGenerators();
	void ListGadgets();
	void ListEmotes();
	void ListConsumables();
	void ListCheats();
	void ListAthenaEmotes();
	void ListAmmo();
	void ListAllFavoriteIslands();
	void ListAIUtilities();
	void ListActiveEncounters();
	void KillPawns(TSubclassOf<class AFortPawn> AClass);
	void JoinFriendGame(const class FString& FriendId);
	bool IsUsingNewFrontEndCameraManagement();
	void HideHUDElement(const struct FGameplayTag& HUDElementTag);
	void HideGameplayCaptureUI();
	void GrantHeroTacticalAbility(const class FString& SupportHeroName, int32 Level);
	void GrantHeroSupportAbility(const class FString& SupportHeroName, int32 Level);
	void GoFast(float NewSpeed);
	void GiveWood(int32 Amount);
	void GiveWeaponToScriptedPawn(const class FString& WeaponName);
	void GiveWeapons(class FName Tag);
	void GiveWeapon(const class FString& WeaponName, int32 RequestedLevel, int32 Count);
	void GiveUsefulThings(int32 NumOfUsefulThings);
	void GiveTrap(const class FString& TrapName, int32 RequestedLevel, int32 NumTrapsToGive);
	void GiveStone(int32 Amount);
	void GiveSpecificItem(const class FString& ItemPath, int32 ItemAmount, int32 ItemLevel);
	void GiveSBA(const class FString& StrategicBuildingName);
	void GiveResources(int32 Amount);
	void GivePickaxe(const class FString& PickName);
	void GiveMetal(int32 Amount);
	void GiveHeroSpecialization(const class FString& SpecializationName);
	void GiveGoodWeapons();
	void GiveGadgets(const class FString& GadgetName, int32 Quantity, int32 ItemLevel);
	void GiveGadget(const class FString& GadgetName, int32 ItemLevel);
	void GiveDeployablePlotAllIngredients(int32 NumIngredients);
	void GiveConsumable(const class FString& ConsumableName, int32 RequestedLevel, int32 Count);
	void GiveCheatInventory();
	void GiveBluGlo(int32 Amount);
	void GiveAthenaWeapons();
	void GiveAthenaTraps();
	void GiveAthenaLoadout();
	void GiveAthenaFullKit();
	void GiveAthenaConsumables();
	void GiveAthenaAmmo();
	void GiveAmmo(const class FString& AmmoNameAndAmmount);
	void GiveAllWeapons();
	void GiveAllTraps(int32 NumItems);
	void GiveAllShotguns();
	void GiveAllRifles();
	void GiveAllPistols();
	void GiveAllMelee();
	void GiveAllIngredients(int32 NumIngredients);
	void GiveAllConsumables(int32 NumItems);
	void GetWTFRotations();
	void GetWorldLevel();
	void GetWorldDifficulty();
	void GetReplStat(enum class EFortReplicatedStat Stat);
	void GetPoiVolumeData();
	void GetPoiInfoForPlayer();
	void GetGameStat(const class FString& StatName);
	void GetAllReplStats();
	void GenerateTravelLogEntries(int32 Count);
	void GeneratePolysInPathingRange(float MaxDistance, float MinDistance);
	void GenerateMockMatchReport();
	void FortVolumeResetTest();
	void FortVolumeAsyncTest();
	void FortniteForceCharLOD(int32 LOD);
	void ForceUnlockHordeTiers(int32 MaxTierNumber);
	void ForceSetHeroRemoteCharacter(int32 PartyMemberIndex, bool bEnabled);
	void ForceServerShutdown(int32 ExitCode);
	void ForceSaveMissionStateAndWorld(const class FString& SaveFileName);
	void ForceInputFilter(enum class EFortInputFilterLevel InputFilter);
	void ForceHeroType(const class FString& HeroPersistentName);
	void ForceExternalRichPresenceUpdate();
	void ForceAthenaCosmeticItemInSlot(const class FString& TemplateId, enum class EAthenaCustomizationCategory Slot, int32 SlotIndex);
	void ForceAthenaCosmeticItem(const class FString& TemplateId);
	void ForceAILODs(enum class EFortAILODLevel InForcedAILODValue);
	void FinishCurrentStormCircle(float TimeToShrink);
	void FakeKillHighlight();
	void FakeDownHighlight();
	void ExtAuthReset(bool bWipeDeviceAccountInfo);
	void ExecuteNewMissionGeneration(float DifficultyLevel, const class FString& GeneratorName);
	void EvolveHero();
	void EnvPain(float Amount);
	void EndLiveStreamingWindow();
	void EndDeimosSpawning();
	void EncounterTopUtilityPercentages();
	void EncounterSpawnProbabilities();
	void EncounterSetDifficultyLevel(float NewDifficulty);
	void EncounterInitialUtilities();
	void EncounterCurrentUtilities();
	void EnableSubtitles(bool bEnable);
	void EnableNewCustomizationPanel(bool bEnable);
	void EnableHeroLoadoutSystem(bool bEnabled);
	void EnableFixedTimeStep(int32 AsIfItWasFPS);
	void DumpMatchAnalytics();
	void DumpGameStats(const class FString& FilterName);
	void DumpAppliedHomebaseEffectsWithCoreAttributes();
	void DumpAllActorsWithAssetTags();
	void DumpAllActiveMissions();
	void DumpActorsWithAssetTags(const class FString& TagList);
	void DumpActiveGameplayEffects();
	void DiscardAILogging();
	void DisableAI();
	void DevSkipTutorial();
	void DestroyAllScriptedPawns();
	void DestroyAllPickups();
	void DebugUseDedicatedServer(bool bUse);
	void DebugThisAI();
	void DebugStructuralSupport();
	void DebugSanitizeMessage(const class FString& MesageToSanitize);
	void DebugNativeActions();
	void DebugLoadingScreen(const class FString& MissionGen, bool bShowBullets);
	void DebugKickPlayerDueToInactivity();
	void DebugHotSpots();
	void DebugHideLoadingScreen();
	void DebugForceEnsure();
	void DebugBuildingGroups();
	void DebugBuildingDetection();
	void DebugAttributeModifiers();
	void DebugAttributeClear();
	void DebugAttribute(class FString* Attribute);
	void DebugAbilityTags();
	void DBNO();
	void CycleTheaterDisplayed();
	void CycleEncounterEQSQueryToDebug();
	void CycleCurrentEncounterToDebug();
	void CreateProfileGoCollectionForSublevels(const class FString& SublevelSearchString, int32 GridStepsX, int32 GridStepsY, int32 RotationSteps, int32 Quad);
	void CreateProfileGoCollectionForCreativeIslands(int32 GridStepsX, int32 GridStepsY, int32 RotationSteps, int32 Quad);
	void CraftFree();
	void CountPlayerBuiltBuildingActors();
	void ConstructTileWorld(int32 MaxTiles, int32 X, int32 Y);
	void ClearScriptedPawnVariantChannels();
	void ClearRespawnTimer();
	void ClearMapFog();
	void ClearKeepSave();
	void ClearFortVolume();
	void ClearEncounterSpawnPointsCurve();
	void ClearEncounterSpawnPointsCap();
	void ClearEncounterSimulatedNumberOfPlayers();
	void ClearDebugSpawnAIGroupTags();
	void ClearDebugEncounterTags();
	void CheatMountExitVan();
	void ChangeHeroClass(int32 Index);
	void ChangeBotModule(const class FString& PilotCategory, const class FString& NewModule, bool bResetNow);
	void CaptureTeamToggleInput();
	void CanExitWorld(bool bValue);
	void BuildWith(const class FString& ResourceTypeAndOrLevel);
	void BuildFree();
	void BringDownWall();
	void BounceContainer();
	void BotStopDogpile();
	void BotStartDogpile();
	void BeautyMode();
	void Badass();
	void BackpackSetSize(int32 Size);
	void AthenaGiveScoreTo(int32 PlayerStateIdx, int32 Score);
	void AthenaForceVictory(bool bVictory);
	void AthenaEndlessGame();
	void AthenaEmote(const class FString& EmoteName);
	bool AreContextMenusEnabled(class APlayerController* PC);
	void ApplyWeaponAlteration(const class FString& AlterationName);
	void ApplyGameplayModifier(const class FString& ModifierName);
	void AllowRespawn();
	void AddUtilityScore(int32 Amount);
	void AddKillFeedMessage();
	void AddFavoriteIsland(const class FString& IslandCode);
	void AddDebugSpawnAIGroupTag(class FName Tag);
	void AddDebugEncounterTag(class FName Tag);
	void AddCombatScore(int32 Amount);
	void AddBuildingScore(int32 Amount);
	void AddAllScores(int32 Amount);
};

// 0xF8 (0x120 - 0x28)
// Class FortniteGame.FortChunkDownloadManager
class UFortChunkDownloadManager : public UObject
{
public:
	uint8                                        Pad_193B[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                PakChunk0Name;                                     // 0x30(0x10)(ZeroConstructor, Config, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<uint32>                               RequiredChunkIds;                                  // 0x40(0x10)(ZeroConstructor, Config, Protected, NativeAccessSpecifierProtected)
	float                                        DownloadTimeoutSeconds;                            // 0x50(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_193C[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bAssumeAllDataPresent;                             // 0x58(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_193D[0xC7];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortChunkDownloadManager");
		return Clss;
	}

};

// 0x8 (0x58 - 0x50)
// Class FortniteGame.FortCinematicCamera
class UFortCinematicCamera : public UFortCameraMode
{
public:
	uint8                                        Pad_193E[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortCinematicCamera");
		return Clss;
	}

};

// 0x70 (0x3A0 - 0x330)
// Class FortniteGame.FortClientAnnouncement
class AFortClientAnnouncement : public AActor
{
public:
	uint8                                        Pad_193F[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGuid                                 AnnouncementID;                                    // 0x338(0x10)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UUserWidget>               DisplayWidget;                                     // 0x348(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TimeToLive;                                        // 0x350(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bRetrigger;                                        // 0x354(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDestroyOnAllClientsStopped;                       // 0x355(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortAnnouncementChannel          Channel;                                           // 0x356(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1940[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        Priority;                                          // 0x358(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1941[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	enum class EFortAnnouncementDelivery         ClientDeliveryStatus;                              // 0x35D(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1942[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        ClientDeliveryTime;                                // 0x360(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1943[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	UMulticastDelegateProperty_                  OnUpdateAnnouncementData;                          // 0x368(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnAnnouncementStopped;                             // 0x378(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TArray<class AFortPlayerController*>         RecipientControllers;                              // 0x388(0x10)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Protected, ExposeOnSpawn, NativeAccessSpecifierProtected)
	uint8                                        Pad_1944[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortClientAnnouncement");
		return Clss;
	}

	void StopClientAnnouncement();
	void OnClientAnnouncementStop();
	void OnClientAnnouncementStart();
	int32 GetPriority();
	void CancelClientAnnouncement();
};

// 0xE8 (0x488 - 0x3A0)
// Class FortniteGame.FortClientAnnouncement_Basic
class AFortClientAnnouncement_Basic : public AFortClientAnnouncement
{
public:
	struct FFortClientAnnouncementData_Basic     BasicData;                                         // 0x3A0(0xE8)(Edit, BlueprintVisible, Net, RepNotify, ExposeOnSpawn, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortClientAnnouncement_Basic");
		return Clss;
	}

	void SetTitleText(class FText TitleText);
	void SetIcon(struct FSlateBrush* Icon);
	void SetDisplayTime(float DisplayTime);
	void SetDetailText(class FText DetailText);
	void OnRep_BasicData(struct FFortClientAnnouncementData_Basic& PreviousBasicData);
};

// 0x0 (0x3A0 - 0x3A0)
// Class FortniteGame.FortClientAnnouncement_Cinematic
class AFortClientAnnouncement_Cinematic : public AFortClientAnnouncement
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortClientAnnouncement_Cinematic");
		return Clss;
	}

	void OnPlayerSkippedCutscene();
};

// 0x70 (0x410 - 0x3A0)
// Class FortniteGame.FortClientAnnouncement_Conversation
class AFortClientAnnouncement_Conversation : public AFortClientAnnouncement
{
public:
	uint8                                        Pad_1945[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FFortClientAnnouncementData_Conversation ConversationData;                                  // 0x3B0(0x10)(Edit, BlueprintVisible, Net, NoDestructor, ExposeOnSpawn, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnConversationStarted;                             // 0x3C0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnConversationStopped;                             // 0x3D0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UAudioComponent*                       SpeechComponent;                                   // 0x3E0(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bAutoPlayConversation;                             // 0x3E8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bCurrentlyPlaying;                                 // 0x3E9(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1946[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        CurrentSentenceIndex;                              // 0x3EC(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1947[0x20];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortClientAnnouncement_Conversation");
		return Clss;
	}

	void CurrentSentenceAudioFinished();
};

// 0x0 (0x28 - 0x28)
// Class FortniteGame.FortClientAnnouncement_ConversationCodeInterface
class UFortClientAnnouncement_ConversationCodeInterface : public UInterface
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortClientAnnouncement_ConversationCodeInterface");
		return Clss;
	}

	void StopConversation();
	bool PlayConversationFromSentenceIndex(int32 StartingSentenceIndex);
	bool PlayConversationFromSentence(struct FFortConversationSentence& StartingSentence);
	bool PlayConversation();
	bool IsPlayingSentenceIndex(int32 SentenceIndex);
	bool IsPlayingSentence(struct FFortConversationSentence& Sentence);
	bool IsPlayingConversation(bool bCheckAudioComponent);
};

// 0x0 (0x28 - 0x28)
// Class FortniteGame.FortClientAnnouncement_ConversationInterface
class UFortClientAnnouncement_ConversationInterface : public UInterface
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortClientAnnouncement_ConversationInterface");
		return Clss;
	}

	bool ShouldPlaySentence(struct FFortConversationSentence& NewSentence);
	void OnSentenceStarted(struct FFortConversationSentence& Sentence, int32 SentenceIndex);
	void OnSentenceFinished(struct FFortConversationSentence& Sentence, int32 SentenceIndex);
	void OnConversationStarted(const struct FFortConversationSentence& StartingSentence, int32 StartingSentenceIndex);
	void OnConversationFinished(const struct FFortConversationSentence& FinishingSentence, int32 FinishingSentenceSentenceIndex);
};

// 0xF8 (0x498 - 0x3A0)
// Class FortniteGame.FortClientAnnouncement_Keybinding
class AFortClientAnnouncement_Keybinding : public AFortClientAnnouncement
{
public:
	struct FFortClientAnnouncementData_Keybinding KeybindingData;                                    // 0x3A0(0xF8)(Edit, BlueprintVisible, Net, RepNotify, ExposeOnSpawn, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortClientAnnouncement_Keybinding");
		return Clss;
	}

	void SetTitleText(class FText TitleText);
	void SetIcon(struct FSlateBrush* Icon);
	void SetDisplayTime(float DisplayTime);
	void SetDetailText(class FText DetailText);
	void ResetGamepadActionTextPairList();
	void OnRep_KeybindingData(struct FFortClientAnnouncementData_Keybinding& PreviousKeybindingData);
	void AddGamepadActionTextPair(const struct FActionTextPair& Pair);
};

// 0x160 (0x500 - 0x3A0)
// Class FortniteGame.FortClientAnnouncement_Tutorial
class AFortClientAnnouncement_Tutorial : public AFortClientAnnouncement
{
public:
	uint8                                        Pad_1951[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FFortClientAnnouncementData_Tutorial  TutorialData;                                      // 0x3A8(0x138)(Edit, BlueprintVisible, Net, RepNotify, ExposeOnSpawn, NativeAccessSpecifierPublic)
	float                                        AutoContinueDelay;                                 // 0x4E0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1952[0x1C];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortClientAnnouncement_Tutorial");
		return Clss;
	}

	void OnRep_TutorialData(struct FFortClientAnnouncementData_Tutorial& PreviousTutorialData);
};

// 0x160 (0x570 - 0x410)
// Class FortniteGame.FortClientAnnouncement_TutorialConversation
class AFortClientAnnouncement_TutorialConversation : public AFortClientAnnouncement_Conversation
{
public:
	uint8                                        Pad_1953[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FFortClientAnnouncementData_Tutorial  TutorialData;                                      // 0x418(0x138)(Edit, BlueprintVisible, Net, ExposeOnSpawn, NativeAccessSpecifierPublic)
	float                                        AutoContinueDelay;                                 // 0x550(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1954[0x1C];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortClientAnnouncement_TutorialConversation");
		return Clss;
	}

	void OnRep_TutorialData(struct FFortClientAnnouncementData_Tutorial& PreviousTutorialData);
};

// 0x0 (0x28 - 0x28)
// Class FortniteGame.FortClientAnnouncement_TutorialInterface
class UFortClientAnnouncement_TutorialInterface : public UInterface
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortClientAnnouncement_TutorialInterface");
		return Clss;
	}

	void WaitForContinue(class UObject* WorldContextObject, const struct FLatentActionInfo& LatentInfo);
	void SetVAlign(enum class EVerticalAlignment VAlign);
	void SetTitleText(class FText NameText);
	void SetSystemText(class FText SystemText);
	void SetPadding(const struct FMargin& Padding);
	void SetNameText(class FText NameText);
	void SetLightboxEnabled(bool bLightboxEnabled);
	void SetLightboxDisableInputOnly(bool bLightboxDisableInputOnly);
	void SetHAlign(enum class EHorizontalAlignment HAlign);
	void SetDetailText(class FText NameText);
	void SetButtonEnabled(bool bButtonEnabled);
	void HideTutorialWidget();
};

// 0x18 (0x3B8 - 0x3A0)
// Class FortniteGame.FortClientAnnouncement_ZoneModifiers
class AFortClientAnnouncement_ZoneModifiers : public AFortClientAnnouncement
{
public:
	float                                        DisplayTime;                                       // 0x3A0(0x4)(Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1955[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FFortClientAnnouncementData_ZoneModifiers ModifiersData;                                     // 0x3A8(0x10)(Edit, BlueprintVisible, Net, ExposeOnSpawn, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortClientAnnouncement_ZoneModifiers");
		return Clss;
	}

};

// 0x128 (0x458 - 0x330)
// Class FortniteGame.FortClientAnnouncementManager
class AFortClientAnnouncementManager : public AActor
{
public:
	uint8                                        Pad_1956[0x28];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class AFortClientAnnouncement*>       ClientAnnouncements;                               // 0x358(0x10)(Net, ZeroConstructor, RepNotify, Protected, NativeAccessSpecifierProtected)
	TArray<class AFortClientAnnouncement*>       LocalClientAnnouncements;                          // 0x368(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<struct FGuid>                         CancelledAnnouncements;                            // 0x378(0x10)(Net, ZeroConstructor, RepNotify, Protected, NativeAccessSpecifierProtected)
	struct FFortClientAnnouncementQueue          Channels;                                          // 0x388(0x10)(Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_1957[0xC0];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortClientAnnouncementManager");
		return Clss;
	}

	void OnRep_ClientAnnouncements(TArray<class AFortClientAnnouncement*>* PreviousClientAnnouncements);
	void OnRep_CancelledAnnouncements();
};

// 0x2C8 (0x2F0 - 0x28)
// Class FortniteGame.FortClientBotManager
class UFortClientBotManager : public UObject
{
public:
	uint8                                        Pad_1958[0x40];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTimerHandle                          MissionEndTimerHandle;                             // 0x68(0x8)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1959[0x24];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bHasAttemptedAbandon;                              // 0x94(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsMatchmaking;                                    // 0x95(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShouldPickRandomMap;                              // 0x96(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShouldRecordFPSCharts;                            // 0x97(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShouldRecordMemoryReports;                        // 0x98(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_195A[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bFPSRecordingStarted;                              // 0x9A(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bWatchingForCallStack;                             // 0x9B(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        ISelectedTheater;                                  // 0x9C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        ISelectedTile;                                     // 0xA0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_195B[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<int32>                                SelectedTileList;                                  // 0xA8(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	float                                        RandomZoneDifficultyMinimum;                       // 0xB8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RandomZoneDifficultyMaximum;                       // 0xBC(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        NumSkillPurchasesAttempted;                        // 0xC0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaxSkillPurchaseAttempts;                          // 0xC4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        NumWorkerSlotsAttempted;                           // 0xC8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaxWorkerSlotAttempts;                             // 0xCC(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LobbyActionTimer;                                  // 0xD0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TimeBetweenLobbyActions;                           // 0xD4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bWaitingForSkillTreePurchase;                      // 0xD8(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bWaitingForWorkerSlot;                             // 0xD9(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_195C[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        LoopsSpentWaitingForFrontend;                      // 0xDC(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TimeBetweenStartButtonClicks;                      // 0xE0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_195D[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        TimeSinceFriendInvitesSent;                        // 0xE8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LastMatchmakeTime;                                 // 0xEC(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LastLoginCycleTime;                                // 0xF0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MatchmakingStartTime;                              // 0xF4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LastChangedStateTime;                              // 0xF8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LastRandomTurnTime;                                // 0xFC(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LastPickLootTime;                                  // 0x100(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LastPickEnemyTime;                                 // 0x104(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LastEnemyKilledTime;                               // 0x108(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LastBuildingKilledTime;                            // 0x10C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LastGoodInteraction;                               // 0x110(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LastCheckGoodTarget;                               // 0x114(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_195E[0x50];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class AFortPawn*                             EnemyTarget;                                       // 0x168(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AFortPickup*                           PickupTarget;                                      // 0x170(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ABuildingActor*                        BuildingTarget;                                    // 0x178(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ABuildingActor*                        MissionTarget;                                     // 0x180(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ABuildingActor*                        PrimaryMissionTarget;                              // 0x188(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class ABuildingActor*>                AllMissionTargets;                                 // 0x190(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class ABuildingActor*>                ActiveMissionTargets;                              // 0x1A0(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_195F[0xA0];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               ViewLocation;                                      // 0x250(0xC)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1960[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AFortPlayerPawn*                       MyPawn;                                            // 0x260(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UFortWorldItem*>                ItemsToCheckForMaxStackSize;                       // 0x268(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_1961[0x78];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortClientBotManager");
		return Clss;
	}

};

// 0x40 (0x330 - 0x2F0)
// Class FortniteGame.FortClientBotManager_Smoke
class UFortClientBotManager_Smoke : public UFortClientBotManager
{
public:
	uint8                                        Pad_1962[0x40];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortClientBotManager_Smoke");
		return Clss;
	}

};

// 0x80 (0x370 - 0x2F0)
// Class FortniteGame.FortClientBotManagerAthena
class UFortClientBotManagerAthena : public UFortClientBotManager
{
public:
	uint8                                        Pad_1963[0x80];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortClientBotManagerAthena");
		return Clss;
	}

};

// 0x80 (0x3F0 - 0x370)
// Class FortniteGame.FortClientBotManagerAthena_Smoke
class UFortClientBotManagerAthena_Smoke : public UFortClientBotManagerAthena
{
public:
	uint8                                        Pad_1964[0x80];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortClientBotManagerAthena_Smoke");
		return Clss;
	}

};

// 0x0 (0x3F0 - 0x3F0)
// Class FortniteGame.FortClientBotManagerAthena_SanityCheck
class UFortClientBotManagerAthena_SanityCheck : public UFortClientBotManagerAthena_Smoke
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortClientBotManagerAthena_SanityCheck");
		return Clss;
	}

};

// 0x70 (0x3E0 - 0x370)
// Class FortniteGame.FortClientBotManagerAthena_Teleporter
class UFortClientBotManagerAthena_Teleporter : public UFortClientBotManagerAthena
{
public:
	uint8                                        Pad_1965[0x70];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortClientBotManagerAthena_Teleporter");
		return Clss;
	}

};

// 0x0 (0x2F0 - 0x2F0)
// Class FortniteGame.FortClientBotManagerMemoryReport
class UFortClientBotManagerMemoryReport : public UFortClientBotManager
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortClientBotManagerMemoryReport");
		return Clss;
	}

};

// 0x78 (0x740 - 0x6C8)
// Class FortniteGame.FortDynamicBuilder
class AFortDynamicBuilder : public ABuildingActor
{
public:
	class UFortBuildingInstructions*             BuildingInstructions;                              // 0x6C8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bSelectiveDestruction;                             // 0x6D0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDestroyOverlapping;                               // 0x6D1(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDestroyMatchingPiece;                             // 0x6D2(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bNoCollisionFail;                                  // 0x6D3(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIgnoreMissionActors;                              // 0x6D4(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShrinkAndDestroyEffect;                           // 0x6D5(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDebugDrawBounds;                                  // 0x6D6(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bUsePlayerBuildAnimations;                         // 0x6D7(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BuildingConstructionTime;                          // 0x6D8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFDynamicBuildOrder               BuildOrder;                                        // 0x6DC(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bReverseBuild;                                     // 0x6DD(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1966[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        OverrideOwnerPersistentId;                         // 0x6E0(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1967[0x44];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        CurrentIndex;                                      // 0x728(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1968[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class ABuildingActor*>                AllBuiltActors;                                    // 0x730(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortDynamicBuilder");
		return Clss;
	}

};

// 0x0 (0x740 - 0x740)
// Class FortniteGame.FortClientDynamicBuilder
class AFortClientDynamicBuilder : public AFortDynamicBuilder
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortClientDynamicBuilder");
		return Clss;
	}

};

// 0x10 (0x40 - 0x30)
// Class FortniteGame.FortClientEventData
class UFortClientEventData : public UDataAsset
{
public:
	TArray<struct FFortClientEventName>          ClientEventNames;                                  // 0x30(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortClientEventData");
		return Clss;
	}

};

// 0x0 (0x28 - 0x28)
// Class FortniteGame.FortClientEventInterface
class UFortClientEventInterface : public UInterface
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortClientEventInterface");
		return Clss;
	}

	void BlueprintCustomHandleClientEvent(class UObject* EventSource, class UObject* EventFocus, struct FFortClientEvent& ClientEvent);
};

// 0xF8 (0x120 - 0x28)
// Class FortniteGame.FortClientPilot_Base
class UFortClientPilot_Base : public UClientPilotComponent
{
public:
	uint8                                        Pad_1969[0xA8];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class AFortPawn*                             EnemyTarget;                                       // 0xD0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AFortPickup*                           PickupTarget;                                      // 0xD8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ABuildingActor*                        BuildingTarget;                                    // 0xE0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ABuildingSMActor*                      EditTarget;                                        // 0xE8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_196A[0x30];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortClientPilot_Base");
		return Clss;
	}

};

// 0x170 (0x290 - 0x120)
// Class FortniteGame.FortClientPilot_GameplayBase
class UFortClientPilot_GameplayBase : public UFortClientPilot_Base
{
public:
	//float                                      LastRandomTurnTime;                                // 0x11C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LastPickLootTime;                                  // 0x120(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LastPickEnemyTime;                                 // 0x124(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LastEnemyKilledTime;                               // 0x128(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LastBuildingKilledTime;                            // 0x12C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LastGoodInteraction;                               // 0x130(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LastCheckGoodTarget;                               // 0x134(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LastPickEditTime;                                  // 0x138(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_196B[0xCC];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               ViewLocation;                                      // 0x208(0xC)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_196C[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AFortPlayerPawn*                       MyPawn;                                            // 0x218(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UFortWorldItem*>                ItemsToCheckForMaxStackSize;                       // 0x220(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_196D[0x58];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTimerHandle                          MissionEndTimerHandle;                             // 0x288(0x8)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortClientPilot_GameplayBase");
		return Clss;
	}

};

// 0x60 (0x2F0 - 0x290)
// Class FortniteGame.FortClientPilot_GameplayAthena
class UFortClientPilot_GameplayAthena : public UFortClientPilot_GameplayBase
{
public:
	uint8                                        Pad_196E[0x60];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortClientPilot_GameplayAthena");
		return Clss;
	}

};

// 0x80 (0x370 - 0x2F0)
// Class FortniteGame.FortClientPilot_BaseSmokeAthena
class UFortClientPilot_BaseSmokeAthena : public UFortClientPilot_GameplayAthena
{
public:
	uint8                                        Pad_196F[0x80];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortClientPilot_BaseSmokeAthena");
		return Clss;
	}

};

// 0x40 (0x160 - 0x120)
// Class FortniteGame.FortClientPilot_FrontendBase
class UFortClientPilot_FrontendBase : public UFortClientPilot_Base
{
public:
	//bool                                       bWaitingForSkillTreePurchase;                      // 0x118(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	//bool                                       bWaitingForWorkerSlot;                             // 0x119(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	//int32                                      NumSkillPurchasesAttempted;                        // 0x11C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaxSkillPurchaseAttempts;                          // 0x120(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        NumWorkerSlotsAttempted;                           // 0x124(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaxWorkerSlotAttempts;                             // 0x128(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        LoopsSpentWaitingForFrontend;                      // 0x12C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1970[0xC];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        LobbyActionTimer;                                  // 0x13C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TimeBetweenLobbyActions;                           // 0x140(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bHasAttemptedAbandon;                              // 0x144(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1971[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        LastMatchmakeTime;                                 // 0x148(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LastLoginCycleTime;                                // 0x14C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1972[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortClientPilot_FrontendBase");
		return Clss;
	}

};

// 0x30 (0x190 - 0x160)
// Class FortniteGame.FortClientPilot_FrontendAthena
class UFortClientPilot_FrontendAthena : public UFortClientPilot_FrontendBase
{
public:
	uint8                                        Pad_1973[0x30];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortClientPilot_FrontendAthena");
		return Clss;
	}

};

// 0x20 (0x180 - 0x160)
// Class FortniteGame.FortClientPilot_FrontendCampaign
class UFortClientPilot_FrontendCampaign : public UFortClientPilot_FrontendBase
{
public:
	//bool                                       bShouldPickRandomMap;                              // 0x158(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	//int32                                      ISelectedTheater;                                  // 0x15C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        ISelectedTile;                                     // 0x160(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1974[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<int32>                                SelectedTileList;                                  // 0x168(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	float                                        RandomZoneDifficultyMinimum;                       // 0x178(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RandomZoneDifficultyMaximum;                       // 0x17C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortClientPilot_FrontendCampaign");
		return Clss;
	}

};

// 0x30 (0x190 - 0x160)
// Class FortniteGame.FortClientPilot_FrontendCreative
class UFortClientPilot_FrontendCreative : public UFortClientPilot_FrontendBase
{
public:
	uint8                                        Pad_1975[0x30];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortClientPilot_FrontendCreative");
		return Clss;
	}

};

// 0x40 (0x2D0 - 0x290)
// Class FortniteGame.FortClientPilot_GameplayCampaign
class UFortClientPilot_GameplayCampaign : public UFortClientPilot_GameplayBase
{
public:
	uint8                                        Pad_1976[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class ABuildingActor*                        MissionTarget;                                     // 0x2A0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ABuildingActor*                        PrimaryMissionTarget;                              // 0x2A8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class ABuildingActor*>                AllMissionTargets;                                 // 0x2B0(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class ABuildingActor*>                ActiveMissionTargets;                              // 0x2C0(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortClientPilot_GameplayCampaign");
		return Clss;
	}

};

// 0x0 (0x290 - 0x290)
// Class FortniteGame.FortClientPilot_GameplayCreative
class UFortClientPilot_GameplayCreative : public UFortClientPilot_GameplayBase
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortClientPilot_GameplayCreative");
		return Clss;
	}

};

// 0x0 (0x370 - 0x370)
// Class FortniteGame.FortClientPilot_LongSmokeAthena
class UFortClientPilot_LongSmokeAthena : public UFortClientPilot_BaseSmokeAthena
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortClientPilot_LongSmokeAthena");
		return Clss;
	}

};

// 0x0 (0x370 - 0x370)
// Class FortniteGame.FortClientPilot_QuickSmokeAthena
class UFortClientPilot_QuickSmokeAthena : public UFortClientPilot_BaseSmokeAthena
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortClientPilot_QuickSmokeAthena");
		return Clss;
	}

};

// 0x50 (0x340 - 0x2F0)
// Class FortniteGame.FortClientPilot_ScenarioAthena
class UFortClientPilot_ScenarioAthena : public UFortClientPilot_GameplayAthena
{
public:
	uint8                                        Pad_1977[0x50];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortClientPilot_ScenarioAthena");
		return Clss;
	}

};

// 0x70 (0x360 - 0x2F0)
// Class FortniteGame.FortClientPilot_TeleporterAthena
class UFortClientPilot_TeleporterAthena : public UFortClientPilot_GameplayAthena
{
public:
	uint8                                        Pad_1978[0x70];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortClientPilot_TeleporterAthena");
		return Clss;
	}

};

// 0xB8 (0x130 - 0x78)
// Class FortniteGame.FortClientPilotBlackboard
class UFortClientPilotBlackboard : public UClientPilotBlackboard
{
public:
	uint8                                        Pad_1979[0xB8];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortClientPilotBlackboard");
		return Clss;
	}

};

// 0x1E8 (0x490 - 0x2A8)
// Class FortniteGame.FortLocalPlayer
class UFortLocalPlayer : public ULocalPlayer
{
public:
	uint8                                        Pad_197A[0x30];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UFortOnlineAccount*                    FortOnlineAccount;                                 // 0x2D8(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_197B[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FFortRewardReport                     CachedRewardReport;                                // 0x2F0(0x70)(NativeAccessSpecifierPublic)
	TArray<struct FFortPlayerScoreReport>        CachedScoreReports;                                // 0x360(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	class UFortClientSettingsRecord*             ClientSettingsRecord;                              // 0x370(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_197C[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bControllerAttached;                               // 0x37A(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_197D[0xD5];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FUniqueNetIdRepl                      PlatformUID;                                       // 0x450(0x28)(HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FPlayerNameInfoContainer              PlayerNameInfoContainer;                           // 0x478(0x18)(NativeAccessSpecifierPrivate)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortLocalPlayer");
		return Clss;
	}

};

// 0xA8 (0xD0 - 0x28)
// Class FortniteGame.FortGenericRecord
class UFortGenericRecord : public UObject
{
public:
	uint8                                        Pad_197E[0xA8];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortGenericRecord");
		return Clss;
	}

};

// 0x4C0 (0x590 - 0xD0)
// Class FortniteGame.FortClientSettingsRecord
class UFortClientSettingsRecord : public UFortGenericRecord
{
public:
	uint8                                        Pad_197F[0xA8];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        HUDScale;                                          // 0x178(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        InitialHUDScale;                                   // 0x17C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector2D                             GamepadLookSensitivity;                            // 0x180(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        TargetingSlow;                                     // 0x188(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ScopedSlow;                                        // 0x18C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        GamepadTargetingSlow;                              // 0x190(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        GamepadScopedSlow;                                 // 0x194(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        GamepadBuildingMultiplier;                         // 0x198(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MotionTargetingSlow;                               // 0x19C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MotionScopedSlow;                                  // 0x1A0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MotionHarvestingToolSlow;                          // 0x1A4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MouseSensitivity;                                  // 0x1A8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MouseSensitivityX;                                 // 0x1AC(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MouseSensitivityY;                                 // 0x1B0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MouseSensitivityMultiplierForAircraftValue;        // 0x1B4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        InitialMouseSensitivityMultiplierForAircraft;      // 0x1B8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        TouchLookSensitivitySetting;                       // 0x1BC(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        TouchTargetingSlow;                                // 0x1C0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        TouchScopedSlow;                                   // 0x1C4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        TouchVerticalMultiplier;                           // 0x1C8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bMotionControlsEnabled;                            // 0x1CC(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EFortMotionYawAxis                MotionYawAxis;                                     // 0x1CD(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1980[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        GyroSensitivity;                                   // 0x1D0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1981[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                ControllerPlatform;                                // 0x1D8(0x10)(ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                InputKBMPresetNameForCampaign;                     // 0x1E8(0x10)(ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                InputKBMPresetNameForAthena;                       // 0x1F8(0x10)(ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                InputPresetNameForCampaign;                        // 0x208(0x10)(ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                InputPresetNameForAthena;                          // 0x218(0x10)(ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                InputPresetNameForAthenaMobile;                    // 0x228(0x10)(ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                InputTemplatePresetNameForCampaign;                // 0x238(0x10)(ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                InputTemplatePresetNameForAthena;                  // 0x248(0x10)(ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        XboxSafeZone;                                      // 0x258(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1982[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                PendingCulture;                                    // 0x260(0x10)(ZeroConstructor, Transient, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FFortActionKeyMapping>         UserActionBindings;                                // 0x270(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TMap<enum class ESubGame, struct FUserActionBindings> UserBindingsPerSubGame;                            // 0x280(0x50)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<struct FFortActionKeyMapping>         DisabledActionBindings;                            // 0x2D0(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<struct FFortActionKeyMapping>         CustomGamepadActionBindings;                       // 0x2E0(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	bool                                         bInvertedLook;                                     // 0x2F0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bInvertedLookMobile;                               // 0x2F1(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bInvertedPitchForMotion;                           // 0x2F2(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bInvertedPitchForAircraftPrimary;                  // 0x2F3(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bInvertedPitchForAircraftSecondary;                // 0x2F4(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bInvertedYaw;                                      // 0x2F5(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bInvertedYawMobile;                                // 0x2F6(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bInvertedYawForMotion;                             // 0x2F7(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bToggleSprint;                                     // 0x2F8(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bSprintByDefault;                                  // 0x2F9(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bSprintByDefaultMobile;                            // 0x2FA(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bSprintCancelsReload;                              // 0x2FB(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bTapInteractEnabled;                               // 0x2FC(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bTargetingToggleable;                              // 0x2FD(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bAutoEquipBetterItems;                             // 0x2FE(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bAimAssistEnabled;                                 // 0x2FF(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bTouchAimAssistEnabled;                            // 0x300(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bForceFeedbackEnabled;                             // 0x301(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bUseFirstPersonCamera;                             // 0x302(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bUseGamepadAimAssist;                              // 0x303(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bUseGamepadEditModeAimAssist;                      // 0x304(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bUseGamepadAutoRun;                                // 0x305(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bFocusOnFirstBuildingPieceWhenQuickbarSwapped;     // 0x306(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bNewFocusOnFirstBuildingPieceWhenQuickbarSwapped;  // 0x307(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bFocusOnFirstBuildingPieceWhenQuickbarSwappedAthena; // 0x308(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bNewFocusOnFirstBuildingPieceWhenQuickbarSwappedAthena; // 0x309(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bTurboBuild;                                       // 0x30A(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bTurboBuildMobile;                                 // 0x30B(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bCreativeTurboDelete;                              // 0x30C(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bAutoChangeMaterial;                               // 0x30D(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bAutoChangeMaterialMobile;                         // 0x30E(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bUseTapToShoot;                                    // 0x30F(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bAutoOpenDoors;                                    // 0x310(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bAutoOpenDoorsNonMobile;                           // 0x311(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bAutoPickupWeapons;                                // 0x312(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bAutoPickupWeaponsConsolePC;                       // 0x313(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bAutoSortConsumablesToRight;                       // 0x314(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bEnableTryBuildOnFocus;                            // 0x315(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1983[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        EditButtonHoldTime;                                // 0x318(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bUnlockConsoleFPS;                                 // 0x31C(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bConsoleFPS60;                                     // 0x31D(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1984[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<struct FGameplayTag, bool>              UserHUDVisibiltyMappings;                          // 0x320(0x50)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TMap<struct FGameplayTag, bool>              UserHUDDefaultMappings;                            // 0x370(0x50)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	enum class EPartyType                        LastPartyType;                                     // 0x3C0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bLastLeaderInvitesOnly;                            // 0x3C1(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bLastLeaderFriendsOnly;                            // 0x3C2(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bAudioVolumesInitialized;                          // 0x3C3(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MusicVolume;                                       // 0x3C4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SoundFXVolume;                                     // 0x3C8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DialogVolume;                                      // 0x3CC(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ChatVolume;                                        // 0x3D0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        CinematicsVolume;                                  // 0x3D4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bEnableSubtitles;                                  // 0x3D8(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bEnableVoiceChat;                                  // 0x3D9(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bEnableVoiceChatIOS;                               // 0x3DA(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bEnableVoiceChat3D;                                // 0x3DB(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bEnableVoiceChatPTT;                               // 0x3DC(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bEnablePeripheralLighting;                         // 0x3DD(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bShowViewerCount;                                  // 0x3DE(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bAnonymousMode;                                    // 0x3DF(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bHideOtherPlayerNames;                             // 0x3E0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1985[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        HiddenMatchmakingDelayMaxSeconds;                  // 0x3E4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bReplayRecordingEnabled;                           // 0x3E8(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bLargeTeamReplayRecordingEnabled;                  // 0x3E9(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bCreativeModeReplayRecordingEnabled;               // 0x3EA(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bShadowPlayHighlightsEnabled;                      // 0x3EB(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bShowHeroHeadAccessories;                          // 0x3EC(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bShowHeroBackpack;                                 // 0x3ED(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bShowGlobalChatEnabled;                            // 0x3EE(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1986[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        InitialGammaValue;                                 // 0x3F0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bInitialUseTapToShoot;                             // 0x3F4(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bInitialAutoOpenDoors;                             // 0x3F5(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bInitialAutoPickupWeapons;                         // 0x3F6(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bInitialAutoPickupWeaponsConsolePC;                // 0x3F7(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bInitialAutoSortConsumablesToRight;                // 0x3F8(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bInitialEnableTryBuildOnFocus;                     // 0x3F9(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1987[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        InitialEditButtonHoldTime;                         // 0x3FC(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bStWQuickbarUpdated;                               // 0x400(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EColorBlindMode                   ColorBlindMode;                                    // 0x401(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1988[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        ColorBlindStrength;                                // 0x404(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bVisualizeAudioSources;                            // 0x408(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EColorBlindMode                   InitialColorBlindMode;                             // 0x409(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1989[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        InitialColorBlindStrength;                         // 0x40C(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bIgnoreGamepadInput;                               // 0x410(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bInitialIgnoreGamepadInput;                        // 0x411(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_198A[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                SelectedRegionId;                                  // 0x418(0x10)(ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                PrevSavedRegion;                                   // 0x428(0x10)(ZeroConstructor, Transient, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                LastKnownBestRegionId;                             // 0x438(0x10)(ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        CrossplayPreference;                               // 0x448(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_198B[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSet<enum class EFortInventoryCustomFilter>  CustomInventoryFilterSet;                          // 0x450(0x50)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<class FName>                          WatchedVideoIDs;                                   // 0x4A0(0x10)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	bool                                         bHasSeenSeasonSevenTrailer;                        // 0x4B0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bAllowAudioInBackground;                           // 0x4B1(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EFortAllowBackgroundAudioSetting  AllowAudioInBackground;                            // 0x4B2(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bUsePowerSavingMode;                               // 0x4B3(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bHidePerkRecombobulatorHelp;                       // 0x4B4(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bHideStwItemRefundHelp;                            // 0x4B5(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EAndroidAppStoreTypes             SelectedAndroidAppStore;                           // 0x4B6(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bHasDisabledAutoSlottingOfSurvivorSquadsAfterQuest; // 0x4B7(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bHasEnabledAutoSlottingOfSurvivorSquadsDuringOnboarding; // 0x4B8(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bWantsAutoSlottingOfSurvivorSquads;                // 0x4B9(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bDirty;                                            // 0x4BA(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_198C[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	uint8                                        bSaveToCloud : 1;                                  // Mask : 0x1 0x4BC(0x1)(Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_198D[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	enum class ECloudFileState                   CloudFileState;                                    // 0x4C0(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_198E[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	uint32                                       bDisableCloudSave;                                 // 0x4C4(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        LastRequestSaveCount;                              // 0x4C8(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        LastAttemptedSaveCount;                            // 0x4CC(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	double                                       LastSaveAttemptTime;                               // 0x4D0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	double                                       NextCloudSaveTime;                                 // 0x4D8(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_198F[0xB0];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortClientSettingsRecord");
		return Clss;
	}

};

// 0x38 (0xC0 - 0x88)
// Class FortniteGame.FortMetadataItem
class UFortMetadataItem : public UFortItem
{
public:
	int32                                        Level;                                             // 0x88(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1990[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                InstanceId;                                        // 0x90(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                TemplateId;                                        // 0xA0(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        Quantity;                                          // 0xB0(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1991[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UFortMetadataItemDefinition*           ItemDefinition;                                    // 0xB8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortMetadataItem");
		return Clss;
	}

};

// 0x18 (0xD8 - 0xC0)
// Class FortniteGame.FortCloudSaveItem
class UFortCloudSaveItem : public UFortMetadataItem
{
public:
	struct FFortCloudSaveInfo                    Cloud_save_info;                                   // 0xC0(0x18)(Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortCloudSaveItem");
		return Clss;
	}

};

// 0x0 (0x2F0 - 0x2F0)
// Class FortniteGame.FortMetadataItemDefinition
class UFortMetadataItemDefinition : public UFortItemDefinition
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortMetadataItemDefinition");
		return Clss;
	}

};

// 0x10 (0x300 - 0x2F0)
// Class FortniteGame.FortCloudSaveItemDefinition
class UFortCloudSaveItemDefinition : public UFortMetadataItemDefinition
{
public:
	int32                                        ContentVersion;                                    // 0x2F0(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1992[0xC];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortCloudSaveItemDefinition");
		return Clss;
	}

};

// 0x0 (0xE0 - 0xE0)
// Class FortniteGame.FortCodeTokenItem
class UFortCodeTokenItem : public UFortAccountItem
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortCodeTokenItem");
		return Clss;
	}

};

// 0x40 (0x3A0 - 0x360)
// Class FortniteGame.FortCodeTokenItemDefinition
class UFortCodeTokenItemDefinition : public UFortAccountItemDefinition
{
public:
	class FString                                RedemptionCodeRule;                                // 0x360(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                RedemptionCodeGroup;                               // 0x370(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<enum class ECodeTokenPlatform>        AllowedPlatforms;                                  // 0x380(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	enum class EItemProfileType                  ProfileType;                                       // 0x390(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1993[0xF];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortCodeTokenItemDefinition");
		return Clss;
	}

};

// 0x20 (0x100 - 0xE0)
// Class FortniteGame.FortCollectedResourceItem
class UFortCollectedResourceItem : public UFortAccountItem
{
public:
	double                                       Stored_value;                                      // 0xE0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                Last_updated;                                      // 0xE8(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFortItemDefinition*                   PayoutResource;                                    // 0xF8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortCollectedResourceItem");
		return Clss;
	}

};

// 0x0 (0x360 - 0x360)
// Class FortniteGame.FortCollectedResourceItemDefinition
class UFortCollectedResourceItemDefinition : public UFortAccountItemDefinition
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortCollectedResourceItemDefinition");
		return Clss;
	}

};

// 0x20 (0x48 - 0x28)
// Class FortniteGame.FortCollectionBookCategory
class UFortCollectionBookCategory : public UObject
{
public:
	class FName                                  CategoryDataRowName;                               // 0x28(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        SortPriority;                                      // 0x30(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1994[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class FName>                          ChildrenPageIds;                                   // 0x38(0x10)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortCollectionBookCategory");
		return Clss;
	}

};

// 0x70 (0xA0 - 0x30)
// Class FortniteGame.FortCollectionBookData
class UFortCollectionBookData : public UDataAsset
{
public:
	class UDataTable*                            PageCategoryData;                                  // 0x30(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UDataTable*                            PageData;                                          // 0x38(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UDataTable*                            SectionData;                                       // 0x40(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UDataTable*                            SlotData;                                          // 0x48(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UDataTable*                            SlotSourceData;                                    // 0x50(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UDataTable*                            XPWeightData;                                      // 0x58(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCurveFloat*                           SlotRarityFactorData;                              // 0x60(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UDataTable*                            BookXPData;                                        // 0x68(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FFortItemQuantityPair>         UnslotCost;                                        // 0x70(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FGameplayTagContainer                 UnslotCatalysts;                                   // 0x80(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortCollectionBookData");
		return Clss;
	}

	void GetPageIdsFromCategoryId(class FName CategoryId, TArray<class FName>* PageIds);
};

// 0x210 (0x238 - 0x28)
// Class FortniteGame.FortCollectionBookManager
class UFortCollectionBookManager : public UObject
{
public:
	UMulticastDelegateProperty_                  OnSlottedItemOperationComplete;                    // 0x28(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnSlotItemComplete;                                // 0x38(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnRewardClaimed;                                   // 0x48(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnUnslotItemComplete;                              // 0x58(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnResearchItemComplete;                            // 0x68(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_199B[0xF0];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FFortPendingSlottedItemOperation> PendingSlottedItems;                               // 0x168(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	TArray<struct FFortPendingSlottedItemOperation> PendingUpdatedItems;                               // 0x178(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	uint8                                        Pad_199C[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<class FName, class UFortMcpProfileCollectionBook*> ProfileTable;                                      // 0x190(0x50)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	TSet<class FName>                            ActivePages;                                       // 0x1E0(0x50)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	uint8                                        Pad_199D[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortCollectionBookManager");
		return Clss;
	}

	bool UnSlotItem(class UFortAccountItem* Item);
	bool SlotItem(class UFortAccountItem* Item, class FName SlotId);
	bool PurchaseItem(class UFortAccountItem* Item);
	void PopulateCollectionBookRewards(TArray<struct FFortCollectionBookRewards>* OutAvailableRewards);
	class UFortItem* GetItemInSlot(class FName SlotId);
	float GetBookXPPercentToNextLevel(int32 CurrentLevel, int32 NewXP);
	int32 GetBookTotalXPToNextLevel(int32 CurrentLevel);
	void ClaimReward(struct FFortCollectionBookRewards& RewardToClaim, int32 RewardIndex);
	bool CanSlotItem(class UFortAccountItem* AccountItem, bool bOnlyAllowIfSlotEmpty, class FName& OutSlotId);
	int32 CalculatePageXp(class FName PageId);
	int32 CalculateBookXp();
};

// 0x58 (0x80 - 0x28)
// Class FortniteGame.FortCollectionBookPage
class UFortCollectionBookPage : public UObject
{
public:
	uint8                                        Pad_199F[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                TemplateId;                                        // 0x40(0x10)(ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FString                                InstanceId;                                        // 0x50(0x10)(ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  PageRowName;                                       // 0x60(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	enum class EFortCollectionBookState          State;                                             // 0x68(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_19A0[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FFortCollectionBookSectionState> SectionStates;                                     // 0x70(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortCollectionBookPage");
		return Clss;
	}

	enum class EFortCollectionBookState GetSectionState(class FName SectionId);
	enum class EFortCollectionBookState GetPageState();
};

// 0x10 (0x38 - 0x28)
// Class FortniteGame.FortCollectionBookSection
class UFortCollectionBookSection : public UObject
{
public:
	class FName                                  SectionDataRowName;                                // 0x28(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFortCollectionBookPage*               OwningPage;                                        // 0x30(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortCollectionBookSection");
		return Clss;
	}

};

// 0x20 (0x118 - 0xF8)
// Class FortniteGame.FortCollisionAudioComponent
class UFortCollisionAudioComponent : public UActorComponent
{
public:
	TArray<struct FFortCollisionAudioTriggerData> CollisionSounds;                                   // 0xF8(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	float                                        CheckCollisionLeashInterval;                       // 0x108(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_19A3[0xC];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortCollisionAudioComponent");
		return Clss;
	}

	void SetCollisionSoundAtIndex(int32 Index, class USoundBase* SoundToUse);
	void OnCollision(struct FVector& HitLocation, struct FVector& HitNormalImpulse, bool* OutResult, float* OutMagnitude);
};

// 0xB88 (0xEB8 - 0x330)
// Class FortniteGame.FortCombatManager
class AFortCombatManager : public AActor
{
public:
	uint8                                        Pad_19A6[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        ReplicatedCombatEventHeat;                         // 0x338(0x4)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_19A7[0x6C];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        CombatEventHeat;                                   // 0x3A8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_19A8[0x6C];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        CombatFactors;                                     // 0x418(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_19A9[0x2C];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        CurrentTotalHeat;                                  // 0x448(0x4)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MaximumTotalHeat;                                  // 0x44C(0x4)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MaxHeatEver;                                       // 0x450(0x4)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_19AA[0x1C];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FCombatEventData                      Events;                                            // 0x470(0x38)(Edit, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_19AB[0x5E8];                                   // Fixing Size After Last Property  [ Dumper-7 ]
	struct FCombatFactorData                     Factors;                                           // 0xA90(0x38)(Edit, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_19AC[0x270];                                   // Fixing Size After Last Property  [ Dumper-7 ]
	struct FCombatThresholdData                  Thresholds;                                        // 0xD38(0x60)(Edit, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_19AD[0x120];                                   // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortCombatManager");
		return Clss;
	}

	void OnThresholdChange(enum class EFortCombatThresholds OldThreshold, enum class EFortCombatThresholds NewThreshold);
	void OnRep_CombatEventHeat();
	float GetEventHeatPercentTotal(enum class EFortCombatEvents CombatEvent);
	float GetEventHeatPercent(enum class EFortCombatEvents CombatEvent);
};

// 0x0 (0x130 - 0x130)
// Class FortniteGame.FortConsole
class UFortConsole : public UConsole
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortConsole");
		return Clss;
	}

};

// 0x208 (0x238 - 0x30)
// Class FortniteGame.FortConstructionSet
class UFortConstructionSet : public UFortAttributeSet
{
public:
	struct FFortGameplayAttributeData            BuildSpeed;                                        // 0x30(0x28)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            RepairSpeed;                                       // 0x58(0x28)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            BuildCost;                                         // 0x80(0x28)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            RepairCost;                                        // 0xA8(0x28)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            MaxBuildLevel;                                     // 0xD0(0x28)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            BuildingSkill;                                     // 0xF8(0x28)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            TrapArmSpeed;                                      // 0x120(0x28)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            TrapReloadSpeed;                                   // 0x148(0x28)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            TrapBaseDamage;                                    // 0x170(0x28)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            TrapMaxDurability;                                 // 0x198(0x28)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            TrapDiceCritChance;                                // 0x1C0(0x28)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            TrapDiceCritMultiplier;                            // 0x1E8(0x28)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            TrapHealingSource;                                 // 0x210(0x28)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortConstructionSet");
		return Clss;
	}

	void OnRep_TrapReloadSpeed();
	void OnRep_TrapMaxDurability();
	void OnRep_TrapHealingSource();
	void OnRep_TrapDiceCritMultiplier();
	void OnRep_TrapDiceCritChance();
	void OnRep_TrapBaseDamage();
	void OnRep_TrapArmSpeed();
	void OnRep_RepairSpeed();
	void OnRep_RepairCost();
	void OnRep_MaxBuildLevel();
	void OnRep_BuildSpeed();
	void OnRep_BuildingSkill();
	void OnRep_BuildCost();
};

// 0x368 (0x1040 - 0xCD8)
// Class FortniteGame.FortConstructorBASE
class AFortConstructorBASE : public ABuildingProp
{
public:
	uint8                                        Pad_19B0[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FBASEGameplayEffect>           BASEBuildingApplicationEffects;                    // 0xCE0(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<struct FBASEGameplayEffect>           BASEFriendlyApplicationEffects;                    // 0xCF0(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<struct FBASEGameplayEffect>           BASEFriendlyApplicationTrapEffects;                // 0xD00(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<struct FBASEGameplayEffect>           BASEEnemyApplicationEffects;                       // 0xD10(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FGameplayTag                          InBASETag;                                         // 0xD20(0x8)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        NodesToAffect;                                     // 0xD28(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        BaseLevel;                                         // 0xD2C(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FPatternBASEEffect>            BASEEffectPatterns;                                // 0xD30(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FFortBaseWeaponStats                  DamageStats;                                       // 0xD40(0x130)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class UFortDamageSet*                        DamageAttributeSet;                                // 0xE70(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_19B1[0x1C8];                                   // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortConstructorBASE");
		return Clss;
	}

	void StopBuildingActorVisuals(class ABuildingSMActor* BuildingActor, class UStaticMeshComponent* EffectMeshComp);
	void StartBuildingActorVisuals(class ABuildingSMActor* BuildingActor, class UStaticMeshComponent* EffectMeshComp);
	void OnPlaced(class UAbilitySystemComponent* InstigatorAbilitySystemComponent);
	void OnPawnRemovedFromBase(class AFortPawn* Pawn);
	void OnPawnAddedToBase(class AFortPawn* Pawn);
	void OnBasePawnDied(class AFortPawn* Pawn);
	void OnBasePawnDestroyed(class AFortPawn* Pawn);
	void OnBaseCollisionUnTouched(class UPrimitiveComponent* OverlappedComp, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void OnBaseCollisionTouched(class UPrimitiveComponent* OverlappedComp, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult);
	void GetResourceAmountsBasedOnUpgradeTier(int32 TierOneUpgradeAmount, int32 TierTwoUpgradeAmount, int32 TierThreeUpgradeAmount, int32* WoodResult, int32* StoneResult, int32* MetalResult);
	TArray<class ABuildingSMActor*> GetBuildingActorsInBase();
	void AddNeighborToBaseOnFinishedConstruction(class ABuildingSMActor* PlaceOn);
};

// 0x0 (0xE0 - 0xE0)
// Class FortniteGame.FortConsumableAccountItem
class UFortConsumableAccountItem : public UFortAccountItem
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortConsumableAccountItem");
		return Clss;
	}

	bool CanActivateOnSelf();
	bool CanActivateOnOthers();
};

// 0x40 (0x8B0 - 0x870)
// Class FortniteGame.FortConsumableItemDefinition
class UFortConsumableItemDefinition : public UFortWorldItemDefinition
{
public:
	//TArray<struct FConsumeEffectData>          ConsumeEffects;                                    // 0x868(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	uint8                                        Pad_19B2[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftObjectPtr<class UAnimMontage>           UseAnimation;                                      // 0x878(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        UseTime;                                           // 0x8A0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bRequiresMissingHealth;                            // 0x8A4(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_19B3[0xB];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortConsumableItemDefinition");
		return Clss;
	}

	class UAnimMontage* GetUseAnimation();
	float GetHealthRestored(int32 ItemLevel);
	float GetAnimPlayRate();
	void ConsumeItem(struct FGameplayEventData& EventData);
};

// 0x0 (0x90 - 0x90)
// Class FortniteGame.FortConsumableItemDefinitionTooltip
class UFortConsumableItemDefinitionTooltip : public UFortWorldItemDefinitionTooltip
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortConsumableItemDefinitionTooltip");
		return Clss;
	}

};

// 0x0 (0x90 - 0x90)
// Class FortniteGame.FortWorldItemTooltip
class UFortWorldItemTooltip : public UFortItemTooltip
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortWorldItemTooltip");
		return Clss;
	}

};

// 0x0 (0x90 - 0x90)
// Class FortniteGame.FortConsumableItemTooltip
class UFortConsumableItemTooltip : public UFortWorldItemTooltip
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortConsumableItemTooltip");
		return Clss;
	}

};

// 0x80 (0xC20 - 0xBA0)
// Class FortniteGame.FortDecoItemDefinition
class UFortDecoItemDefinition : public UFortWeaponItemDefinition
{
public:
	//TSoftClassPtr<class ABuildingActor>        BlueprintClass;                                    // 0xB98(0x28)(Edit, DisableEditOnInstance, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_19B4[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftClassPtr<class AFortDecoPreview>        PlacementPreviewClass;                             // 0xBC0(0x28)(Edit, DisableEditOnInstance, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        GridSnapSizeOverride;                              // 0xBE8(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        RotationAngleIncrement;                            // 0xBEC(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EPlacementType                    PlacementTypeOverride;                             // 0xBF0(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bForceIgnoreOverlapTest : 1;                       // Mask : 0x1 0xBF1(0x1)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bIgnoreCollisionWithVehicles : 1;                  // Mask : 0x2 0xBF1(0x1)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bForceIgnoreBuildingOverlaps : 1;                  // Mask : 0x4 0xBF1(0x1)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bIgnoreCollisionWithCriticalActors : 1;            // Mask : 0x8 0xBF1(0x1)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bIgnoreCollisionWithStructuralGridActors : 1;      // Mask : 0x10 0xBF1(0x1)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bIgnoreCollisionWithFortStaticMeshActors : 1;      // Mask : 0x20 0xBF1(0x1)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bIgnoreCollisionWithPlayers : 1;                   // Mask : 0x40 0xBF1(0x1)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bDisableLocationLerpWhilePlacing : 1;              // Mask : 0x80 0xBF1(0x1)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bDisableRotationLerpWhilePlacing : 1;              // Mask : 0x1 0xBF2(0x1)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bDisableScaleLerpWhilePlacing : 1;                 // Mask : 0x2 0xBF2(0x1)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bAttachWhenPlacing : 1;                            // Mask : 0x4 0xBF2(0x1)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bAllowPlacementOnWorldGeometry : 1;                // Mask : 0x8 0xBF2(0x1)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bAllowPlacementOnBuildings : 1;                    // Mask : 0x10 0xBF2(0x1)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bDestroySmallObjectsWhenPlaced : 1;                // Mask : 0x20 0xBF2(0x1)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bConsumeWhenPlaced : 1;                            // Mask : 0x40 0xBF2(0x1)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bCancelToolWhenPlaced : 1;                         // Mask : 0x80 0xBF2(0x1)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bCancelAbilityOnUnequip : 1;                       // Mask : 0x1 0xBF3(0x1)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bRequiresPlayerPlaceableAttachmentActors : 1;      // Mask : 0x2 0xBF3(0x1)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bUseRelativeCameraRotation : 1;                    // Mask : 0x4 0xBF3(0x1)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bAllowStairsWhenAttachingToFloors : 1;             // Mask : 0x8 0xBF3(0x1)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bSnapYawToHorizontalAxes : 1;                      // Mask : 0x10 0xBF3(0x1)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bAllowAnyFloorPlacement : 1;                       // Mask : 0x20 0xBF3(0x1)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bRequiresPermissionToEditWorld : 1;                // Mask : 0x40 0xBF3(0x1)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        MaxPlacementDistance;                              // 0xBF4(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<TSoftObjectPtr<class UBuildingEditModeMetadata>> AllowedShapes;                                     // 0xBF8(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	TArray<TSoftObjectPtr<class UBuildingEditModeMetadata>> AllowedPlayerBuiltShapes;                          // 0xC08(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	uint8                                        Pad_19B5[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortDecoItemDefinition");
		return Clss;
	}

	bool ShouldUseRelativeCameraRotation();
	bool ShouldSnapYawToHorizontalAxes();
	bool ShouldIgnoreCollisionWithVehicles();
	bool ShouldIgnoreCollisionWithStructuralGridActors();
	bool ShouldIgnoreCollisionWithPlayers();
	bool ShouldIgnoreCollisionWithFortStaticMeshActors();
	bool ShouldIgnoreCollisionWithCriticalActors();
	bool ShouldForceIgnoreOverlapTest();
	bool ShouldForceIgnoreBuildingOverlaps();
	bool ShouldDisableScaleLerpWhilePlacing();
	bool ShouldDisableRotationLerpWhilePlacing();
	bool ShouldDisableLocationLerpWhilePlacing();
	bool ShouldDestroySmallObjectsWhenPlaced();
	bool ShouldConsumeWhenPlaced();
	bool ShouldCancelToolWhenPlaced();
	bool ShouldCancelAbilityOnUnequip();
	bool ShouldAttachWhenPlacing();
	bool ShouldAllowStairsWhenAttachingToFloors();
	bool ShouldAllowPlacementOnWorldGeometry();
	bool ShouldAllowPlacementOnBuildings();
	bool ShouldAllowAnyFloorPlacement();
	bool RequiresPlayerPlaceableAttachmentActors();
	bool RequiresPermissionToEditWorld();
	float GetRotationAngleIncrement();
	enum class EPlacementType GetPlacementTypeOverride();
	TSubclassOf<class AFortDecoPreview> GetPlacementPreviewClass();
	int32 GetMaxPlacementDistance();
	float GetGridSnapSizeOverride();
	TSubclassOf<class ABuildingActor> GetBlueprintClass();
};

// 0x30 (0xC50 - 0xC20)
// Class FortniteGame.FortTrapItemDefinition
class UFortTrapItemDefinition : public UFortDecoItemDefinition
{
public:
	//struct FRotator                            KnockbackDirOverride;                              // 0xC18(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_19B6[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bKnockBackUsingPawnDir;                            // 0xC24(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_19B7[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftObjectPtr<class USoundBase>             EquipSound;                                        // 0xC28(0x28)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortTrapItemDefinition");
		return Clss;
	}

};

// 0x20 (0xC70 - 0xC50)
// Class FortniteGame.FortContextTrapItemDefinition
class UFortContextTrapItemDefinition : public UFortTrapItemDefinition
{
public:
	class UFortTrapItemDefinition*               FloorTrap;                                         // 0xC50(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFortTrapItemDefinition*               CeilingTrap;                                       // 0xC58(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFortTrapItemDefinition*               WallTrap;                                          // 0xC60(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_19B8[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortContextTrapItemDefinition");
		return Clss;
	}

};

// 0x1C8 (0x1F8 - 0x30)
// Class FortniteGame.FortControlResistanceSet
class UFortControlResistanceSet : public UFortAttributeSet
{
public:
	uint8                                        Pad_19B9[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FFortGameplayAttributeData            ControlResistance;                                 // 0x38(0x28)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            MaxControlResistance;                              // 0x60(0x28)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            ControlResistanceRegenRate;                        // 0x88(0x28)(BlueprintVisible, Net, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            ControlResistanceRegenDelay;                       // 0xB0(0x28)(BlueprintVisible, Net, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            ControlResistanceRegenThreshold;                   // 0xD8(0x28)(BlueprintVisible, Net, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            KnockbackThreshold;                                // 0x100(0x28)(BlueprintVisible, Net, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            KnockbackMultiplier;                               // 0x128(0x28)(BlueprintVisible, Net, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            ImpactDamageResistance;                            // 0x150(0x28)(BlueprintVisible, BlueprintReadOnly, Net, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            ImpactDamageMultiplier;                            // 0x178(0x28)(BlueprintVisible, BlueprintReadOnly, Net, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            ImpactDamage;                                      // 0x1A0(0x28)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	uint8                                        Pad_19BA[0x30];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortControlResistanceSet");
		return Clss;
	}

	void OnRep_MaxControlResistance();
	void OnRep_ControlResistance();
};

// 0x10 (0x40 - 0x30)
// Class FortniteGame.FortConversation
class UFortConversation : public UDataAsset
{
public:
	TArray<struct FFortConversationSentence>     Sentences;                                         // 0x30(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortConversation");
		return Clss;
	}

};

// 0x40 (0x3A0 - 0x360)
// Class FortniteGame.FortConversionControlItemDefinition
class UFortConversionControlItemDefinition : public UFortAccountItemDefinition
{
public:
	class FString                                LootTierGroup;                                     // 0x360(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FDataTableRowHandle                   ConversionPointsToTierCosts;                       // 0x370(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, Protected, NativeAccessSpecifierProtected)
	bool                                         bConsumedOnConversion;                             // 0x380(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_19BD[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  RewardName;                                        // 0x388(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortConversionControlItemDefinition");
		return Clss;
	}

	bool GetTierFromSacrificePoints(int32 SacrificePoints, enum class EFortRarity* CalculatedTier);
	class FText GetRewardName();
	int32 GetRequiredItemQuantity(int32 SacrificePoints);
	class UFortAccountItemDefinition* GetRequiredItemDefinition();
	struct FGameplayTagContainer GetRequiredCatalysts();
	int32 GetPointsForTier(enum class EFortRarity InTier);
	enum class EFortRarity GetMaxConversionTier();
	enum class EFortRarity GetFirstConversionTier();
};

// 0x28 (0x50 - 0x28)
// Class FortniteGame.FortCosmeticVariant
class UFortCosmeticVariant : public UObject
{
public:
	struct FGameplayTag                          VariantChannelTag;                                 // 0x28(0x8)(Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FText                                  VariantChannelName;                                // 0x30(0x18)(Edit, Protected, NativeAccessSpecifierProtected)
	struct FGameplayTag                          ActiveVariantTag;                                  // 0x48(0x8)(Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortCosmeticVariant");
		return Clss;
	}

	class FText GetVariantUnlockRequirement(const struct FGameplayTag& InVariantTag);
	class FText GetVariantText(const struct FGameplayTag& InVariantTag);
	class FText GetVariantChannelText();
	struct FGameplayTagContainer GetAllVariantTags();
};

// 0x0 (0x50 - 0x50)
// Class FortniteGame.FortCosmeticVariantBackedByArray
class UFortCosmeticVariantBackedByArray : public UFortCosmeticVariant
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortCosmeticVariantBackedByArray");
		return Clss;
	}

};

// 0x10 (0x60 - 0x50)
// Class FortniteGame.FortCosmeticCharacterPartVariant
class UFortCosmeticCharacterPartVariant : public UFortCosmeticVariantBackedByArray
{
public:
	TArray<struct FPartVariantDef>               PartOptions;                                       // 0x50(0x10)(Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortCosmeticCharacterPartVariant");
		return Clss;
	}

};

// 0x10 (0x60 - 0x50)
// Class FortniteGame.FortCosmeticGameplayTagVariant
class UFortCosmeticGameplayTagVariant : public UFortCosmeticVariantBackedByArray
{
public:
	TArray<struct FGameplayTagVariantDef>        GenericTagOptions;                                 // 0x50(0x10)(Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortCosmeticGameplayTagVariant");
		return Clss;
	}

};

// 0x20 (0x50 - 0x30)
// Class FortniteGame.FortCosmeticItemMarkupTable
class UFortCosmeticItemMarkupTable : public UDataAsset
{
public:
	TArray<class UDataTable*>                    SetDescriptions;                                   // 0x30(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<class UDataTable*>                    MarkupTagDescriptions;                             // 0x40(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortCosmeticItemMarkupTable");
		return Clss;
	}

};

// 0x10 (0x60 - 0x50)
// Class FortniteGame.FortCosmeticMaterialVariant
class UFortCosmeticMaterialVariant : public UFortCosmeticVariantBackedByArray
{
public:
	TArray<struct FMaterialVariantDef>           MaterialOptions;                                   // 0x50(0x10)(Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortCosmeticMaterialVariant");
		return Clss;
	}

};

// 0x30 (0x80 - 0x50)
// Class FortniteGame.FortCosmeticNumericalVariant
class UFortCosmeticNumericalVariant : public UFortCosmeticVariant
{
public:
	int32                                        DefaultStartingNumeric;                            // 0x50(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        MinNumericalValue;                                 // 0x54(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        MaxNumbericalValue;                                // 0x58(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  ZerosDigitParamName;                               // 0x5C(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  TensDigitParamName;                                // 0x64(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_19BE[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<TSoftObjectPtr<class UMaterialInterface>> MaterialsToAlter;                                  // 0x70(0x10)(Edit, ZeroConstructor, Protected, UObjectWrapper, NativeAccessSpecifierProtected)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortCosmeticNumericalVariant");
		return Clss;
	}

};

// 0x10 (0x60 - 0x50)
// Class FortniteGame.FortCosmeticParticleVariant
class UFortCosmeticParticleVariant : public UFortCosmeticVariantBackedByArray
{
public:
	TArray<struct FParticlVariantDef>            ParticleOptions;                                   // 0x50(0x10)(Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortCosmeticParticleVariant");
		return Clss;
	}

};

// 0x30 (0x58 - 0x28)
// Class FortniteGame.FortCreativeBudgeterData
class UFortCreativeBudgeterData : public UObject
{
public:
	TArray<struct FFortCreativeBudgetOverride>   CostOverrides;                                     // 0x28(0x10)(ZeroConstructor, Config, NativeAccessSpecifierPublic)
	TArray<struct FFortCreativeBudgetClassInstanceLimit> TransientClassLimits;                              // 0x38(0x10)(ZeroConstructor, Config, NativeAccessSpecifierPublic)
	TArray<struct FFortCreativeBudgetClassInstanceLimit> SavedClassLimits;                                  // 0x48(0x10)(ZeroConstructor, Config, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortCreativeBudgeterData");
		return Clss;
	}

};

// 0x0 (0x28 - 0x28)
// Class FortniteGame.FortCreativeBudgetLibrary
class UFortCreativeBudgetLibrary : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortCreativeBudgetLibrary");
		return Clss;
	}

	bool CanPlacePlayset(class UFortPlaysetItemDefinition* ItemDefinition, class APlayerController* Controller);
	bool CanPlaceInstanceOfClass(class APlayerController* Controller, TSubclassOf<class AActor> Class, struct FVector& Location);
	bool CanPlaceClassInstances(class APlayerController* Controller, const TArray<TSubclassOf<class AActor>>& Classes, struct FVector& Location);
};

// 0x18 (0x110 - 0xF8)
// Class FortniteGame.FortPlaysetGrenadeInputComponent
class UFortPlaysetGrenadeInputComponent : public UActorComponent
{
public:
	UMulticastDelegateProperty_                  OnPlaysetGrenadeTarget;                            // 0xF8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UInputComponent*                       PlaysetGrenadeInputComponent;                      // 0x108(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortPlaysetGrenadeInputComponent");
		return Clss;
	}

	void PushPlaysetGrenadeInputMode(class APlayerController* PlayerController);
	void PopPlaysetGrenadeInputMode(class APlayerController* PlayerController);
};

// 0x188 (0x280 - 0xF8)
// Class FortniteGame.FortObjectMoverInputComponent
class UFortObjectMoverInputComponent : public UActorComponent
{
public:
	UMulticastDelegateProperty_                  OnDuplicateBuildingActorPressed;                   // 0xF8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnDuplicateBuildingActorReleased;                  // 0x108(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnMoveToolLetGo;                                   // 0x118(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnMoveToolCopyGrabOrDuplicate;                     // 0x128(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnMoveToolRotateClockwisePressed;                  // 0x138(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnMoveToolRotateClockwiseReleased;                 // 0x148(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnMoveToolRotateCounterclockwisePressed;           // 0x158(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnMoveToolRotateCounterclockwiseReleased;          // 0x168(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnMoveToolSwitchAxisPressed;                       // 0x178(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnMoveToolSwitchAxisReleased;                      // 0x188(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnMoveToolMirror;                                  // 0x198(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnMoveToolPushPressed;                             // 0x1A8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnMoveToolPushReleased;                            // 0x1B8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnMoveToolPullPressed;                             // 0x1C8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnMoveToolPullReleased;                            // 0x1D8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnMoveToolDropToFloor;                             // 0x1E8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnMoveToolExit;                                    // 0x1F8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnMoveToolDeletePressed;                           // 0x208(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnMoveToolDeleteReleased;                          // 0x218(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnMoveToolChangePrecisionLevelPressed;             // 0x228(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnMoveToolChangePrecisionLevelReleased;            // 0x238(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnPlaysetPreviewPlace;                             // 0x248(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class AFortPlayerController*                 OwningPC;                                          // 0x258(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UInputComponent*                       CreativeMoveToolEquippedInputComponent;            // 0x260(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UInputComponent*                       MoveObjectsFreelyModeInputComponent;               // 0x268(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UInputComponent*                       MoveBuildingsOnGridModeInputComponent;             // 0x270(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UInputComponent*                       PlaysetPreviewModeInputComponent;                  // 0x278(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortObjectMoverInputComponent");
		return Clss;
	}

	void PushPlaysetPreviewInputMode(class APlayerController* PlayerController);
	void PushMoveObjectsFreelyInputMode(class APlayerController* PlayerController);
	void PushMoveBuildingsOnGridInputMode(class APlayerController* PlayerController);
	void PushCreativeMoveToolEquippedInputComponent(class APlayerController* PlayerController);
	void PopPlaysetPreviewInputMode(class APlayerController* PlayerController);
	void PopMoveObjectsFreelyInputMode(class APlayerController* PlayerController);
	void PopMoveBuildingsOnGridInputMode(class APlayerController* PlayerController);
	void PopCreativeMoveToolEquippedInputComponent(class APlayerController* PlayerController);
	void PopAllInputModes(class APlayerController* PlayerController);
};

// 0x370 (0xCF0 - 0x980)
// Class FortniteGame.FortCreativeMoveTool
class AFortCreativeMoveTool : public AFortWeapon
{
public:
	TSubclassOf<class UFortAnimInstance>         AnimBPOverride;                                    // 0x980(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_19CC[0x34];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        MaxRange;                                          // 0x9BC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UObjectInteractionBehavior*            ActiveMovementMode;                                // 0x9C0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bIsPreviewingMove;                                 // 0x9C8(0x1)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_19CD[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UObjectInteractionBehavior*>    InteractionBehaviors;                              // 0x9D0(0x10)(Edit, ExportObject, Net, ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	class UDeleteObjects*                        DeleteObjectsInteractionBehavior;                  // 0x9E0(0x8)(BlueprintVisible, ExportObject, Net, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPlaysetPreview*                       PlaysetPreviewInteractionBehavior;                 // 0x9E8(0x8)(BlueprintVisible, ExportObject, Net, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	UMulticastDelegateProperty_                  OnMoveToolInteractionStarted;                      // 0x9F0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnMoveToolInteractionStopped;                      // 0xA00(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnMoveToolRotationAxisChanged;                     // 0xA10(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnMoveToolLineOfSightBlockingChanged;              // 0xA20(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnMoveToolDropToFloorChanged;                      // 0xA30(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnMoveToolPrecisionChanged;                        // 0xA40(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_19CE[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FCreativeSelectedActorInfo>    SelectedActors;                                    // 0xA60(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_19CF[0xE0];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FRotator>                      RotationAxes;                                      // 0xB50(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        RotationAxisIndex;                                 // 0xB60(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_19D0[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSet<class UMeshComponent*>                  HoveredComponents;                                 // 0xB68(0x50)(ExportObject, ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	TMap<class UMeshComponent*, float>           ComponentsToReclaimMIDsFrom;                       // 0xBB8(0x50)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<struct FCreativePooledMID>            AllMIDs;                                           // 0xC08(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_19D1[0x50];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        MaxUnhoverAnimationTime;                           // 0xC68(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_19D2[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class AActor*>                        NewlyPlacedActors;                                 // 0xC70(0x10)(Net, ZeroConstructor, RepNotify, Protected, NativeAccessSpecifierProtected)
	TSet<class AActor*>                          AlreadyProcessedNewlyPlacedActorsOnClient;         // 0xC80(0x50)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	bool                                         bShouldDestroyPropsWhenPlacing;                    // 0xCD0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bAllowGravityOnPlace;                              // 0xCD1(0x1)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bShouldUsePrecisionGridSnapping;                   // 0xCD2(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        GridSnapIndex;                                     // 0xCD3(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_19D3[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FVector>                       GridSnapRatios;                                    // 0xCD8(0x10)(Edit, BlueprintVisible, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_19D4[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bIgnoreLineOfSightBlockers;                        // 0xCE9(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_19D5[0x6];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortCreativeMoveTool");
		return Clss;
	}

	void UnholsterWeapon();
	void TurboBuildAttemptToPlace();
	void ToggleIgnoreLineOfSightBlockersOnClient();
	void SpawnPlaysetVolumeOnServer(class UFortPlaysetItemDefinition* Playset, struct FVector& SpawnLocation, struct FRotator& SpawnRotation);
	void SpawnPlaysetVolume(class UFortPlaysetItemDefinition* Playset, struct FVector& SpawnLocation, struct FRotator& SpawnRotation);
	void SetupMIDForComponent(class UMeshComponent* MeshComponent);
	void SetTargetingState(bool bNewTargetingState);
	void ServerUpdateTractorBeam(float NewTargetTractorBeamOffset, bool bNewIsPushPressed, bool bNewIsPullPressed);
	void ServerUpdateRotationAxis(uint8 AxisIndex);
	void ServerUpdateRotation(const struct FQuat& ClientRotation, bool bNewIsRotateClockwisePressed, bool bNewIsRotateCounterclockwisePressed);
	void ServerUpdatePrecisionMode(bool bPrecisionMode, uint8 PrecisionModeIndex);
	void ServerUpdateMirrored(bool bMirrored);
	void ServerToggleAllowGravity();
	void ServerStartInteracting(TArray<class AActor*>& Actors, const struct FTransform& DragStart);
	void ServerSpawnActorWithTransform(class AActor* ActorToSpawn, const struct FTransform& TargetTransform, bool bAllowOverlap, bool bAllowGravity);
	void ServerPlaceActorsAndClearMovementMode(const struct FTransform& TargetTransformForBuildings);
	void ServerOnNewlyPlacedActorProcessedByClient(class AActor* Actor);
	void ServerMoveSelectionSet(const struct FTransform& NewSelectionToWorld);
	void ServerHandleDropSelectionSet();
	void ServerDuplicateStartInteracting(TArray<class AActor*>& Actors, const struct FTransform& DragStart);
	void ServerDestroyActor(class AActor* ActorToDestroy);
	void ServerClearMovementMode(bool bExited);
	void OnValidPlacementChanged(bool bValidPlacement);
	void OnRep_NewlyPlacedActors();
	void OnRep_AllowGravityOnPlace();
	void OnPlaysetSeletected(class UFortPlaysetItemDefinition* SelectedPlayset);
	void OnObjectPlacement(TArray<class UMeshComponent*>& Components);
	void OnInteractionStarted(TArray<class UMeshComponent*>& Components);
	void OnInteractionFinished(TArray<class UMeshComponent*>& Components);
	void OnHoverChanged(TArray<class UMeshComponent*>& NewHoveredComponents, TArray<class UMeshComponent*>& UnhoveredComponents, bool bCanInteract);
	void OnHandleOpenPlaysetInventory(class AFortPawn* FortPawn);
	void OnAllowGravityToggleChanged(bool bAllowGravity);
	void MulticastSetCollisionForActor(class AActor* Actor, bool bEnableCollision);
	void MulticastForceMoveActorExceptOwningClient(class AActor* ActorToMove, const struct FTransform& NewTransform);
	void MulticastForceMoveActor(class AActor* ActorToMove, const struct FTransform& NewTransform);
	bool IsRunningOnOwningClient();
	void HandleRotateSwitchAxisReleased();
	void HandleRotateSwitchAxisPressed();
	void HandleRotateCounterclockwiseReleased();
	void HandleRotateCounterclockwisePressed();
	void HandleRotateClockwiseReleased();
	void HandleRotateClockwisePressed();
	void HandleResetRotationHeldDownLongEnough();
	void HandlePushReleased();
	void HandlePushPressed();
	void HandlePullReleased();
	void HandlePullPressed();
	void HandlePrecisionModeReleased();
	void HandlePrecisionModePressed();
	void HandlePrecisionModeHeldDownLongEnough();
	void HandlePlaysetPreviewPlace();
	void HandlePickupPressed();
	void HandleOpenPlaysetInventory();
	void HandleMirrorPressed();
	void HandleExitPressed();
	void HandleExitOrDeletePressed();
	void HandleDuplicateActorReleased();
	void HandleDuplicateActorPressed();
	void HandleDropToFloorPressed();
	void HandleDeleteReleased();
	void HandleDeletePressed();
	void HandleCopyPickupPressed();
	bool GetAllowGravityOnPlace();
	void DeactiveWeaponAndState();
	void ClientStopInteracting();
	void ClientStartInteracting(class UObjectInteractionBehavior* NewActiveMovementMode, TArray<struct FCreativeSelectedActorInfo>& NewSelectedActors, struct FTransform& NewSelectionToWorld, struct FBox& NewSelectionSpaceActorBounds);
	void ClientDeactiveWeaponAndState();
};

// 0x78 (0x170 - 0xF8)
// Class FortniteGame.ObjectInteractionBehavior
class UObjectInteractionBehavior : public UActorComponent
{
public:
	struct FDataTableRowHandle                   InteractionClasses;                                // 0xF8(0x10)(Edit, DisableEditOnInstance, NoDestructor, Protected, NativeAccessSpecifierProtected)
	TArray<TSoftClassPtr<class UObject>>         ValidAllowedClasses;                               // 0x108(0x10)(ZeroConstructor, Transient, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	TArray<TSoftClassPtr<class UObject>>         ValidForbiddenClasses;                             // 0x118(0x10)(ZeroConstructor, Transient, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	TSubclassOf<class UFortGameplayAbility>      StartInteractionAbility;                           // 0x128(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UFortGameplayAbility>      EndInteractionAbility;                             // 0x130(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UFortGameplayAbility>      TriggerInteractionAbility;                         // 0x138(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UFortGameplayAbility>      RotateClockwiseAbility;                            // 0x140(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UFortGameplayAbility>      RotateCounterclockwiseAbility;                     // 0x148(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UFortGameplayAbility>      MirrorAbility;                                     // 0x150(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UFortGameplayAbility>      ExitAbility;                                       // 0x158(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UFortGameplayAbility>      FailAbility;                                       // 0x160(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bShouldAddToParent;                                // 0x168(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bShouldUseActorToSelection;                        // 0x169(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_19D6[0x6];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("ObjectInteractionBehavior");
		return Clss;
	}

	void TriggerInteractionBehavior();
	void TickMovementMode();
	void StartCreativeInteractionOnServer();
	void StartCreativeInteractionOnClient();
	void PlayGameplayAbility(TSubclassOf<class UFortGameplayAbility> ActivatedAbilityClass);
	void OnObjectPlacement(TArray<class UMeshComponent*>& Components);
	bool IsSelectionSetInValidPosition();
	void HandleDuplicateActor();
	void GetSelectedActorsMeshComponents(TArray<class UMeshComponent*>* Components);
	void GetSelectedActors(TArray<class AActor*>* SelectedActors);
	class AFortPlayerController* GetFortPlayerController();
	class AFortCreativeMoveTool* GetFortCreativeMoveTool();
	void ExitCreativeInteraction();
	void EndCreativeInteraction();
};

// 0x30 (0x1A0 - 0x170)
// Class FortniteGame.MoveBuildingsOnGrid
class UMoveBuildingsOnGrid : public UObjectInteractionBehavior
{
public:
	uint8                                        Pad_19D7[0x30];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("MoveBuildingsOnGrid");
		return Clss;
	}

};

// 0x50 (0x1C0 - 0x170)
// Class FortniteGame.MoveObjectsFreely
class UMoveObjectsFreely : public UObjectInteractionBehavior
{
public:
	uint8                                        Pad_19D8[0x50];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("MoveObjectsFreely");
		return Clss;
	}

};

// 0x10 (0x180 - 0x170)
// Class FortniteGame.DeleteObjects
class UDeleteObjects : public UObjectInteractionBehavior
{
public:
	TArray<class AActor*>                        DeleteActors;                                      // 0x170(0x10)(BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("DeleteObjects");
		return Clss;
	}

	void PlayDeleteAnimation();
	void GetDeleteActorsMeshComponents(TArray<class UMeshComponent*>* Components);
};

// 0x20 (0x190 - 0x170)
// Class FortniteGame.PlaysetPreview
class UPlaysetPreview : public UObjectInteractionBehavior
{
public:
	class AStaticMeshActor*                      PreviewPlaysetStaticMeshActor;                     // 0x170(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMesh*                           PlaysetMesh;                                       // 0x178(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterial*                             PlaysetMaterial;                                   // 0x180(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFortPlaysetItemDefinition*            PlaysetToPlace;                                    // 0x188(0x8)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("PlaysetPreview");
		return Clss;
	}

	void UpdatePreviewMeshScale();
	void OnRep_PlaysetToPlace();
};

// 0x10 (0x340 - 0x330)
// Class FortniteGame.CreativePhysicsManager
class ACreativePhysicsManager : public AActor
{
public:
	TArray<struct FCreativePhysicsEffectedActor> EffectedActors;                                    // 0x330(0x10)(Net, ZeroConstructor, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("CreativePhysicsManager");
		return Clss;
	}

	void MulticastForceMoveActor(class AActor* ActorToMove, const struct FTransform& NewTransform);
};

// 0x40 (0x370 - 0x330)
// Class FortniteGame.FortCreativePortalManager
class AFortCreativePortalManager : public AInfo
{
public:
	TArray<class AFortAthenaCreativePortal*>     AllPortals;                                        // 0x330(0x10)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	TArray<class AFortAthenaCreativePortal*>     UsedPortals;                                       // 0x340(0x10)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	TArray<class AFortAthenaCreativePortal*>     AvailablePortals;                                  // 0x350(0x10)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	TArray<TWeakObjectPtr<class AFortPlayerControllerAthena>> PendingPortalReservations;                         // 0x360(0x10)(ZeroConstructor, Transient, Protected, UObjectWrapper, NativeAccessSpecifierProtected)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortCreativePortalManager");
		return Clss;
	}

	void ReleasePortal(class AFortAthenaCreativePortal* PortalToRelease);
	void MarkPortalUsed(class AFortAthenaCreativePortal* PortalUsed);
	void GetCreativePortalManager(class UObject* WorldContextObject, class AFortCreativePortalManager** OutCreativePortalManager, enum class ECreativePortalManagerValidityResult* OutIsValid);
};

// 0x88 (0x168 - 0xE0)
// Class FortniteGame.FortCreativeRealEstatePlotItem
class UFortCreativeRealEstatePlotItem : public UFortAccountItem
{
public:
	int32                                        IslandIndex;                                       // 0xE0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_19DB[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  IslandTitle;                                       // 0xE8(0x18)(NativeAccessSpecifierPublic)
	class FText                                  IslandTagline;                                     // 0x100(0x18)(NativeAccessSpecifierPublic)
	class FString                                YoutubeVideoId;                                    // 0x118(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                IslandCode;                                        // 0x128(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDateTime                             LastPublishedDate;                                 // 0x138(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        LastPublishedVersion;                              // 0x140(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_19DC[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FFortCreativePlotPermissionData       PermissionData;                                    // 0x148(0x18)(NativeAccessSpecifierPublic)
	struct FDateTime                             DeletedAt;                                         // 0x160(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortCreativeRealEstatePlotItem");
		return Clss;
	}

};

// 0x110 (0x470 - 0x360)
// Class FortniteGame.FortCreativeRealEstatePlotItemDefinition
class UFortCreativeRealEstatePlotItemDefinition : public UFortAccountItemDefinition
{
public:
	class FText                                  UIDisplayName;                                     // 0x360(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UFortPlaysetItemDefinition> BasePlayset;                                       // 0x378(0x28)(Edit, DisableEditOnInstance, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                InitialSaveFileName;                               // 0x3A0(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        SizeX;                                             // 0x3B0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        SizeY;                                             // 0x3B4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               LocationOffset;                                    // 0x3B8(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FRotator                              DefaultRotation;                                   // 0x3C4(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	enum class ERealEstateOffsetType             OffsetType;                                        // 0x3D0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_19DD[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FSlateBrush                           MapImage;                                          // 0x3D8(0x88)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	int32                                        SortIndex;                                         // 0x460(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bIsAvailableToUsers;                               // 0x464(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_19DE[0xB];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortCreativeRealEstatePlotItemDefinition");
		return Clss;
	}

};

// 0x10 (0x340 - 0x330)
// Class FortniteGame.FortCreativeRealEstatePlotManager
class AFortCreativeRealEstatePlotManager : public AInfo
{
public:
	TArray<struct FActiveRealEstatePlotInfo>     ActiveCreativeRealEstatePlots;                     // 0x330(0x10)(Net, ZeroConstructor, Transient, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortCreativeRealEstatePlotManager");
		return Clss;
	}

};

// 0x100 (0x1F8 - 0xF8)
// Class FortniteGame.FortCreativeVolumeLinkComponent
class UFortCreativeVolumeLinkComponent : public UActorComponent
{
public:
	uint8                                        Pad_19DF[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	UMulticastDelegateProperty_                  OnLinkedVolumeSet;                                 // 0x100(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class AFortVolume*                           LinkedVolume;                                      // 0x110(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bShouldFindVolumeAtStart;                          // 0x118(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_19E0[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FPropertyOverrideData                 LinkedVolumeProperties;                            // 0x120(0xD8)(Edit, DisableEditOnTemplate, EditConst, SaveGame, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortCreativeVolumeLinkComponent");
		return Clss;
	}

	void OnLinkedVolumeSettingsChanged(struct FPropertyOverrideData& OverrideData);
	class AFortVolume* GetLinkedVolume();
};

// 0x8 (0xF8 - 0xF0)
// Class FortniteGame.FortCrowdManager
class UFortCrowdManager : public UCrowdManager
{
public:
	uint8                                        Pad_19E1[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortCrowdManager");
		return Clss;
	}

};

// 0x0 (0xE0 - 0xE0)
// Class FortniteGame.FortCurrencyItem
class UFortCurrencyItem : public UFortAccountItem
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortCurrencyItem");
		return Clss;
	}

};

// 0x0 (0x360 - 0x360)
// Class FortniteGame.FortCurrencyItemDefinition
class UFortCurrencyItemDefinition : public UFortAccountItemDefinition
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortCurrencyItemDefinition");
		return Clss;
	}

};

// 0x8 (0xA08 - 0xA00)
// Class FortniteGame.FortCustomizableAbilityDecoTool
class AFortCustomizableAbilityDecoTool : public AFortAbilityDecoTool
{
public:
	bool                                         bExecuteToolAbilityOnPress;                        // 0xA00(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_19E2[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortCustomizableAbilityDecoTool");
		return Clss;
	}

	void ServerReleaseTrigger();
	void ServerReleaseSecondaryFire();
	void ServerPressTrigger();
	void ServerPressSecondaryFire();
	void ExecuteDecoAbility();
	void BPServerReleaseSecondaryFire();
	void BPServerPressSecondaryFire();
	void BPReleaseTrigger(class AFortDecoHelper* FortDecoHelper);
	void BPReleaseSecondaryFire(class AFortDecoHelper* FortDecoHelper);
	void BPPressTrigger(class AFortDecoHelper* FortDecoHelper);
	void BPPressSecondaryFire(class AFortDecoHelper* FortDecoHelper);
	void BPOnUnEquip();
	void BPOnSetDecoObjectPreview(class AFortDecoHelper* FortDecoHelper);
	void BPOnEquip(class AFortWeapon* OldWeapon);
};

// 0x90 (0xB8 - 0x28)
// Class FortniteGame.FortCustomizationAssetLoader
class UFortCustomizationAssetLoader : public UObject
{
public:
	struct FFortCustomizationAssetsToLoad        CurrentAssetsToLoad;                               // 0x28(0x30)(Transient, NativeAccessSpecifierPrivate)
	struct FFortCustomizationAssetsToLoad        PendingAssetsToLoad;                               // 0x58(0x30)(Transient, NativeAccessSpecifierPrivate)
	uint8                                        Pad_19E3[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UObject*>                       AllLoadedAssets;                                   // 0xA0(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	uint8                                        Pad_19E4[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortCustomizationAssetLoader");
		return Clss;
	}

};

// 0x60 (0x88 - 0x28)
// Class FortniteGame.FortCustomSpawnCollectionManager
class UFortCustomSpawnCollectionManager : public UObject
{
public:
	TArray<struct FPrimaryAssetId>               PrimaryAssetIds;                                   // 0x28(0x10)(Edit, ZeroConstructor, Config, NativeAccessSpecifierPublic)
	TMap<enum class EFortItemType, int32>        SpawnAmountMap;                                    // 0x38(0x50)(Edit, ZeroConstructor, Config, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortCustomSpawnCollectionManager");
		return Clss;
	}

};

// 0x10 (0x40 - 0x30)
// Class FortniteGame.FortDailyRewardScheduleDefinitions
class UFortDailyRewardScheduleDefinitions : public UDataAsset
{
public:
	TArray<struct FFortDailyRewardScheduleDefinition> Schedules;                                         // 0x30(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortDailyRewardScheduleDefinitions");
		return Clss;
	}

};

// 0x60 (0x3C0 - 0x360)
// Class FortniteGame.FortTokenType
class UFortTokenType : public UFortAccountItemDefinition
{
public:
	TSoftClassPtr<class AFortScriptedAction>     ScriptedAction;                                    // 0x360(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSlateColor                           NodeTintColour;                                    // 0x388(0x28)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	bool                                         bPercentageRepresentation;                         // 0x3B0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EItemProfileType                  ProfileType;                                       // 0x3B1(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_19E5[0xE];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortTokenType");
		return Clss;
	}

};

// 0x0 (0x3C0 - 0x3C0)
// Class FortniteGame.FortDailyRewardScheduleTokenDefinition
class UFortDailyRewardScheduleTokenDefinition : public UFortTokenType
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortDailyRewardScheduleTokenDefinition");
		return Clss;
	}

};

// 0x0 (0x28 - 0x28)
// Class FortniteGame.FortDamageableActorInterface
class UFortDamageableActorInterface : public UInterface
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortDamageableActorInterface");
		return Clss;
	}

};

// 0x8 (0x48 - 0x40)
// Class FortniteGame.FortDamageFormulaExecutionCalculation
class UFortDamageFormulaExecutionCalculation : public UFortGameplayEffectExecutionCalculation
{
public:
	uint8                                        Pad_19E6[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortDamageFormulaExecutionCalculation");
		return Clss;
	}

};

// 0x28 (0x50 - 0x28)
// Class FortniteGame.FortIndicator
class UFortIndicator : public UObject
{
public:
	struct FVector                               RelativeLocation;                                  // 0x28(0xC)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxDistance;                                       // 0x34(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bMoveWithPawnState;                                // 0x38(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_19E8[0x17];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortIndicator");
		return Clss;
	}

	void OnParentActorEndPlay(class AActor* Actor, enum class EEndPlayReason EndPlayReason);
};

// 0xB8 (0x108 - 0x50)
// Class FortniteGame.FortMiniMapIndicator
class UFortMiniMapIndicator : public UFortIndicator
{
public:
	uint8                                        Pad_19E9[0xB8];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortMiniMapIndicator");
		return Clss;
	}

};

// 0x80 (0x188 - 0x108)
// Class FortniteGame.FortMiniMapPingIndicator
class UFortMiniMapPingIndicator : public UFortMiniMapIndicator
{
public:
	uint8                                        Pad_19EA[0x80];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortMiniMapPingIndicator");
		return Clss;
	}

};

// 0x0 (0x188 - 0x188)
// Class FortniteGame.FortDamageMiniMapIndicator
class UFortDamageMiniMapIndicator : public UFortMiniMapPingIndicator
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortDamageMiniMapIndicator");
		return Clss;
	}

};

// 0x228 (0x560 - 0x338)
// Class FortniteGame.FortDamageNumbersActor
class AFortDamageNumbersActor : public AFortClientOnlyActor
{
public:
	float                                        ComponentLifespan;                                 // 0x338(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_19ED[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UStaticMesh*                           MeshesByElement;                                   // 0x340(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_19EE[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UStaticMesh*                           CritBuildingImpactMesh;                            // 0x368(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaticMesh*                           MeshesByScoreCategory;                             // 0x370(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_19EF[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  PlayerMaterialParameterName;                       // 0x388(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        PlayerMaterialParameterValue;                      // 0x390(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLinearColor                          CriticalHitPlayerColor;                            // 0x394(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLinearColor                          StandardHitPlayerColor;                            // 0x3A4(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLinearColor                          CriticalHitBuildingColor;                          // 0x3B4(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLinearColor                          CriticalHitEnemyColor;                             // 0x3C4(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLinearColor                          StandardHitColor;                                  // 0x3D4(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLinearColor                          CriticalHitShieldColor;                            // 0x3E4(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLinearColor                          ShieldHitColor;                                    // 0x3F4(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLinearColor                          StandardHitAthenaAIColor;                          // 0x404(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLinearColor                          CriticalHitAthenaAIColor;                          // 0x414(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLinearColor                          StandardHitVehicleColor;                           // 0x424(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLinearColor                          CriticalHitVehicleColor;                           // 0x434(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  ColorParameterName;                                // 0x444(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  AnimationLifespanParameterName;                    // 0x44C(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  IsCriticalHitParameterName;                        // 0x454(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SpacingPercentageForOnes;                          // 0x45C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class FName>                          PositionParameterNames;                            // 0x460(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	float                                        DistanceFromCameraBeforeDoublingSize;              // 0x470(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        CriticalHitSizeMultiplier;                         // 0x474(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        FontXSize;                                         // 0x478(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        FontYSize;                                         // 0x47C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        NumberOfNumberRotations;                           // 0x480(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_19F0[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class FName>                          ScaleRotationAngleParameterNames;                  // 0x488(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TArray<class FName>                          DurationParameterNames;                            // 0x498(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	float                                        MaxScoreNumberDistance;                            // 0x4A8(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  MoveToCameraParameterName;                         // 0x4AC(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_19F1[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FPooledDamageNumberComponents         PooledComponentsByElement;                         // 0x4B8(0x10)(Transient, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_19F2[0x40];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FPooledDamageNumberComponents         PooledComponentsCritBuildingImpact;                // 0x508(0x10)(Transient, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	struct FPooledDamageNumberComponents         PooledComponentsByScoreCategory;                   // 0x518(0x10)(Transient, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_19F3[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FLiveDamageNumberComponent>    LiveComponents;                                    // 0x548(0x10)(ZeroConstructor, Transient, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_19F4[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortDamageNumbersActor");
		return Clss;
	}

	void SetMaterialParameters(struct FFortDamageNumberInfo& NewDamageNumberInfo, struct FTransform& CameraTransform, struct FVector& NumberLocation);
	void OnNewDamageNumber(struct FFortDamageNumberInfo& NewDamageNumberInfo);
};

// 0x280 (0x2B0 - 0x30)
// Class FortniteGame.FortDamageSet
class UFortDamageSet : public UFortAttributeSet
{
public:
	struct FFortGameplayAttributeData            OutgoingBaseDamage;                                // 0x30(0x28)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, Protected, NativeAccessSpecifierProtected)
	struct FFortGameplayAttributeData            OutgoingBaseEnvironmentalDamage;                   // 0x58(0x28)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, Protected, NativeAccessSpecifierProtected)
	struct FFortGameplayAttributeData            OutgoingBaseImpactDamage;                          // 0x80(0x28)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, Protected, NativeAccessSpecifierProtected)
	struct FFortGameplayAttributeData            OutgoingAbilityDamage;                             // 0xA8(0x28)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, Protected, NativeAccessSpecifierProtected)
	struct FFortGameplayAttributeData            OutgoingBaseAbilityDamageMultiplier;               // 0xD0(0x28)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, Protected, NativeAccessSpecifierProtected)
	struct FFortGameplayAttributeData            ZoneCritMultiplier;                                // 0xF8(0x28)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, Protected, NativeAccessSpecifierProtected)
	struct FFortGameplayAttributeData            DiceCritChance;                                    // 0x120(0x28)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, Protected, NativeAccessSpecifierProtected)
	struct FFortGameplayAttributeData            DiceCritMultiplier;                                // 0x148(0x28)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, Protected, NativeAccessSpecifierProtected)
	struct FFortGameplayAttributeData            KnockbackMagnitude;                                // 0x170(0x28)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, Protected, NativeAccessSpecifierProtected)
	struct FFortGameplayAttributeData            KnockbackZAngle;                                   // 0x198(0x28)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, Protected, NativeAccessSpecifierProtected)
	struct FFortGameplayAttributeData            StunTime;                                          // 0x1C0(0x28)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, Protected, NativeAccessSpecifierProtected)
	struct FFortGameplayAttributeData            WeaponSkill;                                       // 0x1E8(0x28)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, Protected, NativeAccessSpecifierProtected)
	struct FFortGameplayAttributeData            CritRating;                                        // 0x210(0x28)(BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	struct FFortGameplayAttributeData            MaxMeleeComboLevel;                                // 0x238(0x28)(BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	struct FFortGameplayAttributeData            ShieldDamageScale;                                 // 0x260(0x28)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, Protected, NativeAccessSpecifierProtected)
	struct FFortGameplayAttributeData            HealthDamageScale;                                 // 0x288(0x28)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortDamageSet");
		return Clss;
	}

	void OnRep_ZoneCritMultiplier();
	void OnRep_WeaponSkill();
	void OnRep_StunTime();
	void OnRep_ShieldDamageScale();
	void OnRep_OutgoingBaseImpactDamage();
	void OnRep_OutgoingBaseEnvironmentalDamage();
	void OnRep_OutgoingBaseDamage();
	void OnRep_OutgoingBaseAbilityDamageMultiplier();
	void OnRep_OutgoingAbilityDamage();
	void OnRep_KnockbackZAngle();
	void OnRep_KnockbackMagnitude();
	void OnRep_HealthDamageScale();
	void OnRep_DiceCritMultiplier();
	void OnRep_DiceCritChance();
};

// 0x0 (0x28 - 0x28)
// Class FortniteGame.FortDamageSourceInterface
class UFortDamageSourceInterface : public UInterface
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortDamageSourceInterface");
		return Clss;
	}

};

// 0x0 (0x28 - 0x28)
// Class FortniteGame.FortDateTimeLibrary
class UFortDateTimeLibrary : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortDateTimeLibrary");
		return Clss;
	}

	struct FTimespan GetTimeTillEventTagEnds(class AFortPlayerController* FortPC, const class FString& EventTag);
	class FText GetTimespanAsText(struct FTimespan& Timespan, bool bShowSeconds, enum class ETimespanAsTextFormat FormatType);
	struct FTimespan GetTimeSinceEventTagStart(class AFortPlayerController* FortPC, const class FString& EventTag);
	struct FTimespan GetTimeSinceAthenaSeasonStart(class AFortPlayerController* FortPC);
	struct FDateTime GetMcpRelativeUtcNow(class AFortPlayerController* FortPC);
};

// 0x190 (0x1B8 - 0x28)
// Class FortniteGame.FortDayPhaseInfoOverride
class UFortDayPhaseInfoOverride : public UObject
{
public:
	struct FDayPhaseInfo                         DayPhaseInfo;                                      // 0x28(0x178)(Edit, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	bool                                         bUseAltitudeAdjustmentsOverride;                   // 0x1A0(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_19F6[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FCameraAltitudeAdjustments>    AltitudeAdjustments;                               // 0x1A8(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortDayPhaseInfoOverride");
		return Clss;
	}

};

// 0x30 (0x80 - 0x50)
// Class FortniteGame.FortDeathCameraMode
class UFortDeathCameraMode : public UFortCameraMode
{
public:
	float                                        FOV;                                               // 0x50(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        TimeToTrackTarget;                                 // 0x54(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        TrackToTargetSpeed;                                // 0x58(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_19F7[0x24];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortDeathCameraMode");
		return Clss;
	}

};

// 0x10 (0x40 - 0x30)
// Class FortniteGame.FortDeathCauseFromTagMapping
class UFortDeathCauseFromTagMapping : public UDataAsset
{
public:
	TArray<struct FFortTagToDeathCause>          TagToDeathCauseArray;                              // 0x30(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortDeathCauseFromTagMapping");
		return Clss;
	}

};

// 0x10 (0x40 - 0x30)
// Class FortniteGame.FortDeathReasons
class UFortDeathReasons : public UDataAsset
{
public:
	TArray<struct FFortDeathReason>              Reasons;                                           // 0x30(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortDeathReasons");
		return Clss;
	}

};

// 0x170 (0x4A0 - 0x330)
// Class FortniteGame.FortDecoHelper
class AFortDecoHelper : public AActor
{
public:
	class AFortDecoPreview*                      DecoPreview;                                       // 0x330(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class ABuildingActor>            PlacementActorClass;                               // 0x338(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class AFortDecoTool>          DecoTool;                                          // 0x340(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DecoToolReach;                                     // 0x348(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EBuildingAttachmentType           CurrentAttachmentType;                             // 0x34C(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EPlacementType                    CurrentPlacementType;                              // 0x34D(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_19F8[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UFortDecoItemDefinition*               DecoItemDefinition;                                // 0x350(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               LocationData;                                      // 0x358(0xC)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_19F9[0xC];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FRotator                              RelativeRotationData;                              // 0x370(0xC)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_19FA[0xC];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FRotator                              AbsoluteRotationData;                              // 0x388(0xC)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_19FB[0xC];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        ScaleData;                                         // 0x3A0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_19FC[0xC];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FDecoPlacementState                   PlacementInfo;                                     // 0x3B0(0x80)(NoDestructor, Protected, NativeAccessSpecifierProtected)
	bool                                         bInFallbackPosition;                               // 0x430(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_19FD[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        FallbackTinyScale;                                 // 0x434(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EFortDecoPlacementQueryResults    CanPlaceState;                                     // 0x438(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_19FE[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  CustomPlacementText;                               // 0x440(0x18)(BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	float                                        DesiredRelativeRotation;                           // 0x458(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               DirectionChange;                                   // 0x45C(0xC)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        GridSnapSize;                                      // 0x468(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FRotator                              FreeFloorPlacementRelativeRotationOffset;          // 0x46C(0xC)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_19FF[0x28];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortDecoHelper");
		return Clss;
	}

};

// 0x160 (0x490 - 0x330)
// Class FortniteGame.FortDecoPreview
class AFortDecoPreview : public AActor
{
public:
	enum class EBuildingAttachmentType           FallbackAttachmentType;                            // 0x330(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EPlacementType                    FallbackPlacementType;                             // 0x331(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1A02[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftObjectPtr<class UMaterialInterface>     PreviewPlacementMaterial;                          // 0x338(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UCurveFloat>            MotionBounceCurve;                                 // 0x360(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  CanBePlacedMaterialScalarParam;                    // 0x388(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ValidPlacementScalarParam;                         // 0x390(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        InvalidPlacementScalarParam;                       // 0x394(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  InverseMovementVectorMaterialParam;                // 0x398(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MovementEffectScale;                               // 0x3A0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  InverseOuterScaleVectorParam;                      // 0x3A4(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  InverseInnerScaleVectorParam;                      // 0x3AC(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  WorldSpacePivotVectorParam;                        // 0x3B4(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  DiffuseTextureParam;                               // 0x3BC(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        FreePlacementOffset;                               // 0x3C4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FTimeline                             BounceTimeline;                                    // 0x3C8(0x98)(ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	TArray<class UMaterialInstanceDynamic*>      PreviewMIDs;                                       // 0x460(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	struct FVector                               DirectionChange;                                   // 0x470(0xC)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               WorldSpacePivot;                                   // 0x47C(0xC)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AFortDecoHelper*                       ParentDecoHelper;                                  // 0x488(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortDecoPreview");
		return Clss;
	}

	void SetVectorParameterValueOnAllPreviewMIDs(class FName ParamName, struct FLinearColor& ParamValue);
	void SetScalarParameterValueOnAllPreviewMIDs(class FName ParamName, float ParamValue);
	void OnUpdateVisuals(float DeltaSeconds, bool bSafeToPlace);
	void OnUpdateScale(float Scale, struct FVector& InWorldSpacePivot);
	void OnInitializeDecoPreview(class ABuildingActor* NewBuildingActor, class UFortDecoItemDefinition* NewDecoItemDefinition);
	void OnBounceMotionUpdate(float VectorScale);
	class UTexture* GetTextureParameterValueFromMeshComponent(class UMeshComponent* MeshComp, int32 ElementIdx, class FName ParamName);
	class UMaterialInstanceDynamic* CreatePreviewMID(class UMaterialInterface* OverrideParentMaterial);
};

// 0x0 (0x490 - 0x490)
// Class FortniteGame.FortDecoPreview_ComponentHarvester
class AFortDecoPreview_ComponentHarvester : public AFortDecoPreview
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortDecoPreview_ComponentHarvester");
		return Clss;
	}

};

// 0x8 (0x498 - 0x490)
// Class FortniteGame.FortDecoPreview_GenericBuildingSMActor
class AFortDecoPreview_GenericBuildingSMActor : public AFortDecoPreview
{
public:
	class UStaticMeshComponent*                  PrimaryMeshComponent;                              // 0x490(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortDecoPreview_GenericBuildingSMActor");
		return Clss;
	}

};

// 0x8 (0x4A0 - 0x498)
// Class FortniteGame.FortDecoPreview_GenericTrap
class AFortDecoPreview_GenericTrap : public AFortDecoPreview_GenericBuildingSMActor
{
public:
	class UStaticMeshComponent*                  TrapRangeMeshComponent;                            // 0x498(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortDecoPreview_GenericTrap");
		return Clss;
	}

};

// 0x8 (0x4A8 - 0x4A0)
// Class FortniteGame.FortDecoPreview_GenericTrapSkeletalMesh
class AFortDecoPreview_GenericTrapSkeletalMesh : public AFortDecoPreview_GenericTrap
{
public:
	class USkeletalMeshComponent*                SkelMeshComponent;                                 // 0x4A0(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortDecoPreview_GenericTrapSkeletalMesh");
		return Clss;
	}

};

// 0x0 (0x490 - 0x490)
// Class FortniteGame.FortDecoPreview_MeshHarvester
class AFortDecoPreview_MeshHarvester : public AFortDecoPreview_ComponentHarvester
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortDecoPreview_MeshHarvester");
		return Clss;
	}

};

// 0x0 (0x9D8 - 0x9D8)
// Class FortniteGame.FortTrapTool
class AFortTrapTool : public AFortDecoTool
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortTrapTool");
		return Clss;
	}

};

// 0x8 (0x9E0 - 0x9D8)
// Class FortniteGame.FortDecoTool_ContextTrap
class AFortDecoTool_ContextTrap : public AFortTrapTool
{
public:
	class UFortContextTrapItemDefinition*        ContextTrapItemDefinition;                         // 0x9D8(0x8)(Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortDecoTool_ContextTrap");
		return Clss;
	}

};

// 0x10 (0x350 - 0x340)
// Class FortniteGame.FortDefenderAnimInstance
class UFortDefenderAnimInstance : public UFortAIAnimInstance
{
public:
	//enum class EFortCustomGender               Gender;                                            // 0x338(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bShouldWalkRightFootForward : 1;                   // Mask : 0x1 0x33C(0x1)(BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1A03[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        SpeedAdjustedPlayRate;                             // 0x340(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        AuthoredJogSpeed;                                  // 0x344(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        AuthoredWalkSpeed;                                 // 0x348(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1A04[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortDefenderAnimInstance");
		return Clss;
	}

};

// 0x28 (0x120 - 0xF8)
// Class FortniteGame.FortDefenderItem
class UFortDefenderItem : public UFortCharacter
{
public:
	TArray<class FString>                        Alterations;                                       // 0xF8(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<class UFortAlterationItemDefinition*> AlterationInstances;                               // 0x108(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_1A05[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortDefenderItem");
		return Clss;
	}

	enum class EFortDefenderSubtype GetDefenderSubtype();
};

// 0x50 (0x3B0 - 0x360)
// Class FortniteGame.FortDefenderItemDefinition
class UFortDefenderItemDefinition : public UFortCharacterType
{
public:
	TArray<struct FGameplayEffectApplicationInfo> CombinedStatGEs;                                   // 0x360(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FName                                  AppearanceOverrideName;                            // 0x370(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFortAttributeInitializationKey       AttributeInitKey;                                  // 0x378(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, Protected, NativeAccessSpecifierProtected)
	TSoftClassPtr<class AFortAIPawn>             PawnClass;                                         // 0x388(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortDefenderItemDefinition");
		return Clss;
	}

	struct FGameplayTag GetDefenderSubtypeTag();
	enum class EFortDefenderSubtype GetDefenderSubtype();
};

// 0x10 (0xE8 - 0xD8)
// Class FortniteGame.FortDeployableBaseCloudSaveItem
class UFortDeployableBaseCloudSaveItem : public UFortCloudSaveItem
{
public:
	struct FFortTierProgression                  Tier_progression;                                  // 0xD8(0x10)(Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortDeployableBaseCloudSaveItem");
		return Clss;
	}

};

// 0x10 (0x310 - 0x300)
// Class FortniteGame.FortDeployableBaseCloudSaveItemDefinition
class UFortDeployableBaseCloudSaveItemDefinition : public UFortCloudSaveItemDefinition
{
public:
	//struct FGuid                               SaveFilenameGUID;                                  // 0x2F8(0x10)(Edit, ZeroConstructor, EditConst, DuplicateTransient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1A06[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortDeployableBaseCloudSaveItemDefinition");
		return Clss;
	}

};

// 0x0 (0x28 - 0x28)
// Class FortniteGame.FortDeployableBaseLibrary
class UFortDeployableBaseLibrary : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortDeployableBaseLibrary");
		return Clss;
	}

	void UpdateDeployableBaseTierProgressionForPlayers(class UObject* WorldContextObject, class UFortTieredCollectionLayout* CollectionLayout, int32 TierDefeated);
	void SetupDeployableBaseCombatZoneInventoriesOnPlayers(class UObject* WorldContextObject, TArray<class FName>& TierGroups, TArray<class AFortPlayerController*>& PlayerControllers);
	void SetDeployableBaseMatchJoinability(class UObject* WorldContextObject, bool bMatchJoinable);
	void ResetDeployableBaseHordePlayerInventories(class UObject* WorldContextObject);
	void OnPreHordeTierStart(class UObject* WorldContextObject, int32 Tier, int32 ModifierRRVSeed);
	bool IsWorldItemDefValidToPersistForDeployableBasePlayerInventory(class UFortWorldItemDefinition* ItemDefinition);
	void GrantPlayersCompletedWaveRewards(class UObject* WorldContextObject, int32 Tier, int32 Wave, int32 NumberOfPlayers, TArray<class ADeployableBaseCore*>& TargetCores, TArray<class ADeployableBaseCore*>& AllCores, struct FFortTierCollectionLayoutOutput& CollectionData, TArray<class FName>& TierGroups);
	void GetTieredModifierSet(class FName TieredModifierSetName, TArray<struct FTieredModifierSetData>* OutModifierSetData);
	class AFortMission* GetPrimaryHordeMission(class UObject* WorldContextObject);
	enum class EHordeTierStartStatus GetHordeTierStartStatus(class UObject* WorldContextObject);
	struct FGameDifficultyInfo GetGameDifficultyInfo(class FName& RowName);
	void ForceRestartDeployableBasePlayers(class UObject* WorldContextObject, bool bRestartInvulnerable);
	void ForceDeployableBaseHordePlayersToResetAndRespawn(class UObject* WorldContextObject);
	void ForceClearAllDefenders(class UObject* WorldContextObject);
	void BroadcastHordeTierComplete(class UObject* WorldContextObject, enum class EFortCompletionResult Result);
	void ApplyTieredModifierSet(class UObject* WorldContextObject, TArray<struct FTieredModifierSetData>& ModifierSetData, int32 Tier, int32 WaveNum, bool bDeferTemporaryModifiers, TArray<struct FActiveGameplayModifierHandle>* OutAppliedModifiers);
};

// 0x2C8 (0x5F8 - 0x330)
// Class FortniteGame.FortDeployableBaseManager
class AFortDeployableBaseManager : public AInfo
{
public:
	uint8                                        bRestrictedBuildingActive : 1;                     // Mask : 0x1 0x330(0x1)(Edit, BlueprintVisible, Net, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bBusyWithPlotActions : 1;                          // Mask : 0x2 0x330(0x1)(Net, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bDestroyAllBuildingPiecesOnReload : 1;             // Mask : 0x4 0x330(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1A13[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        NumPiecesDestroyedOnZoneCleanupPerUpdate;          // 0x334(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        NumEnvPiecesRestoredPerUpdate;                     // 0x338(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bDeployableBasesReadOnly;                          // 0x33C(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EDeployableBaseUseType            DeployableBaseUseType;                             // 0x33D(0x1)(Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1A14[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FActiveTieredCollectionLayoutArray    ActiveTieredCollectionLayouts;                     // 0x340(0xC8)(Net, Transient, Protected, NativeAccessSpecifierProtected)
	UMulticastDelegateProperty_                  OnDeployableBasePlotsSpawned;                      // 0x408(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	UMulticastDelegateProperty_                  OnLocalPlayerEntersDeployablePlotEvent;            // 0x418(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	UMulticastDelegateProperty_                  OnLocalPlayerLeavesDeployablePlotEvent;            // 0x428(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	UMulticastDelegateProperty_                  OnLocalDeployablePlotInventoryChangedEvent;        // 0x438(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	struct FDeployableBaseArray                  DeployableBaseArray;                               // 0x448(0xC0)(Net, Transient, NativeAccessSpecifierPrivate)
	class UFortDeployableBaseCloudSaveItemDefinition* DeployableBaseItemDefinition;                      // 0x508(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSubclassOf<class ADeployableBasePlot>       DeployableBasePlotClass;                           // 0x510(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UFortDeployableBaseSkillTreeUnlocks*   SupportedSkillTreeBasedUnlocks;                    // 0x518(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        NumExpectedPlots;                                  // 0x520(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1A15[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FPendingDeployableBaseUser>    PendingUsers;                                      // 0x528(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	TArray<struct FPendingDeployableManagerAction> PendingDeployableManagerActions;                   // 0x538(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	TArray<struct FEnvironmentBuildingRestorationRecord> EnvironmentActorsRequiringRestoration;             // 0x548(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	uint8                                        bCaptureEnvironmentActorsForRestoration : 1;       // Mask : 0x1 0x558(0x1)(Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        bWorldInitialized : 1;                             // Mask : 0x2 0x558(0x1)(Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        bKeepBasesOnLogout : 1;                            // Mask : 0x4 0x558(0x1)(Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1A16[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FUniqueNetIdRepl>              PlayersPendingPlotReset;                           // 0x560(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1A17[0x88];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortDeployableBaseManager");
		return Clss;
	}

	void SetKeepDeployableBasesOnLogout(bool bInKeepBasesOnLogout);
	void ReloadAllPlots();
	bool GetTierOutputForSelectedTier(int32 Tier, class UFortTieredCollectionLayout* Layout, struct FFortTierCollectionLayoutOutput* Output);
	int32 GetHighestDefeatedTierForPlayerAndLayout(const struct FUniqueNetIdRepl& PlayerID, class UFortTieredCollectionLayout* Layout);
	enum class EDeployableBaseUseType GetDeployableBaseUseType();
	class ADeployableBasePlot* GetDeployableBasePlotFromLocation(struct FVector& Location);
	class AFortDeployableBaseManager* GetCurrent(class UObject* WorldContextObject);
	void GetAvailableTiers(TArray<struct FAvailableTierLayout>* OutAvailableTiers);
	void GetAllDeployableBasePlots(TArray<class ADeployableBasePlot*>* OutDeployableBasePlots);
	void BroadcastHordeWaveStinger(enum class EHordeWaveStingerType StingerType);
};

// 0x308 (0x638 - 0x330)
// Class FortniteGame.FortPickup
class AFortPickup : public AActor
{
public:
	uint8                                        Pad_1A1D[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bUsePickupWidget;                                  // 0x338(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bWeaponsCanBeAutoPickups;                          // 0x339(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bAutoUpgradeWeapons;                               // 0x33A(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1A1E[0x5];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	UMulticastDelegateProperty_                  OnPickup;                                          // 0x340(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnPickupAttempted;                                 // 0x350(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	bool                                         bRandomRotation;                                   // 0x360(0x1)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1A1F[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FFortItemEntry                        PrimaryPickupItemEntry;                            // 0x368(0x120)(Net, Transient, RepNotify, Protected, NativeAccessSpecifierProtected)
	TArray<struct FFortItemEntry>                MultiItemPickupEntries;                            // 0x488(0x10)(Net, ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	struct FFortPickupLocationData               PickupLocationData;                                // 0x498(0x60)(Net, Transient, RepNotify, NoDestructor, Protected, NativeAccessSpecifierProtected)
	uint32                                       PickupSourceTypeFlags;                             // 0x4F8(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EFortPickupSpawnSource            PickupSpawnSource;                                 // 0x4FC(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1A20[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        OptionalOwnerID;                                   // 0x500(0x4)(Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGuid                                 OptionalMissionGuid;                               // 0x504(0x10)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1A21[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UFortItem*                             PrimaryPickupDummyItem;                            // 0x518(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class AFortPickupEffect>      PickupEffectBlueprint;                             // 0x520(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCapsuleComponent*                     TouchCapsule;                                      // 0x528(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UProjectileMovementComponent*          MovementComponent;                                 // 0x530(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bPickedUp;                                         // 0x538(0x1)(Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bSplitOnPickup;                                    // 0x539(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bTossedFromContainer;                              // 0x53A(0x1)(Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bCombinePickupsWhenTossCompletes;                  // 0x53B(0x1)(Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bServerStoppedSimulation;                          // 0x53C(0x1)(Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bClientUseInterpolationOnly;                       // 0x53D(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        ServerImpactSoundFlash;                            // 0x53E(0x1)(Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1A22[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        LastLandedSoundPlayTime;                           // 0x540(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        LandSoundZForceThreshold;                          // 0x544(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAudioComponent*                       DroppedLoopingSoundComp;                           // 0x548(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AFortPawn*                             PawnWhoDroppedPickup;                              // 0x550(0x8)(Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        CachedSpecialActorIdx;                             // 0x558(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  SpecialActorID;                                    // 0x55C(0x8)(Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1A23[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UFortSimpleMiniMapIndicator*           MiniMapIndicator;                                  // 0x568(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFortSlateHUDIndicator*                HUDLabel;                                          // 0x570(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1A24[0xB8];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        DespawnTime;                                       // 0x630(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        StormDespawnTime;                                  // 0x634(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortPickup");
		return Clss;
	}

	void TossPickup(const struct FVector& FinalLocation, class AFortPawn* ItemOwner, int32 OverrideMaxStackCount, bool bToss, enum class EFortPickupSourceTypeFlag InPickupSourceTypeFlags, enum class EFortPickupSpawnSource InPickupSpawnSource);
	bool PickedUp();
	void OnServerStopCallback(struct FHitResult& Hit);
	void OnRep_TossedFromContainer();
	void OnRep_ServerStoppedSimulation();
	void OnRep_ServerImpactSoundFlash();
	void OnRep_PrimaryPickupItemEntry();
	void OnRep_PickupOwnerData();
	void OnRep_PickupLocationData();
	void OnRep_bPickedUp();
	class AFortPawn* GetPawnWhoDroppedPickup();
	int32 GetItemEntryNum();
	struct FFortItemEntry& GetItemEntry(int32 ItemIndex);
	bool GetInteractText(class FText* InteractText);
	bool GetInteractErrorText(class FText* InteractErrorText);
	class FText GetDisplayName();
};

// 0x28 (0x660 - 0x638)
// Class FortniteGame.FortDeployableBasePickup
class AFortDeployableBasePickup : public AFortPickup
{
public:
	struct FUniqueNetIdRepl                      AssociatedPlotOccupant;                            // 0x638(0x28)(Net, Transient, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortDeployableBasePickup");
		return Clss;
	}

};

// 0x18 (0xE8 - 0xD0)
// Class FortniteGame.FortDeployableBaseRecord
class UFortDeployableBaseRecord : public UFortGenericRecord
{
public:
	TArray<struct FFortActorRecord>              Actors;                                            // 0xD0(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	uint8                                        bNeedsFullActorSave : 1;                           // Mask : 0x1 0xE0(0x1)(Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1A25[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortDeployableBaseRecord");
		return Clss;
	}

};

// 0x40 (0x70 - 0x30)
// Class FortniteGame.FortDeployableBaseSkillTreeUnlocks
class UFortDeployableBaseSkillTreeUnlocks : public UDataAsset
{
public:
	TArray<struct FFortTaggedDeployableBasePlotExpansionUnlock> PlotSizeUnlocks;                                   // 0x30(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TArray<struct FFortTaggedDeployableBaseLootUnlock> NeighborhoodLootGrantUnlocks;                      // 0x40(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TArray<struct FFortTaggedDeployableBaseLootUnlock> CombatZoneStartLootGrantUnlocks;                   // 0x50(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TArray<struct FFortTaggedDeployableBaseLootUnlock> CombatZoneWaveCompleteLootGrantUnlocks;            // 0x60(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortDeployableBaseSkillTreeUnlocks");
		return Clss;
	}

};

// 0x0 (0x38 - 0x38)
// Class FortniteGame.FortDeveloperSettings
class UFortDeveloperSettings : public UDeveloperSettings
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortDeveloperSettings");
		return Clss;
	}

};

// 0x18 (0x40 - 0x28)
// Class FortniteGame.FortNotificationHandler
class UFortNotificationHandler : public UObject
{
public:
	UMulticastDelegateProperty_                  OnNotificationCleared;                             // 0x28(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	bool                                         bNotificationCleared;                              // 0x38(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1A26[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortNotificationHandler");
		return Clss;
	}

	void NotificationShown();
	class UUserWidget* CreateWidget(class APlayerController* OwningPlayer);
	void ClearNotification();
};

// 0x160 (0x1A0 - 0x40)
// Class FortniteGame.FortDialogNotificationHandler
class UFortDialogNotificationHandler : public UFortNotificationHandler
{
public:
	UMulticastDelegateProperty_                  OnAccepted;                                        // 0x40(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnDeclined;                                        // 0x50(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnTimedOut;                                        // 0x60(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	struct FFortDialogDescription                DialogDescription;                                 // 0x70(0x130)(BlueprintVisible, BlueprintReadOnly, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortDialogNotificationHandler");
		return Clss;
	}

	void Timeout();
	void SetDialogDescription(const struct FFortDialogDescription& InDialogDescription);
	void OnActionComplete__DelegateSignature();
	void Decline();
	void Accept();
};

// 0x18 (0x40 - 0x28)
// Class FortniteGame.FortDifficultyOption
class UFortDifficultyOption : public UObject
{
public:
	uint8                                        Pad_1A27[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FDataTableRowHandle                   CostAndAvailability;                               // 0x30(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortDifficultyOption");
		return Clss;
	}

};

// 0x8 (0x38 - 0x30)
// Class FortniteGame.FortDifficultyOptionCategory
class UFortDifficultyOptionCategory : public UDataAsset
{
public:
	bool                                         bIsRequired;                                       // 0x30(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bIsStatic;                                         // 0x31(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bHasValueRange;                                    // 0x32(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1A28[0x5];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortDifficultyOptionCategory");
		return Clss;
	}

};

// 0x0 (0x38 - 0x38)
// Class FortniteGame.FortDifficultyOptionCategoryEncounter
class UFortDifficultyOptionCategoryEncounter : public UFortDifficultyOptionCategory
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortDifficultyOptionCategoryEncounter");
		return Clss;
	}

};

// 0x10 (0x48 - 0x38)
// Class FortniteGame.FortDifficultyOptionCategoryEncounter_Breathers
class UFortDifficultyOptionCategoryEncounter_Breathers : public UFortDifficultyOptionCategoryEncounter
{
public:
	TArray<TSubclassOf<class UFortDifficultyOptionEncounter_Breathers>> Options;                                           // 0x38(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, UObjectWrapper, NativeAccessSpecifierProtected)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortDifficultyOptionCategoryEncounter_Breathers");
		return Clss;
	}

};

// 0x10 (0x48 - 0x38)
// Class FortniteGame.FortDifficultyOptionCategoryEncounter_DirectionChange
class UFortDifficultyOptionCategoryEncounter_DirectionChange : public UFortDifficultyOptionCategoryEncounter
{
public:
	TArray<TSubclassOf<class UFortDifficultyOptionEncounter_DirectionChange>> Options;                                           // 0x38(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, UObjectWrapper, NativeAccessSpecifierProtected)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortDifficultyOptionCategoryEncounter_DirectionChange");
		return Clss;
	}

};

// 0x10 (0x48 - 0x38)
// Class FortniteGame.FortDifficultyOptionCategoryEncounter_DirectionNumber
class UFortDifficultyOptionCategoryEncounter_DirectionNumber : public UFortDifficultyOptionCategoryEncounter
{
public:
	TArray<TSubclassOf<class UFortDifficultyOptionEncounter_DirectionNumber>> Options;                                           // 0x38(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, UObjectWrapper, NativeAccessSpecifierProtected)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortDifficultyOptionCategoryEncounter_DirectionNumber");
		return Clss;
	}

};

// 0x10 (0x48 - 0x38)
// Class FortniteGame.FortDifficultyOptionCategoryEncounter_Distance
class UFortDifficultyOptionCategoryEncounter_Distance : public UFortDifficultyOptionCategoryEncounter
{
public:
	TArray<TSubclassOf<class UFortDifficultyOptionEncounter_Distance>> Options;                                           // 0x38(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, UObjectWrapper, NativeAccessSpecifierProtected)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortDifficultyOptionCategoryEncounter_Distance");
		return Clss;
	}

};

// 0x10 (0x48 - 0x38)
// Class FortniteGame.FortDifficultyOptionCategoryEncounter_IntensityCurveSequence
class UFortDifficultyOptionCategoryEncounter_IntensityCurveSequence : public UFortDifficultyOptionCategoryEncounter
{
public:
	TArray<TSubclassOf<class UFortDifficultyOptionEncounter_IntensityCurveSequence>> Options;                                           // 0x38(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, UObjectWrapper, NativeAccessSpecifierProtected)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortDifficultyOptionCategoryEncounter_IntensityCurveSequence");
		return Clss;
	}

};

// 0x10 (0x48 - 0x38)
// Class FortniteGame.FortDifficultyOptionCategoryEncounter_ModifierTags
class UFortDifficultyOptionCategoryEncounter_ModifierTags : public UFortDifficultyOptionCategoryEncounter
{
public:
	TArray<TSubclassOf<class UFortDifficultyOptionEncounter_ModifierTags>> Options;                                           // 0x38(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, UObjectWrapper, NativeAccessSpecifierProtected)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortDifficultyOptionCategoryEncounter_ModifierTags");
		return Clss;
	}

};

// 0x10 (0x48 - 0x38)
// Class FortniteGame.FortDifficultyOptionCategoryEncounter_PawnNumberCap
class UFortDifficultyOptionCategoryEncounter_PawnNumberCap : public UFortDifficultyOptionCategoryEncounter
{
public:
	TArray<TSubclassOf<class UFortDifficultyOptionEncounter_PawnNumberCap>> Options;                                           // 0x38(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, UObjectWrapper, NativeAccessSpecifierProtected)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortDifficultyOptionCategoryEncounter_PawnNumberCap");
		return Clss;
	}

};

// 0x8 (0x40 - 0x38)
// Class FortniteGame.FortDifficultyOptionCategoryEncounter_SpawnGroupProgression
class UFortDifficultyOptionCategoryEncounter_SpawnGroupProgression : public UFortDifficultyOptionCategoryEncounter
{
public:
	TSubclassOf<class UFortDifficultyOptionEncounter_SpawnGroupProgression> SpawnGroupProgression;                             // 0x38(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortDifficultyOptionCategoryEncounter_SpawnGroupProgression");
		return Clss;
	}

};

// 0x10 (0x48 - 0x38)
// Class FortniteGame.FortDifficultyOptionCategoryEncounter_SpawnLimitPawns
class UFortDifficultyOptionCategoryEncounter_SpawnLimitPawns : public UFortDifficultyOptionCategoryEncounter
{
public:
	TArray<TSubclassOf<class UFortDifficultyOptionEncounter_SpawnLimitPawns>> Options;                                           // 0x38(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, UObjectWrapper, NativeAccessSpecifierProtected)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortDifficultyOptionCategoryEncounter_SpawnLimitPawns");
		return Clss;
	}

};

// 0x10 (0x48 - 0x38)
// Class FortniteGame.FortDifficultyOptionCategoryEncounter_SpawnLimitPoints
class UFortDifficultyOptionCategoryEncounter_SpawnLimitPoints : public UFortDifficultyOptionCategoryEncounter
{
public:
	TArray<TSubclassOf<class UFortDifficultyOptionEncounter_SpawnLimitPoints>> Options;                                           // 0x38(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, UObjectWrapper, NativeAccessSpecifierProtected)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortDifficultyOptionCategoryEncounter_SpawnLimitPoints");
		return Clss;
	}

};

// 0x10 (0x48 - 0x38)
// Class FortniteGame.FortDifficultyOptionCategoryEncounter_SpawnPointsBurst
class UFortDifficultyOptionCategoryEncounter_SpawnPointsBurst : public UFortDifficultyOptionCategoryEncounter
{
public:
	TArray<TSubclassOf<class UFortDifficultyOptionEncounter_SpawnPointsBurst>> Options;                                           // 0x38(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, UObjectWrapper, NativeAccessSpecifierProtected)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortDifficultyOptionCategoryEncounter_SpawnPointsBurst");
		return Clss;
	}

};

// 0x10 (0x48 - 0x38)
// Class FortniteGame.FortDifficultyOptionCategoryEncounter_SpawnPointsCurve
class UFortDifficultyOptionCategoryEncounter_SpawnPointsCurve : public UFortDifficultyOptionCategoryEncounter
{
public:
	TArray<TSubclassOf<class UFortDifficultyOptionEncounter_SpawnPointsCurve>> Options;                                           // 0x38(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, UObjectWrapper, NativeAccessSpecifierProtected)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortDifficultyOptionCategoryEncounter_SpawnPointsCurve");
		return Clss;
	}

};

// 0x10 (0x48 - 0x38)
// Class FortniteGame.FortDifficultyOptionCategoryEncounter_SpawnPointsMultiplier
class UFortDifficultyOptionCategoryEncounter_SpawnPointsMultiplier : public UFortDifficultyOptionCategoryEncounter
{
public:
	TArray<TSubclassOf<class UFortDifficultyOptionEncounter_SpawnPointsMultiplier>> Options;                                           // 0x38(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, UObjectWrapper, NativeAccessSpecifierProtected)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortDifficultyOptionCategoryEncounter_SpawnPointsMultiplier");
		return Clss;
	}

};

// 0x10 (0x48 - 0x38)
// Class FortniteGame.FortDifficultyOptionCategoryEncounter_SpawnTiming
class UFortDifficultyOptionCategoryEncounter_SpawnTiming : public UFortDifficultyOptionCategoryEncounter
{
public:
	TArray<TSubclassOf<class UFortDifficultyOptionEncounter_SpawnTiming>> Options;                                           // 0x38(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, UObjectWrapper, NativeAccessSpecifierProtected)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortDifficultyOptionCategoryEncounter_SpawnTiming");
		return Clss;
	}

};

// 0x10 (0x48 - 0x38)
// Class FortniteGame.FortDifficultyOptionCategoryEncounter_Time
class UFortDifficultyOptionCategoryEncounter_Time : public UFortDifficultyOptionCategoryEncounter
{
public:
	TArray<TSubclassOf<class UFortDifficultyOptionEncounter_Time>> Options;                                           // 0x38(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, UObjectWrapper, NativeAccessSpecifierProtected)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortDifficultyOptionCategoryEncounter_Time");
		return Clss;
	}

};

// 0x10 (0x48 - 0x38)
// Class FortniteGame.FortDifficultyOptionCategoryEncounter_TimedModifierTags
class UFortDifficultyOptionCategoryEncounter_TimedModifierTags : public UFortDifficultyOptionCategoryEncounter
{
public:
	TArray<TSubclassOf<class UFortDifficultyOptionEncounter_TimedModifierTags>> Options;                                           // 0x38(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, UObjectWrapper, NativeAccessSpecifierProtected)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortDifficultyOptionCategoryEncounter_TimedModifierTags");
		return Clss;
	}

};

// 0x10 (0x48 - 0x38)
// Class FortniteGame.FortDifficultyOptionCategoryEncounter_UtilitiesAdjustment
class UFortDifficultyOptionCategoryEncounter_UtilitiesAdjustment : public UFortDifficultyOptionCategoryEncounter
{
public:
	TArray<TSubclassOf<class UFortDifficultyOptionEncounter_UtilitiesAdjustment>> Options;                                           // 0x38(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, UObjectWrapper, NativeAccessSpecifierProtected)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortDifficultyOptionCategoryEncounter_UtilitiesAdjustment");
		return Clss;
	}

};

// 0x10 (0x48 - 0x38)
// Class FortniteGame.FortDifficultyOptionCategoryEncounter_UtilitiesFree
class UFortDifficultyOptionCategoryEncounter_UtilitiesFree : public UFortDifficultyOptionCategoryEncounter
{
public:
	TArray<TSubclassOf<class UFortDifficultyOptionEncounter_UtilitiesFree>> Options;                                           // 0x38(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, UObjectWrapper, NativeAccessSpecifierProtected)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortDifficultyOptionCategoryEncounter_UtilitiesFree");
		return Clss;
	}

};

// 0x10 (0x48 - 0x38)
// Class FortniteGame.FortDifficultyOptionCategoryEncounter_UtilitiesLocked
class UFortDifficultyOptionCategoryEncounter_UtilitiesLocked : public UFortDifficultyOptionCategoryEncounter
{
public:
	TArray<TSubclassOf<class UFortDifficultyOptionEncounter_UtilitiesLocked>> Options;                                           // 0x38(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, UObjectWrapper, NativeAccessSpecifierProtected)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortDifficultyOptionCategoryEncounter_UtilitiesLocked");
		return Clss;
	}

};

// 0x0 (0x38 - 0x38)
// Class FortniteGame.FortDifficultyOptionCategoryMission
class UFortDifficultyOptionCategoryMission : public UFortDifficultyOptionCategory
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortDifficultyOptionCategoryMission");
		return Clss;
	}

};

// 0x8 (0x48 - 0x40)
// Class FortniteGame.FortDifficultyOptionEncounter
class UFortDifficultyOptionEncounter : public UFortDifficultyOption
{
public:
	uint8                                        Pad_1A29[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortDifficultyOptionEncounter");
		return Clss;
	}

};

// 0x38 (0x80 - 0x48)
// Class FortniteGame.FortDifficultyOptionEncounter_Breathers
class UFortDifficultyOptionEncounter_Breathers : public UFortDifficultyOptionEncounter
{
public:
	bool                                         bUseBreathers;                                     // 0x48(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1A2A[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FCurveTableRowHandle                  LowPlayerPerformanceBreatherTimeSecondsCurve;      // 0x50(0x10)(Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FCurveTableRowHandle                  NormalPlayerPerformanceBreatherTimeSecondsCurve;   // 0x60(0x10)(Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FCurveTableRowHandle                  HighPlayerPerformanceBreatherTimeSecondsCurve;     // 0x70(0x10)(Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortDifficultyOptionEncounter_Breathers");
		return Clss;
	}

};

// 0x8 (0x50 - 0x48)
// Class FortniteGame.FortDifficultyOptionEncounter_DirectionChange
class UFortDifficultyOptionEncounter_DirectionChange : public UFortDifficultyOptionEncounter
{
public:
	bool                                         bChangeDirectionsOnRest;                           // 0x48(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1A2B[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortDifficultyOptionEncounter_DirectionChange");
		return Clss;
	}

};

// 0x8 (0x50 - 0x48)
// Class FortniteGame.FortDifficultyOptionEncounter_DirectionNumber
class UFortDifficultyOptionEncounter_DirectionNumber : public UFortDifficultyOptionEncounter
{
public:
	int32                                        NumberOfDirections;                                // 0x48(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1A2C[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortDifficultyOptionEncounter_DirectionNumber");
		return Clss;
	}

};

// 0x8 (0x50 - 0x48)
// Class FortniteGame.FortDifficultyOptionEncounter_Distance
class UFortDifficultyOptionEncounter_Distance : public UFortDifficultyOptionEncounter
{
public:
	float                                        MinSpawnDistance;                                  // 0x48(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MaxSpawnDistance;                                  // 0x4C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortDifficultyOptionEncounter_Distance");
		return Clss;
	}

};

// 0x8 (0x50 - 0x48)
// Class FortniteGame.FortDifficultyOptionEncounter_IntensityCurveSequence
class UFortDifficultyOptionEncounter_IntensityCurveSequence : public UFortDifficultyOptionEncounter
{
public:
	class UFortIntensityCurveSequence*           CurveSequence;                                     // 0x48(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortDifficultyOptionEncounter_IntensityCurveSequence");
		return Clss;
	}

};

// 0x20 (0x68 - 0x48)
// Class FortniteGame.FortDifficultyOptionEncounter_ModifierTags
class UFortDifficultyOptionEncounter_ModifierTags : public UFortDifficultyOptionEncounter
{
public:
	struct FGameplayTagContainer                 ModifierTags;                                      // 0x48(0x20)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortDifficultyOptionEncounter_ModifierTags");
		return Clss;
	}

};

// 0x18 (0x60 - 0x48)
// Class FortniteGame.FortDifficultyOptionEncounter_PawnNumberCap
class UFortDifficultyOptionEncounter_PawnNumberCap : public UFortDifficultyOptionEncounter
{
public:
	struct FFortEncounterPawnNumberCaps          PawnCapsPerPlayerCount;                            // 0x48(0x18)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortDifficultyOptionEncounter_PawnNumberCap");
		return Clss;
	}

};

// 0x8 (0x50 - 0x48)
// Class FortniteGame.FortDifficultyOptionEncounter_SpawnGroupProgression
class UFortDifficultyOptionEncounter_SpawnGroupProgression : public UFortDifficultyOptionEncounter
{
public:
	class UFortAISpawnGroupProgressionInfo*      SpawnGroupProgression;                             // 0x48(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortDifficultyOptionEncounter_SpawnGroupProgression");
		return Clss;
	}

};

// 0x8 (0x50 - 0x48)
// Class FortniteGame.FortDifficultyOptionEncounter_SpawnLimitPawns
class UFortDifficultyOptionEncounter_SpawnLimitPawns : public UFortDifficultyOptionEncounter
{
public:
	int32                                        PawnNumberLimit;                                   // 0x48(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1A2D[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortDifficultyOptionEncounter_SpawnLimitPawns");
		return Clss;
	}

};

// 0x8 (0x50 - 0x48)
// Class FortniteGame.FortDifficultyOptionEncounter_SpawnLimitPoints
class UFortDifficultyOptionEncounter_SpawnLimitPoints : public UFortDifficultyOptionEncounter
{
public:
	float                                        SpawnPointsPercentageLimit;                        // 0x48(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1A2E[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortDifficultyOptionEncounter_SpawnLimitPoints");
		return Clss;
	}

};

// 0x20 (0x68 - 0x48)
// Class FortniteGame.FortDifficultyOptionEncounter_SpawnPointsBurst
class UFortDifficultyOptionEncounter_SpawnPointsBurst : public UFortDifficultyOptionEncounter
{
public:
	struct FScalableFloat                        BurstSpawnPointsPercentage;                        // 0x48(0x20)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortDifficultyOptionEncounter_SpawnPointsBurst");
		return Clss;
	}

};

// 0x8 (0x50 - 0x48)
// Class FortniteGame.FortDifficultyOptionEncounter_SpawnPointsCurve
class UFortDifficultyOptionEncounter_SpawnPointsCurve : public UFortDifficultyOptionEncounter
{
public:
	class UFortSpawnPointsPercentageCurveSequence* CurveSequence;                                     // 0x48(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortDifficultyOptionEncounter_SpawnPointsCurve");
		return Clss;
	}

};

// 0x20 (0x68 - 0x48)
// Class FortniteGame.FortDifficultyOptionEncounter_SpawnPointsMultiplier
class UFortDifficultyOptionEncounter_SpawnPointsMultiplier : public UFortDifficultyOptionEncounter
{
public:
	struct FScalableFloat                        Multiplier;                                        // 0x48(0x20)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortDifficultyOptionEncounter_SpawnPointsMultiplier");
		return Clss;
	}

};

// 0x20 (0x68 - 0x48)
// Class FortniteGame.FortDifficultyOptionEncounter_SpawnTiming
class UFortDifficultyOptionEncounter_SpawnTiming : public UFortDifficultyOptionEncounter
{
public:
	struct FScalableFloat                        SpawnIntervalSeconds;                              // 0x48(0x20)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortDifficultyOptionEncounter_SpawnTiming");
		return Clss;
	}

};

// 0x8 (0x50 - 0x48)
// Class FortniteGame.FortDifficultyOptionEncounter_Time
class UFortDifficultyOptionEncounter_Time : public UFortDifficultyOptionEncounter
{
public:
	float                                        EncounterTimeSeconds;                              // 0x48(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1A2F[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortDifficultyOptionEncounter_Time");
		return Clss;
	}

};

// 0x10 (0x58 - 0x48)
// Class FortniteGame.FortDifficultyOptionEncounter_TimedModifierTags
class UFortDifficultyOptionEncounter_TimedModifierTags : public UFortDifficultyOptionEncounter
{
public:
	TArray<struct FFortAIEncounterTimedModifierTags> TimedModifierTags;                                 // 0x48(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortDifficultyOptionEncounter_TimedModifierTags");
		return Clss;
	}

};

// 0x8 (0x50 - 0x48)
// Class FortniteGame.FortDifficultyOptionEncounter_UtilitiesAdjustment
class UFortDifficultyOptionEncounter_UtilitiesAdjustment : public UFortDifficultyOptionEncounter
{
public:
	float                                        UtilitiesAdjustmentIntervalSeconds;                // 0x48(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1A30[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortDifficultyOptionEncounter_UtilitiesAdjustment");
		return Clss;
	}

};

// 0x8 (0x50 - 0x48)
// Class FortniteGame.FortDifficultyOptionEncounter_UtilitiesFree
class UFortDifficultyOptionEncounter_UtilitiesFree : public UFortDifficultyOptionEncounter
{
public:
	int32                                        NumFreeUtilitySlots;                               // 0x48(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1A31[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortDifficultyOptionEncounter_UtilitiesFree");
		return Clss;
	}

};

// 0x10 (0x58 - 0x48)
// Class FortniteGame.FortDifficultyOptionEncounter_UtilitiesLocked
class UFortDifficultyOptionEncounter_UtilitiesLocked : public UFortDifficultyOptionEncounter
{
public:
	TArray<struct FFortEncounterLockedUtility>   LockedUtilities;                                   // 0x48(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortDifficultyOptionEncounter_UtilitiesLocked");
		return Clss;
	}

};

// 0x0 (0x40 - 0x40)
// Class FortniteGame.FortDifficultyOptionMission
class UFortDifficultyOptionMission : public UFortDifficultyOption
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortDifficultyOptionMission");
		return Clss;
	}

};

// 0xB8 (0xE8 - 0x30)
// Class FortniteGame.FortDifficultyOptionSetEncounter
class UFortDifficultyOptionSetEncounter : public UDataAsset
{
public:
	enum class EFortEncounterPacingMode          PacingMode;                                        // 0x30(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1A32[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UFortDifficultyOptionCategoryEncounter_IntensityCurveSequence* IntensityCurveSequenceCategory;                    // 0x38(0x8)(Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, Protected, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFortDifficultyOptionCategoryEncounter_SpawnPointsCurve* SpawnPointsPercentageCurveSequenceCategory;        // 0x40(0x8)(Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, Protected, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFortDifficultyOptionCategoryEncounter_SpawnPointsBurst* SpawnPointsBurstCategory;                          // 0x48(0x8)(Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, Protected, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFortDifficultyOptionCategoryEncounter_Breathers* BreathersCategory;                                 // 0x50(0x8)(Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, Protected, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFortDifficultyOptionCategoryEncounter_SpawnPointsMultiplier* SpawnPointsMultiplierCategory;                     // 0x58(0x8)(Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, Protected, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFortDifficultyOptionCategoryEncounter_PawnNumberCap* PawnNumberCapCategory;                             // 0x60(0x8)(Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, Protected, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFortDifficultyOptionCategoryEncounter_SpawnTiming* OptionalSpawnTimingCategory;                       // 0x68(0x8)(Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, AdvancedDisplay, Protected, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EFortEncounterSpawnLimitType      SpawnLimitMode;                                    // 0x70(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1A33[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UFortDifficultyOptionCategoryEncounter_SpawnLimitPoints* SpawnPointsLimitCategory;                          // 0x78(0x8)(Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, Protected, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFortDifficultyOptionCategoryEncounter_SpawnLimitPawns* PawnLimitCategory;                                 // 0x80(0x8)(Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, Protected, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EFortEncounterUtilitiesMode       UtilitiesMode;                                     // 0x88(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1A34[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UFortDifficultyOptionCategoryEncounter_UtilitiesLocked* LockedUtilitiesCategory;                           // 0x90(0x8)(Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, Protected, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFortDifficultyOptionCategoryEncounter_UtilitiesFree* FreeUtilitiesCategory;                             // 0x98(0x8)(Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, Protected, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFortDifficultyOptionCategoryEncounter_UtilitiesAdjustment* UtilitiesAdjustmentCategory;                       // 0xA0(0x8)(Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, Protected, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EFortEncounterSpawnLocationManagementMode SpawnLocationManagementMode;                       // 0xA8(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EFortEncounterSpawnLocationPlacementMode SpawnLocationPlacementMode;                        // 0xA9(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1A35[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UFortDifficultyOptionCategoryEncounter_DirectionNumber* DirectionNumberCategory;                           // 0xB0(0x8)(Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, Protected, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFortDifficultyOptionCategoryEncounter_DirectionChange* DirectionChangeCategory;                           // 0xB8(0x8)(Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, Protected, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFortDifficultyOptionCategoryEncounter_Distance* DistanceCategory;                                  // 0xC0(0x8)(Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, Protected, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFortDifficultyOptionCategoryEncounter_SpawnGroupProgression* SpawnGroupProgressionCategory;                     // 0xC8(0x8)(Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, Protected, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFortDifficultyOptionCategoryEncounter_Time* TimeCategory;                                      // 0xD0(0x8)(Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, Protected, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFortDifficultyOptionCategoryEncounter_ModifierTags* OptionalModifierTagsCategory;                      // 0xD8(0x8)(Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, Protected, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFortDifficultyOptionCategoryEncounter_TimedModifierTags* OptionalMiniBossStartTimedTagsCategory;            // 0xE0(0x8)(Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, Protected, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortDifficultyOptionSetEncounter");
		return Clss;
	}

};

// 0x10 (0x40 - 0x30)
// Class FortniteGame.FortDifficultyOptionSetMission
class UFortDifficultyOptionSetMission : public UDataAsset
{
public:
	TArray<class UFortDifficultyOptionCategoryMission*> MissionOptionsCategories;                          // 0x30(0x10)(Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortDifficultyOptionSetMission");
		return Clss;
	}

};

// 0x68 (0x380 - 0x318)
// Class FortniteGame.FortDoghouseVehicleConfigs
class UFortDoghouseVehicleConfigs : public UFortVehicleConfigs
{
public:
	float                                        WheelRotationRange;                                // 0x318(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        VehicleFrontLowLateralFrictionMultiplier;          // 0x31C(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        VehicleRearLowLateralFrictionMultiplier;           // 0x320(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        VehicleFrontHighLateralFrictionMultiplier;         // 0x324(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        VehicleRearHighLateralFrictionMultiplier;          // 0x328(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LowToHighFrictionDuration;                         // 0x32C(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        UphillIncline;                                     // 0x330(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ReverseToForwardFrontFriction;                     // 0x334(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ReverseToForwardRearFriction;                      // 0x338(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ReverseToForwardMaxSpeed;                          // 0x33C(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PropSpeedPerLinearSpeed;                           // 0x340(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PropSpeedPerLinearSpeedPassive;                    // 0x344(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PropSpeedAccelLerpPerSecond;                       // 0x348(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PropSpeedDecelLerpPerSecond;                       // 0x34C(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TaxiPitchProjTarget;                               // 0x350(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxAltitudeZ;                                      // 0x354(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        StallAltitudeZ;                                    // 0x358(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        StallTime;                                         // 0x35C(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        StuckTimeBeforeStall;                              // 0x360(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinSkipShocksAltitudeZ;                            // 0x364(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AltitudeUpdateFrequency;                           // 0x368(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ControlStateNetUpdateFrequency;                    // 0x36C(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ForceHeadingUpdateFrequency;                       // 0x370(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1A36[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class AActor>                    BoundsXYSplineClass;                               // 0x378(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortDoghouseVehicleConfigs");
		return Clss;
	}

};

// 0x0 (0x1D0 - 0x1D0)
// Class FortniteGame.FortDoorLinkComponent
class UFortDoorLinkComponent : public UNavLinkCustomComponent
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortDoorLinkComponent");
		return Clss;
	}

};

// 0x50 (0x380 - 0x330)
// Class FortniteGame.FortDynamicBuildingDeconstructor
class AFortDynamicBuildingDeconstructor : public AActor
{
public:
	struct FBoxSphereBounds                      Bounds;                                            // 0x330(0x1C)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	bool                                         bDebugDrawBounds;                                  // 0x34C(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bSelectiveDestruction;                             // 0x34D(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIgnoreMissionActors;                              // 0x34E(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShrinkAndDestroyEffect;                           // 0x34F(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        NumOfPiecesToDestroyAtOnce;                        // 0x350(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TimeBetweenChunks;                                 // 0x354(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<TWeakObjectPtr<class ABuildingSMActor>> SortedBuildingActors;                              // 0x358(0x10)(ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPrivate)
	int32                                        CurrentIndex;                                      // 0x368(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1A37[0x14];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortDynamicBuildingDeconstructor");
		return Clss;
	}

};

// 0x0 (0xBA0 - 0xBA0)
// Class FortniteGame.FortEditToolItemDefinition
class UFortEditToolItemDefinition : public UFortWeaponItemDefinition
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortEditToolItemDefinition");
		return Clss;
	}

};

// 0x30 (0x420 - 0x3F0)
// Class FortniteGame.FortEmitterCameraLensEffectDirectional
class AFortEmitterCameraLensEffectDirectional : public AEmitterCameraLensEffectBase
{
public:
	class AFortPawn*                             DamageInstigator;                                  // 0x3F0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               DamageInstigatorLocation;                          // 0x3F8(0xC)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  RotationParameterName;                             // 0x404(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bRotateActor : 1;                                  // Mask : 0x1 0x40C(0x1)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1A38[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        Strength;                                          // 0x410(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1A39[0xC];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortEmitterCameraLensEffectDirectional");
		return Clss;
	}

	void SetTint(const struct FLinearColor& Color);
	void SetStrength(float InStrength);
};

// 0x18 (0x110 - 0xF8)
// Class FortniteGame.FortEmojiPreviewComponent
class UFortEmojiPreviewComponent : public UActorComponent
{
public:
	uint8                                        Pad_1A3A[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortEmojiPreviewComponent");
		return Clss;
	}

	void PushPreviewEmoji(class UAthenaEmojiItemDefinition* EmojiItem);
};

// 0x10 (0x490 - 0x480)
// Class FortniteGame.FortEmoteItemDefinition
class UFortEmoteItemDefinition : public UFortMontageItemDefinitionBase
{
public:
	//class FText                                CommandName;                                       // 0x478(0x18)(Edit, AssetRegistrySearchable, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1A3B[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortEmoteItemDefinition");
		return Clss;
	}

	class FText GetCommandName();
};

// 0x10 (0x340 - 0x330)
// Class FortniteGame.FortEmotePreviewActor
class AFortEmotePreviewActor : public AActor
{
public:
	uint8                                        Pad_1A3C[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortEmotePreviewActor");
		return Clss;
	}

	void PreviewEmote(class UFortMontageItemDefinitionBase* Emote);
};

// 0x8 (0x6D0 - 0x6C8)
// Class FortniteGame.FortEnemySpawn
class AFortEnemySpawn : public ABuildingActor
{
public:
	float                                        ClusterRadius;                                     // 0x6C8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1A3D[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortEnemySpawn");
		return Clss;
	}

};

// 0x20 (0xD20 - 0xD00)
// Class FortniteGame.FortEngine
class UFortEngine : public UGameEngine
{
public:
	uint8                                        Pad_1A3E[0x20];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortEngine");
		return Clss;
	}

	void StartFortBench(const class FString& ReplayName);
};

// 0x60 (0x140 - 0xE0)
// Class FortniteGame.FortEventPurchaseTrackerItem
class UFortEventPurchaseTrackerItem : public UFortAccountItem
{
public:
	class FString                                Event_instance_id;                                 // 0xE0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TMap<class FString, int32>                   Event_purchases;                                   // 0xF0(0x50)(ZeroConstructor, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortEventPurchaseTrackerItem");
		return Clss;
	}

};

// 0x0 (0x360 - 0x360)
// Class FortniteGame.FortEventPurchaseTrackerItemDefinition
class UFortEventPurchaseTrackerItemDefinition : public UFortAccountItemDefinition
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortEventPurchaseTrackerItemDefinition");
		return Clss;
	}

};

// 0x40 (0x370 - 0x330)
// Class FortniteGame.FortExhibitActor
class AFortExhibitActor : public AActor
{
public:
	struct FTransform                            CameraOffset;                                      // 0x330(0x30)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	float                                        CameraFOV;                                         // 0x360(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1A3F[0xC];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortExhibitActor");
		return Clss;
	}

};

// 0x60 (0x140 - 0xE0)
// Class FortniteGame.FortExpeditionItem
class UFortExpeditionItem : public UFortAccountItem
{
public:
	int32                                        Expedition_max_target_power;                       // 0xE0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Expedition_min_target_power;                       // 0xE4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDateTime                             Expedition_start_time;                             // 0xE8(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDateTime                             Expedition_end_time;                               // 0xF0(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDateTime                             Expedition_expiration_start_time;                  // 0xF8(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDateTime                             Expedition_expiration_end_time;                    // 0x100(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                Expedition_squad_id;                               // 0x108(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                Expedition_slot_id;                                // 0x118(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FString>                        Expedition_criteria;                               // 0x128(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	float                                        Expedition_success_chance;                         // 0x138(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1A42[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortExpeditionItem");
		return Clss;
	}

	bool IsExpeditionInProgress();
	bool IsExpeditionCompleted(const struct FDateTime& UtcNow);
	bool HasExpeditionExpired(const struct FDateTime& UtcNow);
	float GetTargetPowerLevel();
	struct FTimespan GetRemainingExpeditionExpirationDuration(const struct FDateTime& UtcNow);
	struct FTimespan GetRemainingExpeditionDuration(const struct FDateTime& UtcNow);
	float GetMinTargetPowerLevelToBegin();
	float GetExpeditionSuccessChance();
	class FName GetExpeditionSquadId();
	void GetBonusCriteriaTags(TArray<struct FGameplayTag>* OutBonusCriteria);
	void GetBonusCriteriaBP(TArray<struct FFortCriteriaRequirementData>* OutBonusCriteria);
};

// 0x40 (0x3A0 - 0x360)
// Class FortniteGame.FortExpeditionItemDefinition
class UFortExpeditionItemDefinition : public UFortAccountItemDefinition
{
public:
	class FString                                CriteriaRequirementsLootTier;                      // 0x360(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ExpeditionDuration_Minutes;                        // 0x370(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ExpeditionExpirationDuration_Minutes;              // 0x374(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        BaseTargetPowerRating;                             // 0x378(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        TierFactor;                                        // 0x37C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        MaxTargetPowerClamp;                               // 0x380(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1A43[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FDataTableRowHandle                   ExpeditionRules;                                   // 0x388(0x10)(Edit, NoDestructor, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1A44[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortExpeditionItemDefinition");
		return Clss;
	}

	struct FGameplayTagContainer GetRequiredTags();
	void GetExpeditionCosts(TArray<struct FItemAndCount>* OutExpeditionCosts);
	void GetAllRewards(TArray<class UFortCardPackItemDefinition*>* OutRewards);
};

// 0x10 (0x38 - 0x28)
// Class FortniteGame.FortExpeditionManager
class UFortExpeditionManager : public UObject
{
public:
	uint8                                        Pad_1A45[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortExpeditionManager");
		return Clss;
	}

};

// 0x28 (0x50 - 0x28)
// Class FortniteGame.FortFallbackCameraFrameTargetProxy
class UFortFallbackCameraFrameTargetProxy : public UObject
{
public:
	uint8                                        Pad_1A46[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	UDelegateProperty_                           OnSettingsChangedDelegate;                         // 0x40(0x10)(ZeroConstructor, InstancedReference, NoDestructor, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortFallbackCameraFrameTargetProxy");
		return Clss;
	}

	void SetItemToRepresent(class UFortItem* ItemToRepresent, class USceneComponent* ComponentToView);
};

// 0x8 (0x30 - 0x28)
// Class FortniteGame.FortFastLoadConfig
class UFortFastLoadConfig : public UObject
{
public:
	uint8                                        bDisableStreamInBuildings : 1;                     // Mask : 0x1 0x28(0x1)(Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        bDisableStartupAIDirector : 1;                     // Mask : 0x2 0x28(0x1)(Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        bDisableUpgradePlayerBuildingClasses : 1;          // Mask : 0x4 0x28(0x1)(Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        bUseMinimalPlayerBuildingClasses : 1;              // Mask : 0x8 0x28(0x1)(Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        bDisableStartingMissions : 1;                      // Mask : 0x10 0x28(0x1)(Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        bUseFastLoadDefaultInventory : 1;                  // Mask : 0x20 0x28(0x1)(Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        bDisableNavAgentCostData : 1;                      // Mask : 0x40 0x28(0x1)(Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        bDisableThreatVisualsManager : 1;                  // Mask : 0x80 0x28(0x1)(Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        bDisablePreLoadAssets : 1;                         // Mask : 0x1 0x29(0x1)(Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1A47[0x6];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortFastLoadConfig");
		return Clss;
	}

};

// 0xC0 (0xF0 - 0x30)
// Class FortniteGame.FortFeedbackBank
class UFortFeedbackBank : public UPrimaryDataAsset
{
public:
	TArray<struct FFortFeedbackActionBankDefined> BankDefinedFeedbackEvents;                         // 0x30(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FFortFeedbackAction>           FeedbackEvents;                                    // 0x40(0x10)(Edit, EditFixedSize, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_1A48[0xA0];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortFeedbackBank");
		return Clss;
	}

};

// 0x138 (0x468 - 0x330)
// Class FortniteGame.FortFeedbackManager
class AFortFeedbackManager : public AActor
{
public:
	TArray<struct FFortFeedbackEventData>        FeedbackEvents;                                    // 0x330(0x10)(Edit, EditFixedSize, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                         bUsesStWFeedbackEvents;                            // 0x340(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1A49[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FFortFeedbackEventData>        BankDefinedFeedbackEvents;                         // 0x348(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TSubclassOf<class AFortPawn_FeedbackAnnouncer> AnnouncerPawnClass;                                // 0x358(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AFortPawn_FeedbackAnnouncer*           Announcer;                                         // 0x360(0x8)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<TWeakObjectPtr<class AController>>    SuppressedControllers;                             // 0x368(0x10)(Net, ZeroConstructor, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	uint8                                        Pad_1A4A[0xF0];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortFeedbackManager");
		return Clss;
	}

	void SuppressProceduralFeedback(const TArray<class AController*>& ControllersToSuppress);
	class AFortFeedbackManager* GetFeedbackManager(class UObject* WorldContextObject);
	class AFortPawn_FeedbackAnnouncer* GetAnnouncerPawn(class UObject* WorldContextObject);
};

// 0xA0 (0x4A0 - 0x400)
// Class FortniteGame.FortFerretVehicleAnimInstance
class UFortFerretVehicleAnimInstance : public UFortVehicleAnimInstance
{
public:
	//class AFortAthenaFerretVehicle*            FerretVehicle;                                     // 0x3F8(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                              FerretVehicleSpeed;                                // 0x400(0xC)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	bool                                         bForwardSpeedIsNearlyZero;                         // 0x40C(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bForwardSpeedIsGreaterThanOne;                     // 0x40D(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bReverseSpeedIsGreaterThanOne;                     // 0x40E(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bSpeedIsGreaterThanFiveAndPlayerHitSpace;          // 0x40F(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsBraking;                                        // 0x410(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsBoosting;                                       // 0x411(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsBoostReady;                                     // 0x412(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bPlayerHitSpaceBar;                                // 0x413(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bOnGround;                                         // 0x414(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1A4B[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               ControlTorque;                                     // 0x418(0xC)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                              RudderAngle;                                       // 0x424(0xC)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FRotator                              AileronAngle;                                      // 0x430(0xC)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FRotator                              ElevatorAngle;                                     // 0x43C(0xC)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FRotator                              FlapAngle;                                         // 0x448(0xC)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FRotator                              Altitude;                                          // 0x454(0xC)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	float                                        SteerPitchAngle;                                   // 0x460(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                              PropellorAngle;                                    // 0x464(0xC)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FRotator                              BoostPercent;                                      // 0x470(0xC)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	enum class EPlaneDirection                   FerretCardinalDirection;                           // 0x47C(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1A4C[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        ElevatorDeadZone;                                  // 0x480(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RudderDeadZone;                                    // 0x484(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bFerretShouldPlayStartTransition;                  // 0x488(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1A4D[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bFerretShouldPlayStopTransition;                   // 0x48A(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1A4E[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	enum class EPlaneDirection                   FerretStopCardinalDirection;                       // 0x48C(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EPlaneDirection                   FerretPrePivotCardinalDirection;                   // 0x48D(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bFerretShouldPlayPivotTransition;                  // 0x48E(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1A4F[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        AbsSteerAngle;                                     // 0x490(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1A50[0xC];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortFerretVehicleAnimInstance");
		return Clss;
	}

};

// 0xD0 (0x450 - 0x380)
// Class FortniteGame.FortFerretVehicleConfigs
class UFortFerretVehicleConfigs : public UFortDoghouseVehicleConfigs
{
public:
	float                                        BounceCrouchTime;                                  // 0x380(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BounceCrouchTimeDeadzone;                          // 0x384(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BounceRecoilTime;                                  // 0x388(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BounceForcePerMass;                                // 0x38C(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PassengerLeanMagnitude;                            // 0x390(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PassengerLeanMinMagnitude;                         // 0x394(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PassengerLeanLeftRightInterpolationPerSecond;      // 0x398(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PassengerLeanUpInterpolationPerSecond;             // 0x39C(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PassengerLeanDownInterpolationPerSecond;           // 0x3A0(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PassengerLeanResetInterpolationPerSecond;          // 0x3A4(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PassengerLeanDeadzone;                             // 0x3A8(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BoostSteeringMultiplier;                           // 0x3AC(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BoostCooldown;                                     // 0x3B0(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BoostSteeringMultiplierRampTime;                   // 0x3B4(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BoostSlowExtraStrength;                            // 0x3B8(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinForwardSpeedBoostExtraStrength;                 // 0x3BC(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BoostTopSpeedForceMultiplier;                      // 0x3C0(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CameraShakeAmplitudeMin;                           // 0x3C4(0x4)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CameraShakeAmplitudeMax;                           // 0x3C8(0x4)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SpringFudgeFactor;                                 // 0x3CC(0x4)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CameraShakeNormalizedSpeed;                        // 0x3D0(0x4)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CameraShakeSpeedCurvePow;                          // 0x3D4(0x4)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BoostingCameraShakeAmount;                         // 0x3D8(0x4)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BoostCameraShakeFrequency;                         // 0x3DC(0x4)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SmoothedSpringCompressionMin;                      // 0x3E0(0x4)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SmoothedSpringCompressionMax;                      // 0x3E4(0x4)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ScreenShakeFrequencyMin;                           // 0x3E8(0x4)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ScreenShakeFrequencyMax;                           // 0x3EC(0x4)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PassengerCameraShakeMultiplier;                    // 0x3F0(0x4)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ScreenShakeYawFrequencyMultiplier;                 // 0x3F4(0x4)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          WheelSlideBoostColorWhenNotPowerSliding;           // 0x3F8(0x10)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TreadWidth;                                        // 0x408(0x4)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RumbleMultiplier;                                  // 0x40C(0x4)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SparksRumbleMultiplier;                            // 0x410(0x4)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BoostCameraOffset;                                 // 0x414(0x4)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ADSCameraDistance;                                 // 0x418(0x4)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PassengerCameraOffset;                             // 0x41C(0x4)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ADSInterpSpeed;                                    // 0x420(0x4)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  LeftMuzzleSocketName;                              // 0x424(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  RightMuzzleSocketName;                             // 0x42C(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxHealthToDestroyPropWhileBoosting;               // 0x434(0x4)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxHealthToDestroyPropWithDirectHit;               // 0x438(0x4)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BoostDestructionAngle;                             // 0x43C(0x4)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        UpForwardMinProtected;                             // 0x440(0x4)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        UpNormalMinProtected;                              // 0x444(0x4)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ImpactScaleWhenBoosting;                           // 0x448(0x4)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1A51[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortFerretVehicleConfigs");
		return Clss;
	}

};

// 0x10 (0x4A8 - 0x498)
// Class FortniteGame.FortFlag
class AFortFlag : public AFortCarriedObject
{
public:
	class UStaticMeshComponent*                  FlagMeshComp;                                      // 0x498(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCapsuleComponent*                     CollisionComp;                                     // 0x4A0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortFlag");
		return Clss;
	}

};

// 0x40 (0xC60 - 0xC20)
// Class FortniteGame.FortFOBCoreDecoItemDefinition
class UFortFOBCoreDecoItemDefinition : public UFortDecoItemDefinition
{
public:
	//class FText                                ExtendedDescription;                               // 0xC18(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	uint8                                        Pad_1A52[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  FlavorText;                                        // 0xC30(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FGuid                                 SaveFilenameGUID;                                  // 0xC48(0x10)(Edit, ZeroConstructor, EditConst, DuplicateTransient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1A53[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortFOBCoreDecoItemDefinition");
		return Clss;
	}

	int32 GetMaximumHealth();
};

// 0x10 (0x40 - 0x30)
// Class FortniteGame.FortFoliageSpawnerSet
class UFortFoliageSpawnerSet : public UDataAsset
{
public:
	TArray<class UProceduralFoliageSpawner*>     FoliageSpawners;                                   // 0x30(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortFoliageSpawnerSet");
		return Clss;
	}

};

// 0xCE0 (0xD10 - 0x30)
// Class FortniteGame.FortFootstepAudioBank
class UFortFootstepAudioBank : public UDataAsset
{
public:
	struct FFortFootstepAudioData                FootstepData1P;                                    // 0x30(0xE8)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_1A57[0x570];                                   // Fixing Size After Last Property  [ Dumper-7 ]
	struct FFortFootstepAudioData                FootstepData3P;                                    // 0x688(0xE8)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_1A58[0x570];                                   // Fixing Size After Last Property  [ Dumper-7 ]
	enum class EFortFootstepSurfaceType          PhysicalSurfaceMappings;                           // 0xCE0(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1A59[0x1B];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        TeammateVolumeMultiplier;                          // 0xCFC(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxFootstepDistance;                               // 0xD00(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        VerticalPitchMaxBelow;                             // 0xD04(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        VerticalPitchMaxAbove;                             // 0xD08(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        VerticalPitchTileRange;                            // 0xD0C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortFootstepAudioBank");
		return Clss;
	}

	class USoundBase* GetSoundAsset(bool bIsLocal, enum class EFortFootstepAudioType StepType, enum class EFortFootstepSurfaceType SurfaceType, enum class EFortFootstepPosition StepPosition);
	float GetFootstepVolumeMultiplier(bool bIsLocal, bool bApplyTeammateVolume, enum class EFortFootstepAudioType StepType);
	class USoundAttenuation* GetAttenuationAsset(bool bIsLocal, enum class EFortFootstepAudioType StepType, enum class EFortFootstepPosition StepPosition);
};

// 0x8 (0x338 - 0x330)
// Class FortniteGame.FortForcedLODZone
class AFortForcedLODZone : public AActor
{
public:
	enum class EFortAILODLevel                   ForcedLODLevel;                                    // 0x330(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1A5A[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortForcedLODZone");
		return Clss;
	}

};

// 0x5D0 (0x2A50 - 0x2480)
// Class FortniteGame.FortPlayerCameraBase
class AFortPlayerCameraBase : public APlayerCameraManager
{
public:
	//TArray<struct FActiveFortCamera>           CameraBlendStack;                                  // 0x2478(0x10)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_1A5B[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FFortCameraInstanceEntry>      CameraInstances;                                   // 0x2488(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	TSubclassOf<class UFortCameraMode>           CurrentAbilitySpecifiedCameraClass;                // 0x2498(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGameplayAbilitySpecHandle            AbilitySpecForCameraClassRequest;                  // 0x24A0(0x4)(Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1A5C[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class UFortCameraMode>           Base3PClass;                                       // 0x24A8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UFortCameraMode>           Targeting3PClass;                                  // 0x24B0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UFortCameraMode>           OverrideCameraClass;                               // 0x24B8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UFortCinematicCamera>      CinematicCameraClass;                              // 0x24C0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UFortCameraMode>           DBNOCameraClass;                                   // 0x24C8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UFortCameraMode>           DeathCameraClass;                                  // 0x24D0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UFortCameraMode>           SkydiveGlideCameraClass;                           // 0x24D8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UFortCameraMode>           SkydiveDiveCameraClass;                            // 0x24E0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UFortCameraMode>           SkydiveParachuteCameraClass;                       // 0x24E8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UFortCameraMode>           HoverboardCameraClass;                             // 0x24F0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FFortCameraPrototype>          CameraPrototypes;                                  // 0x24F8(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	class APostProcessVolume*                    ZoomPostProcessVolume;                             // 0x2508(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1A5D[0x540];                                   // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortPlayerCameraBase");
		return Clss;
	}

};

// 0xE0 (0x2B30 - 0x2A50)
// Class FortniteGame.FortFrontEndCameraManager
class AFortFrontEndCameraManager : public AFortPlayerCameraBase
{
public:
	enum class EFrontEndCamera                   CurrentCamera;                                     // 0x2A50(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1A5E[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AFrontEndSettings*                     FrontEndSettings;                                  // 0x2A58(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1A5F[0xD0];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortFrontEndCameraManager");
		return Clss;
	}

	void SetZoomLevel(float ZoomLevel);
	void SetFrameTarget(UInterfaceProperty_& FrameTarget);
	void SetCustomCameraRotationOffset(const struct FRotator& Offset);
	void SetCameraFrame(UInterfaceProperty_ NewFrame);
	void SetCamera(enum class EFrontEndCamera NewCamera);
	void HandleCameraFrameTargetSettingsChanged(UInterfaceProperty_ FrameTarget);
	float GetZoomLevel();
	class AFortCameraBase* GetCameraActor();
	enum class EFrontEndCamera GetCamera();
};

// 0x0 (0x28 - 0x28)
// Class FortniteGame.FortFrontendItemViewSettingsManager
class UFortFrontendItemViewSettingsManager : public UObject
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortFrontendItemViewSettingsManager");
		return Clss;
	}

	struct FFortItemViewSettings GetItemViewSettings(enum class EFrontEndCamera Camera, enum class ESubGame GameMode, class UFortItemDefinition* ItemDefinition);
};

// 0x148 (0x480 - 0x338)
// Class FortniteGame.FortFXManager
class AFortFXManager : public AFortClientOnlyActor
{
public:
	TArray<struct FFortSplineMeshAnimSet>        SplineAnimSets;                                    // 0x338(0x10)(ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	TArray<struct FFortMIDAnimSet>               MIDAnimSets;                                       // 0x348(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	TArray<struct FFortParticleAnimSet>          ParticleAnimSets;                                  // 0x358(0x10)(ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	TArray<struct FFortLightAnimSet>             LightAnimSets;                                     // 0x368(0x10)(ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	TArray<class AFortWeaponRanged*>             PendingWeaponFX;                                   // 0x378(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1A71[0xF8];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortFXManager");
		return Clss;
	}

	class AActor* SpawnPooledFXActor(class UObject* WorldContextObject, TSubclassOf<class AActor> FXActorClass, struct FTransform& SpawnTransform);
	void ReturnPickupStretchMIDToPool(class AFortPickupEffect* PickupObject, class UPrimitiveComponent* Component, int32 ElementIndex);
	void ReturnFXActorToPool(class UObject* WorldContextObject, class AActor* FXActor);
	void RemoveSplineMeshAnimations(class UObject* WorldContextObject, class USplineMeshComponent* SplineMesh);
	void RemoveParticleAnimations(class UObject* WorldContextObject, class UParticleSystemComponent* ParticleSystemComp);
	void RemoveMIDAnimations(class UObject* WorldContextObject, class UMaterialInstanceDynamic* Mid);
	void RemoveLightAnimations(class UObject* WorldContextObject, class ULightComponent* LightComp);
	class UMaterialInstanceDynamic* GetPickupStretchMIDFromPool(class AFortPickupEffect* PickupObject, class UMaterialInterface* SourceMaterial, class UPrimitiveComponent* Component, int32 ElementIndex, bool* bNeedsToBeInitialized);
	class UMaterialInstanceDynamic* GetPickupRarityMID(class AFortPickupEffect* PickupObject, class UPrimitiveComponent* Component, int32 ElementIndex, int32 Rarity, bool* bNeedsToBeInitialized);
	void AddSplineMeshSnapAnimation(class UObject* WorldContextObject, TArray<class USplineMeshComponent*>& SplineMeshes, class USplineComponent* TargetSpline, class UCurveFloat* GrowthCurve, float Duration, bool bPlayGrowthReverse);
	void AddSplineMeshScaleAnimation(class UObject* WorldContextObject, class USplineMeshComponent* SplineMesh, float StartScaleStart, float StartScaleEnd, float EndScaleStart, float EndScaleEnd, class UCurveFloat* LerpCurve, bool bOneMinusLerpValue, float Duration, bool bPlayReverse);
	void AddParticleAnimationFloat(class UObject* WorldContextObject, class UParticleSystemComponent* ParticleSystemComp, class FName ParamName, float StartValue, float EndValue, class UCurveFloat* LerpCurve, bool bOneMinusLerpValue, float Duration, bool bPlayReverse);
	void AddMIDAnimationFloat(class UObject* WorldContextObject, class UMaterialInstanceDynamic* Mid, class FName ParamName, float StartValue, float EndValue, class UCurveFloat* LerpCurve, bool bOneMinusLerpValue, float Duration, bool bPlayReverse);
	void AddMIDAnimationColorCurve(class UObject* WorldContextObject, class UMaterialInstanceDynamic* Mid, class FName ParamName, class UCurveLinearColor* ColorCurve, float Duration, bool bPlayReverse);
	void AddMIDAnimationColor(class UObject* WorldContextObject, class UMaterialInstanceDynamic* Mid, class FName ParamName, struct FLinearColor& StartValue, struct FLinearColor& EndValue, class UCurveFloat* LerpCurve, bool bOneMinusLerpValue, float Duration, bool bPlayReverse);
	void AddLightAnimationIntensity(class UObject* WorldContextObject, class ULightComponent* LightComp, float StartValue, float EndValue, class UCurveFloat* LerpCurve, bool bOneMinusLerpValue, float Duration, bool bPlayReverse);
};

// 0x20 (0xBE0 - 0xBC0)
// Class FortniteGame.FortFXSkeletonMeshComponent
class UFortFXSkeletonMeshComponent : public USkeletalMeshComponent
{
public:
	float                                        AwakenFadeInTime;                                  // 0xBC0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AwakenDuration;                                    // 0xBC4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AwakenFadeOutTime;                                 // 0xBC8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BuildingHitFadeInTime;                             // 0xBCC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BuildingHitDuration;                               // 0xBD0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BuildingHitFadeOutTime;                            // 0xBD4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USkeletalMeshComponent*                SourceMeshComponent;                               // 0xBD8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortFXSkeletonMeshComponent");
		return Clss;
	}

	void SetSource(class USkeletalMeshComponent* InMeshComponent);
};

// 0x20 (0x630 - 0x610)
// Class FortniteGame.FortFXStaticMeshComponent
class UFortFXStaticMeshComponent : public UStaticMeshComponent
{
public:
	//float                                      AwakenFadeInTime;                                  // 0x608(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	//float                                      AwakenDuration;                                    // 0x60C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AwakenFadeOutTime;                                 // 0x610(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BuildingHitFadeInTime;                             // 0x614(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BuildingHitDuration;                               // 0x618(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BuildingHitFadeOutTime;                            // 0x61C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMeshComponent*                  SourceMeshComponent;                               // 0x620(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1A72[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortFXStaticMeshComponent");
		return Clss;
	}

	void SetSource(class UStaticMeshComponent* InMeshComponent);
};

// 0x0 (0x90 - 0x90)
// Class FortniteGame.FortGadgetItemDefinitionTooltip
class UFortGadgetItemDefinitionTooltip : public UFortWorldItemDefinitionTooltip
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortGadgetItemDefinitionTooltip");
		return Clss;
	}

};

// 0x0 (0x90 - 0x90)
// Class FortniteGame.FortGadgetItemTooltip
class UFortGadgetItemTooltip : public UFortWorldItemTooltip
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortGadgetItemTooltip");
		return Clss;
	}

};

// 0x43F0 (0x4420 - 0x30)
// Class FortniteGame.FortGameData
class UFortGameData : public UPrimaryDataAsset
{
public:
	class FText                                  DefaultHeroName;                                   // 0x30(0x18)(Edit, NativeAccessSpecifierPublic)
	float                                        PickupSplineOffsetRange;                           // 0x48(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1A73[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        PickupSplineRandomMax;                             // 0x50(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PickupSplineDropToGroundLength;                    // 0x54(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PickupMaxCollectionTime;                           // 0x58(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PickupMaxDelayPerItem;                             // 0x5C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FQuickBarData                         QuickBarDefinitions;                               // 0x60(0x10)(Edit, NativeAccessSpecifierPublic)
	uint8                                        Pad_1A74[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class FName>                          AutoEquipTags;                                     // 0x80(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                 AutoEquipTagContainer;                             // 0x90(0x20)(Edit, NativeAccessSpecifierPublic)
	struct FLinearColor                          BuildingFullHealthFlashColor;                      // 0xB0(0x10)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          InvalidEditPatternColor;                           // 0xC0(0x10)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFortHighlightColorsContainer         HighlightColors;                                   // 0xD0(0x60)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_1A75[0x120];                                   // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        ScoreDisplayFactor;                                // 0x250(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1A76[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FFortReplicatedStatMapping>    StatMappings;                                      // 0x258(0x10)(Edit, EditFixedSize, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	int32                                        ScoreDivisor;                                      // 0x268(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        XPMult;                                            // 0x26C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        GroupScoreRates;                                   // 0x270(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1A77[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        ScoreToXPLinearRate;                               // 0x284(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        LinearEnd;                                         // 0x288(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        XpPerAccountLevel;                                 // 0x28C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CriticalMatch_XpBonusPercent;                      // 0x290(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PersonalBoost_XpBonusPercent;                      // 0x294(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        GroupBoost_XpBonusPercent;                         // 0x298(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        GroupBoost_BuffMultiplier;                         // 0x29C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Rest_XpBonusPercent;                               // 0x2A0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1A78[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FKeybindIcon>                  IconKeyList;                                       // 0x2A8(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<struct FKeybindIcon>                  IconKeyListPS4;                                    // 0x2B8(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<struct FKeybindIcon>                  IconKeyListXboxOne;                                // 0x2C8(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FVector                               MobileInteractionIconScale;                        // 0x2D8(0xC)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          MobileRarityColor;                                 // 0x2E4(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1A79[0x94];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FCurveTableRowHandle                  CritRatingTable;                                   // 0x388(0x10)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FCurveTableRowHandle                  ArmorToDamageResistanceTable;                      // 0x398(0x10)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LowXpConningValue;                                 // 0x3A8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        VeryLowXpConningValue;                             // 0x3AC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        NoXpConningValue;                                  // 0x3B0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1A7A[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  FullXpConningMsg;                                  // 0x3B8(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  LowXpConningMsg;                                   // 0x3D0(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  VeryLowXpConningMsg;                               // 0x3E8(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  NoXpConningMsg;                                    // 0x400(0x18)(Edit, NativeAccessSpecifierPublic)
	int32                                        MaxCraftQueueSize;                                 // 0x418(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DefaultLootInstancingRange;                        // 0x41C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FFortQuestPackInfo>            QuestPackInfos;                                    // 0x420(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	struct FDataTableRowHandle                   OnboardingCompleteZoneObjective;                   // 0x430(0x10)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                 DamageDoneTargetQuest_AllowedTags;                 // 0x440(0x20)(Edit, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                 DamageDoneQuest_AllowedTags;                       // 0x460(0x20)(Edit, NativeAccessSpecifierPublic)
	struct FConditionalFoundationQuota           ConditionalFoundationQuota;                        // 0x480(0x10)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FCurveTableRowHandle                  PowerPointToRatingConversion;                      // 0x490(0x10)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFortQuestMapDataEntry                CampaignQuestMapData;                              // 0x4A0(0x10)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FFortEventQuestMapDataEntry           EventQuestMapData;                                 // 0x4B0(0x40)(Edit, NativeAccessSpecifierPublic)
	struct FDataTableRowHandle                   EventMovieQuestObjective;                          // 0x4F0(0x10)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	bool                                         bUseSpecialEventsCamera;                           // 0x500(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1A7B[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FSettingsHUDVisibilityAndText> HUDVisibilityGameplayTags;                         // 0x508(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FDataTableRowHandle                   GameDifficultyRowPIE;                              // 0x518(0x10)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	int32                                        AIDirectorIndex;                                   // 0x528(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        AlternateBalanceAIDirectorIndex;                   // 0x52C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FItemDefinitionAndCount>       DefaultInventoryList;                              // 0x530(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FItemDefinitionAndCount>       FastLoadDefaultInventoryList;                      // 0x540(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	float                                        SquadMemberStatBonusMultiplier;                    // 0x550(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1A7C[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FUISoundFeedback                      FriendFeedbackSounds;                              // 0x558(0x28)(Edit, NativeAccessSpecifierPublic)
	uint8                                        Pad_1A7D[0x50];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FUISoundFeedback                      FriendFeedbackSoundsAthena;                        // 0x5D0(0x28)(Edit, NativeAccessSpecifierPublic)
	uint8                                        Pad_1A7E[0x50];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FUISoundFeedback                      PartyFeedbackSounds;                               // 0x648(0x28)(Edit, NativeAccessSpecifierPublic)
	uint8                                        Pad_1A7F[0x28];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FUISoundFeedback                      PartyFeedbackSoundsAthena;                         // 0x698(0x28)(Edit, NativeAccessSpecifierPublic)
	uint8                                        Pad_1A80[0x28];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGameplayTag                          ExpeditionUnlockedTag;                             // 0x6E8(0x8)(Edit, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                 ExpeditionVehicleTags;                             // 0x6F0(0x20)(Edit, EditConst, NativeAccessSpecifierPublic)
	int32                                        DailyMissionAlertQuota;                            // 0x710(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1A81[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FOnlineAccountTexts                   OnlineAccountTexts;                                // 0x718(0x978)(Edit, NativeAccessSpecifierPublic)
	TArray<class FName>                          ServerOnlyAssetTypes;                              // 0x1090(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UFortLoadingConfig>     LoadingConfig;                                     // 0x10A0(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class UFortAIEncounterInfo>    TestEncounter;                                     // 0x10C8(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftClassPtr<class AFortGameModeAthena>     GameModeAthenaClass;                               // 0x10F0(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftClassPtr<class UFortPlaylistManager>    PlaylistManagerClass;                              // 0x1118(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftClassPtr<class AFortCombatManager>      CombatManager;                                     // 0x1140(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftClassPtr<class APlayerCameraManager>    DefaultCameraManager;                              // 0x1168(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftClassPtr<class AFortInGameMapManager>   UIMapManager;                                      // 0x1190(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftClassPtr<class AFortInGameMapManager>   UIMapManagerAthena;                                // 0x11B8(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftClassPtr<class AFortMusicManager>       MusicManager;                                      // 0x11E0(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class UFortMusicManagerBank>  MusicManagerBank;                                  // 0x1208(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class UAthenaGliderItemDefinition> DefaultGliderSkin;                                 // 0x1230(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class UAthenaPickaxeItemDefinition> DefaultPickaxeSkin;                                // 0x1258(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class UFortAnalyticsData>     AnalyticsData;                                     // 0x1280(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class UFortAnalyticsItemExclusions> StWAnalyticsItemExclusionData;                     // 0x12A8(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class UFortAnalyticsItemExclusions> BRAnalyticsItemExclusionData;                      // 0x12D0(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class UFortGameplayTagData>   GameplayTagData;                                   // 0x12F8(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class UFortTooltipMap>        ObjClassToTooltipClassMap;                         // 0x1320(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftClassPtr<class AFortAIPawn>             DefaultDamageReceiverClass;                        // 0x1348(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftClassPtr<class AFortPawn>               DefaultDamageReceiverClassAthena;                  // 0x1370(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class UFortTokenToTextTable>  TooltipTokenToTextTable;                           // 0x1398(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class UFortTokenToAttributeTable> TooltipTokenToAttributeTable;                      // 0x13C0(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class UCurveVector>           PickupSplineCurve;                                 // 0x13E8(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class USoundBase>             PickupLandedSound;                                 // 0x1410(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class UFortTokenType>         AccountInventoryBonusToken;                        // 0x1438(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class UFortTokenType>         WorldInventoryBonusToken;                          // 0x1460(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class UFortTokenType>         FounderChatUnlockToken;                            // 0x1488(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class UFortRarityData>        RarityData;                                        // 0x14B0(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class UFortScoreStylingData>  ScoreStylingData;                                  // 0x14D8(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class UFortItemCategory>      ItemCategories;                                    // 0x1500(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class UDataTable>             ScoreMultiplierDataTable;                          // 0x1528(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftClassPtr<class UFortAppActivationSoundMixManager> AppActivationSoundMixManager;                      // 0x1550(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class USoundMix>              LoadingScreenSoundMix;                             // 0x1578(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class USoundMix>              BaseSoundMix;                                      // 0x15A0(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftClassPtr<class AFortGlobalAbilityTargetingActor> AbilityTargetingActorBlueprintClass;               // 0x15C8(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<TSoftObjectPtr<class UFortWeaponMeleeItemDefinition>> HarvestingTools;                                   // 0x15F0(0x10)(Edit, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class UMaterialInterface>     MobileInteractionMaterial;                         // 0x1600(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class UStaticMesh>            MobileInteractionMesh;                             // 0x1628(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class UTexture2D>             MobileInteractionIcons;                            // 0x1650(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1A82[0x78];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FSubGameInfo                          SubGameInfo;                                       // 0x16F0(0x10)(Edit, NoDestructor, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1A83[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGameplayTagContainer                 PlacementActorUsedTags;                            // 0x1710(0x20)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FFortPlayerSpawnPadPlacementData      DefaultPlayerSpawnPadPlacementData;                // 0x1730(0x58)(Edit, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class UCustomCharacterPart>   DefaultBackpackCharacterPart;                      // 0x1788(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<TSoftObjectPtr<class UCustomCharacterPart>> DefaultCharacterParts;                             // 0x17B0(0x10)(Edit, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPrivate)
	TArray<struct FDefaultCharacterPartsForPawnClass> DefaultCharacterPartOverridesPerPawnClass;         // 0x17C0(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	TSoftClassPtr<class AFortAIGoalManager>      AIGoalManagerClass;                                // 0x17D0(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftClassPtr<class UFortSharedMissionLists> SharedMissionListsClass;                           // 0x17F8(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        QueuedAnnouncementPauseTimes;                      // 0x1820(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1A84[0xC];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FCurveTableRowHandle                  WeakSpotEnabledTimeoutHandle;                      // 0x1830(0x10)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        BuildingStructuralCollapseDelay;                   // 0x1840(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        BuildingStructuralCollapseDelayVariance;           // 0x1844(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        BuildingStructuralCollapseCellDistAdditiveDelay;   // 0x1848(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        BuildingStructuralCollapseCellDistAdditiveDelayVariance; // 0x184C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        EditModeCancelDistance;                            // 0x1850(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1A85[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FCurveTableRowHandle                  BuildingExcessDamageRewardTimeoutHandle;           // 0x1858(0x10)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FCurveTableRowHandle                  BuildingCostHandles;                               // 0x1868(0x10)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1A86[0x30];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FCurveTableRowHandle                  BuildingDeconCostMultHandles;                      // 0x18A8(0x10)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1A87[0x30];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FCurveTableRowHandle                  PlayerBuildingDeconCostMultHandles;                // 0x18E8(0x10)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1A88[0x30];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FCurveTableRowHandle                  BuildingInitialHealthPercentHandles;               // 0x1928(0x10)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1A89[0x30];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FCurveTableRowHandle                  AthenaBuildingInitialHealthPercentHandles;         // 0x1968(0x10)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1A8A[0x30];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FCurveTableRowHandle                  AthenaBuildingDropPercentHandles;                  // 0x19A8(0x10)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1A8B[0x30];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FCurveTableRowHandle                  BuildingRepairCostMultiplierHandles;               // 0x19E8(0x10)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1A8C[0x30];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        FORTAttributeToPowerMultiplier;                    // 0x1A28(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1A8D[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FCurveTableRowHandle                  BuildingBreakAnimDurationHandles;                  // 0x1A30(0x10)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1A8E[0x30];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FCurveTableRowHandle                  BuildingDestroyAnimDurationHandles;                // 0x1A70(0x10)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1A8F[0x30];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FCurveTableRowHandle                  BuildingPlacementAnimDurationHandles;              // 0x1AB0(0x10)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1A90[0x30];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FCurveTableRowHandle                  BuildingCritDamagePctHandles;                      // 0x1AF0(0x10)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1A91[0x30];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FCurveTableRowHandle                  BuildingCritDestroyAnimScaleCapHandles;            // 0x1B30(0x10)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1A92[0x30];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftObjectPtr<class UMaterialParameterCollection> StencilDefinitionCollection;                       // 0x1B70(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class UFortBuildingAudioBank> BuildingAudioBank;                                 // 0x1B98(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FText                                  ResourceNames;                                     // 0x1BC0(0x18)(NativeAccessSpecifierPrivate)
	uint8                                        Pad_1A93[0x48];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  BuildingTypeNames;                                 // 0x1C20(0x18)(NativeAccessSpecifierPrivate)
	uint8                                        Pad_1A94[0x108];                                   // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftObjectPtr<class UFortResourceItemDefinition> StoneItemDefinition;                               // 0x1D40(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class UFortResourceItemDefinition> WoodItemDefinition;                                // 0x1D68(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class UFortResourceItemDefinition> MetalItemDefinition;                               // 0x1D90(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class UFortAmmoItemDefinition> PistolAmmoItemDefinition;                          // 0x1DB8(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class UFortResourceItemDefinition> PermaniteItemDefinition;                           // 0x1DE0(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class UFortAmmoItemDefinition> ShotgunAmmoItemDefinition;                         // 0x1E08(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class UFortAmmoItemDefinition> RifleAmmoItemDefinition;                           // 0x1E30(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class UFortAmmoItemDefinition> AssaultAmmoItemDefinition;                         // 0x1E58(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class UFortAmmoItemDefinition> EnergyAmmoItemDefinition;                          // 0x1E80(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class UFortNeverPersistItemDefinition> BluGloItemDefinition;                              // 0x1EA8(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class UFortItemDefinition>    CriticalMissionRewardItemDefinition;               // 0x1ED0(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class UFortItemDefinition>    ScoreBonusMultiplerItemDefinition;                 // 0x1EF8(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class UFortItemDefinition>    GenericCampaignEventCurrency;                      // 0x1F20(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class UFortWorldItemDefinition> BackpackItemDefinition;                            // 0x1F48(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class UFortWorldItemDefinition> MissionRewardPackItemDefinition;                   // 0x1F70(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FText                                  OutpostRefundDialogTitle;                          // 0x1F98(0x18)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	class FText                                  OutpostRefundDialogText;                           // 0x1FB0(0x18)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	class FText                                  OutpostRefundButtonText;                           // 0x1FC8(0x18)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class UFortInputData>         FortInputData;                                     // 0x1FE0(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class UFortTimeOfDayData>     FortTimeOfDayData;                                 // 0x2008(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class UFortMissionCSVEventMap> MissionCSVEventMap;                                // 0x2030(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class UFortHeroData>          FortHeroData;                                      // 0x2058(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class UFortGamepadSettings>   GamepadSettingsDefault;                            // 0x2080(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class UFortGamepadSettings>   GamepadSettingsPS4;                                // 0x20A8(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class UFortGamepadSettings>   GamepadSettingsXboxOne;                            // 0x20D0(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class UFortGamepadSettings>   GamepadSettingsSwitch;                             // 0x20F8(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class UFortTouchInputSettings> TouchInputSettings;                                // 0x2120(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class UDataTable>             AlterationMigrationMapping;                        // 0x2148(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class UDataTable>             AlterationIntrinsicMapping;                        // 0x2170(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class UDataTable>             AlterationNamedExclusions;                         // 0x2198(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class UDataTable>             AlterationGroups;                                  // 0x21C0(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class UDataTable>             AlterationSlotDefinitions;                         // 0x21E8(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class UDataTable>             AlterationSlotsLoadouts;                           // 0x2210(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<TSoftObjectPtr<class UDataTable>>     LootTierDataTables;                                // 0x2238(0x10)(Edit, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPrivate)
	TArray<TSoftObjectPtr<class UDataTable>>     LootPackageDataTables;                             // 0x2248(0x10)(Edit, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class UDataTable>             WaveSetCollectionData;                             // 0x2258(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class UDataTable>             WaveSetData;                                       // 0x2280(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class UDataTable>             ModifierSetData;                                   // 0x22A8(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class UDataTable>             WaveSetCollectionLootData;                         // 0x22D0(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class UDataTable>             PlayerStatClampingData;                            // 0x22F8(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGameplayTagContainer                 NonGameplayRelevantTags;                           // 0x2320(0x20)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class UCurveTable>            CraftingTimeTable;                                 // 0x2340(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class USoundBase>             DefaultCraftingSuccessSound;                       // 0x2368(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftClassPtr<class UGameplayEffect>         TeamStatsGameplayEffect;                           // 0x2390(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class UFortDailyRewardScheduleDefinitions> DailyRewardSchedules;                              // 0x23B8(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class UDataTable>             ExpeditionCriteriaRequirementsData;                // 0x23E0(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class UDataTable>             DifficultyData;                                    // 0x2408(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class UDataTable>             LootQuotaData;                                     // 0x2430(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class UDataTable>             LootLevelData;                                     // 0x2458(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class UDataTable>             TagQueryTable;                                     // 0x2480(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1A95[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftObjectPtr<class UDataTable>             SurfaceRatioBySurfaceCategoryData;                 // 0x24B0(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class UDataTable>             SurfaceRatioByAffiliationData;                     // 0x24D8(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class UDataTable>             QuestObjectiveStatData;                            // 0x2500(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class UDataTable>             XPAccountLevelsTable;                              // 0x2528(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class UDataTable>             PostMaxAccountLevelRewardsTable;                   // 0x2550(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class UCurveTable>            XPAccountItemLevelsTable;                          // 0x2578(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class UCurveTable>            XPAccountItemRewardsTable;                         // 0x25A0(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class UCurveTable>            XPConningTable;                                    // 0x25C8(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftClassPtr<class UFortTeamIdentification> TeamIdentifications;                               // 0x25F0(0x28)(Edit, EditFixedSize, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1A96[0x1018];                                  // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftObjectPtr<class UFortQuestItemDefinition> OnboardingQuestItemDefinition;                     // 0x3630(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class UFortQuestItemDefinition> ManualSurvivorSlottingQuestItemDefinition;         // 0x3658(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FPartnerPcbInfo>               PartnerCafeBundleMapping;                          // 0x3680(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class UDataTable>             QuestAchievementData;                              // 0x3690(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class UFortItemDefinition>    SkillPointItemDef;                                 // 0x36B8(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class UFortItemDefinition>    ResearchPointItemDef;                              // 0x36E0(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class UDataTable>             StatNamesToTrackTable;                             // 0x3708(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class UFortMissionGenerationData> MissionGenerationData;                             // 0x3730(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<TSoftObjectPtr<class UFortWorldItemDefinition>> CheatInventoryItems;                               // 0x3758(0x10)(Edit, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPrivate)
	TSoftClassPtr<class AFortTheaterMapViewer>   TheaterMapViewerClass;                             // 0x3768(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class UDataTable>             MissionAlertCategories;                            // 0x3790(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class UMyTownData>            MyFortData;                                        // 0x37B8(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class UFortHomebaseManager>   HomebaseManager;                                   // 0x37E0(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class UFortCollectionBookData> CollectionBookData;                                // 0x3808(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class UFortSurvivorData>      SurvivorData;                                      // 0x3830(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class UFortOutpostData>       OutpostData;                                       // 0x3858(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class UFortAttributeLookupTable> AttributeLookupTable;                              // 0x3880(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class UFortAttributeCategory> AttributeCategories;                               // 0x38A8(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class UFortTagUIDataLookupTable> UITagDataTable;                                    // 0x38D0(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class UFortQuestItemDefinition> EventMovieQuestItemDefinition;                     // 0x38F8(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftClassPtr<class AFortDamageNumbersActor> DamageNumbersActorClass;                           // 0x3920(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftClassPtr<class ABuildingWeakSpot>       WeakSpotBlueprintClass;                            // 0x3948(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class UPhysicalMaterial>      WeakSpotWoodPhysicalMaterial;                      // 0x3970(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class UPhysicalMaterial>      WeakSpotStonePhysicalMaterial;                     // 0x3998(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class UPhysicalMaterial>      WeakSpotMetalPhysicalMaterial;                     // 0x39C0(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftClassPtr<class AFortPickupEffect>       PickupEffectBlueprintClass;                        // 0x39E8(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<TSoftClassPtr<class AFortAIDirector>> AIDirectors;                                       // 0x3A10(0x10)(Edit, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPrivate)
	TSoftClassPtr<class AFortFeedbackManager>    FeedbackManagerClass;                              // 0x3A20(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftClassPtr<class AFortFeedbackManager>    FeedbackManagerClassAthena;                        // 0x3A48(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftClassPtr<class AFortBluGloManager>      BluGloManagerClass;                                // 0x3A70(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class UFortUIFeedbackBank>    UIFeedbackBank;                                    // 0x3A98(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class UFortUIFeedbackBank>    AthenaUIFeedbackBank;                              // 0x3AC0(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class UGameplayTagTableManager> TagTableManager;                                   // 0x3AE8(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftClassPtr<class UFortStatEventManager>   StatEventManagerClass;                             // 0x3B10(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class UFortHeroType>          DefaultHero;                                       // 0x3B38(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class UFortHeroType>          DefaultAthenaHero;                                 // 0x3B60(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftClassPtr<class AFortThreatVisualsManager> ThreatVisualsManager;                              // 0x3B88(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftClassPtr<class AFortWindManager>        WindManager;                                       // 0x3BB0(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class UFortEditToolItemDefinition> EditToolItem;                                      // 0x3BD8(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class UFortAbilitySet>        GenericPlayerAbilitySet;                           // 0x3C00(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class UFortAbilitySet>        GenericTrapAbilitySet;                             // 0x3C28(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class UFortAbilitySet>        GenericVehicleAbilitySet;                          // 0x3C50(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class UFortAbilityTagRelationshipMapping> AbilityTagRelationshipMapping;                     // 0x3C78(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class UFortDeathCauseFromTagMapping> FortDeathCauseFromTagMapping;                      // 0x3CA0(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class UFortSurfaceTypeToSurfaceTypeTagMapping> SurfaceTypeToSurfaceTypeTagMapping;                // 0x3CC8(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftClassPtr<class UGameplayEffect>         EnvironmentDamageTemplateGE;                       // 0x3CF0(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftClassPtr<class UGameplayEffect>         FallingDamageTemplateGE;                           // 0x3D18(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftClassPtr<class UGameplayEffect>         VehicleImpactDamageTemplateGE;                     // 0x3D40(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftClassPtr<class UGameplayEffect>         HealingTemplateGE;                                 // 0x3D68(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftClassPtr<class UGameplayEffect>         FatalDamageTemplateGE;                             // 0x3D90(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftClassPtr<class UGameplayEffect>         SquadMemberStatBonusGE;                            // 0x3DB8(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftClassPtr<class UGameplayEffect>         TeamTrapBonusGE;                                   // 0x3DE0(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftClassPtr<class AFortConstructorBASE>    BASEClass;                                         // 0x3E08(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftClassPtr<class UFortGameplayAbility>    EmoteGameplayAbility;                              // 0x3E30(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftClassPtr<class UFortGameplayAbility>    SprayGameplayAbility;                              // 0x3E58(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftClassPtr<class UFortNotificationHandler> QuestNotificationHandlerClass;                     // 0x3E80(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftClassPtr<class UFortUINotification>     BasicNotificationClass;                            // 0x3EA8(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftClassPtr<class UFortUINotification>     FriendNotificationClass;                           // 0x3ED0(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftClassPtr<class UFortUINotification>     TwitchNotificationClass;                           // 0x3EF8(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftClassPtr<class UFortUINotification>     MissionVoteNotificationClass;                      // 0x3F20(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class UMaterialInterface>     HealthScreenDamagePostProcessMat;                  // 0x3F48(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftClassPtr<class AFortClientAnnouncement_ZoneModifiers> ZoneModifiersAnnouncementClass;                    // 0x3F70(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class UCurveTable>            SessionXPCurveTable;                               // 0x3F98(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class UCurveTable>            TieredWavesDefenseReqTable;                        // 0x3FC0(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class UParticleSystem>        FallbackDeathParticles;                            // 0x3FE8(0x28)(Transient, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class UParticleSystem>        WallFallbackDeathParticles;                        // 0x4010(0x28)(Transient, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class UParticleSystem>        FallbackConstructedEffect;                         // 0x4038(0x28)(Transient, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class UParticleSystem>        RepairEffect;                                      // 0x4060(0x28)(Transient, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class USoundBase>             ConstructionCompleteSound;                         // 0x4088(0x28)(Transient, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class UMaterialInterface>     DamageMaterial;                                    // 0x40B0(0x28)(Transient, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class UCurveFloat>            BounceCurve;                                       // 0x40D8(0x28)(Transient, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class UMaterialInterface>     BlueprintParentMaterial;                           // 0x4100(0x28)(Transient, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class UCurveFloat>            EditCurve;                                         // 0x4128(0x28)(Transient, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class UCurveVector>           BlueprintDamageCurve;                              // 0x4150(0x28)(Transient, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class UCurveFloat>            FullHealthAnimCurve;                               // 0x4178(0x28)(Transient, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class UCurveFloat>            RepairAnimCurve;                                   // 0x41A0(0x28)(Transient, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class UCurveFloat>            DynamicLODEffectCurve;                             // 0x41C8(0x28)(Transient, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class UCurveFloat>            InteractFullBounceCurve;                           // 0x41F0(0x28)(Transient, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class UCurveFloat>            InteractFullBounceNormalCurve;                     // 0x4218(0x28)(Transient, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class UCurveFloat>            InteractEmptyBounceCurve;                          // 0x4240(0x28)(Transient, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class UCurveFloat>            InteractEmptyBounceNormalCurve;                    // 0x4268(0x28)(Transient, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftClassPtr<class UUserWidget>             ExpeditionMasterWidgetClass;                       // 0x4290(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class UDataTable>             BannerIconData;                                    // 0x42B8(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class UDataTable>             BannerIconCategoryData;                            // 0x42E0(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class UDataTable>             BannerColorData;                                   // 0x4308(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class UDataTable>             BannerColorCategoryData;                           // 0x4330(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class UFortHomebaseBannerColorMap> BannerColorMap;                                    // 0x4358(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class UFortHomebaseBannerIconItemDefinition> BannerIconItemDefinition;                          // 0x4380(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class UDataTable>             CreativeInventoryTable;                            // 0x43A8(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TMap<struct FPrimaryAssetId, int32>          CachedCreativeInventory;                           // 0x43D0(0x50)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortGameData");
		return Clss;
	}

	int32 GetXpPerAccountLevel();
	float GetTeamXpBoost();
	float GetPersonalXpBoost();
};

// 0x78 (0xA8 - 0x30)
// Class FortniteGame.FortGameDeathPenalty
class UFortGameDeathPenalty : public UDataAsset
{
public:
	float                                        PercentResourcesToDrop;                            // 0x30(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        PercentWeaponsToDrop;                              // 0x34(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        PercentCraftingIngredientsToDrop;                  // 0x38(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        PercentConsumablesToDrop;                          // 0x3C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        PercentAmmoToDrop;                                 // 0x40(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        PercentResourcesToRecover;                         // 0x44(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        PercentWeaponsToRecover;                           // 0x48(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        PercentCraftingIngredientsToRecover;               // 0x4C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        PercentConsumablesToRecover;                       // 0x50(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        PercentAmmoToRecover;                              // 0x54(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        MinResourcesToKeep;                                // 0x58(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        MinWeaponsToKeep;                                  // 0x5C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        MinCraftingIngredientsToKeep;                      // 0x60(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        MinConsumablesToKeep;                              // 0x64(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        MinAmmoToKeep;                                     // 0x68(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1A97[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FCurveTableRowHandle                  RespawnDelays;                                     // 0x70(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCurveFloat*                           RespawnDelayOverTime;                              // 0x80(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MaxRespawnDelay;                                   // 0x88(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MinSelfResurrectDelay;                             // 0x8C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bUseRegenHealthOnRespawn;                          // 0x90(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1A98[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        PercentHealthOnRespawn;                            // 0x94(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        PercentStaminaOnRespawn;                           // 0x98(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        RespawnDurabilityPenalty;                          // 0x9C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SelfResurrectDurabilityPenalty;                    // 0xA0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        TeammateResurrectDurabilityPenalty;                // 0xA4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortGameDeathPenalty");
		return Clss;
	}

};

// 0x540 (0x6A8 - 0x168)
// Class FortniteGame.FortGameInstance
class UFortGameInstance : public UGameInstance
{
public:
	uint8                                        Pad_1A99[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSet<class FName>                            EventFlagsForcedOnByHotfix;                        // 0x170(0x50)(ZeroConstructor, Config, NativeAccessSpecifierPublic)
	TSet<class FName>                            EventFlagsForcedOffByHotfix;                       // 0x1C0(0x50)(ZeroConstructor, Config, NativeAccessSpecifierPublic)
	TSet<class FString>                          CosmeticsBlacklistedByHotfix;                      // 0x210(0x50)(ZeroConstructor, Config, NativeAccessSpecifierPublic)
	bool                                         bBattleRoyaleMatchmakingEnabled;                   // 0x260(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bCreativeModeProfileEnabled;                       // 0x261(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1A9A[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FPlaylistOverrideData>         PlaylistOverrides;                                 // 0x268(0x10)(ZeroConstructor, Config, NativeAccessSpecifierPublic)
	TArray<struct FAudioDynamicSoundData>        DynamicSoundData;                                  // 0x278(0x10)(ZeroConstructor, Config, NativeAccessSpecifierPublic)
	TArray<struct FPlaylistFrontEndSettings>     FrontEndPlaylistData;                              // 0x288(0x10)(ZeroConstructor, Config, NativeAccessSpecifierPublic)
	struct FAthenaDataTableSet                   AthenaDataTables;                                  // 0x298(0x30)(NoDestructor, NativeAccessSpecifierPublic)
	bool                                         bOverridingCurrentEmoteMusicFFT;                   // 0x2C8(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1A9B[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        CurrentEmoteMusicFFT100hz;                         // 0x2CC(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CurrentEmoteMusicFFT2000hz;                        // 0x2D0(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        EmoteMusicEnvelopeBeatCount;                       // 0x2D4(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	UInterfaceProperty_                          UIManagerInterface;                                // 0x2D8(0x10)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, NativeAccessSpecifierPrivate)
	struct FSoftObjectPath                       UIManagerClassPath;                                // 0x2E8(0x18)(Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UMcpProfileManager*                    ProfileManager;                                    // 0x300(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1A9C[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UFortMatchmaking*                      Matchmaking;                                       // 0x318(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UFortMatchmakingV2*                    MatchmakingV2;                                     // 0x320(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UFortRejoinCheck*                      RejoinCheck;                                       // 0x328(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UFortSocialManager*                    SocialManager;                                     // 0x330(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UFortMatchAnalytics*                   MatchAnalytics;                                    // 0x338(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USidecarSys*                           SidecarSys;                                        // 0x340(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1A9D[0x1C8];                                   // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGuid                                 GlobalUnregistrationSaveGUID;                      // 0x510(0x10)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1A9E[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UFortTooltipManager*                   TooltipManager;                                    // 0x540(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1A9F[0x50];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UFortRegisteredPlayerInfo*>     RegisteredPlayers;                                 // 0x598(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1AA0[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UFortUpdateManager*                    UpdateManager;                                     // 0x5C0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UFortInteractabilityTracker*           InteractabilityTracker;                            // 0x5C8(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1AA1[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UFortChat*                             Chatroom;                                          // 0x5E0(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<TWeakObjectPtr<class UFortRegisteredPlayerInfo>> RegisteredPlayerInfosAwaitingRefresh;              // 0x5E8(0x10)(ZeroConstructor, Transient, UObjectWrapper, NativeAccessSpecifierPrivate)
	class FString                                LastGameHighlightGroupId;                          // 0x5F8(0x10)(ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1AA2[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UFortSeasonalEventManager*             SeasonalEventManager;                              // 0x628(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UFortTournamentManager*                TournamentManager;                                 // 0x630(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UFortPushNotificationManager*          MobilePushNotificationManager;                     // 0x638(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1AA3[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UFortMissionGenerator*                 CurrentMissionGenerator;                           // 0x648(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1AA4[0x50];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UFortAppActivationSoundMixManager*     AppActivationSoundMixManager;                      // 0x6A0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortGameInstance");
		return Clss;
	}

	void SetOverrideCurrentMusicFFT(float FFT100hz, float FFT2000hz);
	void ClearOverrideCurrentMusicFFT();
};

// 0x0 (0x418 - 0x418)
// Class FortniteGame.FortGameModeBase
class AFortGameModeBase : public AGameMode
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortGameModeBase");
		return Clss;
	}

};

// 0x2F0 (0x708 - 0x418)
// Class FortniteGame.FortGameMode
class AFortGameMode : public AFortGameModeBase
{
public:
	uint8                                        bDisableCloudStorage : 1;                          // Mask : 0x1 0x418(0x1)(Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bTravelInitiated : 1;                              // Mask : 0x2 0x418(0x1)(Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1AA5[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                CurrentWUID;                                       // 0x420(0x10)(ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                CurrentBucketId;                                   // 0x430(0x10)(ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        CurrentPlaylistId;                                 // 0x440(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  CurrentPlaylistName;                               // 0x444(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1AA6[0x24];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                MatchmakingRegionId;                               // 0x470(0x10)(ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                CurrentZoneInstanceId;                             // 0x480(0x10)(ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1AA7[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        ZoneIndex;                                         // 0x494(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bPlayersInvincible : 1;                            // Mask : 0x1 0x498(0x1)(Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1AA8[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bKickIdlers;                                       // 0x49C(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1AA9[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        MaxIdleTime;                                       // 0x4A0(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        NoScoreKickTime;                                   // 0x4A4(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnableNotifications;                              // 0x4A8(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnableReplicationGraph;                           // 0x4A9(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1AAA[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftObjectPtr<class UFortGameDeathPenalty>  DefaultDeathPenaltyData;                           // 0x4B0(0x28)(Transient, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UFortGameDeathPenalty*                 DeathPenaltyData;                                  // 0x4D8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AFortGameSession*                      FortGameSession;                                   // 0x4E0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                GameModeSessionString;                             // 0x4E8(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsAutomatedTest : 1;                              // Mask : 0x1 0x4F8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1AAB[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftClassPtr<class APawn>                   DefaultPawnClassStringRef;                         // 0x500(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class AFortMissionManager>       MissionManagerClass;                               // 0x528(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFortPlaylistManager*                  PlaylistManager;                                   // 0x530(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                 GameModeGameplayTags;                              // 0x538(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	uint8                                        Pad_1AAC[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bOverrideRotationOnRestartPlayer;                  // 0x568(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EFortGameplayState                PendingTimerState;                                 // 0x569(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1AAD[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bDBNOEnabled;                                      // 0x570(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1AAE[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	uint8                                        bWorldIsReady : 1;                                 // Mask : 0x1 0x574(0x1)(Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bTheaterDataIsReady : 1;                           // Mask : 0x2 0x574(0x1)(Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1AAF[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        TheaterSlot;                                       // 0x578(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        GameplayServerHitchThreshold;                      // 0x57C(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MovementTimeDiscrepancyHitchCooldown;              // 0x580(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        AbilityRefireHitchCooldown;                        // 0x584(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bCheckWeaponTracesForPlayerBuiltWalls;             // 0x588(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1AB0[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UMatchHeartbeatManager*                MatchHeartbeatManager;                             // 0x590(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UFortAwardItemDefinition*>      ActiveAwards;                                      // 0x598(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_1AB1[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGameplayTagContainer                 GameContextTags;                                   // 0x5B8(0x20)(Transient, Protected, NativeAccessSpecifierProtected)
	class UFortSharedMissionLists*               SharedMissionLists;                                // 0x5D8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1AB2[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class AFortTeamInfo>             TeamInfoClass;                                     // 0x5F0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<double>                               FrameTimeOvershootHistogramBucketsMs;              // 0x5F8(0x10)(ZeroConstructor, Config, Protected, NativeAccessSpecifierProtected)
	TArray<double>                               SleepTimeOvershootHistogramBucketsMs;              // 0x608(0x10)(ZeroConstructor, Config, Protected, NativeAccessSpecifierProtected)
	TArray<double>                               FrameTimeWithoutSleepHistogramBucketsMs;           // 0x618(0x10)(ZeroConstructor, Config, Protected, NativeAccessSpecifierProtected)
	TArray<struct FCumulativeFrameTimeWithoutSleepLimits> CumulativeFrameTimeWithoutSleepLimits;             // 0x628(0x10)(ZeroConstructor, Config, Protected, NativeAccessSpecifierProtected)
	TArray<double>                               GameNetDriverTickFlushTimeHistogramBucketsMs;      // 0x638(0x10)(ZeroConstructor, Config, Protected, NativeAccessSpecifierProtected)
	TArray<double>                               DemoNetDriverTickFlushTimeHistogramBucketsMs;      // 0x648(0x10)(ZeroConstructor, Config, Protected, NativeAccessSpecifierProtected)
	TArray<double>                               ActorsStarvedByClassTimeHistogramBuckets;          // 0x658(0x10)(ZeroConstructor, Config, Protected, NativeAccessSpecifierProtected)
	TArray<class FString>                        StarvedActorClassList;                             // 0x668(0x10)(ZeroConstructor, Config, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_1AB3[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class AFortMissionGenerationManager*         MissionGenerationManager;                          // 0x690(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1AB4[0x30];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bOverrideQuickBars;                                // 0x6C8(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1AB5[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FQuickBarData                         QuickBarDefinitions;                               // 0x6D0(0x10)(Edit, NativeAccessSpecifierPublic)
	uint8                                        Pad_1AB6[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class AFortPlayerControllerGameplay*> ConnectedPlayerControllers;                        // 0x6F8(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortGameMode");
		return Clss;
	}

	void OnEndOfDay();
	void DumpReservations();
};

// 0x0 (0x418 - 0x418)
// Class FortniteGame.FortGameModeArtAutomation
class AFortGameModeArtAutomation : public AFortGameModeBase
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortGameModeArtAutomation");
		return Clss;
	}

};

// 0x2F8 (0xA00 - 0x708)
// Class FortniteGame.FortGameModeZone
class AFortGameModeZone : public AFortGameMode
{
public:
	uint8                                        Pad_1AB7[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	UMulticastDelegateProperty_                  OnPlayerLogin;                                     // 0x728(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        bSpawnAllStuff : 1;                                // Mask : 0x1 0x738(0x1)(Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bDisableAI : 1;                                    // Mask : 0x2 0x738(0x1)(Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bInitBeaconAtInitGame : 1;                         // Mask : 0x4 0x738(0x1)(Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1AB8[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        OverrideAIDirectorIndex;                           // 0x73C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ABuildingSMActor*                      ActiveSpawnPad;                                    // 0x740(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1AB9[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bDisableVoiceChat;                                 // 0x760(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1ABA[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AFortAIDirector*                       AIDirector;                                        // 0x768(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AFortAIGoalManager*                    AIGoalManager;                                     // 0x770(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        EndOfZoneRemainTime;                               // 0x778(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1ABB[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UFortTaggedActorsManager*              TaggedActorsManager;                               // 0x780(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ABuildingConnectivityManager*          ConnectivityManager;                               // 0x788(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bUseAllSocketsInSpawnPad;                          // 0x790(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bAllowSpectateAfterDeath;                          // 0x791(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1ABC[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        SpectateAfterDeath_DelayFirst;                     // 0x794(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SpectateAfterDeath_DelayRepeating;                 // 0x798(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1ABD[0x54];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class AFortVisibilityManager>    VisibilityManagerClass;                            // 0x7F0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bCriticalMissionEligible;                          // 0x7F8(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1ABE[0x27];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UFortPetManager*                       PetManager;                                        // 0x820(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FItemAndCount>                 StartingItems;                                     // 0x828(0x10)(Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        bAllowEnemyAIWorldItemLootDrops : 1;               // Mask : 0x1 0x838(0x1)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bAllowEnemyAIItemCacheLootDrops : 1;               // Mask : 0x2 0x838(0x1)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bAllowContainerItemCacheLootDrops : 1;             // Mask : 0x4 0x838(0x1)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1ABF[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	UMulticastDelegateProperty_                  OnHandleZonePeriodicReport;                        // 0x840(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	UMulticastDelegateProperty_                  OnHandleMatchHasStarted;                           // 0x850(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	bool                                         bTrustXboxPlatformId;                              // 0x860(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class ESubGame                          AssociatedSubGame;                                 // 0x861(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1AC0[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FSlateBrush                           BluGloMiniMapIconBrushOverride;                    // 0x868(0x88)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_1AC1[0x88];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bTryToSpawnWithinStormShield;                      // 0x978(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1AC2[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        StormWindInactiveMagnitudeScalar;                  // 0x97C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        StormWindActiveMagnitudeScalar;                    // 0x980(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1AC3[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FVector>                       PlayerStartLocationOverrides;                      // 0x988(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1AC4[0x68];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortGameModeZone");
		return Clss;
	}

	void SetSpawnWithinStormShield(bool bSpawnInStormShield);
	void SetPlayerStartLocationOverrides(const TArray<struct FVector>& InPlayerStarts, class AFortMission* InMission);
	void SetJoinability(bool bMatchJoinable);
	void ReplicateHealthAndShield();
	void OnPlayerExit(class AActor* Controller);
	void OnMorningReached();
	void OnEveningReached();
	bool IsGameReadyToSelectLoot();
	class AFortPlayerStartupController* GetPlayerStartupController();
	void ClearPlayerStartLocationOverrides();
};

// 0x68 (0xA68 - 0xA00)
// Class FortniteGame.FortGamePvPBase
class AFortGamePvPBase : public AFortGameModeZone
{
public:
	uint8                                        NumTeams;                                          // 0xA00(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1AC5[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        RoundTimeLimit;                                    // 0xA04(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        RoundTimeRemainingCriticalThreshold;               // 0xA08(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        StalemateTimeLimit;                                // 0xA0C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        RestartTimeLimit;                                  // 0xA10(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        FOBFinalizationLimit;                              // 0xA14(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bUsingFOBs : 1;                                    // Mask : 0x1 0xA18(0x1)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bFOBInitRequested : 1;                             // Mask : 0x2 0xA18(0x1)(Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bAllFOBConfigActorsInitialized : 1;                // Mask : 0x4 0xA18(0x1)(Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bFinishedSpawningFOBConfigActors : 1;              // Mask : 0x8 0xA18(0x1)(Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1AC6[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        NumFOBConfigActorsPerTeam;                         // 0xA1C(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FTeamFOBRequiredTags>          FOBRequiredTags;                                   // 0xA20(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TSubclassOf<class ABuildingFOBConfigActor>   FOBConfigActorClass;                               // 0xA30(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FCachedPlayerFOBInformation>   CachedFOBInfo;                                     // 0xA38(0x10)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	TArray<class ABuildingFOBConfigActor*>       SpawnedFOBConfigActors;                            // 0xA48(0x10)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	TArray<class ABuildingFOBConfigActor*>       SpawnedFOBConfigActorsToFinalize;                  // 0xA58(0x10)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortGamePvPBase");
		return Clss;
	}

};

// 0x7A8 (0x1210 - 0xA68)
// Class FortniteGame.FortGameModeAthena
class AFortGameModeAthena : public AFortGamePvPBase
{
public:
	uint8                                        Pad_1AC9[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class AFortTeamPrivateInfo*>          SortedStormCapPrivateTeams;                        // 0xA80(0x10)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	float                                        DelayForStormCapWarning;                           // 0xA90(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DelayForStormCapDamage;                            // 0xA94(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1ACA[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        TimeBetweenStormCapDamage;                         // 0xA9C(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1ACB[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        StormCapDamagePerTick;                             // 0xAA4(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	UMulticastDelegateProperty_                  OnMapInfoInitialized;                              // 0xAA8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	bool                                         bMapInfoInitialized;                               // 0xAB8(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1ACC[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	UMulticastDelegateProperty_                  OnSafeZoneUpdated;                                 // 0xAC0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	bool                                         bAlwaysDBNO;                                       // 0xAD0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1ACD[0xF];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class ABuildingActor*>                ActorsToClear;                                     // 0xAE0(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<class AActor*>                        ClearAreaIgnoreActors;                             // 0xAF0(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	bool                                         bNeverSpawnPickupsOnPawnDeath;                     // 0xB00(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bLoadTestCosmetics;                                // 0xB01(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1ACE[0xA];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	uint8                                        : 1;                                               // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        bDisable3DVoiceChat : 1;                           // Mask : 0x2 0xB0C(0x1)(Config, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bAllowDamageInWarmup : 1;                          // Mask : 0x4 0xB0C(0x1)(Config, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1ACF[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class FName>                          ExcludedDefaultSupplyDrops;                        // 0xB10(0x10)(ZeroConstructor, Config, Protected, NativeAccessSpecifierProtected)
	TArray<class FName>                          ExcludedLTMSupplyDrops;                            // 0xB20(0x10)(ZeroConstructor, Config, Protected, NativeAccessSpecifierProtected)
	TArray<class FName>                          ExcludedLTMSpawnActors;                            // 0xB30(0x10)(ZeroConstructor, Config, Protected, NativeAccessSpecifierProtected)
	TArray<struct FTimeOfDayOverride>            TimeOfDayOverrideList;                             // 0xB40(0x10)(ZeroConstructor, Config, Protected, NativeAccessSpecifierProtected)
	bool                                         bDisableGCOnServerDuringMatch;                     // 0xB50(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1AD0[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FGCSettingsOverride>           GCSettingsOverrideList;                            // 0xB58(0x10)(ZeroConstructor, Config, Protected, NativeAccessSpecifierProtected)
	bool                                         bPlaylistHotfixChangedGCDisabling;                 // 0xB68(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1AD1[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        PlaylistHotfixOriginalGCFrequency;                 // 0xB6C(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        OverloadedInitialConnectTimeout;                   // 0xB70(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        FailedToStartMatchTimeout;                         // 0xB74(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1AD2[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bEnableRecentPlayersUpdates;                       // 0xB80(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1AD3[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        DefaultWarmupEarlyRequiredPlayerPercent;           // 0xB84(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bDisableStormCapSystem;                            // 0xB88(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bStormCapSystemEnabled;                            // 0xB89(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1AD4[0x56];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	enum class EForceKickAfterDeathMode          ForceKickAfterDeathMode;                           // 0xBE0(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1AD5[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        ForceKickAfterDeathTime;                           // 0xBE4(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        CreativeModeGracefulShutdownTime;                  // 0xBE8(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1AD6[0x3C];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        MaxPlayerCount;                                    // 0xC28(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1AD7[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class AFortPlayerControllerAthena*>   AlivePlayers;                                      // 0xC30(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	int32                                        TeamAlivePlayers;                                  // 0xC40(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1AD8[0x190];                                   // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        WarmupRequiredPlayerCount;                         // 0xDD4(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        WarmupCountdownDuration;                           // 0xDD8(0x4)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1AD9[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        WarmupEarlyCountdownDuration;                      // 0xDE0(0x4)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bSafeZoneActive;                                   // 0xDE4(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bSafeZonePaused;                                   // 0xDE5(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1ADA[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        TimeRemainingWhenPhasePaused;                      // 0xDE8(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1ADB[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class UGameplayEffect>           GE_OutsideSafeZone;                                // 0xDF0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class AFortSafeZoneIndicator>    SafeZoneIndicatorClass;                            // 0xDF8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class AMegaStormManager>         MegaStormManagerClass;                             // 0xE00(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        SafeZonePhase;                                     // 0xE08(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1ADC[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AFortSafeZoneIndicator*                SafeZoneIndicator;                                 // 0xE10(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FVector>                       SafeZoneLocations;                                 // 0xE18(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	bool                                         bSafeZoneLocationsInitialized;                     // 0xE28(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1ADD[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        EndGameKickPlayersDelay;                           // 0xE2C(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AMegaStormManager*                     MegaStormManager;                                  // 0xE30(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                VoiceChatChannelPositional;                        // 0xE38(0x10)(ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bUseRandomTimeOfDay;                               // 0xE48(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1ADE[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UAthenaAISettings*                     AISettings;                                        // 0xE50(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class AFortPlayerControllerSpectating*> LiveSpectators;                                    // 0xE58(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TSubclassOf<class AFortPlayerControllerSpectating> LiveSpectatorPlayerControllerClass;                // 0xE68(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoClear, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class AFortPlayerControllerSpectating> LiveBroadcastPlayerControllerClass;                // 0xE70(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoClear, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1ADF[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class FName>                          PlatformOSSNamesToUploadStatsV1;                   // 0xE88(0x10)(ZeroConstructor, Config, Protected, NativeAccessSpecifierProtected)
	TArray<class FName>                          PlatformOSSNamesToUploadStatsV2;                   // 0xE98(0x10)(ZeroConstructor, Config, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_1AE0[0x1C];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bEnableMatchmakingRatingUpdate;                    // 0xEC4(0x1)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bFlightPathInitialized;                            // 0xEC5(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1AE1[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        ScorePerMinuteAlive;                               // 0xECC(0x4)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ScoreMaxMinutesAliveCounted;                       // 0xED0(0x4)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ScoreForGettingAtLeastOneKill;                     // 0xED4(0x4)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ScorePerScaledTeamKill;                            // 0xED8(0x4)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ScoreForFirstRevive;                               // 0xEDC(0x4)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ScoreForSubsequentRevives;                         // 0xEE0(0x4)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        MaxAdditionalRevivesToScore;                       // 0xEE4(0x4)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FScorePlacementTable                  ScorePlacementTables;                              // 0xEE8(0xE0)(Edit, Config, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	float                                        ScoreMultiplier;                                   // 0xFC8(0x4)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        MaxActiveAIActors;                                 // 0xFCC(0x4)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UAthenaWeaponAlterationEvent*>  ActiveWeaponAlterationRules;                       // 0xFD0(0x10)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_1AE2[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bAllCosmeticsLoaded;                               // 0xFE8(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1AE3[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UAthenaCosmeticItemDefinition*> SkyDiveContrailCosmetics;                          // 0xFF0(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	int32                                        SkyDiveContrailLoadTestIndex;                      // 0x1000(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1AE4[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UAthenaCosmeticItemDefinition*> GliderCosmetics;                                   // 0x1008(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	int32                                        GliderLoadTestIndex;                               // 0x1018(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1AE5[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UAthenaCosmeticItemDefinition*> PickaxeCosmetics;                                  // 0x1020(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	int32                                        PickaxeLoadTestIndex;                              // 0x1030(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1AE6[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UAthenaCosmeticItemDefinition*> CharacterCosmetics;                                // 0x1038(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	int32                                        CharacterLoadTestIndex;                            // 0x1048(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1AE7[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UAthenaCosmeticItemDefinition*> HatCosmetics;                                      // 0x1050(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	int32                                        HatLoadTestIndex;                                  // 0x1060(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1AE8[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UAthenaCosmeticItemDefinition*> BackpackCosmetics;                                 // 0x1068(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	int32                                        BackpackLoadTestIndex;                             // 0x1078(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1AE9[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UAthenaCosmeticItemDefinition*> DanceCosmetics;                                    // 0x1080(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	int32                                        DanceLoadTestIndex;                                // 0x1090(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1AEA[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UAthenaCosmeticItemDefinition*> VictoryPoseCosmetics;                              // 0x1098(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	int32                                        VictoryPoseLoadTestIndex;                          // 0x10A8(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1AEB[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UAthenaCosmeticItemDefinition*> MapMarkerCosmetics;                                // 0x10B0(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	int32                                        MapMarkerLoadTestIndex;                            // 0x10C0(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        PetLoadTestIndex;                                  // 0x10C4(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class UAthenaCosmeticItemDefinition*> ConsumableEmoteCosmetics;                          // 0x10C8(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	TArray<class UAthenaCosmeticItemDefinition*> LoadingScreenCosmetics;                            // 0x10D8(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	TArray<class UAthenaCosmeticItemDefinition*> BattleBusCosmetics;                                // 0x10E8(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	TArray<struct FSupplyDropSpawnData>          SupplyDropSpawnDataList;                           // 0x10F8(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	struct FExitCraftSpawnData                   ExitCraftSpawnData;                                // 0x1108(0x8)(Transient, NoDestructor, NativeAccessSpecifierPrivate)
	int32                                        LastSpawnedSupplyDropType;                         // 0x1110(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1AEC[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AFortAthenaSpawningPolicyManager*      SpawningPolicyManager;                             // 0x1118(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FAthenaVehicleOverride>        AthenaVehicleOverrides;                            // 0x1120(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	TSubclassOf<class AFortTimeOfDayManager>     TimeOfDayManagerGameplayOverride;                  // 0x1130(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FFortSpawnActorData>           SpawnActorDataList;                                // 0x1138(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	class UCurveTable*                           AthenaGameDataTable;                               // 0x1148(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1AED[0xA8];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UFortMutatorListComponent*             MutatorListComponent;                              // 0x11F8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UFortGameplayModifierItemDefinition*> CoreGameModeModifiers;                             // 0x1200(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortGameModeAthena");
		return Clss;
	}

	bool ShouldSpawnVehicle(TSubclassOf<class AFortAthenaVehicle> VehicleClass);
	void SetTimeOfDayManagerGameplayOverride(TSubclassOf<class AFortTimeOfDayManager> TimeOfDayManagerClass);
	void SafeZoneInsideChecks();
	void OnMapInfoInitialized__DelegateSignature();
	void OnGamePhaseStepChanged(enum class EAthenaGamePhaseStep GamePhaseStep);
	void OnEndGameKickPlayers();
	void OnAircraftFlightEnded(class AFortAthenaAircraft* FortAthenaAircraft);
	void OnAircraftExitedDropZone(class AFortAthenaAircraft* FortAthenaAircraft);
	void OnAircraftEnteredDropZone(class AFortAthenaAircraft* FortAthenaAircraft);
	void JumpToSafeZonePhase();
	bool IsMapInfoInitialized();
	TSubclassOf<class AFortAthenaVehicle> GetVehicleClassOverride(TSubclassOf<class AFortAthenaVehicle> DefaultVehicleClass);
	class AFortGameplayMutator* GetMutatorByClass(class AActor* ContextActor, TSubclassOf<class AFortGameplayMutator> MutatorClass);
	class AFortGameplayMutator* GetGameplayMutator(const struct FGameplayTag& MutatorTag);
	void FireServerPerformanceEvent();
	void EndGamePhaseStarted();
	void EnableGameplayMutator(const struct FGameplayTag& MutatorTag, bool bEnable);
};

// 0x0 (0xA00 - 0xA00)
// Class FortniteGame.FortGameModeBoss
class AFortGameModeBoss : public AFortGameModeZone
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortGameModeBoss");
		return Clss;
	}

};

// 0x50 (0xA50 - 0xA00)
// Class FortniteGame.FortGameModeDeployableBase
class AFortGameModeDeployableBase : public AFortGameModeZone
{
public:
	uint8                                        Pad_1AEE[0x50];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortGameModeDeployableBase");
		return Clss;
	}

};

// 0x8 (0x710 - 0x708)
// Class FortniteGame.FortGameModeEmptyDedicated
class AFortGameModeEmptyDedicated : public AFortGameMode
{
public:
	class AFortGameSessionDedicated*             FortGameSessionDedicated;                          // 0x708(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortGameModeEmptyDedicated");
		return Clss;
	}

};

// 0x0 (0xA00 - 0xA00)
// Class FortniteGame.FortGameModePvE
class AFortGameModePvE : public AFortGameModeZone
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortGameModePvE");
		return Clss;
	}

};

// 0x0 (0xA00 - 0xA00)
// Class FortniteGame.FortGameModeEndless
class AFortGameModeEndless : public AFortGameModePvE
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortGameModeEndless");
		return Clss;
	}

};

// 0x18 (0xA18 - 0xA00)
// Class FortniteGame.FortGameModeFOB
class AFortGameModeFOB : public AFortGameModeZone
{
public:
	class ABuildingFOBConfigActor*               ConfigurationActor;                                // 0xA00(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	UMulticastDelegateProperty_                  OnPlayerLoginToFOB;                                // 0xA08(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortGameModeFOB");
		return Clss;
	}

};

// 0x18 (0x720 - 0x708)
// Class FortniteGame.FortGameModeFrontEnd
class AFortGameModeFrontEnd : public AFortGameMode
{
public:
	class AFortTheaterMapViewer*                 TheaterMapViewer;                                  // 0x708(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1AEF[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortGameModeFrontEnd");
		return Clss;
	}

};

// 0x28 (0xA28 - 0xA00)
// Class FortniteGame.FortGameModeKeep
class AFortGameModeKeep : public AFortGameModePvE
{
public:
	uint8                                        Pad_1AF0[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UFortKeepItemManager*                  KeepItemManager;                                   // 0xA20(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortGameModeKeep");
		return Clss;
	}

};

// 0x20 (0xA20 - 0xA00)
// Class FortniteGame.FortGameModeManor
class AFortGameModeManor : public AFortGameModePvE
{
public:
	uint8                                        Pad_1AF1[0x20];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortGameModeManor");
		return Clss;
	}

};

// 0x30 (0xA30 - 0xA00)
// Class FortniteGame.FortGameModeOutpost
class AFortGameModeOutpost : public AFortGameModePvE
{
public:
	TArray<struct FFortItemEntry>                OwnerItemRefundCache;                              // 0xA00(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	struct FFortOutpostCoreInfo                  CurrentCoreInfo;                                   // 0xA10(0x20)(Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortGameModeOutpost");
		return Clss;
	}

};

// 0x0 (0xA00 - 0xA00)
// Class FortniteGame.FortGameModeSurvival
class AFortGameModeSurvival : public AFortGameModePvE
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortGameModeSurvival");
		return Clss;
	}

	void FireEvent_SurvivalVoteReport(TArray<class ABuildingActor*>& ActorsBeingDefended);
	void FireEvent_SurvivalPeriodicReport(enum class EFortReportDayPhase TimeOfReport, TArray<class ABuildingActor*>& ActorsBeingDefended);
};

// 0x1A8 (0x1D8 - 0x30)
// Class FortniteGame.FortGamepadSettings
class UFortGamepadSettings : public UDataAsset
{
public:
	class UCurveFloat*                           GamepadLookCurve;                                  // 0x30(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCurveFloat*                           GamepadLookSensitivityCurve;                       // 0x38(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector2D                             GamepadLookScale;                                  // 0x40(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        GamepadLookScaleDownsights;                        // 0x48(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        GamepadLookScaleScope;                             // 0x4C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        GamepadLookScaleDownsightsDecayTime;               // 0x50(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        AimAssistStrength;                                 // 0x54(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        AimAssistStrengthDownsights;                       // 0x58(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        AimAssistStrengthDBNO;                             // 0x5C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        GamepadLookAccelTime;                              // 0x60(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        GamepadLookDecelTime;                              // 0x64(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        GamepadLookInnerAccelTime;                         // 0x68(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        GamepadLookInnerDecelTime;                         // 0x6C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        GamepadLookOuterAccelDeflection;                   // 0x70(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        GamepadLookOuterAccelScale;                        // 0x74(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        GamepadLookOuterAccelTime;                         // 0x78(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        GamepadLookOuterDecelTime;                         // 0x7C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        AimAssistPullStrength;                             // 0x80(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        AimAssistPullMaxRate;                              // 0x84(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        AimAssistPullRampUpTime;                           // 0x88(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        AimAssistPullDecayTime;                            // 0x8C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        AimAssistInitialDownsightStrength;                 // 0x90(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        AimAssistInitialDownsightTime;                     // 0x94(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SlowMinDistance;                                   // 0x98(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SlowMinStrength;                                   // 0x9C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SlowMaxDistance;                                   // 0xA0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SlowMaxStrength;                                   // 0xA4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SlowDecayTime;                                     // 0xA8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        EditModePullStrengthStationary;                    // 0xAC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        EditModePullStrengthMovingNewTile;                 // 0xB0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        EditModePullStrengthMovingWithinTile;              // 0xB4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        EditModePullMinDistance;                           // 0xB8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        EditModePullMaxDistance;                           // 0xBC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        EditModePullScaleFlat;                             // 0xC0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        EditModePullMaxRate;                               // 0xC4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        EditModeSlowMinDistance;                           // 0xC8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        EditModeSlowMinStrength;                           // 0xCC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        EditModeSlowMaxDistance;                           // 0xD0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        EditModeSlowMaxStrength;                           // 0xD4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FFortAbilityTargetSelection           AimAssistTargetSelection;                          // 0xD8(0x100)(Edit, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortGamepadSettings");
		return Clss;
	}

};

// 0x540 (0x938 - 0x3F8)
// Class FortniteGame.FortGameplayAbility
class UFortGameplayAbility : public UGameplayAbility
{
public:
	uint8                                        Pad_1B05[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	enum class EFortGameplayAbilityActivation    ActivationType;                                    // 0x408(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1B06[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FFortGameplayEffectContainer          EffectContainers;                                  // 0x410(0x90)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	uint8                                        Pad_1B07[0x240];                                   // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FFortGameplayEffectContainer>  GameplayEffectContainers;                          // 0x6E0(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_1B08[0x50];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGameplayTagContainer                 OwnerPreviewImageOverrideTags;                     // 0x740(0x20)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	TSubclassOf<class AFortProjectileBase>       ProjectileClass;                                   // 0x760(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDataTableRowHandle                   DamageStatHandle;                                  // 0x768(0x10)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	TArray<struct FFortAbilityCost>              AbilityCosts;                                      // 0x778(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	uint8                                        bShowWidgetForCosts : 1;                           // Mask : 0x1 0x788(0x1)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bStartWithCooldown : 1;                            // Mask : 0x2 0x788(0x1)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bPersistOnDeath : 1;                               // Mask : 0x4 0x788(0x1)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bStopsAIBehaviorLogic : 1;                         // Mask : 0x8 0x788(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bStopsAIMovement : 1;                              // Mask : 0x10 0x788(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bStopsRVOAvoidance : 1;                            // Mask : 0x20 0x788(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bForceNormalAILOD : 1;                             // Mask : 0x40 0x788(0x1)(Deprecated, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1B09[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	enum class EFortAILODLevel                   MinimumRequiredAILODLevel;                         // 0x78C(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1B0A[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	uint8                                        : 3;                                               // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        bRelevantForAIDespawning : 1;                      // Mask : 0x8 0x790(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bUseAIFireLocationAndRotation : 1;                 // Mask : 0x10 0x790(0x1)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1B0B[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	enum class EFortAIWeaponUsage                AIWeaponUsage;                                     // 0x794(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1B0C[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGameplayTag                          WeaponTestApplicationTag;                          // 0x798(0x8)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bVerifyFireOffsetIsNotObstructedByWorldGeometry : 1; // Mask : 0x1 0x7A0(0x1)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bCanHitBallisticTestsOnlyTestIndesructiblesWhileFalling : 1; // Mask : 0x2 0x7A0(0x1)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1B0D[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               FireOffset;                                        // 0x7A4(0xC)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ActivationNoiseRange;                              // 0x7B0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ImpactNoiseRange;                                  // 0x7B4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ActivationNoiseLoudness;                           // 0x7B8(0x4)(ZeroConstructor, Deprecated, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ImpactNoiseLoudness;                               // 0x7BC(0x4)(ZeroConstructor, Deprecated, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                 ProhibitedTargetTags;                              // 0x7C0(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	uint8                                        Pad_1B0E[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bLeadPawnTargets;                                  // 0x7E1(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1B0F[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        DesiredThrowAngle;                                 // 0x7E4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxYawAngleToFire;                                 // 0x7E8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bClampMaxYawAngleToFire;                           // 0x7EC(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bUseTargetActorLocation;                           // 0x7ED(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1B10[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        InitialAccuracyMax;                                // 0x7F0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        InitialAccuracyMin;                                // 0x7F4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TargetAccuracyMax;                                 // 0x7F8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TargetAccuracyMin;                                 // 0x7FC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinAccuracyDistance;                               // 0x800(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxAccuracyDistance;                               // 0x804(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AccuracyDistanceMultiplier;                        // 0x808(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        NumUsesToReachTargetAccuracy;                      // 0x80C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        UseCount;                                          // 0x810(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1B11[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FFortGameplayAbilityBehaviorDistanceData> GameplayAbilityBehaviorDistanceData;               // 0x818(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	uint8                                        Pad_1B12[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FFortGameplayAbilityMontageInfo       MontageInfo;                                       // 0x848(0x58)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	class UFortWeaponItemDefinition*             AbilityWeapon;                                     // 0x8A0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                  DisplayName;                                       // 0x8A8(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class FText                                  Description;                                       // 0x8C0(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	uint8                                        Pad_1B13[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UTexture2D*                            SmallPreviewImageOverride;                         // 0x8E0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1B14[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class UFortTooltip>              Tooltip;                                           // 0x8F8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFortTooltipDisplayStatsList*          StatList;                                          // 0x900(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1B15[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FAbilityTrackedActorSettings          ActorTrackingSettings;                             // 0x910(0x20)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TSubclassOf<class UFortCameraMode>           CurrentAbilityCameraModeClass;                     // 0x930(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortGameplayAbility");
		return Clss;
	}

	void TrackGroupedActor(class AActor* ActorToTrack, const struct FGameplayTag& GroupTag);
	void TrackActor(class AActor* ActorToTrack);
	bool SetupPreviewImageOverride();
	void SetCameraMode(TSubclassOf<class UFortCameraMode> CameraModeClass);
	void SetAIFocalPoint(class AActor* FocusTarget, const struct FVector& FocalPoint, bool bUseAttackingPriority);
	void QueryGameplayEffectContainerTargetExecutionModifiers(const struct FGameplayAbilityTargetDataHandle& TargetData, class UFortAbilitySystemComponent* SrcAbilitySystem, const struct FGameplayTag& ApplicationTag, int32 GameplayEffectLevel, class UObject* SourceObject, TArray<struct FGameplayEffectExecutionScopedModifierInfo>& InScopedMods, const TArray<struct FActiveGameplayEffectHandle>& InIgnoreHandles, TArray<struct FGameplayModifierEvaluatedData>* OutOutputModifiers, bool bTooltipRequest);
	void OnGenericNotifyFromAnimation(const struct FGameplayTag& NotifyTag);
	void OnAbilityInputReleased();
	void MakeGameplayEffectContainerSpecs(const struct FGameplayTag& ApplicationTag, int32 GameplayEffectLevel, TArray<struct FFortGameplayEffectContainerSpec>* OutSpecContainers);
	struct FFortGameplayEffectContainerSpec MakeGameplayEffectContainerSpec(const struct FGameplayTag& ApplicationTag, int32 GameplayEffectLevel);
	void K2_TriggerFromAnimation(const struct FGameplayTag& ApplicationTag);
	bool K2_ShouldUseDecoTool(const struct FGameplayAbilityActorInfo& ActorInfo);
	void K2_AbilityCompleted();
	bool IsTargetOutsideOfMaxYawRotation();
	TArray<class AActor*> GetTrackedGroupedActors(const struct FGameplayTag& GroupTag);
	TArray<class AActor*> GetTrackedActors();
	TSubclassOf<class UFortTooltip> GetTooltip();
	void GetProjectileInitialValues(float* OutProjectileSpeed, struct FRotator* OutSpawnDirection, float* OutProjectileGravity, class AActor** HomingTarget, bool bApplyInaccuracy, bool bApplyClampedMaxYawAngleToFire, bool bApplyLeading);
	int32 GetMaxNumTrackedActors();
	struct FRotator GetFireRotation(bool bApplyLeading, bool bApplyInaccuracy, bool bApplyClampedMaxYawAngleToFire);
	struct FVector GetFireLocation();
	class UFortTooltipDisplayStatsList* GetDisplayStats();
	struct FTransform GetCustomAbilitySourceTransform();
	class AFortWeapon* GetCurrentSourceWeapon();
	class UFortWorldItemDefinition* GetCurrentSourceItemDefinition();
	void GetCurrentAbilitySourceLevel(float* OutSourceLevel);
	struct FVector GetAimLocationNearestPawn(class AFortPawn* Instigator);
	class AActor* GetAIAbilityTarget();
	class AFortPawn* GetActivatingPawn();
	class UFortAbilitySystemComponent* GetActivatingAbilityComponent();
	float GetAbilityTargetingLevel();
	void ForceCameraLookDown(class APlayerController* PC);
	void EquipAbilityWeapon(class UFortWeaponItemDefinition* WeaponDefinition, int32 ItemLevel);
	bool DoesTargetHaveTags(class AActor* Target, struct FGameplayTagContainer& Tags);
	bool DoesTargetHaveProhibitedTagsForAI(class AActor* Target);
	void ClearTrackedGroupedActors(const struct FGameplayTag& GroupTag, bool bDestroyActors);
	void ClearTrackedActors(bool bDestroyActors);
	void ClearCameraMode();
	void ClearAIFocalPoint(bool bUseAttackingPriority);
	void CalculateProjectileTrajectorySplineWithHit(struct FHitResult* OutHitResult, TArray<struct FVector>* OutSplinePoints, TArray<struct FVector>* OutSplineTangents, class AActor* Instigator, const struct FVector& InitialLocation, const struct FVector& InitialVelocity, float MaxSpeed, float Gravity, float Friction, float Bounciness, float TimeStep, float TraceExtent, int32 MaxBounces);
	void CalculateProjectileTrajectorySpline(TArray<struct FVector>* OutSplinePoints, TArray<struct FVector>* OutSplineTangents, class AActor* Instigator, const struct FVector& InitialLocation, const struct FVector& InitialVelocity, float MaxSpeed, float Gravity, float Friction, float Bounciness, float TimeStep, float TraceExtent, int32 MaxBounces);
	void BP_GetGameplayEffectContainers(const struct FGameplayTag& ApplicationTag, TArray<struct FFortGameplayEffectContainer>* OutContainers);
	struct FFortGameplayEffectContainer BP_GetGameplayEffectContainer(const struct FGameplayTag& ApplicationTag);
	TArray<struct FActiveGameplayEffectHandle> ApplyGameplayEffectContainerWithCSVStats(const struct FGameplayAbilityTargetDataHandle& TargetData, const struct FGameplayTag& ApplicationTag, int32 GameplayEffectLevel, const class FString& StatName);
	TArray<struct FActiveGameplayEffectHandle> ApplyGameplayEffectContainer(const struct FGameplayAbilityTargetDataHandle& TargetData, const struct FGameplayTag& ApplicationTag, int32 GameplayEffectLevel);
	struct FVector ApplyAccuracyToTargetLocation(struct FVector& SourceLocation, struct FVector& TargetLocation, float InDesiredThrowAngle);
	void AddDynamicGameplayEffectContainer(struct FGameplayTag& ApplicationTag, struct FFortGameplayEffectContainer& Container);
};

// 0x18 (0x950 - 0x938)
// Class FortniteGame.FortGameplayAbility_Action
class UFortGameplayAbility_Action : public UFortGameplayAbility
{
public:
	class FName                                  ActionName;                                        // 0x938(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class FName>                          ExtraActionNames;                                  // 0x940(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortGameplayAbility_Action");
		return Clss;
	}

};

// 0x50 (0x9A0 - 0x950)
// Class FortniteGame.FortGameplayAbility_AIPortal
class UFortGameplayAbility_AIPortal : public UFortGameplayAbility_Action
{
public:
	struct FVector                               PortalDirection;                                   // 0x950(0xC)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1B16[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        PortalLifespan;                                    // 0x97C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class ABuildingSMActor*>              NoCollisionBuildings;                              // 0x980(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_1B17[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortGameplayAbility_AIPortal");
		return Clss;
	}

	void ModifyCollisions();
	bool HasPortalOutPoint();
	struct FVector GetPortalOutPoint();
	struct FVector GetPortalInPoint();
	class ABuildingSMActor* GetPortalBuilding();
};

// 0x48 (0x980 - 0x938)
// Class FortniteGame.FortGameplayAbility_AITurnTransition
class UFortGameplayAbility_AITurnTransition : public UFortGameplayAbility
{
public:
	struct FGameplayTagContainer                 RequiredWeaponTags;                                // 0x938(0x20)(Edit, Protected, NativeAccessSpecifierProtected)
	float                                        MinTurnTransitionYawAngle;                         // 0x958(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1B18[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FTurnTransitionData>           TransitionPriorityList;                            // 0x960(0x10)(Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	class FName                                  PickedMontageSectionName;                          // 0x970(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        PickedTurnYawRotationRate;                         // 0x978(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1B19[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortGameplayAbility_AITurnTransition");
		return Clss;
	}

	void GetTurnTransitionMontageSectionNameAndYawRotationRate(class FName* MontageSectionName, float* TurnYawRotationRate);
};

// 0x48 (0x980 - 0x938)
// Class FortniteGame.FortGameplayAbility_CeilingFallingTrap
class UFortGameplayAbility_CeilingFallingTrap : public UFortGameplayAbility
{
public:
	TSubclassOf<class AFortProjectileBase>       TrapProjectileClass;                               // 0x938(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UGameplayEffect>           TrapCostClass;                                     // 0x940(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          ActivateTrapTag;                                   // 0x948(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          DelayBeginTag;                                     // 0x950(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          ReloadBeginTag;                                    // 0x958(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ProjectileSpawnDelay;                              // 0x960(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1B1A[0x1C];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortGameplayAbility_CeilingFallingTrap");
		return Clss;
	}

};

// 0x0 (0x950 - 0x950)
// Class FortniteGame.FortGameplayAbility_Crouch
class UFortGameplayAbility_Crouch : public UFortGameplayAbility_Action
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortGameplayAbility_Crouch");
		return Clss;
	}

};

// 0x0 (0x938 - 0x938)
// Class FortniteGame.FortGameplayAbility_EyeOfTheStorm
class UFortGameplayAbility_EyeOfTheStorm : public UFortGameplayAbility
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortGameplayAbility_EyeOfTheStorm");
		return Clss;
	}

};

// 0x0 (0x950 - 0x950)
// Class FortniteGame.FortGameplayAbility_Jump
class UFortGameplayAbility_Jump : public UFortGameplayAbility_Action
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortGameplayAbility_Jump");
		return Clss;
	}

};

// 0x20 (0x958 - 0x938)
// Class FortniteGame.FortGameplayAbility_JumpBoostPack
class UFortGameplayAbility_JumpBoostPack : public UFortGameplayAbility
{
public:
	uint8                                        Pad_1B1B[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	enum class EJumpBoostPackState               ServerCurrentState;                                // 0x940(0x1)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EJumpBoostPackState               CurrentState;                                      // 0x941(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1B1C[0xE];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        DelayRegenStartTime;                               // 0x950(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bAbilityMarkedForPendingKill;                      // 0x954(0x1)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1B1D[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortGameplayAbility_JumpBoostPack");
		return Clss;
	}

	void SetCurrentState(enum class EJumpBoostPackState InState);
	void OnRep_ServerCurrentState(enum class EJumpBoostPackState PreviousState);
	void OnRep_bAbilityMarkedForPendingKill();
	void OnFuelIsFull();
	void OnFuelIsEmpty();
	void OnCurrentStateChanged(enum class EJumpBoostPackState InPreviousState, enum class EJumpBoostPackState InCurrentState);
	void OnAbilityCanceled();
	void HandleCurrentStateChanged(enum class EJumpBoostPackState InPreviousState);
};

// 0x0 (0x938 - 0x938)
// Class FortniteGame.FortGameplayAbility_Land
class UFortGameplayAbility_Land : public UFortGameplayAbility
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortGameplayAbility_Land");
		return Clss;
	}

};

// 0x20 (0x958 - 0x938)
// Class FortniteGame.FortGameplayAbility_MedicPack
class UFortGameplayAbility_MedicPack : public UFortGameplayAbility
{
public:
	uint8                                        Pad_1B1E[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	enum class EMedicPackState                   ServerCurrentState;                                // 0x940(0x1)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EMedicPackState                   CurrentState;                                      // 0x941(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1B1F[0xE];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        DelayRegenStartTime;                               // 0x950(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bAbilityMarkedForPendingKill;                      // 0x954(0x1)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1B20[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortGameplayAbility_MedicPack");
		return Clss;
	}

	void SetCurrentState(enum class EMedicPackState InState);
	void OnRep_ServerCurrentState(enum class EMedicPackState PreviousState);
	void OnRep_bAbilityMarkedForPendingKill();
	void OnFuelIsFull();
	void OnFuelIsEmpty();
	void OnCurrentStateChanged(enum class EMedicPackState InPreviousState, enum class EMedicPackState InCurrentState);
	void OnAbilityCanceled();
	void HandleCurrentStateChanged(enum class EMedicPackState InPreviousState);
};

// 0x0 (0x938 - 0x938)
// Class FortniteGame.FortGameplayAbility_MissileBattery
class UFortGameplayAbility_MissileBattery : public UFortGameplayAbility
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortGameplayAbility_MissileBattery");
		return Clss;
	}

};

// 0x10 (0x948 - 0x938)
// Class FortniteGame.FortGameplayAbility_PlayConversation
class UFortGameplayAbility_PlayConversation : public UFortGameplayAbility
{
public:
	class UFortConversation*                     ConversationToPlay;                                // 0x938(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1B21[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortGameplayAbility_PlayConversation");
		return Clss;
	}

};

// 0x38 (0x970 - 0x938)
// Class FortniteGame.FortGameplayAbility_RangedWeapon
class UFortGameplayAbility_RangedWeapon : public UFortGameplayAbility
{
public:
	float                                        FiringNoiseRange;                                  // 0x938(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1B22[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AFortWeaponRanged*                     CurrentWeapon;                                     // 0x940(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                 WeaponFireCue;                                     // 0x948(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	uint8                                        Pad_1B23[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortGameplayAbility_RangedWeapon");
		return Clss;
	}

};

// 0x20 (0x958 - 0x938)
// Class FortniteGame.FortGameplayAbility_Reload
class UFortGameplayAbility_Reload : public UFortGameplayAbility
{
public:
	int32                                        NumTimesReloaded;                                  // 0x938(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1B24[0x1C];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortGameplayAbility_Reload");
		return Clss;
	}

};

// 0x0 (0x950 - 0x950)
// Class FortniteGame.FortGameplayAbility_Sprint
class UFortGameplayAbility_Sprint : public UFortGameplayAbility_Action
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortGameplayAbility_Sprint");
		return Clss;
	}

};

// 0xD8 (0x168 - 0x90)
// Class FortniteGame.FortGameplayAbilityTooltip
class UFortGameplayAbilityTooltip : public UFortTooltip
{
public:
	struct FGameplayAbilitySpec                  CachedSpec;                                        // 0x90(0xC8)(Transient, NativeAccessSpecifierPrivate)
	class UGameplayAbility*                      CachedAbilityInstance;                             // 0x158(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UFortTooltipContext*                   CachedContext;                                     // 0x160(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortGameplayAbilityTooltip");
		return Clss;
	}

	void InitializeAbilityInstanceInternal(class UGameplayAbility* AbilityInstance, class UFortTooltipContext* Context);
	void InitializeAbilityInstance(class UGameplayAbility* AbilityInstance, class UFortTooltipContext* Context);
	bool GetTextForTokenFromAbilitySpecInternal(struct FGameplayAbilitySpec& Spec, struct FGameplayTag& Tag, class UFortTooltipContext* Context, struct FGameplayTag& Token, class FText* OutText);
	bool GetTextForTokenFromAbilitySpec(struct FGameplayAbilitySpec& Spec, struct FGameplayTag& Tag, class UFortTooltipContext* Context, struct FGameplayTag& Token, class FText* OutText);
	bool GetTextForTokenFromAbilityInstanceInternal(class UGameplayAbility* AbilityInstance, struct FGameplayTag& Tag, class UFortTooltipContext* Context, struct FGameplayTag& Token, class FText* OutText);
	bool GetTextForTokenFromAbilityInstance(class UGameplayAbility* AbilityInstance, struct FGameplayTag& Tag, class UFortTooltipContext* Context, struct FGameplayTag& Token, class FText* OutText);
	bool GetApplicationTag(class UGameplayAbility* AbilityInstance, struct FGameplayTag* OutTag);
};

// 0x10 (0x310 - 0x300)
// Class FortniteGame.FortGameplayCueManager
class UFortGameplayCueManager : public UGameplayCueManager
{
public:
	TArray<class FString>                        BROnlyGameplayCueNotifyPaths;                      // 0x300(0x10)(ZeroConstructor, Config, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortGameplayCueManager");
		return Clss;
	}

};

// 0x88 (0x428 - 0x3A0)
// Class FortniteGame.FortGameplayCueNotify_Actor
class AFortGameplayCueNotify_Actor : public AGameplayCueNotify_Actor
{
public:
	struct FFortGameplayCueSpawnCondition        DefaultCondition;                                  // 0x3A0(0x30)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FFortGameplayCueAttachInfo            DefaultAttachment;                                 // 0x3D0(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                 HUDElementTag;                                     // 0x3F8(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class AActor*                                ExecutionTarget;                                   // 0x418(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1B2A[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortGameplayCueNotify_Actor");
		return Clss;
	}

};

// 0x150 (0x1A0 - 0x50)
// Class FortniteGame.FortGameplayCueNotify_Burst
class UFortGameplayCueNotify_Burst : public UGameplayCueNotify_Static
{
public:
	struct FFortGameplayCueSpawnCondition        DefaultCondition;                                  // 0x50(0x30)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FFortGameplayCueAttachInfo            DefaultAttachment;                                 // 0x80(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	struct FFortBurstEffectData                  BurstEffectData;                                   // 0xA8(0xF8)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortGameplayCueNotify_Burst");
		return Clss;
	}

	void OnBurst(class AActor* MyTarget, struct FGameplayCueParameters& Parameters, TArray<class UParticleSystemComponent*>& ParticleComponents, TArray<class UAudioComponent*>& AudioComponents, class UCameraShake* BurstCameraShakeInstance, class ADecalActor* BurstDecalInstance);
};

// 0x130 (0x558 - 0x428)
// Class FortniteGame.FortGameplayCueNotify_BurstLatent
class AFortGameplayCueNotify_BurstLatent : public AFortGameplayCueNotify_Actor
{
public:
	struct FFortBurstEffectData                  BurstEffectData;                                   // 0x428(0xF8)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FFortGameplayCueSpawnResult           BurstResult;                                       // 0x520(0x38)(BlueprintVisible, BlueprintReadOnly, ContainsInstancedReference, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortGameplayCueNotify_BurstLatent");
		return Clss;
	}

	void OnBurst(class AActor* MyTarget, struct FGameplayCueParameters& Parameters, TArray<class UParticleSystemComponent*>& ParticleComponents, TArray<class UAudioComponent*>& AudioComponents, class UCameraShake* BurstCameraShakeInstance, class ADecalActor* BurstDecalInstance);
};

// 0x458 (0x880 - 0x428)
// Class FortniteGame.FortGameplayCueNotify_Loop
class AFortGameplayCueNotify_Loop : public AFortGameplayCueNotify_Actor
{
public:
	struct FFortBurstEffectData                  ApplicationBurst;                                  // 0x428(0xF8)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FFortGameplayCueSpawnResult           ApplicationResult;                                 // 0x520(0x38)(BlueprintVisible, BlueprintReadOnly, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FFortGameplayCueAttachInfo            DefaultLoopingAttachment;                          // 0x558(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	TArray<struct FFortGameplayCueParticleInfo>  LoopingParticles;                                  // 0x580(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FFortGameplayCueAudioInfo_Looping> LoopingSounds;                                     // 0x590(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	struct FFortGameplayCueForceFeedbackInfo     LoopingForceFeedbackEffect;                        // 0x5A0(0x28)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FFortGameplayCueCameraLensEffectInfo  LoopingCameraLensEffect;                           // 0x5C8(0x18)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FFortGameplayCueSpawnResult           LoopingResult;                                     // 0x5E0(0x38)(BlueprintVisible, BlueprintReadOnly, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FFortBurstEffectData                  RecurringBurst;                                    // 0x618(0xF8)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FFortGameplayCueSpawnResult           RecurringResult;                                   // 0x710(0x38)(BlueprintVisible, BlueprintReadOnly, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FFortBurstEffectData                  RemovalBurst;                                      // 0x748(0xF8)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FFortGameplayCueSpawnResult           RemovalResult;                                     // 0x840(0x38)(BlueprintVisible, BlueprintReadOnly, ContainsInstancedReference, NativeAccessSpecifierPublic)
	bool                                         bTickEnabled;                                      // 0x878(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1B2B[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        TickInterval;                                      // 0x87C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortGameplayCueNotify_Loop");
		return Clss;
	}

	void OnRemoval(class AActor* MyTarget, struct FGameplayCueParameters& Parameters, TArray<class UParticleSystemComponent*>& ParticleComponents, TArray<class UAudioComponent*>& AudioComponents, class UCameraShake* BurstCameraShakeInstance, class ADecalActor* BurstDecalInstance);
	void OnRecurring(class AActor* MyTarget, struct FGameplayCueParameters& Parameters, TArray<class UParticleSystemComponent*>& ParticleComponents, TArray<class UAudioComponent*>& AudioComponents, class UCameraShake* BurstCameraShakeInstance, class ADecalActor* BurstDecalInstance);
	void OnLoopingStart(class AActor* MyTarget, struct FGameplayCueParameters& Parameters, TArray<class UParticleSystemComponent*>& ParticleComponents, TArray<class UAudioComponent*>& AudioComponents);
	void OnApplication(class AActor* MyTarget, struct FGameplayCueParameters& Parameters, TArray<class UParticleSystemComponent*>& ParticleComponents, TArray<class UAudioComponent*>& AudioComponents, class UCameraShake* BurstCameraShakeInstance, class ADecalActor* BurstDecalInstance);
};

// 0x88 (0x428 - 0x3A0)
// Class FortniteGame.FortGameplayCueNotify_Looping
class AFortGameplayCueNotify_Looping : public AGameplayCueNotify_Actor
{
public:
	class USoundBase*                            StartSound;                                        // 0x3A0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundBase*                            StopSound;                                         // 0x3A8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystem*                       StartParticleSystem;                               // 0x3B0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFortParticleSystemParamBucket        StartParticleSystemParameters;                     // 0x3B8(0x10)(Edit, NativeAccessSpecifierPublic)
	class UParticleSystem*                       StopParticleSystem;                                // 0x3C8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFortParticleSystemParamBucket        StopParticleSystemParameters;                      // 0x3D0(0x10)(Edit, NativeAccessSpecifierPublic)
	class FName                                  AttachPoint;                                       // 0x3E0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bStayAttached;                                     // 0x3E8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bSnapToAttachPointAndPreserveWorldRotation;        // 0x3E9(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bUseHitResult;                                     // 0x3EA(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bUseWeapon;                                        // 0x3EB(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIgnoreRotation;                                   // 0x3EC(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1B2E[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGameplayTagContainer                 HUDElementTag;                                     // 0x3F0(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	enum class EPSCPoolMethod                    PoolingMethod;                                     // 0x410(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1B2F[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UAudioComponent*                       AudioComponent;                                    // 0x418(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UParticleSystemComponent*              ParticleSystemComponent;                           // 0x420(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortGameplayCueNotify_Looping");
		return Clss;
	}

	void OnWhileActiveParticleSystemDeactivate(class UParticleSystemComponent* WhileActiveParticleSysComponent, struct FGameplayCueParameters& Parameters);
	void OnWhileActiveParticleSystemActivate(class UParticleSystemComponent* WhileActiveParticleSysComponent, struct FGameplayCueParameters& Parameters);
	void OnStopParticleSystemSpawned(class UParticleSystemComponent* SpawnedParticleSysComponent, struct FGameplayCueParameters& Parameters);
	void OnStartParticleSystemSpawned(class UParticleSystemComponent* SpawnedParticleSysComponent, struct FGameplayCueParameters& Parameters);
	class USceneComponent* GetTargetComponent(class AActor* TargetActor, struct FGameplayCueParameters& Parameters);
	bool GetSpawnTransform(class AActor* TargetActor, class FName AttachPointName, struct FGameplayCueParameters& Parameters, struct FTransform* OutTransform);
};

// 0x30 (0x80 - 0x50)
// Class FortniteGame.FortGameplayCueNotify_Simple
class UFortGameplayCueNotify_Simple : public UGameplayCueNotify_Static
{
public:
	class USoundBase*                            StartSound;                                        // 0x50(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystem*                       StartParticleSystem;                               // 0x58(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFortParticleSystemParamBucket        StartParticleSystemParameters;                     // 0x60(0x10)(Edit, NativeAccessSpecifierPublic)
	class FName                                  AttachPoint;                                       // 0x70(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bStayAttached;                                     // 0x78(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bUseHitResult;                                     // 0x79(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bUseWeapon;                                        // 0x7A(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIgnoreRotation;                                   // 0x7B(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bUseUnsmoothedNetworkPosition;                     // 0x7C(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EPSCPoolMethod                    PoolingMethod;                                     // 0x7D(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1B30[0x2];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortGameplayCueNotify_Simple");
		return Clss;
	}

	void OnStartParticleSystemSpawned(class UParticleSystemComponent* SpawnedParticleSysComponent, struct FGameplayCueParameters& Parameters);
};

// 0x0 (0x28 - 0x28)
// Class FortniteGame.FortGameplayCueFunctionLibrary
class UFortGameplayCueFunctionLibrary : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortGameplayCueFunctionLibrary");
		return Clss;
	}

	void RemoveGameplayCueLocal(class AActor* Target, const struct FGameplayTag& GameplayCueTag, struct FGameplayCueParameters& CueParameters, bool bOnlyNotifies);
	void PlayBurstEffect(struct FFortBurstEffectData& BurstEffect, class AActor* Target, struct FGameplayCueParameters& CueParameters, struct FFortGameplayCueSpawnResult* OutResult);
	void ExecuteGameplayCueLocal(class AActor* Target, const struct FGameplayTag& GameplayCueTag, struct FGameplayCueParameters& CueParameters, bool bOnlyNotifies);
	bool CheckSpawnConditionForSource(class AActor* Target, class AActor* SourceActor, struct FFortGameplayCueSpawnCondition& Condition);
	bool CheckSpawnConditionForHitResult(class AActor* Target, class AActor* SourceActor, struct FHitResult& HitResult, struct FFortGameplayCueSpawnCondition& Condition);
	bool CheckSpawnConditionForCueParameters(class AActor* Target, struct FGameplayCueParameters& CueParameters, struct FFortGameplayCueSpawnCondition& Condition);
	void BuildCueParametersFromSource(class AActor* SourceActor, struct FGameplayCueParameters* OutCueParameters);
	void BuildCueParametersFromHitResult(class AActor* SourceActor, struct FHitResult& HitResult, struct FGameplayCueParameters* OutCueParameters);
	void AddGameplayCueLocal(class AActor* Target, const struct FGameplayTag& GameplayCueTag, struct FGameplayCueParameters& CueParameters, bool bOnlyNotifies);
};

// 0x40 (0x68 - 0x28)
// Class FortniteGame.FortGameplayEffectUIData
class UFortGameplayEffectUIData : public UGameplayEffectUIData
{
public:
	class FText                                  DisplayName;                                       // 0x28(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FText                                  Description;                                       // 0x40(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FString                                TooltipName;                                       // 0x58(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortGameplayEffectUIData");
		return Clss;
	}

};

// 0x40 (0x3A0 - 0x360)
// Class FortniteGame.FortGameplayModifierItemDefinition
class UFortGameplayModifierItemDefinition : public UFortAccountItemDefinition
{
public:
	TArray<struct FFortGameplayEffectDeliveryInfo> PersistentGameplayEffects;                         // 0x360(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TArray<struct FFortAbilitySetDeliveryInfo>   PersistentAbilitySets;                             // 0x370(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TArray<TSoftClassPtr<class AFortGameplayMutator>> Mutators;                                          // 0x380(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	bool                                         bHiddenInUI;                                       // 0x390(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1B37[0xF];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortGameplayModifierItemDefinition");
		return Clss;
	}

	bool IsHiddenInUI();
};

// 0x0 (0x40 - 0x40)
// Class FortniteGame.FortGameplayModMagnitudeCalculation
class UFortGameplayModMagnitudeCalculation : public UGameplayModMagnitudeCalculation
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortGameplayModMagnitudeCalculation");
		return Clss;
	}

};

// 0x38 (0x398 - 0x360)
// Class FortniteGame.FortGameplayMutator_AIEncounterModifierTags
class AFortGameplayMutator_AIEncounterModifierTags : public AFortGameplayMutator
{
public:
	struct FGameplayTagContainer                 GameplayTags;                                      // 0x360(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TArray<struct FFortEncounterMutatorReplacedTag> TagsToReplace;                                     // 0x380(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	enum class EFortMissionType                  RequiredEncounterAssociatedMissionType;            // 0x390(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1B38[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortGameplayMutator_AIEncounterModifierTags");
		return Clss;
	}

};

// 0x8 (0x368 - 0x360)
// Class FortniteGame.FortGameplayMutator_AILevelVariance
class AFortGameplayMutator_AILevelVariance : public AFortGameplayMutator
{
public:
	float                                        MinVariance;                                       // 0x360(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MaxVariance;                                       // 0x364(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortGameplayMutator_AILevelVariance");
		return Clss;
	}

};

// 0x40 (0x708 - 0x6C8)
// Class FortniteGame.FortGameplayTagBuildingActor
class AFortGameplayTagBuildingActor : public ABuildingActor
{
public:
	uint8                                        Pad_1B39[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGameplayTagContainer                 TagsToApplyOnSave;                                 // 0x6D0(0x20)(Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	int32                                        XGridCells;                                        // 0x6F0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        YGridCells;                                        // 0x6F4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        ZGridCells;                                        // 0x6F8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1B3A[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UBoxComponent*                         BoxComponent;                                      // 0x700(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortGameplayTagBuildingActor");
		return Clss;
	}

};

// 0x50 (0x80 - 0x30)
// Class FortniteGame.FortGameplayTagData
class UFortGameplayTagData : public UDataAsset
{
public:
	struct FGameplayTag                          EnergyDamageTag;                                   // 0x30(0x8)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTagQuery                     PreventDamageFromInterruptingInteractionsTagQuery; // 0x38(0x48)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortGameplayTagData");
		return Clss;
	}

};

// 0x28 (0x390 - 0x368)
// Class FortniteGame.FortGameplayTagVolume
class AFortGameplayTagVolume : public AVolume
{
public:
	uint8                                        Pad_1B3B[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGameplayTagContainer                 TagsToApplyOnSave;                                 // 0x370(0x20)(Edit, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortGameplayTagVolume");
		return Clss;
	}

};

// 0x0 (0x28 - 0x28)
// Class FortniteGame.FortGameplayTagVolumeInterface
class UFortGameplayTagVolumeInterface : public UInterface
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortGameplayTagVolumeInterface");
		return Clss;
	}

	void ApplyTags();
};

// 0x0 (0xA68 - 0xA68)
// Class FortniteGame.FortGamePvPBaseDestruction
class AFortGamePvPBaseDestruction : public AFortGamePvPBase
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortGamePvPBaseDestruction");
		return Clss;
	}

};

// 0xD0 (0x418 - 0x348)
// Class FortniteGame.FortGameSession
class AFortGameSession : public AGameSession
{
public:
	uint8                                        Pad_1B3C[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FFortHostSessionParams                CurrentSessionParams;                              // 0x368(0xC)(Transient, NoDestructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_1B3D[0x14];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class AOnlineBeaconHostObject>   ReservationBeaconHostClass;                        // 0x388(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1B3E[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AFortPartyBeaconHost*                  ReservationBeaconHost;                             // 0x398(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AFortLobbyBeaconHost*                  LobbyBeaconHost;                                   // 0x3A0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FFortDisconnectedPlayerReservation> DisconnectedPlayerReservations;                    // 0x3A8(0x10)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	TArray<struct FPlayerReservation>            PlayersToRegister;                                 // 0x3B8(0x10)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	float                                        BulkUnregisterTimerDelay;                          // 0x3C8(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DisconnectedReservationTimeout;                    // 0x3CC(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bShouldServerForcePartnerId;                       // 0x3D0(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1B3F[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                ServerForcePartnerId;                              // 0x3D8(0x10)(ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1B40[0x30];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortGameSession");
		return Clss;
	}

	void DumpReservations();
};

// 0x1A8 (0x5C0 - 0x418)
// Class FortniteGame.FortGameSessionDedicated
class AFortGameSessionDedicated : public AFortGameSession
{
public:
	uint8                                        Pad_1B41[0x30];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bEnforceCrossplayRestrictions;                     // 0x448(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bAllowPS4InMixedConsole;                           // 0x449(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1B42[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        HotfixCheckTimer;                                  // 0x44C(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        HotfixCheckVariance;                               // 0x450(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1B43[0x6C];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        ConsoleSessionRetryWaitSeconds;                    // 0x4C0(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1B44[0x15];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	enum class EServerManifestOutputFormat       ServerManifestOutputFormat;                        // 0x4D9(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1B45[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                ServerManifestDestination;                         // 0x4E0(0x10)(ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1B46[0x40];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        IdleResetShortTimer;                               // 0x530(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1B47[0x74];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FClientIdRestrictions>         ClientIdRestrictions;                              // 0x5A8(0x10)(ZeroConstructor, Config, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1B48[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortGameSessionDedicated");
		return Clss;
	}

};

// 0x200 (0x7C0 - 0x5C0)
// Class FortniteGame.FortGameSessionDedicatedAthena
class AFortGameSessionDedicatedAthena : public AFortGameSessionDedicated
{
public:
	uint8                                        Pad_1B49[0xA0];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        ReconnectToMMSDelay;                               // 0x660(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        MaxReconnectToMMSDelay;                            // 0x664(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1B4A[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                MMSVersionCompatability;                           // 0x670(0x10)(ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FString                                MMSTicketURLServer;                                // 0x680(0x10)(ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        MMSPingInterval;                                   // 0x690(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1B4B[0xB4];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bEnableMeshNetwork;                                // 0x748(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1B4C[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class FString>                        DisabledMeshNodeTypes;                             // 0x750(0x10)(ZeroConstructor, Config, NativeAccessSpecifierPrivate)
	class AFortMeshBeaconHost*                   MeshBeaconHost;                                    // 0x760(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AFortMeshBeaconHostObject*             MeshBeaconHostObject;                              // 0x768(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AFortMeshBeaconClient*                 MeshBeaconClient;                                  // 0x770(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        RetryMeshConnectDelay;                             // 0x778(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        MaxMeshConnectDelay;                               // 0x77C(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        RetryJoinMeshDelay;                                // 0x780(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        MeshNetworkServerStatusEventRate;                  // 0x784(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        MeshNetworkGCTimerRate;                            // 0x788(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1B4D[0x34];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortGameSessionDedicatedAthena");
		return Clss;
	}

};

// 0x38 (0x3C8 - 0x390)
// Class FortniteGame.FortGameStateBase
class AFortGameStateBase : public AGameState
{
public:
	uint8                                        Pad_1B4E[0x28];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class AFortTimeOfDayManager*                 FortTimeOfDayManager;                              // 0x3B8(0x8)(Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AFortMissionStormShield*               StormShield;                                       // 0x3C0(0x8)(Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortGameStateBase");
		return Clss;
	}

	void OnRep_TimeOfDayManager();
	void OnRep_StormShield();
	class AFortTimeOfDayManager* GetTimeOfDayManager();
	class AFortMissionStormShield* GetStormShield();
};

// 0x2E0 (0x6A8 - 0x3C8)
// Class FortniteGame.FortGameState
class AFortGameState : public AFortGameStateBase
{
public:
	class FString                                CurrentWUID;                                       // 0x3C8(0x10)(Net, ZeroConstructor, RepNotify, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        ParTime;                                           // 0x3D8(0x4)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        WorldLevel;                                        // 0x3DC(0x4)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        CraftingBonus;                                     // 0x3E0(0x4)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CurrentReadyToContinueTimer;                       // 0x3E4(0x4)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        TeamCount;                                         // 0x3E8(0x4)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        TeamSize;                                          // 0x3EC(0x4)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AFortPoiManager*                       PoiManager;                                        // 0x3F0(0x8)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1B59[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bPlayersAlwaysVisible;                             // 0x410(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bSkipWorldSave;                                    // 0x411(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1B5A[0x1E];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bPlayerSpawningBlocked_Temporarily;                // 0x430(0x1)(Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1B5B[0x17];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class FName>                          AdditionalPlaylistLevelsStreamed;                  // 0x448(0x10)(Net, ZeroConstructor, RepNotify, NativeAccessSpecifierPublic)
	int32                                        WorldDaysElapsed;                                  // 0x458(0x4)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1B5C[0x1C];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class AFortFeedbackManager*                  FeedbackManager;                                   // 0x478(0x8)(Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AFortMissionManager*                   MissionManager;                                    // 0x480(0x8)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AFortClientAnnouncementManager*        AnnouncementManager;                               // 0x488(0x8)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AFortScriptedActionManager*            ScriptedActionManager;                             // 0x490(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AFortLobbyBeaconState*                 LobbyGameState;                                    // 0x498(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AFortWorldManager*                     WorldManager;                                      // 0x4A0(0x8)(Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EFortGameplayState                GameplayState;                                     // 0x4A8(0x1)(Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1B5D[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class AFortMusicManager>         MusicManagerSubclass;                              // 0x4B0(0x8)(Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFortMusicManagerBank*                 MusicManagerBank;                                  // 0x4B8(0x8)(Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UFortAmbientAudioController> FortAmbientAudioControllerClass;                   // 0x4C0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                GameSessionId;                                     // 0x4C8(0x10)(Net, ZeroConstructor, RepNotify, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UFortMovementComp_Character*>   ManagedCharMovementComponents;                     // 0x4D8(0x10)(ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	TArray<class AFortAIPawn*>                   ManagedAnimPawns;                                  // 0x4E8(0x10)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	class AFortPawn*                             PawnForReplayRelevancy;                            // 0x4F8(0x8)(Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AFortPlayerState*                      RecorderPlayerState;                               // 0x500(0x8)(Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UFortMovementComp_Character*>   ManagedCharMovementComponentsCopy;                 // 0x508(0x10)(ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	TArray<struct FOnTimeHitInfo>                TimeOfDayCallbacks;                                // 0x518(0x10)(ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	class AFortVisibilityManager*                VisibilityManager;                                 // 0x528(0x8)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AFortFXManager*                        FXManager;                                         // 0x530(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class ABuildingActorTickManager*             BuildingTickManager;                               // 0x538(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AFortWindManager*                      WindManager;                                       // 0x540(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class AFortTeamInfo*>                 Teams;                                             // 0x548(0x10)(Net, ZeroConstructor, RepNotify, Protected, NativeAccessSpecifierProtected)
	bool                                         bSkipTeamReplication;                              // 0x558(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1B5E[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FTeamChangeRequest>            PendingTeamChangeRequests;                         // 0x560(0x10)(Net, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	bool                                         bAllowPendingTeamChangeRequests;                   // 0x570(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1B5F[0x67];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class AFortGlobalAbilityTargetingActor*      GlobalAbilityTargetingActor;                       // 0x5D8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1B60[0xA0];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FAppliedHomebaseData>          AppliedHomebaseDataArray;                          // 0x680(0x10)(ZeroConstructor, Transient, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_1B61[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortGameState");
		return Clss;
	}

	void SetPlayerSpawningBlocked_Temporarily(bool bBlock);
	void RunPerfMemCheatScript(bool bStartStatFiles);
	void OnRep_WorldManager();
	void OnRep_WorldDaysElapsed();
	void OnRep_Teams();
	void OnRep_PawnForReplayRelevancy(class AFortPawn* OldPawnForReplayRelevancy);
	void OnRep_MusicManagerSubclass();
	void OnRep_MusicManagerBank();
	void OnRep_MissionManager();
	void OnRep_GameSessionID();
	void OnRep_GameplayState();
	void OnRep_FeedbackManager();
	void OnRep_CurrentWUID();
	void OnRep_AnnouncementManager();
	void OnRep_AdditionalPlaylistLevelsStreamed();
	void OnFinishedStreamingAdditionalPlaylistLevel();
	int32 GetWorldDaysElapsed();
	bool GetPlayerSpawningBlocked_Temporarily();
	enum class EFortGameplayState GetGameplayState();
	void DemoEndOfDayRecap();
	void DbgSphereSendToAllInternal_DoNotCall(struct FVector& Center, float Radius, int32 Segments, struct FColor& Color, bool bPersistentLines, float LifeTime, uint8 DepthPriority, float Thickness);
	void DbgLineSendToAllInternal_DoNotCall(struct FVector& LineStart, struct FVector& LineEnd, struct FColor& Color, bool bPersistentLines, float LifeTime, uint8 DepthPriority, float Thickness);
	void DbgCapsuleSendToAllInternal_DoNotCall(struct FVector& Center, float HalfHeight, float Radius, struct FQuat& Rotation, struct FColor& Color, bool bPersistentLines, float LifeTime, uint8 DepthPriority, float Thickness);
	void DbgBoxSendToAllInternal_DoNotCall(struct FVector& Center, struct FVector& Extent, struct FColor& Color, bool bPersistentLines, float LifeTime, uint8 DepthPriority, float Thickness);
	void Client_RefreshEventCalendar();
	void Client_InitiateEndOfDayRecap(struct FEndOfDayRecap& EndOfDayRecap);
};

// 0x750 (0xDF8 - 0x6A8)
// Class FortniteGame.FortGameStateZone
class AFortGameStateZone : public AFortGameState
{
public:
	int32                                        PawnIDCount;                                       // 0x6A8(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        WaitingToLeaveZoneTimeLeft;                        // 0x6AC(0x4)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HostilityMeterPercent;                             // 0x6B0(0x4)(Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        IntensityPercent;                                  // 0x6B4(0x4)(Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        SpawnPointsCap;                                    // 0x6B8(0x4)(Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        SpawnPointsAllocated;                              // 0x6BC(0x4)(Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaxTotalAI;                                        // 0x6C0(0x4)(Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaxEncounterAI;                                    // 0x6C4(0x4)(Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaxEncounterSP;                                    // 0x6C8(0x4)(Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1B82[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FReplicatedMontageMap                 ReplicatedMontageMap;                              // 0x6D0(0x18)(Net, Transient, NativeAccessSpecifierPublic)
	float                                        PlayerBuildingSkillLevel;                          // 0x6E8(0x4)(Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1B83[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<float>                                PlayerSharedMaxTrapAttributes;                     // 0x6F0(0x10)(Net, ZeroConstructor, Transient, RepNotify, Protected, NativeAccessSpecifierProtected)
	TArray<class UObject*>                       GameplayMutatorObservers;                          // 0x700(0x10)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_1B84[0x128];                                   // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGameplayTagContainer                 ExplicitGloballyBlockedAbilityTags;                // 0x838(0x20)(Net, Transient, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_1B85[0xA0];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bInvitesRestricted;                                // 0x8F8(0x1)(Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1B86[0x6B];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        TotalPlayerStructures;                             // 0x964(0x4)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        MaxPlayerStructures;                               // 0x968(0x4)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bGlobalCeaseFire;                                  // 0x96C(0x1)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1B87[0x1B];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class AFortGlobalEnvironmentAbilityActor*    GlobalEnvironmentAbilityActor;                     // 0x988(0x8)(Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UFortAbilitySystemComponent*>   GlobalGameplayEventListeners;                      // 0x990(0x10)(ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	struct FActiveGameplayModifierArray          ActiveGameplayModifiers;                           // 0x9A0(0xD8)(Net, Transient, RepNotify, Protected, NativeAccessSpecifierProtected)
	bool                                         bSupportRuntimeShutdownOfGameplayModifiers;        // 0xA78(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1B88[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UBuildingStructuralSupportSystem*      StructuralSupportSystem;                           // 0xA80(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FDataTableRowHandle                   ZoneDifficultyInfoRow;                             // 0xA88(0x10)(Net, Transient, RepNotify, NoDestructor, Protected, NativeAccessSpecifierProtected)
	class UFortZoneTheme*                        ZoneTheme;                                         // 0xA98(0x8)(Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftClassPtr<class UFortMissionGenerator>   MissionGeneratorClass;                             // 0xAA0(0x28)(Net, Transient, RepNotify, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FFortItemQuantityPair>         MissionRewards;                                    // 0xAC8(0x10)(Net, ZeroConstructor, Transient, RepNotify, Protected, NativeAccessSpecifierProtected)
	TArray<struct FFortZoneDifficultyIncreaseRewardData> DifficultyIncreaseRewards;                         // 0xAD8(0x10)(Net, ZeroConstructor, Transient, RepNotify, Protected, NativeAccessSpecifierProtected)
	struct FFortZoneMissionAlertData             MissionAlertData;                                  // 0xAE8(0x30)(Net, Transient, RepNotify, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_1B89[0x90];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class AFortThreatVisualsManager*             ThreatVisualsManager;                              // 0xBA8(0x8)(Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AFortThreatParticleActor*              ThreatParticleActor;                               // 0xBB0(0x8)(Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bDrawRunVariationDebug;                            // 0xBB8(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1B8A[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class AFortAIPawn*>                   PawnVariationList;                                 // 0xBC0(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	int32                                        VariationIndex;                                    // 0xBD0(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        GameDifficulty;                                    // 0xBD4(0x4)(Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1B8B[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bIsGroupContent;                                   // 0xBDC(0x1)(Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1B8C[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        DifficultyIncreaseRewardTier;                      // 0xBE0(0x4)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        bAllowedToUpdateBackendDifficulty : 1;             // Mask : 0x1 0xBE4(0x1)(NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1B8D[0x13];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FPlayerBuildableClassContainer        PlayerBuildableClasses;                            // 0xBF8(0x10)(Transient, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_1B8E[0x30];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class AFortInGameMapManager*                 UIMapManager;                                      // 0xC38(0x8)(Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFortCharacterCosmeticManager*         CharacterCosmeticManager;                          // 0xC40(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	UMulticastDelegateProperty_                  OnScoreTotalsChanged;                              // 0xC48(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class FName                                  ScoringTableRowName;                               // 0xC58(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        TotalCombatScore;                                  // 0xC60(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        TotalBuildingScore;                                // 0xC64(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        TotalUtilityScore;                                 // 0xC68(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1B8F[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                TheaterUniqueId;                                   // 0xC70(0x10)(Net, ZeroConstructor, RepNotify, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                MissionLogDebugString;                             // 0xC80(0x10)(Net, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1B90[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	uint8                                        bAllowBuildingCostMods : 1;                        // Mask : 0x1 0xCA8(0x1)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bFreeBuildingRepairs : 1;                          // Mask : 0x2 0xCA8(0x1)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1B91[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bAllowBuildingAtLayoutRequirements;                // 0xCAC(0x1)(Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bAllowBuildingWithoutLayoutRequirements;           // 0xCAD(0x1)(Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bAllowLayoutRequirementsFeature;                   // 0xCAE(0x1)(Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1B92[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bAllowBuildingThroughBlockingObjects;              // 0xCB0(0x1)(ZeroConstructor, Transient, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1B93[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class AFortAIPawn*>                   DeployedDefenders;                                 // 0xCB8(0x10)(Net, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_1B94[0x50];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        NumSurvivorsSpawned;                               // 0xD18(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        NumSurvivorsDead;                                  // 0xD1C(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        NumSurvivorsRescued;                               // 0xD20(0x4)(Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1B95[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	UMulticastDelegateProperty_                  OnNumSurvivorsRescuedChangedDelegate;              // 0xD28(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_1B96[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        UnplayableHitchThresholdInMs;                      // 0xD58(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        MaxUnplayableHitchesToTolerate;                    // 0xD5C(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1B97[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FVoteData>                     GameplayVotesArray;                                // 0xD80(0x10)(Net, ZeroConstructor, RepNotify, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1B98[0x58];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class AFortCreativePortalManager*            CreativePortalManager;                             // 0xDE8(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AFortCreativeRealEstatePlotManager*    CreativeRealEstatePlotManager;                     // 0xDF0(0x8)(Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortGameStateZone");
		return Clss;
	}

	void UnregisterGameplayModifier(struct FActiveGameplayModifierHandle& InHandleToUnregister);
	void UnbindDelegateOnGameplayVoteUpdated(enum class EFortVoteType VoteType, UDelegateProperty_ Delegate);
	bool ShouldDisablePlayerTeleportingDuringMissionResults();
	bool SetDifficultyIncreaseRewardTier(int32 InDifficultyIncreaseTier);
	void SetBuildingAllowed(bool bBuildingAtLayoutRequirementsAllowed, bool bBuildingWithoutLayoutRequirementsAllowed);
	void ServerSubmitGameplayVote(enum class EFortVoteType VoteType, int32 VoteDecision, struct FUniqueNetIdRepl& PlayerNetId);
	void ServerFireAIDirectorEventBatch(TArray<struct FFortAIDirectorEvent>& Payload);
	void ServerFireAIDirectorEvent(enum class EFortAIDirectorEvent Event, class UObject* EventSource, class UObject* EventTarget, float EventMultiplier);
	void ServerEndGameplayVote(enum class EFortVoteType VoteType, struct FUniqueNetIdRepl& PlayerNetId);
	void ServerBeginGameplayVote(enum class EFortVoteType VoteType, struct FUniqueNetIdRepl& PlayerNetId, const struct FFortVoteConfig& VoteConfig);
	void RemovePlayerAbilityRestriction();
	struct FActiveGameplayModifierHandle RegisterGameplayModifier(class UFortGameplayModifierItemDefinition* InModifierToRegister, int32 Expiration);
	void OnWaveStart(class FText& LevelText, int32 Level, class FText& WaveText, int32 WaveNum);
	void OnWaveEncounterStarted(struct FTieredWaveSetData& WaveData, class FText& LevelText, int32 Level, class FText& WaveText, int32 WaveNum);
	void OnWaveBasedModifiersAppliedMulticast(TArray<class UFortGameplayModifierItemDefinition*>& ModifiersApplied);
	void OnRep_ZoneDifficultyInfoRow();
	void OnRep_TheaterUniqueId();
	void OnRep_PlayerStructuresChanged();
	void OnRep_PlayerSharedTrapAttributes();
	void OnRep_PlayerBuildingSkillLevel();
	void OnRep_NumSurvivorsRescued();
	void OnRep_MissionRewards();
	void OnRep_MissionGenerator();
	void OnRep_MissionAlertData();
	void OnRep_GameplayVotes();
	void OnRep_GameDifficulty();
	void OnRep_DifficultyIncreaseRewardTier();
	void OnRep_DifficultyIncreaseRewards();
	void OnRep_bGlobalCeaseFire();
	void OnRep_ActiveGameplayModifiers();
	void OnDefenderRemoved(class AFortAIPawn* Defender);
	void OnDefenderDeployed(class AFortAIPawn* Defender);
	void NotifySurvivorSpawned();
	void NotifySurvivorRescued(class AFortPlayerController* Rescuer, const class FString& SurvivorName);
	void NotifySurvivorDead();
	void NotifyEndFailedGameplayVoteLockout(enum class EFortVoteType VoteType);
	bool IsRespawningAllowed(class AFortPlayerState* PlayerState);
	bool IsGameplayVoteLocked(enum class EFortVoteType VoteType);
	bool IsGameplayVoteInProgress(enum class EFortVoteType VoteType);
	bool IsGameplayVoteActive(enum class EFortVoteType VoteType);
	bool IsDefenderItemDeployed(class UFortItem* DefenderItem, class AFortPlayerStateZone* RequestingPlayer);
	bool IsBuildingWithoutLayoutRequirementsAllowed();
	bool IsBuildingAtLayoutRequirementsAllowed();
	bool IsAnyGameplayVoteActive();
	bool HasActiveGameplayModifiers();
	void GloballyUnblockAbilitiesWithTags(const struct FGameplayTagContainer& TagsToUnblock);
	void GloballyBlockAbilitiesWithTags(const struct FGameplayTagContainer& TagsToBlock);
	bool GetVoteStartTime(enum class EFortVoteType VoteType, struct FDateTime* VoteStartTime);
	bool GetVoteInstigator(enum class EFortVoteType VoteType, struct FUniqueNetIdRepl* InstigatorNetId);
	bool GetVoteEndTime(enum class EFortVoteType VoteType, struct FDateTime* VoteEndTime);
	float GetVoteDuration(enum class EFortVoteType VoteType);
	bool GetVoteArbitratorType(enum class EFortVoteType VoteType, enum class EFortVoteArbitratorType* ArbitratorType);
	class AFortInGameMapManager* GetUIMapManager();
	int32 GetTotalScore(enum class EStatCategory ScoreCategory);
	float GetTimeRemainingToEndVote(enum class EFortVoteType VoteType);
	float GetTimeRemainingToEndFailedVoteLockout(enum class EFortVoteType VoteType);
	float GetTimeElapsedSinceEndVote(enum class EFortVoteType VoteType);
	float GetTimeElapsedSinceBeginVote(enum class EFortVoteType VoteType);
	int32 GetNumSurvivorsSpawned();
	int32 GetNumSurvivorsRescued();
	int32 GetNumSurvivorsDead();
	int32 GetNumAllowedDifficultyIncreases();
	TArray<struct FUniqueNetIdRepl> GetGameplayVotesForChoice(enum class EFortVoteType VoteType, int32 VoteChoice);
	float GetGameDifficulty();
	float GetFailedVoteLockOutDuration(enum class EFortVoteType VoteType);
	bool GetCurrentVoters(enum class EFortVoteType VoteType, TArray<struct FVoter>* Voters);
	void GetActiveModifiers(TArray<class UFortGameplayModifierItemDefinition*>* OutActiveModifiers);
	bool CanSpawnDefender(class AFortPlayerStateZone* PlayerCausingRemoval, class FName& RemoveFromDefenderSquadId, class AFortAIPawn** OutDefenderToBeRemoved);
	void BindDelegateOnGameplayVoteUpdated(enum class EFortVoteType VoteType, UDelegateProperty_ Delegate);
	void ApplyPlayerAbilityRestriction();
};

// 0xF0 (0xEE8 - 0xDF8)
// Class FortniteGame.FortGameStatePvP
class AFortGameStatePvP : public AFortGameStateZone
{
public:
	int32                                        RoundTimeLimit;                                    // 0xDF8(0x4)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        RoundTimeAccumulated;                              // 0xDFC(0x4)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1B99[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        RoundTimeCriticalThreshold;                        // 0xE04(0x4)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        RoundTimeRemaining;                                // 0xE08(0x4)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        StalemateTimeLimit;                                // 0xE0C(0x4)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        StalemateTimeRemaining;                            // 0xE10(0x4)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        RestartTimeRemaining;                              // 0xE14(0x4)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        FOBFinalizationTimeRemaining;                      // 0xE18(0x4)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1B9A[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	UMulticastDelegateProperty_                  OnFinalizationFOBTimerExpired;                     // 0xE20(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class USoundBase>             RoundTimeExpiringSound;                            // 0xE30(0x28)(Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class USoundBase>             StalemateTimeExpiringSound;                        // 0xE58(0x28)(Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class ABuildingCapturePointActor*>    CapturePoints;                                     // 0xE80(0x10)(Net, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	class ABuildingItemCollectorActor*           ItemCollector;                                     // 0xE90(0x8)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        StartMatchDelayTimer;                              // 0xE98(0x4)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bGateCraftingOnTeamLevel : 1;                      // Mask : 0x1 0xE9C(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1B9B[0x1B];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UCurveFloat*                           MatchLevelCurve;                                   // 0xEB8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        MatchLevel;                                        // 0xEC0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, EditConst, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1B9C[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	UMulticastDelegateProperty_                  OnHandleMatchLevelChanged;                         // 0xEC8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	int32                                        TotalHomebaseRating;                               // 0xED8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        AverageHomebaseRating;                             // 0xEDC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bUseExperimentalCraftingFeature;                   // 0xEE0(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1B9D[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortGameStatePvP");
		return Clss;
	}

	void SetMatchLevel(int32 InMatchLevel);
	void SetGameDifficultyRow(struct FDataTableRowHandle& GameDifficultyInfo);
	void OnRep_StalemateTimeRemaining();
	void OnRep_RoundTimeRemaining();
	void OnRep_MatchLevel();
	void OnRep_ItemCollector();
	bool IsExperimentalCraftingFeatureActive();
	int32 GetTotalHomebaseRating();
	int32 GetStartMatchDelayTimer();
	int32 GetRoundTimeAccumulated();
	int32 GetMatchLevel();
	class ABuildingItemCollectorActor* GetItemCollector();
	int32 GetFOBFinalizationTimeRemaining();
	int32 GetAverageHomebaseRating();
};

// 0xC70 (0x1B58 - 0xEE8)
// Class FortniteGame.FortGameStateAthena
class AFortGameStateAthena : public AFortGameStatePvP
{
public:
	uint8                                        Pad_1BA3[0x28];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	UMulticastDelegateProperty_                  OnCurrentPlaylistLoaded;                           // 0xF10(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	bool                                         bPlaylistDataIsLoaded;                             // 0xF20(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bPlaylistDataIsActivelyLoading;                    // 0xF21(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1BA4[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	UMulticastDelegateProperty_                  AllWinnersAnnounced;                               // 0xF28(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  CountdownTick;                                     // 0xF38(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  CountdownStarted;                                  // 0xF48(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  CountdownFinished;                                 // 0xF58(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  FinalCountdownTick;                                // 0xF68(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  FinalCountdownStarted;                             // 0xF78(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  FinalCountdownFinished;                            // 0xF88(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  CurrentHighScoreUpdated;                           // 0xF98(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  GameModeMessageRequest;                            // 0xFA8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnPlayerLeftCreativeIsland;                        // 0xFB8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnPlayerJoinedCreativeIsland;                      // 0xFC8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  MutatorGenericIntegerUpdated;                      // 0xFD8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  MutatorGameplayEvent;                              // 0xFE8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_1BA5[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        PlaylistTimeRemaining;                             // 0x1018(0x4)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        PrevPlaylistTimeRemaining;                         // 0x101C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        TotalFinalCountdownTime;                           // 0x1020(0x4)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bForceTeamScorePlacementOnDeath;                   // 0x1024(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bPlaylistStoppedSafeZonePhases;                    // 0x1025(0x1)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bSafeZonePaused;                                   // 0x1026(0x1)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1BA6[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        ServerChangelistNumber;                            // 0x1028(0x4)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1BA7[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AFortSpecialActorReplicationInfo*      SpecialActorData;                                  // 0x1030(0x8)(Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<TSubclassOf<class ABuildingActor>>    BuildingActorClasses;                              // 0x1038(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  WinnerAnnounced;                                   // 0x1048(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  WinningTeamAnnounced;                              // 0x1058(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  GamePhaseChanged;                                  // 0x1068(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  WinningScoreDetermined;                            // 0x1078(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  GamePhaseStepChanged;                              // 0x1088(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  StormCapStateChanged;                              // 0x1098(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  StormProgressStopped;                              // 0x10A8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnPlayersLeftChanged;                              // 0x10B8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnTeamsLeftChanged;                                // 0x10C8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	bool                                         bSkipWinnerAnnounced;                              // 0x10D8(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsInCountdown;                                    // 0x10D9(0x1)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsInFinalCountdown;                               // 0x10DA(0x1)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1BA8[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        WarmupCountdownStartTime;                          // 0x10DC(0x4)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        WarmupCountdownEndTime;                            // 0x10E0(0x4)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AircraftStartTime;                                 // 0x10E4(0x4)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SafeZonesStartTime;                                // 0x10E8(0x4)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        EndGameStartTime;                                  // 0x10EC(0x4)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        EndGameKickPlayerTime;                             // 0x10F0(0x4)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        TotalPlayers;                                      // 0x10F4(0x4)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        PlayersLeft;                                       // 0x10F8(0x4)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1BA9[0x54];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	enum class EAthenaStormCapState              StormCapState;                                     // 0x1150(0x1)(Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1BAA[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        CurrentPlayerCap;                                  // 0x1154(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DamageForStormCapMarking;                          // 0x1158(0x4)(Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1BAB[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<int32>                                TeamXPlayersLeft;                                  // 0x1160(0x10)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FFortWinnerPlayerData>         WinningPlayerList;                                 // 0x1170(0x10)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, RepNotify, NativeAccessSpecifierPublic)
	int32                                        TeamsLeft;                                         // 0x1180(0x4)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1BAC[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UObject*>                       ServerToClientPreloadList;                         // 0x1188(0x10)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, NativeAccessSpecifierPublic)
	class UAthenaBattleBusItemDefinition*        DefaultBattleBus;                                  // 0x1198(0x8)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bAllowUserPickedCosmeticBattleBus;                 // 0x11A0(0x1)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1BAD[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FAircraftFlightInfo>           TeamFlightPaths;                                   // 0x11A8(0x10)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, NativeAccessSpecifierPublic)
	struct FAircraftFlightInfo                   FlightPathMidLine;                                 // 0x11B8(0x28)(BlueprintVisible, BlueprintReadOnly, Net, NoDestructor, NativeAccessSpecifierPublic)
	struct FVector2D                             DropZoneCenter;                                    // 0x11E0(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             FlightPathSelectionCenter;                         // 0x11E8(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDateTime                             UtcTimeStartedMatch;                               // 0x11F0(0x8)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsLargeTeamGame;                                  // 0x11F8(0x1)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1BAE[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class APlayerState*                          WinningPlayerState;                                // 0x1200(0x8)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1BAF[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        WinningTeam;                                       // 0x1218(0x4)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        WinningScore;                                      // 0x121C(0x4)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        CurrentHighScore;                                  // 0x1220(0x4)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        CurrentHighScoreTeam;                              // 0x1224(0x4)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundCue*                             SupplyDropWaveStartedSoundCue;                     // 0x1228(0x8)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FText>                          KillFeedEntry;                                     // 0x1230(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_1BB0[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	UMulticastDelegateProperty_                  KillFeedUpdated;                                   // 0x1250(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TArray<class AFortPlayerState*>              SpectatorArray;                                    // 0x1260(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	enum class EAirCraftBehavior                 AirCraftBehavior;                                  // 0x1270(0x1)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1BB1[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bStormReachedFinalPosition;                        // 0x1272(0x1)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFriendlyFireType                 FriendlyFireType;                                  // 0x1273(0x1)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1BB2[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<enum class EFortTeam>                 ActiveTeamNums;                                    // 0x1278(0x10)(Net, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	int32                                        CurrentPlaylistId;                                 // 0x1288(0x4)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bIsTournamentMatch;                                // 0x128C(0x1)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1BB3[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AFortSafeZoneIndicator*                SafeZoneIndicator;                                 // 0x1290(0x8)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FSlateBrush                           MinimapBackgroundBrush;                            // 0x1298(0x88)(Transient, Protected, NativeAccessSpecifierProtected)
	class UTexture2D*                            MinimapBackgroundImage;                            // 0x1320(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInstanceDynamic*              MinimapBackgroundMID;                              // 0x1328(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInstanceDynamic*              MinimapCircleMID;                                  // 0x1330(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInstanceDynamic*              MinimapNextCircleMID;                              // 0x1338(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInstanceDynamic*              FullmapCircleMID;                                  // 0x1340(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInstanceDynamic*              FullmapNextCircleMID;                              // 0x1348(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FSlateBrush                           MinimapSafeZoneBrush;                              // 0x1350(0x88)(Transient, Protected, NativeAccessSpecifierProtected)
	struct FSlateBrush                           MinimapCircleBrush;                                // 0x13D8(0x88)(Transient, Protected, NativeAccessSpecifierProtected)
	struct FSlateBrush                           MinimapNextCircleBrush;                            // 0x1460(0x88)(Transient, Protected, NativeAccessSpecifierProtected)
	struct FSlateBrush                           FullMapCircleBrush;                                // 0x14E8(0x88)(Transient, Protected, NativeAccessSpecifierProtected)
	struct FSlateBrush                           FullMapNextCircleBrush;                            // 0x1570(0x88)(Transient, Protected, NativeAccessSpecifierProtected)
	struct FSlateBrush                           MinimapSafeZoneFinalPosBrush;                      // 0x15F8(0x88)(Transient, Protected, NativeAccessSpecifierProtected)
	struct FSlateBrush                           AircraftPathBrush;                                 // 0x1680(0x88)(Transient, Protected, NativeAccessSpecifierProtected)
	struct FSlateBrush                           AircraftMidlinePathBrush;                          // 0x1708(0x88)(Transient, Protected, NativeAccessSpecifierProtected)
	struct FSlateBrush                           AircraftPathTeamIndicatorBrush;                    // 0x1790(0x88)(Transient, Protected, NativeAccessSpecifierProtected)
	class UMaterialInterface*                    MiniMapBackgroundDrawingMaterial;                  // 0x1818(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInterface*                    MiniMapCircleDrawingMaterial;                      // 0x1820(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInterface*                    MiniMapNextCircleDrawingMaterial;                  // 0x1828(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FDynamicLandData>              DynamicLands;                                      // 0x1830(0x10)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	class AFortAthenaMapInfo*                    MapInfo;                                           // 0x1840(0x8)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AFortBroadcastSpectatorInfo*           BroadcastSpectatorInfo;                            // 0x1848(0x8)(Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EAthenaGamePhase                  GamePhase;                                         // 0x1850(0x1)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1BB4[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FPlaylistPropertyArray                CurrentPlaylistInfo;                               // 0x1858(0x190)(Net, RepNotify, Protected, NativeAccessSpecifierProtected)
	bool                                         bGameModeWillSkipAircraft;                         // 0x19E8(0x1)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        SafeZonePhase;                                     // 0x19E9(0x1)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EAthenaGamePhaseStep              GamePhaseStep;                                     // 0x19EA(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1BB5[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        GamePhaseStepTimeRemaining;                        // 0x19EC(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USoundMix*                             LobbySoundMix;                                     // 0x19F0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class AFortAthenaAircraft*>           Aircrafts;                                         // 0x19F8(0x10)(Net, ZeroConstructor, RepNotify, Protected, NativeAccessSpecifierProtected)
	uint8                                        bAircraftIsLocked : 1;                             // Mask : 0x1 0x1A08(0x1)(Net, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1BB6[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	enum class ESafeZoneStartUp                  CachedSafeZoneStartUp;                             // 0x1A0C(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1BB7[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        LobbyAction;                                       // 0x1A10(0x4)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1BB8[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGameplayMutatorEventData             MutatorEventData;                                  // 0x1A2C(0x10)(Net, RepNotify, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_1BB9[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGameplayMutatorObjectDataArray       MutatorObjectDataArray;                            // 0x1A40(0xC0)(Net, NativeAccessSpecifierPublic)
	int32                                        MutatorGenericInt_0;                               // 0x1B00(0x4)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MutatorGenericInt_1;                               // 0x1B04(0x4)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MutatorGenericInt_2;                               // 0x1B08(0x4)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1BBA[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AFortAthenaMutator_AI*                 GameplayMutator_AI;                                // 0x1B10(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFortMutatorListComponent*             MutatorListComponent;                              // 0x1B18(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DefaultGliderRedeployCanRedeploy;                  // 0x1B20(0x4)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DefaultRedeployGliderLateralVelocityMult;          // 0x1B24(0x4)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DefaultRedeployGliderHeightLimit;                  // 0x1B28(0x4)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DefaultParachuteDeployTraceForGroundDistance;      // 0x1B2C(0x4)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DefaultAllowNeutralWallEditing;                    // 0x1B30(0x4)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMeshNetworkStatus                    MeshNetworkStatus;                                 // 0x1B34(0x3)(Net, RepNotify, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_1BBB[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	UMulticastDelegateProperty_                  OnClientVolumeManagerReplicated;                   // 0x1B38(0x10)(ZeroConstructor, InstancedReference, NativeAccessSpecifierPublic)
	TSubclassOf<class AFortVolumeManager>        VolumeManagerToUse;                                // 0x1B48(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AFortVolumeManager*                    VolumeManager;                                     // 0x1B50(0x8)(Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortGameStateAthena");
		return Clss;
	}

	void SetLocationText(struct FGameplayTag& LocationTag, class FText& Text);
	void SetLocationPosition2D(struct FGameplayTag& LocationTag, const struct FVector2D& Location);
	void SetLocationFont(struct FGameplayTag& LocationTag, struct FSlateFontInfo& Font);
	void SetLocationColor(struct FGameplayTag& LocationTag, const struct FLinearColor& Color);
	void SetFloatingIslandInformation(const struct FVector& WorldPosition, bool bActivated);
	void RunPerfMemCheatScript_Client_Replicated(bool bStartStatFiles);
	void OnWinnerAnnounced();
	void OnRep_WinningTeam();
	void OnRep_WinningScore();
	void OnRep_WinningPlayerState();
	void OnRep_WinningPlayerList();
	void OnRep_VolumeManager();
	void OnRep_UtcTimeStartedMatch(struct FDateTime& OldUtcTimeStartedMatch);
	void OnRep_TeamsLeft();
	void OnRep_SupplyDropWaveStartedSoundCue();
	void OnRep_StormCapState();
	void OnRep_ServerChangelistNumber();
	void OnRep_SafeZonePhase();
	void OnRep_PlaylistTimeRemaining();
	void OnRep_PlayersLeft();
	void OnRep_MutatorGenericInt_2();
	void OnRep_MutatorGenericInt_1();
	void OnRep_MutatorGenericInt_0();
	void OnRep_MutatorEventData();
	void OnRep_MeshNetworkStatus();
	void OnRep_GamePhase(enum class EAthenaGamePhase OldGamePhase);
	void OnRep_DamageForStormCapMarking();
	void OnRep_CurrentPlaylistInfo();
	void OnRep_CurrentPlaylistId();
	void OnRep_CurrentHighScore();
	void OnRep_bPlaylistStoppedSafeZonePhases();
	void OnRep_Aircraft();
	void OnCurrentPlaylistLoaded__DelegateSignature(class FName PlaylistName, struct FGameplayTagContainer& PlaylistContextTags);
	bool IsTeamSwitchAllowed(class APawn* SwitchingPawn);
	bool IsPlaygroundModePlaylist();
	bool IsPlayerTriggeredRespawnAllowed();
	bool IsCreativeModePlaylist();
	class AFortSafeZoneIndicator* GetSafeZoneIndicator();
	bool GetPlaylistTeams(TArray<enum class EFortTeam>* OutTeams);
	class AFortGameplayMutator* GetMutatorByClass(class AActor* ContextActor, TSubclassOf<class AFortGameplayMutator> MutatorClass);
	class FName GetCurrentPlaylistName();
	class UAthenaBattleBusItemDefinition* GetBattleBusForPlayer(class AFortPlayerControllerAthena* PC);
	struct FGameplayTagContainer GetAthenaPlaylistContextTags();
	class AFortAthenaAircraft* GetAircraft(int32 AircraftIndex);
	enum class EAthenaAerialPhase GetAerialPhase(class AFortPlayerControllerAthena* PlayerController);
	bool CanUseSlowMotionOnVictory();
	bool CanRespawnOnStarterIsland();
	bool CanChangeGameplayOptions();
};

// 0x10 (0xE08 - 0xDF8)
// Class FortniteGame.FortGameStateBoss
class AFortGameStateBoss : public AFortGameStateZone
{
public:
	uint8                                        Pad_1BBC[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortGameStateBoss");
		return Clss;
	}

	void BossSpawned();
	void BossKilled();
	void AllPlayersDied();
};

// 0x40 (0xE38 - 0xDF8)
// Class FortniteGame.FortGameStateDeployableBase
class AFortGameStateDeployableBase : public AFortGameStateZone
{
public:
	class AFortDeployableBaseManager*            DeployableBaseManager;                             // 0xDF8(0x8)(Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	UMulticastDelegateProperty_                  OnDeployableBaseManagerCreated;                    // 0xE00(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	bool                                         bFireEndOfDayDelegate;                             // 0xE10(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1BBD[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FHordeDifficultyTierInfo>      TierDifficultyConfig;                              // 0xE18(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	TArray<struct FHordeDifficultyTierInfo>      PrestigeTierDifficultyConfig;                      // 0xE28(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortGameStateDeployableBase");
		return Clss;
	}

	bool ShouldUseStormShield();
	bool ShouldRespawnAtLastPawnLocation();
	void SetGameDifficultyRow(struct FDataTableRowHandle& GameDifficultyInfo);
	void SetGameDifficultyExplicitly(float InGameDifficulty);
	void OnRep_DeployableBaseManager();
	float GetStormShieldStartingRadiusOverride();
	float GetStormShieldEndingRadiusOverride();
	float GetStormShieldBreatherRadiusOverride();
	enum class EDeployableBaseUseType GetDeployableBaseUseType();
};

// 0x8 (0xE00 - 0xDF8)
// Class FortniteGame.FortGameStateEndless
class AFortGameStateEndless : public AFortGameStateZone
{
public:
	int32                                        WaveNumber;                                        // 0xDF8(0x4)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1BBE[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortGameStateEndless");
		return Clss;
	}

	void SetWaveNumber(int32 NewWaveNumber);
	int32 GetWaveNumber();
};

// 0x18 (0xE10 - 0xDF8)
// Class FortniteGame.FortGameStateFOB
class AFortGameStateFOB : public AFortGameStateZone
{
public:
	UMulticastDelegateProperty_                  OnBuildingDestroyedDel;                            // 0xDF8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_1BBF[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortGameStateFOB");
		return Clss;
	}

	void SetGameDifficultyRow(struct FDataTableRowHandle& GameDifficultyInfo);
	void SetGameDifficultyExplicitly(float InGameDifficulty);
};

// 0x0 (0x6A8 - 0x6A8)
// Class FortniteGame.FortGameStateFrontEnd
class AFortGameStateFrontEnd : public AFortGameState
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortGameStateFrontEnd");
		return Clss;
	}

};

// 0x50 (0xE48 - 0xDF8)
// Class FortniteGame.FortGameStateKeep
class AFortGameStateKeep : public AFortGameStateZone
{
public:
	struct FPermaniteBoundariesInfo              PermaniteBoundariesData;                           // 0xDF8(0x14)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_1BC0[0x3C];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortGameStateKeep");
		return Clss;
	}

	void OnRep_PermaniteBoundariesInfo();
};

// 0x60 (0xE58 - 0xDF8)
// Class FortniteGame.FortGameStateManor
class AFortGameStateManor : public AFortGameStateZone
{
public:
	uint8                                        Pad_1BC1[0x60];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortGameStateManor");
		return Clss;
	}

};

// 0x8 (0xE00 - 0xDF8)
// Class FortniteGame.FortGameStateOutpost
class AFortGameStateOutpost : public AFortGameStateZone
{
public:
	bool                                         bOutpostDefenseActive;                             // 0xDF8(0x1)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1BC2[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortGameStateOutpost");
		return Clss;
	}

	void SetGameDifficultyRow(struct FDataTableRowHandle& GameDifficultyInfo);
};

// 0x110 (0xFF8 - 0xEE8)
// Class FortniteGame.FortGameStatePvPBaseDestruction
class AFortGameStatePvPBaseDestruction : public AFortGameStatePvP
{
public:
	class FName                                  SessionXPRowName;                                  // 0xEE8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FRichCurve                            TeamLevelToSessionXPCurve;                         // 0xEF0(0x80)(Transient, Protected, NativeAccessSpecifierProtected)
	struct FRichCurve                            SessionXPToTeamLevelCurve;                         // 0xF70(0x80)(Transient, Protected, NativeAccessSpecifierProtected)
	int32                                        MaxTeamLevel;                                      // 0xFF0(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        MaxTeamExperience;                                 // 0xFF4(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortGameStatePvPBaseDestruction");
		return Clss;
	}

	int32 GetTeamLevelForExperienceAmount(int32 Experience);
	int32 GetMaxTeamLevel();
	int32 GetMaxTeamExperience();
	int32 GetExperienceRequiredForTeamLevel(int32 TeamLevel);
};

// 0x8 (0xE00 - 0xDF8)
// Class FortniteGame.FortGameStateSurvival
class AFortGameStateSurvival : public AFortGameStateZone
{
public:
	bool                                         bFireEndOfDayDelegate;                             // 0xDF8(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1BC3[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        TimeToDelayEndOfDayZoneScoreWidgetDisplay;         // 0xDFC(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortGameStateSurvival");
		return Clss;
	}

	void SetGameDifficultyRow(struct FDataTableRowHandle& GameDifficultyInfo);
};

// 0x8 (0x30 - 0x28)
// Class FortniteGame.FortGameUIExtenderAthena
class UFortGameUIExtenderAthena : public UObject
{
public:
	class APlayerController*                     Owner;                                             // 0x28(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortGameUIExtenderAthena");
		return Clss;
	}

	void GoToBossCommand();
	bool CanShowGoToBossCommand();
};

// 0x4F8 (0x610 - 0x118)
// Class FortniteGame.FortGameUserSettings
class UFortGameUserSettings : public UGameUserSettings
{
public:
	float                                        MouseSensitivity;                                  // 0x118(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        FortVersion;                                       // 0x11C(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1BC4[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         UnlockConsoleFPS;                                  // 0x138(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         LastAppliedUnlockConsoleFPS;                       // 0x139(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1BC5[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        CurrentConsoleFPSMode;                             // 0x13C(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        SubGameSelectCount_Athena;                         // 0x140(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1BC6[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FDateTime                             SubGameLastSelectedTime_Athena;                    // 0x148(0x8)(ZeroConstructor, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        SubGameSelectCount_Campaign;                       // 0x150(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1BC7[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FDateTime                             SubGameLastSelectedTime_Campaign;                  // 0x158(0x8)(ZeroConstructor, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FDateTime                             LastTimeSettingsSnapshotUploaded;                  // 0x160(0x8)(ZeroConstructor, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FString                                CustomVoiceChatInputDevice;                        // 0x168(0x10)(ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                CustomVoiceChatOutputDevice;                       // 0x178(0x10)(ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bMotionBlur;                                       // 0x188(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShowGrass;                                        // 0x189(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShowFPS;                                          // 0x18A(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1BC8[0x5];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<class FName, struct FDateTime>          NamedTimes;                                        // 0x190(0x50)(ZeroConstructor, Config, NativeAccessSpecifierPrivate)
	TMap<class FName, int32>                     NamedCounts;                                       // 0x1E0(0x50)(ZeroConstructor, Config, NativeAccessSpecifierPrivate)
	struct FDateTime                             LastSeenAthenaStoreRefreshTime;                    // 0x230(0x8)(ZeroConstructor, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FDateTime                             LastSeenAthenaStoreWeeklyEndTime;                  // 0x238(0x8)(ZeroConstructor, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FPlaylistData                         LastSelectedPlaylist;                              // 0x240(0x28)(Config, NativeAccessSpecifierPrivate)
	bool                                         LastSelectedFillOption;                            // 0x268(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1BC9[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<class FName, struct FSavedCustomMatchOptions> CustomMatchOptions;                                // 0x270(0x50)(ZeroConstructor, Config, NativeAccessSpecifierPrivate)
	class FString                                LastNewsVersionViewedBR;                           // 0x2C0(0x10)(ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FString                                LastNewsVersionViewedSTW;                          // 0x2D0(0x10)(ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FString                                LastPlaylistInfoVersionViewedBR;                   // 0x2E0(0x10)(ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bEulaAccepted;                                     // 0x2F0(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1BCA[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                EulaAcceptedUserId;                                // 0x2F8(0x10)(ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FDateTime                             LastEulaCheckTime;                                 // 0x308(0x8)(ZeroConstructor, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FHUDLayoutData                        HUDLayoutData;                                     // 0x310(0x10)(Config, NativeAccessSpecifierPublic)
	uint8                                        Pad_1BCB[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FHUDLayoutUsageData                   HUDLayoutUsageData;                                // 0x340(0x10)(Config, NoDestructor, NativeAccessSpecifierPublic)
	int32                                        bTimesSeenBacchusLoadTutorial;                     // 0x350(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bHasSeenTapToShoot;                                // 0x354(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1BCC[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        NumTimesSeeingPanningTip;                          // 0x358(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FFireModeData                         FireModeData;                                      // 0x35C(0x5)(Config, NoDestructor, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1BCD[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FFortSimpleGameStats                  SimpleMobileStats;                                 // 0x364(0x18)(Config, NoDestructor, NativeAccessSpecifierPrivate)
	int32                                        InitialBenchmarkState;                             // 0x37C(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDisableMouseAcceleration;                         // 0x380(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ESavedAccountType                 ChosenLoginType;                                   // 0x381(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1BCE[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	UMulticastDelegateProperty_                  OnViewDistanceQualityChanged;                      // 0x388(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnShadowQualityChanged;                            // 0x398(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnAntiAliasingQualityChanged;                      // 0x3A8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnTextureQualityChanged;                           // 0x3B8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnEffectsQualityChanged;                           // 0x3C8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnPostProcessQualityChanged;                       // 0x3D8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_1BCF[0x60];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FSavedCredentials>             Credentials;                                       // 0x448(0x10)(ZeroConstructor, Config, NativeAccessSpecifierPrivate)
	int32                                        SocialImportOptedOutVersion;                       // 0x458(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        VKImportOptedOutVersion;                           // 0x45C(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bHasSeenErebusSocialImport;                        // 0x460(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bHasSeenFriendImportToast;                         // 0x461(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1BD0[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FDateTime                             LastSocialImportPromptTime;                        // 0x468(0x8)(ZeroConstructor, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        SocialImportPromptCountCurrentVersion;             // 0x470(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        SocialImportPromptCountAllVersions;                // 0x474(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        VKImportPromptCountCurrentVersion;                 // 0x478(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        VKImportPromptCountAllVersions;                    // 0x47C(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bSocialImportDisplayed;                            // 0x480(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bMultiFactorAuthModalOpOut;                        // 0x481(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1BD1[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FDateTime                             LastEnableMFAModalPromptTime;                      // 0x488(0x8)(ZeroConstructor, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDateTime                             LastVKImportPromptTime;                            // 0x490(0x8)(ZeroConstructor, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<class FString, struct FDateTime>        FailedInviteMap;                                   // 0x498(0x50)(ZeroConstructor, Config, NativeAccessSpecifierPublic)
	uint8                                        Pad_1BD2[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	UMulticastDelegateProperty_                  OnAllowVideoPlaybackChanged;                       // 0x4F0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	bool                                         bAllowLowPowerMode;                                // 0x500(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bAllowVideoPlayback;                               // 0x501(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	enum class EFortMobileFPSMode                MobileFPSMode;                                     // 0x502(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1BD3[0xFD];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                MobileQualitySettingsResetDefaultsGUID;            // 0x600(0x10)(ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortGameUserSettings");
		return Clss;
	}

	void ToggleScalabilityMode(enum class EFortScalabilityMode Mode, bool bEnabled, bool bForceApply);
	void SetMobileFPSMode(enum class EFortMobileFPSMode Mode);
	void SetHasSeenTapToShoot(bool bHasSeenIt);
	void SetHasSeenPanningTip(bool bHasSeenIt);
	void ResetToDefaultDeviceScalability();
	void ResetScalabilityModes();
	bool IsVideoPlaybackAllowed();
	bool GetHasSeenTapToShoot();
	bool GetHasSeenPanningTip();
	struct FFireModeData& GetFireModeData();
};

// 0x58 (0x340 - 0x2E8)
// Class FortniteGame.FortGameViewportClient
class UFortGameViewportClient : public UGameViewportClient
{
public:
	class FText                                  NetworkFailureMessage;                             // 0x2E8(0x18)(Transient, NativeAccessSpecifierPrivate)
	class FString                                NetworkFailureMessageAdditionalAnalyticsString;    // 0x300(0x10)(ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1BD4[0x30];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortGameViewportClient");
		return Clss;
	}

};

// 0x48 (0x128 - 0xE0)
// Class FortniteGame.FortGiftBoxItem
class UFortGiftBoxItem : public UFortAccountItem
{
public:
	struct FGiftBoxInfo                          GiftBoxInfo;                                       // 0xE0(0x48)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortGiftBoxItem");
		return Clss;
	}

	bool TryGetParamString(const class FString& ParamName, class FString* OutValue);
	bool TryGetParamInt(const class FString& ParamName, int32* OutValue);
	class UFortItemDefinition* RetrieveItemDefintionFromParam(const class FString& ParamName);
	bool IsVisibleIn(enum class ESubGame SubGame);
	bool HasParam(const class FString& ParamName);
	bool HasAccountID();
	class UFortGiftBoxItemDefinition* GetGiftBoxDefinition();
	class FText FormatTextUsingParams(class FText& FormatString);
	void FilterUserMessageForProfanity(int32 ControllerId, UDelegateProperty_ OnTextFiltered);
};

// 0x90 (0x3F0 - 0x360)
// Class FortniteGame.FortGiftBoxItemDefinition
class UFortGiftBoxItemDefinition : public UFortAccountItemDefinition
{
public:
	TSubclassOf<class UUserWidget>               GiftBoxPreMessageWidget;                           // 0x360(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UUserWidget>               GiftBoxHeaderSubWidget;                            // 0x368(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                  DefaultHeaderText;                                 // 0x370(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class FText                                  DefaultBodyText;                                   // 0x388(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class FString                                HeaderAssetString;                                 // 0x3A0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                BodyAssetString;                                   // 0x3B0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortGiftWrapType                 GiftWrapType;                                      // 0x3C0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bReuseExistingBoxIfPossible;                       // 0x3C1(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ESubGame                          RestrictToSubgame;                                 // 0x3C2(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1BD8[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        SortPriority;                                      // 0x3C4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UObject>                ItemDisplayAsset;                                  // 0x3C8(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortGiftBoxItemDefinition");
		return Clss;
	}

};

// 0x60 (0x2D0 - 0x270)
// Class FortniteGame.FortGliderAnimInstance
class UFortGliderAnimInstance : public UAnimInstance
{
public:
	//float                                      DeltaTime;                                         // 0x268(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AFortPlayerParachute*                  OwnerGlider;                                       // 0x270(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AFortPlayerPawn*                       OwnerFortPawn;                                     // 0x278(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FFortAnimInput_Skydiving              SkydivingState;                                    // 0x280(0x48)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, Protected, NativeAccessSpecifierProtected)
	bool                                         bIsAccelerating2D;                                 // 0x2C8(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1BD9[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortGliderAnimInstance");
		return Clss;
	}

	void SetGliderFullyDeployed(bool bIsFullyDeployed);
};

// 0x58 (0x88 - 0x30)
// Class FortniteGame.FortGliderPackSet
class UFortGliderPackSet : public UFortAttributeSet
{
public:
	uint8                                        Pad_1BDA[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FFortGameplayAttributeData            MaxCharges;                                        // 0x38(0x28)(BlueprintVisible, BlueprintReadOnly, Net, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            CurrentCharges;                                    // 0x60(0x28)(BlueprintVisible, BlueprintReadOnly, Net, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortGliderPackSet");
		return Clss;
	}

};

// 0x0 (0x330 - 0x330)
// Class FortniteGame.FortGlobalAbilityTargetingActor
class AFortGlobalAbilityTargetingActor : public AInfo
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortGlobalAbilityTargetingActor");
		return Clss;
	}

};

// 0x18 (0x348 - 0x330)
// Class FortniteGame.FortGlobalEnvironmentAbilityActor
class AFortGlobalEnvironmentAbilityActor : public AInfo
{
public:
	uint8                                        Pad_1BDB[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UFortAbilitySystemComponent*           AbilitySystemComponent;                            // 0x338(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFortDamageSet*                        DamageSet;                                         // 0x340(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortGlobalEnvironmentAbilityActor");
		return Clss;
	}

};

// 0x0 (0x348 - 0x348)
// Class FortniteGame.FortGlobalEnvironmentAbilityActorAthena
class AFortGlobalEnvironmentAbilityActorAthena : public AFortGlobalEnvironmentAbilityActor
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortGlobalEnvironmentAbilityActorAthena");
		return Clss;
	}

};

// 0x1C8 (0x1F0 - 0x28)
// Class FortniteGame.FortGlobals
class UFortGlobals : public UObject
{
public:
	class FString                                LobbyMap;                                          // 0x28(0x10)(ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MinTheaterListRefreshDelay;                        // 0x38(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaxTheaterListRefreshDelay;                        // 0x3C(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinCullObjectSize;                                 // 0x40(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinCullDistance;                                   // 0x44(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxCullObjectSize;                                 // 0x48(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxCullDistance;                                   // 0x4C(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinRespawnHeightForEnvironmentDeath;               // 0x50(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxRespawnInAirHeight;                             // 0x54(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnablePlayerTriggeredRespawn;                     // 0x58(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnableNewCustomizationPanel;                      // 0x59(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnableInfluenceMap;                               // 0x5A(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnableAIDespawning;                               // 0x5B(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnableDBNO;                                       // 0x5C(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnableHeroLoadoutSystem;                          // 0x5D(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1BE2[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        MaxAssetsToPreload;                                // 0x60(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bOnlyPreloadCity;                                  // 0x64(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnableInWorldScoreNumbers;                        // 0x65(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bMustUseToggleJetpackExecute;                      // 0x66(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnableNewRewardFlow;                              // 0x67(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnableWIFE;                                       // 0x68(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnableFrontendCrafting;                           // 0x69(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnableFrontendStorage;                            // 0x6A(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnableLazyASC;                                    // 0x6B(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnableFriendCodes;                                // 0x6C(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnableCreativeMode;                               // 0x6D(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnableCreativeModeLimitedAccess;                  // 0x6E(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnableCreativeModeLimitedAccessForFounders;       // 0x6F(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FlyVerificationInterval;                           // 0x70(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1BE3[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                CreativeModeLimitedAccessEndTime;                  // 0x78(0x10)(ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnableCreativeModeTutorials;                      // 0x88(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1BE4[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        CreativeTutorialSkydivingDelay;                    // 0x8C(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CreativeReturnToHubTutorialDelay;                  // 0x90(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1BE5[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FLoginFailureLogSubmitOptions         LoginFailureOptions;                               // 0x98(0x20)(Config, NativeAccessSpecifierPublic)
	struct FPurchaseFailureLogSubmitOptions      RealMoneyPurchaseFailureOptions;                   // 0xB8(0x20)(Config, NativeAccessSpecifierPublic)
	bool                                         bSubmitReturnToMenuErrorLogs;                      // 0xD8(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1BE6[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        ReturnToMenuErrorLogTailKb;                        // 0xDC(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ReturnToMenuErrorLogSubmitChance;                  // 0xE0(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1BE7[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FPartyFailureLogSubmit                PartyJoinFailureLogSubmit;                         // 0xE8(0x20)(Config, NativeAccessSpecifierPublic)
	bool                                         bShowSkillTreeMovies;                              // 0x108(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShowMissionResultsMovies;                         // 0x109(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDisablePlayerTeleportDuringMissionResults;        // 0x10A(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDisableParticleEffectsDuringMissionResults;       // 0x10B(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bFlushGPUWhenPlayerIsTeleportedAtEndOfZone;        // 0x10C(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bStreamOutTextureDataWhenPlayerIsTeleportedAtEndOfZone; // 0x10D(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bTwitchEnabled;                                    // 0x10E(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bAllowContainersInCreativeItemLists;               // 0x10F(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bAccountLinkingEnabled;                            // 0x110(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortAccountLinkingUIConfig       AccountLinkingUIConfig;                            // 0x111(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1BE8[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                AccountLinkingUIURL;                               // 0x118(0x10)(ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnableAccountLinkingUIURLButton;                  // 0x128(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bTwitchHeartbeatEnabled;                           // 0x129(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bTwitchAllowDisplayViewernames;                    // 0x12A(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1BE9[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        MaxTwitchViewerNamesToCache;                       // 0x12C(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        TwitchViewerNameExpirationMinutes;                 // 0x130(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinTwitchHeartbeatInterval;                        // 0x134(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TwitchAccountInformationRefreshInterval;           // 0x138(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bAllowLogout;                                      // 0x13C(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bAllowQuit;                                        // 0x13D(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bHasWorldMap;                                      // 0x13E(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1BEA[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        PlayerUnregistrationFailsafeTimer;                 // 0x140(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PollForDedicatedServerReadyToShutdownInterval;     // 0x144(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bUploadAthenaStats;                                // 0x148(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bUploadAthenaStatsV2;                              // 0x149(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDisableTimePlayedStat;                            // 0x14A(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bAthenaStatsFrontendEnabled;                       // 0x14B(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bAthenaLeaderboardFrontEndEnabled;                 // 0x14C(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bAthenaSquadQuickChatEnabled;                      // 0x14D(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1BEB[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        AthenaQuickChatRangeForNonSquadTeamMembers;        // 0x150(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bGlobalLeaderboardsFrontEndEnabled;                // 0x154(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1BEC[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        TimeBetweenLeaderboardRequestsMinutes;             // 0x158(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bFirstShotAccuracyDisabled;                        // 0x15C(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bAllowProjectileRethrow;                           // 0x15D(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bAthenaUsesSimCollision;                           // 0x15E(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bAthenaSimVehicles;                                // 0x15F(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bAthenaSubstepping;                                // 0x160(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bCampaignSubstepping;                              // 0x161(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bCampaignUsesSimCollision;                         // 0x162(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bCampaignSimVehicles;                              // 0x163(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaximumCharacterVelocity;                          // 0x164(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1BED[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UObject*>                       AthenaReferencedObjects;                           // 0x170(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	int32                                        NumOutstandingAthenaAsyncRequests;                 // 0x180(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        TotalAthenaAsyncRequests;                          // 0x184(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class AActor>                  AthenaAlwaysLoadedContentHack;                     // 0x188(0x28)(Transient, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bAllowXboxStwToken;                                // 0x1B0(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bUsePlatformProfanityFilterForChat;                // 0x1B1(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShouldSendSettingsSnapshotOnLogin;                // 0x1B2(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1BEE[0x1D];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FSubGameAccess>                SubGameAccess;                                     // 0x1D0(0x10)(ZeroConstructor, Config, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1BEF[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortGlobals");
		return Clss;
	}

	bool UninstallAllOnDemandChunks();
	bool ShouldStreamOutTextureDataWhenPlayerIsTeleportedAtEndOfZone();
	bool ShouldShowSkillTreeMovies();
	bool ShouldShowMissionResultsMovies();
	bool ShouldFlushGPUWhenPlayerIsTeleportedAtEndOfZone();
	bool ShouldDisablePlayerTeleportDuringMissionResults();
	bool ShouldDisableParticleEffectsDuringMissionResults();
	void SetCurrentSubGame(class UObject* WorldContextObject, enum class ESubGame SubGame);
	bool IsWIFEEnabled();
	bool IsUsingTouch(class UObject* WorldContextObject);
	bool IsTwitchEnabled();
	bool IsTouchInputPlatform();
	bool IsTencentBuild();
	bool IsNewRewardFlowEnabled();
	bool IsMobileGame(class UObject* WorldContextObject);
	bool IsInSubGame(class UObject* WorldContextObject, enum class ESubGame SubGame);
	bool IsInAthena(class UObject* WorldContextObject);
	bool IsHeroLoadoutSystemEnabled();
	bool IsFrontendStorageEnabled();
	bool IsFrontendCraftingEnabled();
	bool IsFirstShotAccuracyDisabled();
	bool IsErebusWithVoice();
	bool IsErebus();
	bool IsDisplayingTwitchViewerNamesAllowed();
	bool IsBROnly();
	bool IsAllContentInstalled();
	bool IsAccountLinkingUIURLButtonEnabled();
	bool IsAccountLinkingEnabled();
	bool InstallAllOnDemandChunks();
	enum class EChunkInstallState GetOnDemandChunksInstallState();
	int32 GetMinTheaterListRefreshDelay();
	int32 GetMaxTheaterListRefreshDelay();
	enum class ESubGame GetCurrentSubGame(class UObject* WorldContextObject);
	class FString GetAccountLinkingUIURL();
	enum class EFortAccountLinkingUIConfig GetAccountLinkingUIConfig();
	bool AreFriendCodesEnabled();
	bool AllowContainersInCreativeItemLists();
};

// 0x10 (0x410 - 0x400)
// Class FortniteGame.FortGoatVehicleAnimInstance
class UFortGoatVehicleAnimInstance : public UFortVehicleAnimInstance
{
public:
	//class AFortAthenaGoatVehicle*              GolfCart;                                          // 0x3F8(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        GolfCartSpeed;                                     // 0x400(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bForwardSpeedIsNearlyZero;                         // 0x404(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bForwardSpeedIsGreaterThanOne;                     // 0x405(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bReverseSpeedIsGreaterThanOne;                     // 0x406(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bSpeedIsGreaterThanFiveAndPlayerHitSpace;          // 0x407(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsBraking;                                        // 0x408(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsEBraking;                                       // 0x409(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsBoosting;                                       // 0x40A(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsPowerSliding;                                   // 0x40B(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bPlayerHitSpaceBar;                                // 0x40C(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1BF0[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortGoatVehicleAnimInstance");
		return Clss;
	}

};

// 0xF8 (0x438 - 0x340)
// Class FortniteGame.FortGoatVehicleConfigs
class UFortGoatVehicleConfigs : public UFortSKMotorVehicleConfigs
{
public:
	float                                        BounceCrouchTime;                                  // 0x340(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BounceCrouchTimeDeadzone;                          // 0x344(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BounceRecoilTime;                                  // 0x348(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BounceForcePerMass;                                // 0x34C(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PassengerLeanMagnitude;                            // 0x350(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PassengerLeanMinMagnitude;                         // 0x354(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PassengerLeanLeftRightInterpolationPerSecond;      // 0x358(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PassengerLeanUpInterpolationPerSecond;             // 0x35C(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PassengerLeanDownInterpolationPerSecond;           // 0x360(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PassengerLeanResetInterpolationPerSecond;          // 0x364(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PassengerLeanDeadzone;                             // 0x368(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HandBrakeForce;                                    // 0x36C(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PowerSlideMinAngle;                                // 0x370(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinLateralSpeedForPowerSlideBoost;                 // 0x374(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxAccumulatedPowerSlideBoost;                     // 0x378(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1BF1[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FGoatVehicleBoostLevel>        PowerSlideBoostAccumulationSteps;                  // 0x380(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, NativeAccessSpecifierPublic)
	float                                        PowerSlideAccumulationMultiplier;                  // 0x390(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PowerSlideTopSpeedMultiplier;                      // 0x394(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PowerSlideTopSpeedInAirMultiplier;                 // 0x398(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PowerSlideStrength;                                // 0x39C(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PowerSlideMinAngularSpeed;                         // 0x3A0(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PowerSlideMaxAngularSpeed;                         // 0x3A4(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BoostSteeringMultiplier;                           // 0x3A8(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BoostCooldown;                                     // 0x3AC(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BoostSteeringMultiplierRampTime;                   // 0x3B0(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BoostSlowExtraStrength;                            // 0x3B4(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinForwardSpeedBoostExtraStrength;                 // 0x3B8(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BoostTopSpeedForceMultiplier;                      // 0x3BC(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        VehiclePowerSlideFrontMultiplier;                  // 0x3C0(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        VehiclePowerSlideRearMultiplier;                   // 0x3C4(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PowerSlideMinPushForce;                            // 0x3C8(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CameraShakeAmplitudeMin;                           // 0x3CC(0x4)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CameraShakeAmplitudeMax;                           // 0x3D0(0x4)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SpringFudgeFactor;                                 // 0x3D4(0x4)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CameraShakeNormalizedSpeed;                        // 0x3D8(0x4)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CameraShakeSpeedCurvePow;                          // 0x3DC(0x4)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PowerSlideShakeMultiplierMin;                      // 0x3E0(0x4)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PowerSlideShakeMultiplierMax;                      // 0x3E4(0x4)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BoostingCameraShakeAmount;                         // 0x3E8(0x4)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BoostCameraShakeFrequency;                         // 0x3EC(0x4)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SmoothedSpringCompressionMin;                      // 0x3F0(0x4)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SmoothedSpringCompressionMax;                      // 0x3F4(0x4)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PowerSlideMinSpringCompression;                    // 0x3F8(0x4)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ScreenShakeFrequencyMin;                           // 0x3FC(0x4)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ScreenShakeFrequencyMax;                           // 0x400(0x4)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PassengerCameraShakeMultiplier;                    // 0x404(0x4)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ScreenShakeYawFrequencyMultiplier;                 // 0x408(0x4)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          WheelSlideBoostColorWhenNotPowerSliding;           // 0x40C(0x10)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TreadWidth;                                        // 0x41C(0x4)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RumbleMultiplier;                                  // 0x420(0x4)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SparksRumbleMultiplier;                            // 0x424(0x4)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BoostCameraOffset;                                 // 0x428(0x4)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ADSCameraDistance;                                 // 0x42C(0x4)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PassengerCameraOffset;                             // 0x430(0x4)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ADSInterpSpeed;                                    // 0x434(0x4)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortGoatVehicleConfigs");
		return Clss;
	}

};

// 0xC8 (0xF8 - 0x30)
// Class FortniteGame.FortGuidedMissilePackSet
class UFortGuidedMissilePackSet : public UFortAttributeSet
{
public:
	struct FFortGameplayAttributeData            MaxMissiles;                                       // 0x30(0x28)(BlueprintVisible, BlueprintReadOnly, Net, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            Missiles;                                          // 0x58(0x28)(BlueprintVisible, BlueprintReadOnly, Net, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            ReserveMaxMissiles;                                // 0x80(0x28)(BlueprintVisible, BlueprintReadOnly, Net, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            ReserveMissiles;                                   // 0xA8(0x28)(BlueprintVisible, BlueprintReadOnly, Net, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            ReloadDelay;                                       // 0xD0(0x28)(BlueprintVisible, BlueprintReadOnly, Net, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortGuidedMissilePackSet");
		return Clss;
	}

};

// 0x0 (0x40 - 0x40)
// Class FortniteGame.FortHealing
class UFortHealing : public UFortGameplayEffectExecutionCalculation
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortHealing");
		return Clss;
	}

};

// 0x50 (0x2A0 - 0x250)
// Class FortniteGame.FortHealthBarComponent
class UFortHealthBarComponent : public USceneComponent
{
public:
	//class ABuildingActor*                      BuildingActorOwner;                                // 0x248(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FText                                  DisplayText;                                       // 0x250(0x18)(Edit, Net, DisableEditOnInstance, RepNotify, Protected, NativeAccessSpecifierProtected)
	bool                                         bIsHealthBarVisible;                               // 0x268(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnInstance, SaveGame, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1BF2[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        MaxDistance;                                       // 0x26C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCurveFloat*                           ScaleOverDistanceCurve;                            // 0x270(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bClampToScreen;                                    // 0x278(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bShowClampToScreenArrow;                           // 0x279(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1BF3[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UCurveLinearColor*                     HealthBarColorCurve;                               // 0x280(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1BF4[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortHealthBarComponent");
		return Clss;
	}

	void SetHealthBarWidgetVisibility(bool bIsVisible);
	void SetHealthBarVisibility(bool bNewVisibleState);
	void SetHealthBarDisplayText(class FText NewDisplayText);
	void OnRep_IsVisible();
	void OnRep_DisplayText();
	class FText GetHealthBarDisplayText();
};

// 0x38 (0x88 - 0x50)
// Class FortniteGame.FortSlateHUDIndicator
class UFortSlateHUDIndicator : public UFortIndicator
{
public:
	uint8                                        Pad_1BF5[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bClampToScreen;                                    // 0x58(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShowClampToScreenArrow;                           // 0x59(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1BF6[0x2E];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortSlateHUDIndicator");
		return Clss;
	}

};

// 0x38 (0xC0 - 0x88)
// Class FortniteGame.FortHealthBarIndicator
class UFortHealthBarIndicator : public UFortSlateHUDIndicator
{
public:
	uint8                                        Pad_1BF7[0x38];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortHealthBarIndicator");
		return Clss;
	}

};

// 0xE0 (0x110 - 0x30)
// Class FortniteGame.FortHelpItem
class UFortHelpItem : public UDataAsset
{
public:
	enum class EFortHelpItemType                 ItemType;                                          // 0x30(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1BF8[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  ItemId;                                            // 0x34(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1BF9[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  HeaderName;                                        // 0x40(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class FText                                  BodyText;                                          // 0x58(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FFortHelpAdditionalContent            AdditionalContent;                                 // 0x70(0xA0)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortHelpItem");
		return Clss;
	}

	TArray<class UFortHelpItem*> GetSubItems();
	class UFortHelpItem* GetItemWithID(class FName _ItemID);
};

// 0x20 (0x130 - 0x110)
// Class FortniteGame.FortHelpItemCategory
class UFortHelpItemCategory : public UFortHelpItem
{
public:
	TArray<class UFortHelpItem*>                 AssetSubItems;                                     // 0x110(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<class UFortHelpItem*>                 InlineSubItems;                                    // 0x120(0x10)(Edit, ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortHelpItemCategory");
		return Clss;
	}

};

// 0x0 (0x110 - 0x110)
// Class FortniteGame.FortHelpItemEntry
class UFortHelpItemEntry : public UFortHelpItem
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortHelpItemEntry");
		return Clss;
	}

};

// 0xB0 (0x1A8 - 0xF8)
// Class FortniteGame.FortWorker
class UFortWorker : public UFortCharacter
{
public:
	class FString                                Slotted_building_id;                               // 0xF8(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        building_slot_used;                                // 0x108(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Gender;                                            // 0x10C(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                Personality;                                       // 0x110(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                Set_bonus;                                         // 0x120(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                Portrait;                                          // 0x130(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                 PersonalityTag;                                    // 0x140(0x20)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                 SetBonusTag;                                       // 0x160(0x20)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UFortItemIconDefinition> IconDefinition;                                    // 0x180(0x28)(Edit, Transient, EditConst, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortWorker");
		return Clss;
	}

	class UFortWorkerType* GetWorkerTypeBP();
};

// 0x78 (0x220 - 0x1A8)
// Class FortniteGame.FortHero
class UFortHero : public UFortWorker
{
public:
	class FString                                Hero_name;                                         // 0x1A8(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FString>                        Equipped_cosmetics;                                // 0x1B8(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FFortSavedModeLoadout>         Mode_loadouts;                                     // 0x1C8(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                         Refundable;                                        // 0x1D8(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1BFA[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UFortHeroSpecialization*>       Specializations;                                   // 0x1E0(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class UFortAbilityKit*>               SpecializationAbilityKits;                         // 0x1F0(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	class UFortCharacterCosmeticItem*            CosmeticItem;                                      // 0x200(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UCustomCharacterPart*>          CharacterParts;                                    // 0x208(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_1BFB[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortHero");
		return Clss;
	}

	bool IsLevelClamped();
	int32 GetUnclampedLevel();
	class UFortHeroType* GetHeroTypeBP();
};

// 0x68 (0x98 - 0x30)
// Class FortniteGame.FortHeroClassGameplayDefinition
class UFortHeroClassGameplayDefinition : public UPrimaryDataAsset
{
public:
	TSoftClassPtr<class AFortPlayerPawn>         OverridePawnClass;                                 // 0x30(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGameplayTagContainer                 HeroClassTags;                                     // 0x58(0x20)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FDataTableRowHandle                   LegacyStatHandle;                                  // 0x78(0x10)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPrivate)
	TArray<TSoftObjectPtr<class UFortAbilityKit>> ClassAbilityKits;                                  // 0x88(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortHeroClassGameplayDefinition");
		return Clss;
	}

};

// 0x0 (0x30 - 0x30)
// Class FortniteGame.FortHeroCosmeticDefinition
class UFortHeroCosmeticDefinition : public UPrimaryDataAsset
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortHeroCosmeticDefinition");
		return Clss;
	}

};

// 0x90 (0xC0 - 0x30)
// Class FortniteGame.FortHeroData
class UFortHeroData : public UPrimaryDataAsset
{
public:
	class FText                                  DefaultHeroName;                                   // 0x30(0x18)(Edit, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class UFortHeroType>          DefaultHero;                                       // 0x48(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FHeroPerkDefaultRequirements          CommanderPerkDefaultRequirements;                  // 0x70(0xC)(Edit, NoDestructor, NativeAccessSpecifierPrivate)
	struct FHeroPerkDefaultRequirements          LeaderPerkDefaultRequirements;                     // 0x7C(0xC)(Edit, NoDestructor, NativeAccessSpecifierPrivate)
	bool                                         bLeaderPerkDependsOnSupportTierUnlocks;            // 0x88(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1BFC[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FGameplayEffectApplicationInfo> CombinedStatGEs;                                   // 0x90(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	TArray<struct FHeroSubclassAttributeData>    HeroAttributeDataForSubclasses;                    // 0xA0(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	TArray<struct FHeroKeywordDisplayData>       HeroKeywordDisplayData;                            // 0xB0(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortHeroData");
		return Clss;
	}

};

// 0x10 (0x380 - 0x370)
// Class FortniteGame.FortHeroExhibitActor
class AFortHeroExhibitActor : public AFortExhibitActor
{
public:
	//class UFortHeroType*                       HeroType;                                          // 0x368(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AFortPlayerPawn*                       HeroExhibitPawn;                                   // 0x370(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1BFD[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortHeroExhibitActor");
		return Clss;
	}

};

// 0x1A0 (0x1D0 - 0x30)
// Class FortniteGame.FortHeroGameplayDefinition
class UFortHeroGameplayDefinition : public UPrimaryDataAsset
{
public:
	TSoftObjectPtr<class UFortHeroClassGameplayDefinition> HeroClassGameplayDefinition;                       // 0x30(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGameplayTagContainer                 HeroBaseStatlineTags;                              // 0x58(0x20)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FGameplayTagContainer                 HeroTags;                                          // 0x78(0x20)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	TArray<struct FFortHeroTierAbilityKit>       TierAbilityKits;                                   // 0x98(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FFortHeroGameplayPiece                HeroPerk;                                          // 0xA8(0x80)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FFortHeroGameplayPiece                CommanderPerk;                                     // 0x128(0x80)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class UFortHeroTeamLeadPerkDefinition> TeamLeadPerkDefinition;                            // 0x1A8(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortHeroGameplayDefinition");
		return Clss;
	}

	bool IsTeamLeadPerkUnlockedForHero(class UFortHero* FortHero);
	bool IsCommanderPerkUnlockedForHero(class UFortHero* FortHero);
	TArray<class FText> GetKeywordDisplayNames(class UFortHeroType* HeroType);
	TArray<class UFortAbilityKit*> GetAbilityKitsForActiveAbilityPerks(class UFortHeroType* HeroDefinition);
	class UFortAbilityKit* GetAbilityKitForTeamLeadPerk(class UFortHeroType* HeroDefinition);
	class UFortAbilityKit* GetAbilityKitForHeroPerk(class UFortHeroType* HeroDefinition);
	class UFortAbilityKit* GetAbilityKitForCommanderPerk(class UFortHeroType* HeroDefinition);
	bool DoesTeamLeadPerkApplyToCommander(class UFortHero* TeamLeadHero, class UFortHero* CommanderHero);
	bool DoesHeroSatisfyTeamLeadPerkCondition(class UFortHeroType* TeamLeadHeroDefinition, class UFortHero* SupportHero);
	bool DoesHeroPerkApplyToCommander(class UFortHeroType* HeroDefinition, class UFortHero* CommanderHero);
};

// 0x240 (0x270 - 0x30)
// Class FortniteGame.FortHeroSpecialization
class UFortHeroSpecialization : public UPrimaryDataAsset
{
public:
	TArray<struct FFortSpecializationSlot>       SpecializationSlots;                               // 0x30(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	TArray<struct FFortSpecializationSlot>       TacticalAbilitySlots;                              // 0x40(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	TArray<struct FFortSpecializationSlot>       SupportAbilitySlots;                               // 0x50(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class UFortCharacterCosmeticItemDefinition> CosmeticItem;                                      // 0x60(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<TSoftObjectPtr<class UCustomCharacterPart>> CharacterParts;                                    // 0x88(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, NativeAccessSpecifierPrivate)
	enum class EFortAlteration                   AlterationType;                                    // 0x98(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1C03[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FHeroSpecializationAttributeRequirement> AttributeRequirements;                             // 0xA0(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FGameplayTagContainer                 RequiredTags;                                      // 0xB0(0x20)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	uint8                                        bForceShowHeadAccessory : 1;                       // Mask : 0x1 0xD0(0x1)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        bForceShowBackpack : 1;                            // Mask : 0x2 0xD0(0x1)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1C04[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FSlateBrush                           CardIconBrush;                                     // 0xD8(0x88)(Edit, EditConst, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1C05[0x110];                                   // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortHeroSpecialization");
		return Clss;
	}

};

// 0x88 (0xB8 - 0x30)
// Class FortniteGame.FortHeroTeamLeadPerkDefinition
class UFortHeroTeamLeadPerkDefinition : public UPrimaryDataAsset
{
public:
	TSoftObjectPtr<class UFortAbilityKit>        GrantedAbilityKit;                                 // 0x30(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bProgressiveBonus;                                 // 0x58(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1C06[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGameplayTagQuery                     RequiredCommanderTagQuery;                         // 0x60(0x48)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TArray<struct FFortHeroTeamLeadPerkSquadCondition> TeamLeadPerkConditions;                            // 0xA8(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortHeroTeamLeadPerkDefinition");
		return Clss;
	}

};

// 0x0 (0xC0 - 0xC0)
// Class FortniteGame.FortHeroTooltip
class UFortHeroTooltip : public UFortCharacterTooltip
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortHeroTooltip");
		return Clss;
	}

};

// 0xA0 (0x400 - 0x360)
// Class FortniteGame.FortWorkerType
class UFortWorkerType : public UFortCharacterType
{
public:
	enum class EFortCustomGender                 Gender;                                            // 0x360(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1C07[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftObjectPtr<class UFortItemIconDefinition> FixedPortrait;                                     // 0x368(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsManager;                                        // 0x390(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1C08[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGameplayTagContainer                 ManagerSynergyTag;                                 // 0x398(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FGameplayTagContainer                 FixedPersonalityTag;                               // 0x3B8(0x20)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FGameplayTagContainer                 FixedSetBonusTag;                                  // 0x3D8(0x20)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	int32                                        MatchingPersonalityBonus;                          // 0x3F8(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        MismatchingPersonalityPenalty;                     // 0x3FC(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortWorkerType");
		return Clss;
	}

};

// 0x1F0 (0x5F0 - 0x400)
// Class FortniteGame.FortHeroType
class UFortHeroType : public UFortWorkerType
{
public:
	uint8                                        Pad_1C0B[0x28];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	uint8                                        bForceShowHeadAccessory : 1;                       // Mask : 0x1 0x428(0x1)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bForceShowBackpack : 1;                            // Mask : 0x2 0x428(0x1)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1C0C[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<TSoftObjectPtr<class UFortHeroSpecialization>> Specializations;                                   // 0x430(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UFortMontageLookupTable> DefaultMontageLookupTable;                         // 0x440(0x28)(Edit, DisableEditOnInstance, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UFortMontageLookupTable> OverrideMontageLookupTable;                        // 0x468(0x28)(Edit, DisableEditOnInstance, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FHeroAbilityKit>               AbilityKits;                                       // 0x490(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TArray<struct FGameplayEffectApplicationInfo> CombinedStatGEs;                                   // 0x4A0(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TArray<struct FHeroItem>                     HeroItems;                                         // 0x4B0(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FGameplayTagContainer                 RequiredGPTags;                                    // 0x4C0(0x20)(Edit, Protected, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UFortFeedbackBank>      MaleOverrideFeedback;                              // 0x4E0(0x28)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UFortFeedbackBank>      FemaleOverrideFeedback;                            // 0x508(0x28)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftClassPtr<class AFortPlayerPawn>         OverridePawnClass;                                 // 0x530(0x28)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UFortHeroGameplayDefinition> HeroGameplayDefinition;                            // 0x558(0x28)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFortHeroGameplayDefinition*           CachedHeroGameplayDefinition;                      // 0x580(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftClassPtr<class UFrontendAnimInstance>   FrontEndAnimClass;                                 // 0x588(0x28)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FText                                  SubType;                                           // 0x5B0(0x18)(Edit, Protected, NativeAccessSpecifierProtected)
	struct FFortAttributeInitializationKey       AttributeInitKey;                                  // 0x5C8(0x10)(Edit, DisableEditOnInstance, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FDataTableRowHandle                   LegacyStatHandle;                                  // 0x5D8(0x10)(Edit, DisableEditOnInstance, NoDestructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_1C0D[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortHeroType");
		return Clss;
	}

	class FText GetSubType();
	class UFortFeedbackBank* GetMaleOverrideFeedback(bool bOnlyIfLoaded);
	class UFortHeroGameplayDefinition* GetHeroGameplayDefinition();
	TSubclassOf<class UFrontendAnimInstance> GetFrontendAnimClass();
	class UFortFeedbackBank* GetFemaleOverrideFeedback(bool bOnlyIfLoaded);
};

// 0x20 (0x350 - 0x330)
// Class FortniteGame.FortHexMapMarkerBase
class AFortHexMapMarkerBase : public AActor
{
public:
	TArray<class UMaterialInstanceDynamic*>      CurrentMIDs;                                       // 0x330(0x10)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	class UAnimationAsset*                       IdleAnimation;                                     // 0x340(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USkeletalMeshComponent*                SkelMeshComponent;                                 // 0x348(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortHexMapMarkerBase");
		return Clss;
	}

};

// 0x18 (0x358 - 0x340)
// Class FortniteGame.FortStaticMeshActor
class AFortStaticMeshActor : public AStaticMeshActor
{
public:
	TArray<class UNavRelevantComponent*>         LinkComps;                                         // 0x340(0x10)(ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPublic)
	bool                                         bUseAutoNavmeshFlags;                              // 0x350(0x1)(Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1C0E[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortStaticMeshActor");
		return Clss;
	}

};

// 0x18 (0x370 - 0x358)
// Class FortniteGame.FortHLODSMActor
class AFortHLODSMActor : public AFortStaticMeshActor
{
public:
	class FName                                  ActorFName;                                        // 0x358(0x8)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               UniqueWorldLocation;                               // 0x360(0xC)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsDynamic;                                        // 0x36C(0x1)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1C0F[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortHLODSMActor");
		return Clss;
	}

};

// 0x8 (0xE8 - 0xE0)
// Class FortniteGame.FortHomebaseBannerColorItem
class UFortHomebaseBannerColorItem : public UFortAccountItem
{
public:
	class FName                                  ColorRowName;                                      // 0xE0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortHomebaseBannerColorItem");
		return Clss;
	}

};

// 0x0 (0x360 - 0x360)
// Class FortniteGame.FortHomebaseBannerColorItemDefinition
class UFortHomebaseBannerColorItemDefinition : public UFortAccountItemDefinition
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortHomebaseBannerColorItemDefinition");
		return Clss;
	}

};

// 0x50 (0x80 - 0x30)
// Class FortniteGame.FortHomebaseBannerColorMap
class UFortHomebaseBannerColorMap : public UDataAsset
{
public:
	TMap<class FName, struct FHomebaseBannerColor> ColorMap;                                          // 0x30(0x50)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortHomebaseBannerColorMap");
		return Clss;
	}

};

// 0x8 (0xE8 - 0xE0)
// Class FortniteGame.FortHomebaseBannerIconItem
class UFortHomebaseBannerIconItem : public UFortAccountItem
{
public:
	class FName                                  BannerRowName;                                     // 0xE0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortHomebaseBannerIconItem");
		return Clss;
	}

};

// 0x0 (0x360 - 0x360)
// Class FortniteGame.FortHomebaseBannerIconItemDefinition
class UFortHomebaseBannerIconItemDefinition : public UFortAccountItemDefinition
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortHomebaseBannerIconItemDefinition");
		return Clss;
	}

};

// 0x98 (0xC0 - 0x28)
// Class FortniteGame.HomeBaseContext
class UHomeBaseContext : public UBlueprintContextBase
{
public:
	UMulticastDelegateProperty_                  OnWorkerPreviewStateChanged;                       // 0x28(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnHomebaseInventoryUpdated;                        // 0x38(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnMaximumItemLevelChanged;                         // 0x48(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnItemUpgradePointsChanged;                        // 0x58(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  SquadSlotMarkedAsSeen;                             // 0x68(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_1C17[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	UMulticastDelegateProperty_                  OnPlayerInfoChangedDelegate;                       // 0x90(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_1C18[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	UMulticastDelegateProperty_                  OnItemSlottingPreviewInfoChangedEvent;             // 0xB0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("HomeBaseContext");
		return Clss;
	}

	bool TryGetHomebaseSquadData(class FName SquadId, struct FHomebaseSquad* OutHomebaseSquad);
	void SetActiveHeroLoadout(class UFortCampaignHeroLoadoutItem* HeroLoadout);
	bool HasHeroUnlockedTeamLeadPerk(class UFortHero* Hero);
	bool HasHeroUnlockedCommanderPerk(class UFortHero* Hero);
	int32 GetTotalSkillPointsEarned();
	bool GetTotalHomebaseRating(struct FUniqueNetIdRepl& UniqueId, int32* Rating, float* ProgressFraction);
	bool GetTeamHomebaseRating(struct FUniqueNetIdRepl& PlayerID, int32* Rating, float* ProgressFraction);
	void GetStaticSetBonusData(struct FGameplayTag& InSetBonusTag, struct FWorkerSetBonusData* OutSetBonusData, struct FFortMultiSizeBrush* OutBrush);
	void GetResourceCollectorRewardsEstimates(TArray<class UFortCollectedResourceItem*>& CollectorTypes, TArray<struct FFortItemQuantityPair>* OutEstimates);
	void GetResourceCollectorRewardsEstimate(class UFortCollectedResourceItem* CollectorType, struct FFortItemQuantityPair* OutEstimate);
	void GetResourceCollectorRateInfo(class UFortCollectedResourceItem* CollectorType, float* RatePerSecond, int32* MaxCapacity);
	int32 GetNumAccountLimitedItems();
	class FName GetMissionDefenderSquadId();
	int32 GetMaxDeployableDefenderCount();
	bool GetLocalTeamHomebaseRating(int32* Rating, float* ProgressFraction);
	bool GetLocalPlayerHomebaseRating(int32* Rating, float* ProgressFraction);
	class FName GetHomebaseDefenderSquadId();
	int32 GetCurrentDeployedDefenderCount();
	void GetAllResourceCollectorRewardEstimates(TArray<struct FFortItemQuantityPair>* OutEstimates);
	class UFortCampaignHeroLoadoutItem* GetActiveHeroLoadout();
	class FName GetActiveDefenderSquadId();
	class FName GetActiveCombatSquadId();
	void BroadcastSquadSlotMarkedAsSeen();
};

// 0x1C8 (0x1F8 - 0x30)
// Class FortniteGame.FortHomebaseManager
class UFortHomebaseManager : public UDataAsset
{
public:
	class UFortHomebaseNodeGameplayEffectDataTable* HomebaseNodeGameplayEffectDataTable;               // 0x30(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveTable*                           ResearchSystemUpgradesTable;                       // 0x38(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UGameplayEffect>           StatsGamplayEffect;                                // 0x40(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UDataTable*                            HomebaseSquadDataTable;                            // 0x48(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UDataTable*                            ExpeditionSlotsDataTable;                          // 0x50(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveTable*                           ManagerSquadSynergyBonusTable;                     // 0x58(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UGameplayEffect>           SquadGE;                                           // 0x60(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FWorkerPersonalityData>        WorkerPersonalities;                               // 0x68(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FWorkerSetBonusData>           WorkerSetBonuses;                                  // 0x78(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FManagerSynergyData>           ManagerSynergies;                                  // 0x88(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_1C21[0x160];                                   // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortHomebaseManager");
		return Clss;
	}

	bool IsSquadSlotUnlocked(class FName SquadId, int32 SlotIdx, class UFortMcpProfileCampaign* McpProfile);
	class UFortWorker* GetWorkerInSquadSlot(class FName SquadId, int32 SlotIdx, class UFortMcpProfileCampaign* McpProfile);
	void GetSquadPopulation(class FName SquadId, class UFortMcpProfileCampaign* McpProfile, TArray<class UFortWorker*>* OutSquadMembers);
	bool GetSquadCopyById(class FName SquadId, struct FHomebaseSquad* OutSquad);
	int32 GetNumWorldInventoryBonusTokens(class UFortMcpProfileCampaign* McpProfile);
	int32 GetNumAccountLimitedItems(class UFortMcpProfileCampaign* McpProfile);
	int32 GetNumAccountInventoryBonusTokens(class UFortMcpProfileCampaign* McpProfile);
	class FString GetNodeInstanceIdByNodeId(const class FString& NodeTemplateId, class UFortMcpProfileCampaign* McpProfile);
	class FString GetHomebaseName(class UFortMcpProfileCommonPublic* McpProfile);
	bool AreNodeCostsMet(class UFortHomebaseNodeItemDefinition* NodeItemDef, class UFortMcpProfileCampaign* McpProfile, int32 Level);
};

// 0x10 (0xB0 - 0xA0)
// Class FortniteGame.FortHomebaseNodeGameplayEffectDataTable
class UFortHomebaseNodeGameplayEffectDataTable : public UDataTable
{
public:
	TArray<TSubclassOf<class UGameplayEffect>>   TemplateAttributeGEs;                              // 0xA0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, Protected, UObjectWrapper, NativeAccessSpecifierProtected)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortHomebaseNodeGameplayEffectDataTable");
		return Clss;
	}

};

// 0x8 (0xE8 - 0xE0)
// Class FortniteGame.FortHomebaseNodeItem
class UFortHomebaseNodeItem : public UFortAccountItem
{
public:
	uint8                                        Pad_1C22[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortHomebaseNodeItem");
		return Clss;
	}

};

// 0x20 (0x380 - 0x360)
// Class FortniteGame.FortHomebaseNodeItemDefinition
class UFortHomebaseNodeItemDefinition : public UFortAccountItemDefinition
{
public:
	TArray<struct FHomebaseNodeLevel>            LevelData;                                         // 0x360(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	enum class EHomebaseNodeType                 DisplayType;                                       // 0x370(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1C23[0xF];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortHomebaseNodeItemDefinition");
		return Clss;
	}

};

// 0x560 (0x590 - 0x30)
// Class FortniteGame.FortHomebaseSet
class UFortHomebaseSet : public UFortAttributeSet
{
public:
	struct FFortGameplayAttributeData            Keep_Level;                                        // 0x30(0x28)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            Keep_AmmoStash_Level;                              // 0x58(0x28)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            Keep_Armory_Level;                                 // 0x80(0x28)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            Keep_Medical_Level;                                // 0xA8(0x28)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            Keep_Storage_Level;                                // 0xD0(0x28)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            Keep_Workshop_Level;                               // 0xF8(0x28)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            Keep_StructureCap;                                 // 0x120(0x28)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            Keep_PermaniteCap;                                 // 0x148(0x28)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            Manor_Level;                                       // 0x170(0x28)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            Manor_StructureCap;                                // 0x198(0x28)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            InventorySizeBonus;                                // 0x1C0(0x28)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            WorldInventorySizeBonus;                           // 0x1E8(0x28)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            StorageInventorySizeBonus;                         // 0x210(0x28)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            ResearchPointMaxBonus;                             // 0x238(0x28)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            MaxLevelBonus_Global;                              // 0x260(0x28)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            MaxLevelBonus_Schematics;                          // 0x288(0x28)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            MaxLevelBonus_Schematics_Ranged;                   // 0x2B0(0x28)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            MaxLevelBonus_Schematics_Melee;                    // 0x2D8(0x28)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            MaxLevelBonus_Schematics_Traps;                    // 0x300(0x28)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            MaxLevelBonus_Personnel;                           // 0x328(0x28)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            MaxLevelBonus_Alterations;                         // 0x350(0x28)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            Rate_per_second_collector_Token_collectionresource_nodegatetoken01; // 0x378(0x28)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            Max_capacity_collector_Token_collectionresource_nodegatetoken01; // 0x3A0(0x28)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            SupplyDrop_Magnitude;                              // 0x3C8(0x28)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            SupplyDrop_Level;                                  // 0x3F0(0x28)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            ExpeditionSquadOne_Power;                          // 0x418(0x28)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            ExpeditionSquadTwo_Power;                          // 0x440(0x28)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            ExpeditionSquadThree_Power;                        // 0x468(0x28)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            ExpeditionSquadFour_Power;                         // 0x490(0x28)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            ExpeditionSquadFive_Power;                         // 0x4B8(0x28)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            ExpeditionSquadSix_Power;                          // 0x4E0(0x28)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	uint8                                        Pad_1C24[0x88];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortHomebaseSet");
		return Clss;
	}

	void OnRep_WorldInventorySizeBonus();
	void OnRep_SupplyDrop_Magnitude();
	void OnRep_SupplyDrop_Level();
	void OnRep_StorageInventorySizeBonus();
	void OnRep_ResearchPointMaxBonus();
	void OnRep_rate_per_second_collector_Token_collectionresource_nodegatetoken01();
	void OnRep_MaxLevelBonus_Schematics_Traps();
	void OnRep_MaxLevelBonus_Schematics_Ranged();
	void OnRep_MaxLevelBonus_Schematics_Melee();
	void OnRep_MaxLevelBonus_Schematics();
	void OnRep_MaxLevelBonus_Personnel();
	void OnRep_MaxLevelBonus_Global();
	void OnRep_MaxLevelBonus_Alterations();
	void OnRep_max_capacity_collector_Token_collectionresource_nodegatetoken01();
	void OnRep_Manor_StructureCap();
	void OnRep_Manor_Level();
	void OnRep_Keep_Workshop_Level();
	void OnRep_Keep_StructureCap();
	void OnRep_Keep_Storage_Level();
	void OnRep_Keep_PermaniteCap();
	void OnRep_Keep_Medical_Level();
	void OnRep_Keep_Level();
	void OnRep_Keep_Armory_Level();
	void OnRep_Keep_AmmoStash_Level();
	void OnRep_InventorySizeBonus();
};

// 0x0 (0x28 - 0x28)
// Class FortniteGame.FortHomeTeleporterInterface
class UFortHomeTeleporterInterface : public UInterface
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortHomeTeleporterInterface");
		return Clss;
	}

	void OnHomeTeleporterUnboundServer(class AFortPlayerPawn* PlayerPawn, class AActor* NewHomeActor);
	void OnHomeTeleporterUnbound(class AFortPlayerPawn* PlayerPawn, class AActor* NewHomeActor);
	void OnHomeTeleporterBoundServer(class AFortPlayerPawn* PlayerPawn, class AActor* OldHomeActor);
	void OnHomeTeleporterBound(class AFortPlayerPawn* PlayerPawn, class AActor* OldHomeActor);
};

// 0x8 (0x228 - 0x220)
// Class FortniteGame.FortHotfixManager
class UFortHotfixManager : public UOnlineHotfixManager
{
public:
	uint8                                        Pad_1C25[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortHotfixManager");
		return Clss;
	}

};

// 0x0 (0xC50 - 0xC50)
// Class FortniteGame.FortHoverboardCameraMode
class UFortHoverboardCameraMode : public UFortCameraMode_ThirdPerson
{
public:
	//class UCurveFloat*                         VelocityBasedFOVIncreaseCurve;                     // 0xC48(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortHoverboardCameraMode");
		return Clss;
	}

};

// 0xC0 (0x940 - 0x880)
// Class FortniteGame.FortSpectatorCameraComponent
class UFortSpectatorCameraComponent : public UCineCameraComponent
{
public:
	class AFortPlayerControllerSpectating*       SpectatorController;                               // 0x880(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                IntendedViewTarget;                                // 0x888(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1C27[0x74];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	uint8                                        : 2;                                               // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        bManualExposureControl : 1;                        // Mask : 0x4 0x904(0x1)(BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bManualFocusControl : 1;                           // Mask : 0x8 0x904(0x1)(BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1C28[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        ManualExposureBias;                                // 0x908(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ManualFocusDistance;                               // 0x90C(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCurveVector*                          ScreenFringeFOVCurve;                              // 0x910(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ZoomRate;                                          // 0x918(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        FocalLengthInterpSpeed;                            // 0x91C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1C29[0x20];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortSpectatorCameraComponent");
		return Clss;
	}

	void ShowFocusPlane(bool bShow);
	void SetManualFocusDistance(float NewFocusDist);
	void SetManualExposure(float NewExposureBias);
	void SetFocalLength(float NewFocalLength, bool bImmediate);
	void SetAutoFocus();
	void SetAutoExposure();
	float GetAutoCameraCutDistanceThreshold();
};

// 0x50 (0x990 - 0x940)
// Class FortniteGame.FortHoverDroneCameraComponent
class UFortHoverDroneCameraComponent : public UFortSpectatorCameraComponent
{
public:
	uint8                                        Pad_1C2A[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        DroneTiltInterpSpeed_Accel;                        // 0x950(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DroneTiltInterpSpeed_Decel;                        // 0x954(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1C2B[0xC];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               TiltUpVector;                                      // 0x964(0xC)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1C2C[0x20];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortHoverDroneCameraComponent");
		return Clss;
	}

};

// 0x0 (0x28 - 0x28)
// Class FortniteGame.FortHUDTargetUnderReticleInterface
class UFortHUDTargetUnderReticleInterface : public UInterface
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortHUDTargetUnderReticleInterface");
		return Clss;
	}

	class FText GetHUDTargetUpgradeDisplayName();
	float GetHUDTargetHealthPercentage();
	class FText GetHUDTargetDisplayName();
	TArray<class FText> GetHUDTargetDisplayModifiers();
	float GetHUDTargetDifficultyRating();
};

// 0x50 (0x390 - 0x340)
// Class FortniteGame.FortHuskAnimInstance
class UFortHuskAnimInstance : public UFortAIAnimInstance
{
public:
	//enum class EFortHuskAnimType               HuskAnimType;                                      // 0x338(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1C2D[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        FallAsleepAnimDuration;                            // 0x344(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        AltFallAsleepAnimDuration;                         // 0x348(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        WakeUpAnimDuration;                                // 0x34C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        FallAsleepToSleepingCrossfade;                     // 0x350(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        WakeUpToIdleCrossfade;                             // 0x354(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DefaultToDwarfScaleRatio;                          // 0x358(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        LookAtAlpha;                                       // 0x35C(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        LookAtInterpSpeed;                                 // 0x360(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        AdjustedLowerBodyWeight;                           // 0x364(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        AdjustedLowerBodyInterpSpeed;                      // 0x368(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        RunPlayRate;                                       // 0x36C(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ZapperOverrideWeight;                              // 0x370(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        RunStartPosition;                                  // 0x374(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        AuthoredJogSpeed;                                  // 0x378(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        MovementStyleIsWalking;                            // 0x37C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bForceFullBodyMontage : 1;                         // Mask : 0x1 0x380(0x1)(BlueprintVisible, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bIsDwarf : 1;                                      // Mask : 0x2 0x380(0x1)(BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bIsZapper : 1;                                     // Mask : 0x4 0x380(0x1)(BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        StateTransition_IdleToMove : 1;                    // Mask : 0x8 0x380(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        StateTransition_IdleToFallAsleep : 1;              // Mask : 0x10 0x380(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        StateTransition_IdleToStunned : 1;                 // Mask : 0x20 0x380(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        StateTransition_IdleToKnockedbackDown : 1;         // Mask : 0x40 0x380(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        StateTransition_IdleToKnockedbackUp : 1;           // Mask : 0x80 0x380(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        StateTransition_MoveToIdle : 1;                    // Mask : 0x1 0x381(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        StateTransition_FallAsleepToSleeping : 1;          // Mask : 0x2 0x381(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        StateTransition_SleepingToWakeUp : 1;              // Mask : 0x4 0x381(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        StateTransition_WakeUpToIdle : 1;                  // Mask : 0x8 0x381(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        StateTransition_StunnedToIdle : 1;                 // Mask : 0x10 0x381(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        StateTransition_KnockedbackDownToIdle : 1;         // Mask : 0x20 0x381(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        StateTransition_KnockedbackUpToKnockedbackDown : 1; // Mask : 0x40 0x381(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1C2E[0xE];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortHuskAnimInstance");
		return Clss;
	}

	void SetHuskAnimType(enum class EFortHuskAnimType NewHuskAnimType);
	enum class EFortHuskAnimType GetHuskAnimType();
	void AnimNotify_SleepingFullyBlended(class UAnimNotify* Notify);
};

// 0x0 (0x840 - 0x840)
// Class FortniteGame.FortIconCaptureCamera
class AFortIconCaptureCamera : public ACameraActor
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortIconCaptureCamera");
		return Clss;
	}

};

// 0x20 (0x48 - 0x28)
// Class FortniteGame.FortIndicatorManager
class UFortIndicatorManager : public UObject
{
public:
	TArray<class UFortIndicator*>                AllIndicators;                                     // 0x28(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	TArray<class UFortMiniMapIndicator*>         MiniMapIndicators;                                 // 0x38(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortIndicatorManager");
		return Clss;
	}

};

// 0x40 (0x68 - 0x28)
// Class FortniteGame.FortInescapableZoneTracker
class UFortInescapableZoneTracker : public UObject
{
public:
	class AFortNavigationGraph*                  NavGraph;                                          // 0x28(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1C2F[0x38];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortInescapableZoneTracker");
		return Clss;
	}

};

// 0xD0 (0xF8 - 0x28)
// Class FortniteGame.FortInfluenceMap
class UFortInfluenceMap : public UObject
{
public:
	uint8                                        Pad_1C32[0xB8];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class AFortNavigationGraph*                  GraphData;                                         // 0xE0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1C33[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortInfluenceMap");
		return Clss;
	}

	void K2_GetInfluenceSourcePositions(class UObject* WorldContext, TArray<struct FVector>* InfluenceSourcePositions);
	void K2_AddInfluenceSource(class UObject* WorldContext, struct FVector& Position, const class FString& SourceName, float Strength);
};

// 0x158 (0x488 - 0x330)
// Class FortniteGame.FortInGameMapManager
class AFortInGameMapManager : public AActor
{
public:
	uint8                                        Pad_1C35[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FTeamMapInfo>                  MapData;                                           // 0x350(0x10)(Net, ZeroConstructor, RepNotify, Protected, NativeAccessSpecifierProtected)
	float                                        DelayBetweenDispersions;                           // 0x360(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ExploredRadius;                                    // 0x364(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ExploredFalloffRadius;                             // 0x368(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SeenRadius;                                        // 0x36C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SeenFalloffRadius;                                 // 0x370(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        VisibilityMaxGradient;                             // 0x374(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        UnexploredOpacity;                                 // 0x378(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        OffsetZ;                                           // 0x37C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        MapLayerSize;                                      // 0x380(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        FullscreenMapZoom;                                 // 0x384(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FMargin                               MapMargin;                                         // 0x388(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	int32                                        IconVisibilityFogThreshold;                        // 0x398(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1C36[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class ASceneCapture2D>           SceneCaptureClass;                                 // 0x3A0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class ASceneCapture2D>           SceneCaptureBlurryClass;                           // 0x3A8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInterface*                    MapMaterial;                                       // 0x3B0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FCurveTableRowHandle                  CloudBrightnessCurve;                              // 0x3B8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FCurveTableRowHandle                  DesaturationFactorCurve;                           // 0x3C8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MapOpacityWhenWalking;                             // 0x3D8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MaxPercentageMapExplored;                          // 0x3DC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MapExplorationThresholdPercentage;                 // 0x3E0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        LastMapExplorationThresholdPercentageReached;      // 0x3E4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	UMulticastDelegateProperty_                  OnMapFullyExplored;                                // 0x3E8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	UMulticastDelegateProperty_                  OnMapExplorationThresholdReached;                  // 0x3F8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	class ASceneCapture2D*                       SceneCapture;                                      // 0x408(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ASceneCapture2D*                       SceneCaptureBlurry;                                // 0x410(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1C37[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UTexture2D*                            FogMask;                                           // 0x438(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1C38[0x44];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        MapWorldScale;                                     // 0x484(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortInGameMapManager");
		return Clss;
	}

	void PaintOnFog(struct FVector& WorldCoords, enum class EFortTeam Team);
	void OnRep_MapData();
	class AFortInGameMapManager* GetCurrent(class UObject* WorldContextObject);
	void BroadcastExplorationEvents(TArray<struct FTeamMapExplorationEvent>& Events);
	void AllowShowMiniMap(bool bAllowShow);
	void AllowShowMainMap(bool bAllowShow);
};

// 0x18 (0x4A0 - 0x488)
// Class FortniteGame.FortInGameMapManagerAthena
class AFortInGameMapManagerAthena : public AFortInGameMapManager
{
public:
	uint8                                        Pad_1C39[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortInGameMapManagerAthena");
		return Clss;
	}

};

// 0x0 (0x870 - 0x870)
// Class FortniteGame.FortIngredientItemDefinition
class UFortIngredientItemDefinition : public UFortWorldItemDefinition
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortIngredientItemDefinition");
		return Clss;
	}

};

// 0x0 (0x28 - 0x28)
// Class FortniteGame.FortInitializationInterface
class UFortInitializationInterface : public UInterface
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortInitializationInterface");
		return Clss;
	}

	void WorldReady();
	bool NeedsWorldReady();
	void MatchStarted();
};

// 0x0 (0x28 - 0x28)
// Class FortniteGame.FortInitializeFromObjectInterface
class UFortInitializeFromObjectInterface : public UInterface
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortInitializeFromObjectInterface");
		return Clss;
	}

	void InitFromObject(class UObject* InitObject);
};

// 0xA60 (0xA90 - 0x30)
// Class FortniteGame.FortInputData
class UFortInputData : public UPrimaryDataAsset
{
public:
	class FName                                  ConfigDName;                                       // 0x30(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  ConfigEName;                                       // 0x38(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  ConfigFName;                                       // 0x40(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  ConfigGName;                                       // 0x48(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  ConfigDAthenaName;                                 // 0x50(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  ConfigEAthenaName;                                 // 0x58(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  ConfigFAthenaName;                                 // 0x60(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  ConfigGAthenaName;                                 // 0x68(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  ConfigHAthenaName;                                 // 0x70(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  ConfigCustomAthenaName;                            // 0x78(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  GamepadAbility1Name;                               // 0x80(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  GamepadAbility2Name;                               // 0x88(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  GamepadAbility1AName;                              // 0x90(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  GamepadAbility1BName;                              // 0x98(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  GamepadAbility2AName;                              // 0xA0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  GamepadAbility2BName;                              // 0xA8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  GamepadAbility3AName;                              // 0xB0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  GamepadAbility3BName;                              // 0xB8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  GamepadPreviousBuildingName;                       // 0xC0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  GamepadNextBuildingName;                           // 0xC8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  GamepadBuildingSlot1Name;                          // 0xD0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  GamepadBuildingSlot2Name;                          // 0xD8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  GamepadBuildingSlot3Name;                          // 0xE0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  GamepadBuildingSlot4Name;                          // 0xE8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  GamepadToggleHarvestWeaponName;                    // 0xF0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  GamepadSelectPreviousWeaponName;                   // 0xF8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  GamepadSelectNextWeaponName;                       // 0x100(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  GamepadNextWeaponOrHarvestHoldName;                // 0x108(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  GamepadTapSelectPreviousWeaponForChordAbilities;   // 0x110(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  GamepadTapSelectNextWeaponForChordAbilities;       // 0x118(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  GamepadTrapPickerName;                             // 0x120(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  GamepadUseOrTrapPickerName;                        // 0x128(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  GamepadUseOrTrapPickerAndPlaceName;                // 0x130(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  GamepadChangeMaterialOrHarvestHoldName;            // 0x138(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  GamepadSwitchModeOrEditBuildingName;               // 0x140(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  GamepadImproveOrRotateBuildingPieceName;           // 0x148(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  GamepadRepairHoldOrRotateBuildingPieceName;        // 0x150(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  GamepadPerformBuildingEditInteractionOrCancelPersonalVehicleName; // 0x158(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  HotbarKey1Name;                                    // 0x160(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  HotbarKey2Name;                                    // 0x168(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  HotbarKey3Name;                                    // 0x170(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  HotbarKey4Name;                                    // 0x178(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  HotbarKey5Name;                                    // 0x180(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  HotbarKey6Name;                                    // 0x188(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  HotbarKey7Name;                                    // 0x190(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  HotbarKey8Name;                                    // 0x198(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  HotbarKey9Name;                                    // 0x1A0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  HotbarKeyF1Name;                                   // 0x1A8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  HotbarKeyF2Name;                                   // 0x1B0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  HotbarKeyF3Name;                                   // 0x1B8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  HotbarKeyF4Name;                                   // 0x1C0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  HotbarKeyF5Name;                                   // 0x1C8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  HotbarKeyF6Name;                                   // 0x1D0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  HotbarKeyF7Name;                                   // 0x1D8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  HotbarKeyF8Name;                                   // 0x1E0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  HotbarKeyF9Name;                                   // 0x1E8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  HotbarKeyF10Name;                                  // 0x1F0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  HotbarKeyF11Name;                                  // 0x1F8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  HotbarKeyF12Name;                                  // 0x200(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  TrapPickerName;                                    // 0x208(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  ChangeMaterialName;                                // 0x210(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  BuildConfirmName;                                  // 0x218(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  PerformBuildingEditInteractionName;                // 0x220(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  PerformBuildingImprovementInteractionName;         // 0x228(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  PickerConfirmName;                                 // 0x230(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  PickerCancelName;                                  // 0x238(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  EmotePickerName;                                   // 0x240(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  SquadQuickChatPickerName;                          // 0x248(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  SwitchQuickBarName;                                // 0x250(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  UseName;                                           // 0x258(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  UseOrReloadName;                                   // 0x260(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  ReloadName;                                        // 0x268(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  InventoryOrChatHoldName;                           // 0x270(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  FireName;                                          // 0x278(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  RotatePrimitiveClockwiseName;                      // 0x280(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  ToggleFullScreenMapName;                           // 0x288(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  GamepadToggleFullScreenMapName;                    // 0x290(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  GamepadToggleFullScreenMapWhileBuildingName;       // 0x298(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  GamepadToggleFullScreenMapWhileEditingName;        // 0x2A0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  ToggleInventoryName;                               // 0x2A8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  GamepadToggleInventoryName;                        // 0x2B0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  GamepadToggleInventoryWhileBuildingName;           // 0x2B8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  GamepadToggleInventoryWhileEditingName;            // 0x2C0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  JumpName;                                          // 0x2C8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  GamepadJumpName;                                   // 0x2D0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  CrouchName;                                        // 0x2D8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  CrouchWhileBuildingName;                           // 0x2E0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  CrouchWhileEditingName;                            // 0x2E8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  CrouchOrRepairName;                                // 0x2F0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  CrouchOrRepairWhileBuildingName;                   // 0x2F8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  CrouchOrRepairWhileEditingName;                    // 0x300(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  GamepadVehicleExitName;                            // 0x308(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  GamepadVehicleJumpName;                            // 0x310(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  VehicleExitName;                                   // 0x318(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  ShoppingCartCoastName;                             // 0x320(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  VehicleJumpName;                                   // 0x328(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  GolfCartEBrakeName;                                // 0x330(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  GamepadGolfCartEBrakeLeftName;                     // 0x338(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  GamepadGolfCartEBrakeRightName;                    // 0x340(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  VehicleChangeSeatName;                             // 0x348(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  GamepadGolfCartForwardName;                        // 0x350(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  GamepadGolfCartReverseName;                        // 0x358(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  GolfCartHonkName;                                  // 0x360(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  QuadCrasherBoostName;                              // 0x368(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  GamepadQuadCrasherBoostLeftName;                   // 0x370(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  GamepadQuadCrasherBoostRightName;                  // 0x378(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  JackalBoostName;                                   // 0x380(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  GamepadJackalBoostName;                            // 0x388(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  BiplaneRollRightName;                              // 0x390(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  BiplaneRollLeftName;                               // 0x398(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  BiplaneRollInvertName;                             // 0x3A0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  BiplaneStartEngineName;                            // 0x3A8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  BiplaneStopEngineName;                             // 0x3B0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  BiplaneTaxiBackwardsName;                          // 0x3B8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  BiplaneBoostName;                                  // 0x3C0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  BiplaneShootName;                                  // 0x3C8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  BiplaneFreelookName;                               // 0x3D0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  GamepadBiplaneRollRightName;                       // 0x3D8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  GamepadBiplaneRollLeftName;                        // 0x3E0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  GamepadBiplaneRollInvertName;                      // 0x3E8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  GamepadBiplaneStartEngineName;                     // 0x3F0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  GamepadBiplaneStopEngineName;                      // 0x3F8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  GamepadBiplaneTaxiBackwardsName;                   // 0x400(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  GamepadBiplaneBoostName;                           // 0x408(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  GamepadBiplaneShootName;                           // 0x410(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  TogglePickAxeName;                                 // 0x418(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  GamepadEmotePickerOrReplayLastEmoteHoldName;       // 0x420(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  GamepadEmotePickerOrReplayLastEmoteHoldWhileBuildingName; // 0x428(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  GamepadEmotePickerOrReplayLastEmoteHoldWhileEditingName; // 0x430(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  GamepadSwitchModeName;                             // 0x438(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  CreativeMoveToolEquippedGrabOrLetGoName;           // 0x440(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  CreativeMoveToolEquippedCopyGrabOrDuplicateName;   // 0x448(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  CreativeMoveToolEquippedDeleteName;                // 0x450(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  CreativeMoveObjectsFreelyLetGoName;                // 0x458(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  CreativeMoveObjectsFreelyDuplicateName;            // 0x460(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  CreativeMoveObjectsFreelyDropToFloorName;          // 0x468(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  CreativeMoveObjectsFreelyRotateClockwiseName;      // 0x470(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  CreativeMoveObjectsFreelyRotateCounterclockwiseName; // 0x478(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  CreativeMoveObjectsFreelySwitchAxisName;           // 0x480(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  CreativeMoveObjectsFreelyPushName;                 // 0x488(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  CreativeMoveObjectsFreelyPullName;                 // 0x490(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  CreativeMoveObjectsFreelyExitName;                 // 0x498(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  CreativeMoveObjectsFreelyChangePrecisionLevelName; // 0x4A0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  CreativeMoveBuildingsOnGridLetGoName;              // 0x4A8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  CreativeMoveBuildingsOnGridDuplicateName;          // 0x4B0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  CreativeMoveBuildingsOnGridRotateClockwiseName;    // 0x4B8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  CreativeMoveBuildingsOnGridRotateCounterclockwiseName; // 0x4C0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  CreativeMoveBuildingsOnGridMirrorName;             // 0x4C8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  CreativeMoveBuildingsOnGridExitName;               // 0x4D0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  CreativeMoveBuildingsOnGridChangePrecisionLevelName; // 0x4D8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  CreativeFlyUpName;                                 // 0x4E0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  CreativeFlyDownName;                               // 0x4E8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TMap<struct FGameplayTag, struct FScreenLabelText> ScreenLabels;                                      // 0x4F0(0x50)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	class FText                                  MoveLabel;                                         // 0x540(0x18)(Edit, NativeAccessSpecifierPrivate)
	class FText                                  LookLabel;                                         // 0x558(0x18)(Edit, NativeAccessSpecifierPrivate)
	class FText                                  SwitchQuickbarLabel;                               // 0x570(0x18)(Edit, NativeAccessSpecifierPrivate)
	class FText                                  JumpLabel;                                         // 0x588(0x18)(Edit, NativeAccessSpecifierPrivate)
	class FText                                  SprintLabel;                                       // 0x5A0(0x18)(Edit, NativeAccessSpecifierPrivate)
	class FText                                  AutoSprintLabel;                                   // 0x5B8(0x18)(Edit, NativeAccessSpecifierPrivate)
	class FText                                  NextWeaponLabel;                                   // 0x5D0(0x18)(Edit, NativeAccessSpecifierPrivate)
	class FText                                  PreviousWeaponLabel;                               // 0x5E8(0x18)(Edit, NativeAccessSpecifierPrivate)
	class FText                                  NextWeaponTapLabel;                                // 0x600(0x18)(Edit, NativeAccessSpecifierPrivate)
	class FText                                  PreviousWeaponTapLabel;                            // 0x618(0x18)(Edit, NativeAccessSpecifierPrivate)
	class FText                                  NextBuildingPieceLabel;                            // 0x630(0x18)(Edit, NativeAccessSpecifierPrivate)
	class FText                                  PreviousBuildingPieceLabel;                        // 0x648(0x18)(Edit, NativeAccessSpecifierPrivate)
	class FText                                  GamepadStairSelectAndPlaceLabel;                   // 0x660(0x18)(Edit, NativeAccessSpecifierPrivate)
	class FText                                  GamepadRoofSelectAndPlaceLabel;                    // 0x678(0x18)(Edit, NativeAccessSpecifierPrivate)
	class FText                                  GamepadWallSelectAndPlaceLabel;                    // 0x690(0x18)(Edit, NativeAccessSpecifierPrivate)
	class FText                                  GamepadFloorSelectAndPlaceLabel;                   // 0x6A8(0x18)(Edit, NativeAccessSpecifierPrivate)
	class FText                                  GamepadTrapSelectAndPlaceLabel;                    // 0x6C0(0x18)(Edit, NativeAccessSpecifierPrivate)
	class FText                                  GamepadTrapPickerHoldLabel;                        // 0x6D8(0x18)(Edit, NativeAccessSpecifierPrivate)
	class FText                                  GamepadChangeMaterialOrTrapPickerLabel;            // 0x6F0(0x18)(Edit, NativeAccessSpecifierPrivate)
	class FText                                  HarvestWeaponHoldLabel;                            // 0x708(0x18)(Edit, NativeAccessSpecifierPrivate)
	class FText                                  HarvestWeaponLabel;                                // 0x720(0x18)(Edit, NativeAccessSpecifierPrivate)
	class FText                                  AimDownSightsLabel;                                // 0x738(0x18)(Edit, NativeAccessSpecifierPrivate)
	class FText                                  AimDownSightsHeavyMeleeLabel;                      // 0x750(0x18)(Edit, NativeAccessSpecifierPrivate)
	class FText                                  Ability1Label;                                     // 0x768(0x18)(Edit, NativeAccessSpecifierPrivate)
	class FText                                  Ability2Label;                                     // 0x780(0x18)(Edit, NativeAccessSpecifierPrivate)
	class FText                                  Ability3Label;                                     // 0x798(0x18)(Edit, NativeAccessSpecifierPrivate)
	class FText                                  Gadget1Label;                                      // 0x7B0(0x18)(Edit, NativeAccessSpecifierPrivate)
	class FText                                  Gadget2Label;                                      // 0x7C8(0x18)(Edit, NativeAccessSpecifierPrivate)
	class FText                                  RotateBuildingLabel;                               // 0x7E0(0x18)(Edit, NativeAccessSpecifierPrivate)
	class FText                                  RotateBuildingTapRepairHoldLabel;                  // 0x7F8(0x18)(Edit, NativeAccessSpecifierPrivate)
	class FText                                  BuildingEditResetLabel;                            // 0x810(0x18)(Edit, NativeAccessSpecifierPrivate)
	class FText                                  ReloadLabel;                                       // 0x828(0x18)(Edit, NativeAccessSpecifierPrivate)
	class FText                                  ReloadTapLabel;                                    // 0x840(0x18)(Edit, NativeAccessSpecifierPrivate)
	class FText                                  CraftAmmoHoldLabel;                                // 0x858(0x18)(Edit, NativeAccessSpecifierPrivate)
	class FText                                  InteractTapHoldLabel;                              // 0x870(0x18)(Edit, NativeAccessSpecifierPrivate)
	class FText                                  UseOrReloadLabel;                                  // 0x888(0x18)(Edit, NativeAccessSpecifierPrivate)
	class FText                                  CrouchLabel;                                       // 0x8A0(0x18)(Edit, NativeAccessSpecifierPrivate)
	class FText                                  ToggleFullScreenMapLabel;                          // 0x8B8(0x18)(Edit, NativeAccessSpecifierPrivate)
	class FText                                  ToggleInventoryLabel;                              // 0x8D0(0x18)(Edit, NativeAccessSpecifierPrivate)
	class FText                                  GameMenuLabel;                                     // 0x8E8(0x18)(Edit, NativeAccessSpecifierPrivate)
	class FText                                  PlaceBuildingOrTrapConfirmLabel;                   // 0x900(0x18)(Edit, NativeAccessSpecifierPrivate)
	class FText                                  AttackConfirmLabel;                                // 0x918(0x18)(Edit, NativeAccessSpecifierPrivate)
	class FText                                  ChangeMaterialLabel;                               // 0x930(0x18)(Edit, NativeAccessSpecifierPrivate)
	class FText                                  EmoteLabel;                                        // 0x948(0x18)(Edit, NativeAccessSpecifierPrivate)
	class FText                                  EmoteOrQuickChatLabel;                             // 0x960(0x18)(Edit, NativeAccessSpecifierPrivate)
	class FText                                  ChatHoldLabel;                                     // 0x978(0x18)(Edit, NativeAccessSpecifierPrivate)
	class FText                                  PickTrapTapLabel;                                  // 0x990(0x18)(Edit, NativeAccessSpecifierPrivate)
	class FText                                  TrapInventoryHoldLabel;                            // 0x9A8(0x18)(Edit, NativeAccessSpecifierPrivate)
	class FText                                  PickTrapTapHoldLabel;                              // 0x9C0(0x18)(Edit, NativeAccessSpecifierPrivate)
	class FText                                  PickTrapLabel;                                     // 0x9D8(0x18)(Edit, NativeAccessSpecifierPrivate)
	class FText                                  EditBuildingPieceHoldLabel;                        // 0x9F0(0x18)(Edit, NativeAccessSpecifierPrivate)
	class FText                                  SwitchQuickBarTapLabel;                            // 0xA08(0x18)(Edit, NativeAccessSpecifierPrivate)
	class FText                                  DeployHoverboardLabel;                             // 0xA20(0x18)(Edit, NativeAccessSpecifierPrivate)
	class FText                                  RepairImproveSpotEnemyLabel;                       // 0xA38(0x18)(Edit, NativeAccessSpecifierPrivate)
	class FText                                  RepairLabel;                                       // 0xA50(0x18)(Edit, NativeAccessSpecifierPrivate)
	class FText                                  RepairHoldLabel;                                   // 0xA68(0x18)(Edit, NativeAccessSpecifierPrivate)
	TArray<struct FFortActionKeyMapping>         InputOptionsList;                                  // 0xA80(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortInputData");
		return Clss;
	}

	class FText GetUseOrReloadLabel();
	class FText GetTrapInventoryHoldLabel();
	class FText GetToggleInventoryLabel();
	class FText GetToggleFullScreenMapLabel();
	class FText GetSwitchQuickBarTapLabel();
	class FText GetSwitchQuickbarLabel();
	class FText GetSprintLabel();
	class FText GetScreenLabel(class FName PresetName, enum class EFortInputActionGroup InputActionGroup, class FName ActionName, bool bRichText);
	class FText GetRotateBuildingTapRepairHoldLabel();
	class FText GetRotateBuildingLabel();
	class FText GetRepairLabel();
	class FText GetRepairImproveSpotEnemyLabel();
	class FText GetRepairHoldLabel();
	class FText GetReloadTapLabel();
	class FText GetReloadLabel();
	class FText GetPreviousWeaponTapLabel();
	class FText GetPreviousWeaponLabel();
	class FText GetPreviousBuildingPieceLabel();
	class FText GetPlaceBuildingOrTrapConfirmLabel();
	class FText GetPickTrapTapLabel();
	class FText GetPickTrapTapHoldLabel();
	class FText GetPickTrapLabel();
	class FText GetNextWeaponTapLabel();
	class FText GetNextWeaponLabel();
	class FText GetNextBuildingPieceLabel();
	class FText GetMoveLabel();
	class FText GetLookLabel();
	class FText GetJumpLabel();
	class FText GetInteractTapHoldLabel();
	class FText GetHarvestWeaponLabel();
	class FText GetHarvestWeaponHoldLabel();
	class FText GetGamepadWallSelectAndPlaceLabel();
	class FText GetGamepadTrapSelectAndPlaceLabel();
	class FText GetGamepadTrapPickerHoldLabel();
	class FText GetGamepadStairSelectAndPlaceLabel();
	class FText GetGamepadRoofSelectAndPlaceLabel();
	class FText GetGamepadFloorSelectAndPlaceLabel();
	class FText GetGamepadChangeMaterialOrTrapPickerLabel();
	class FText GetGameMenuLabel();
	class FText GetGadget2Label();
	class FText GetGadget1Label();
	class UFortInputData* GetFortInputDataForBlueprint();
	class FText GetEmoteOrQuickChatLabel();
	class FText GetEmoteLabel();
	class FText GetEditBuildingPieceHoldLabel();
	class FText GetDeployHoverboardLabel();
	class FText GetCrouchLabel();
	class FText GetCraftAmmoHoldLabel();
	class FText GetChatHoldLabel();
	class FText GetChangeMaterialLabel();
	class FText GetBuildingEditResetLabel();
	class FText GetAutoSprintLabel();
	class FText GetAttackConfirmLabel();
	class FText GetAimDownSightsLabel();
	class FText GetAimDownSightsHeavyMeleeLabel();
	class FText GetAbility3Label();
	class FText GetAbility2Label();
	class FText GetAbility1Label();
};

// 0x0 (0x358 - 0x358)
// Class FortniteGame.FortInstancedStaticMeshActor
class AFortInstancedStaticMeshActor : public AFortStaticMeshActor
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortInstancedStaticMeshActor");
		return Clss;
	}

};

// 0xF0 (0x120 - 0x30)
// Class FortniteGame.FortIntelPackSet
class UFortIntelPackSet : public UFortAttributeSet
{
public:
	struct FFortGameplayAttributeData            MaxCharges;                                        // 0x30(0x28)(BlueprintVisible, BlueprintReadOnly, Net, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            CurrentCharges;                                    // 0x58(0x28)(BlueprintVisible, BlueprintReadOnly, Net, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            StormTrackerCost;                                  // 0x80(0x28)(BlueprintVisible, BlueprintReadOnly, Net, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            RevealedTargetsRange;                              // 0xA8(0x28)(BlueprintVisible, BlueprintReadOnly, Net, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            RevealedTargetsDuration;                           // 0xD0(0x28)(BlueprintVisible, BlueprintReadOnly, Net, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            RevealedTargetsCost;                               // 0xF8(0x28)(BlueprintVisible, BlueprintReadOnly, Net, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortIntelPackSet");
		return Clss;
	}

};

// 0x18 (0x48 - 0x30)
// Class FortniteGame.FortIntensityCurveSequence
class UFortIntensityCurveSequence : public UDataAsset
{
public:
	TArray<struct FDataTableRowHandle>           IntensityCurves;                                   // 0x30(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	enum class EFortIntensityCurveSequenceType   SequenceType;                                      // 0x40(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1C3C[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortIntensityCurveSequence");
		return Clss;
	}

};

// 0x10 (0x40 - 0x30)
// Class FortniteGame.FortIntensityCurveSequenceProgression
class UFortIntensityCurveSequenceProgression : public UDataAsset
{
public:
	TArray<struct FFortInstensityCurveSequenceProgression> IntensityCurveSequences;                           // 0x30(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortIntensityCurveSequenceProgression");
		return Clss;
	}

};

// 0x30 (0x58 - 0x28)
// Class FortniteGame.FortInteractabilityTracker
class UFortInteractabilityTracker : public UObject
{
public:
	uint8                                        Pad_1C3D[0x30];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortInteractabilityTracker");
		return Clss;
	}

};

// 0x50 (0x78 - 0x28)
// Class FortniteGame.FortInteractContextInfo
class UFortInteractContextInfo : public UObject
{
public:
	class FText                                  ContextText;                                       // 0x28(0x18)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class AActor*                                ReceivingActor;                                    // 0x40(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPrimitiveComponent*                   InteractComponent;                                 // 0x48(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                               OptionalObjectData;                                // 0x50(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundBase*                            LongInteractSound;                                 // 0x58(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               InteractPoint;                                     // 0x60(0xC)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RequiredDuration;                                  // 0x6C(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShowCountDown;                                    // 0x70(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDisplayTextOnly;                                  // 0x71(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bSuppressInteractionWidget;                        // 0x72(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1C3E[0x5];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortInteractContextInfo");
		return Clss;
	}

};

// 0x0 (0x28 - 0x28)
// Class FortniteGame.FortInteractInterface
class UFortInteractInterface : public UInterface
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortInteractInterface");
		return Clss;
	}

	bool ServerOnAttemptInteract(struct FInteractionType& InteractType);
	void GetIconPlacement(class AActor* SelfActor, struct FVector* OutLocation, struct FVector* OutExtents);
	struct FVector GetFocusedSocketLocation();
	void GetBoundsComponents(class AActor* SelfActor, TArray<class USceneComponent*>* OutComponents);
};

// 0x1F0 (0x520 - 0x330)
// Class FortniteGame.FortInventory
class AFortInventory : public AActor
{
public:
	uint8                                        Pad_1C40[0x9];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	enum class EFortInventoryType                InventoryType;                                     // 0x339(0x1)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1C41[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FFortItemList                         Inventory;                                         // 0x340(0x170)(Net, SaveGame, RepNotify, NativeAccessSpecifierPrivate)
	bool                                         bRequiresLocalUpdate;                              // 0x4B0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bRequiresSaving;                                   // 0x4B1(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bIsShuttingDown;                                   // 0x4B2(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1C42[0x15];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UFortWorldItem*>                PendingInstances;                                  // 0x4C8(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<class UFortItem*>                     RecentlyAdded;                                     // 0x4D8(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<class UFortItem*>                     RecentlyRemoved;                                   // 0x4E8(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<class UFortItem*>                     RecentlyChanged;                                   // 0x4F8(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1C43[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortInventory");
		return Clss;
	}

	void HandleInventoryLocalUpdate();
};

// 0x0 (0x28 - 0x28)
// Class FortniteGame.FortInventoryInterface
class UFortInventoryInterface : public UInterface
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortInventoryInterface");
		return Clss;
	}

};

// 0x18 (0x538 - 0x520)
// Class FortniteGame.FortInventoryOutpost
class AFortInventoryOutpost : public AFortInventory
{
public:
	TArray<class UFortWorldItem*>                UnavailableItemInstances;                          // 0x520(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	bool                                         bHasUnavailableItems;                              // 0x530(0x1)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1C44[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortInventoryOutpost");
		return Clss;
	}

};

// 0x0 (0x28 - 0x28)
// Class FortniteGame.FortInventoryOwnerInterface
class UFortInventoryOwnerInterface : public UInterface
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortInventoryOwnerInterface");
		return Clss;
	}

};

// 0x50 (0x80 - 0x30)
// Class FortniteGame.FortItemIconDefinition
class UFortItemIconDefinition : public UDataAsset
{
public:
	TSoftObjectPtr<class UTexture2D>             SmallImage;                                        // 0x30(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UTexture2D>             LargeImage;                                        // 0x58(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortItemIconDefinition");
		return Clss;
	}

};

// 0x20 (0x890 - 0x870)
// Class FortniteGame.FortItemCacheItemDefinition
class UFortItemCacheItemDefinition : public UFortWorldItemDefinition
{
public:
	//TSoftObjectPtr<class UFortCardPackItemDefinition> CardPackReward;                                    // 0x868(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1C45[0x20];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortItemCacheItemDefinition");
		return Clss;
	}

};

// 0x30 (0x60 - 0x30)
// Class FortniteGame.FortItemCategory
class UFortItemCategory : public UDataAsset
{
public:
	TArray<struct FItemCategoryMappingData>      PrimaryCategories;                                 // 0x30(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FItemCategory>                 SecondaryCategories;                               // 0x40(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FItemCategory>                 TertiaryCategories;                                // 0x50(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortItemCategory");
		return Clss;
	}

};

// 0x10 (0x380 - 0x370)
// Class FortniteGame.FortItemExhibitActor
class AFortItemExhibitActor : public AFortExhibitActor
{
public:
	//class FString                              ItemInstanceId;                                    // 0x368(0x10)(ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1C46[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AFortPickup*                           ExhibitItem;                                       // 0x378(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortItemExhibitActor");
		return Clss;
	}

};

// 0x70 (0xA0 - 0x30)
// Class FortniteGame.FortItemWrapMappingData
class UFortItemWrapMappingData : public UDataAsset
{
public:
	TArray<struct FItemWrapSlotMetadata>         SlotMetadata;                                      // 0x30(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FItemWrapPreviewEntry>         NonSlotPreviewList;                                // 0x40(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UMaterialInterface>     MasterVehicleMaterial;                             // 0x50(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UMaterialInterface>     MasterWeaponMaterial;                              // 0x78(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortItemWrapMappingData");
		return Clss;
	}

};

// 0x18 (0x40 - 0x28)
// Class FortniteGame.FortItemWrapMaterialAssetData
class UFortItemWrapMaterialAssetData : public UAssetUserData
{
public:
	class UMaterialInstanceConstant*             GeneratedMaterial_Vehicle_Opaque;                  // 0x28(0x8)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInstanceConstant*             GeneratedMaterial_Vehicle_Masked;                  // 0x30(0x8)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInstanceConstant*             GeneratedMaterial_Weapon_Opaque;                   // 0x38(0x8)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortItemWrapMaterialAssetData");
		return Clss;
	}

};

// 0x90 (0x3C0 - 0x330)
// Class FortniteGame.FortItemWrapPreviewActor
class AFortItemWrapPreviewActor : public AActor
{
public:
	uint8                                        Pad_1C48[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FItemWrapPreviewEntry                 CurrentEntryInfo;                                  // 0x350(0x70)(Transient, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortItemWrapPreviewActor");
		return Clss;
	}

	void StartLoadingNextPreviewActor(int32 SlotIndex);
	void PreviewItemWrap(class UAthenaItemWrapDefinition* ItemWrap);
	void OnPreviewSkeletalMeshLoaded(class USkeletalMesh* LoadedMesh, struct FItemWrapPreviewEntry& EntryInfo);
};

// 0x210 (0x240 - 0x30)
// Class FortniteGame.FortJumpBoostSet
class UFortJumpBoostSet : public UFortAttributeSet
{
public:
	uint8                                        Pad_1C49[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FFortGameplayAttributeData            BoostActive;                                       // 0x38(0x28)(BlueprintVisible, BlueprintReadOnly, Net, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            MaxFuel;                                           // 0x60(0x28)(BlueprintVisible, BlueprintReadOnly, Net, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            Fuel;                                              // 0x88(0x28)(BlueprintVisible, BlueprintReadOnly, Net, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            ReserveMaxFuel;                                    // 0xB0(0x28)(BlueprintVisible, BlueprintReadOnly, Net, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            ReserveFuel;                                       // 0xD8(0x28)(BlueprintVisible, BlueprintReadOnly, Net, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            FuelBurnRate;                                      // 0x100(0x28)(BlueprintVisible, BlueprintReadOnly, Net, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            FuelRegenRate;                                     // 0x128(0x28)(BlueprintVisible, BlueprintReadOnly, Net, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            FuelRegenDelay;                                    // 0x150(0x28)(BlueprintVisible, BlueprintReadOnly, Net, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            BoostFuelCost;                                     // 0x178(0x28)(BlueprintVisible, BlueprintReadOnly, Net, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            UpwardThrust;                                      // 0x1A0(0x28)(BlueprintVisible, BlueprintReadOnly, Net, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            LateralThrust;                                     // 0x1C8(0x28)(BlueprintVisible, BlueprintReadOnly, Net, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            UpwardAcceleration;                                // 0x1F0(0x28)(BlueprintVisible, BlueprintReadOnly, Net, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            LateralAcceleration;                               // 0x218(0x28)(BlueprintVisible, BlueprintReadOnly, Net, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortJumpBoostSet");
		return Clss;
	}

};

// 0x0 (0x380 - 0x380)
// Class FortniteGame.FortJumpDownLink
class AFortJumpDownLink : public ANavLinkProxy
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortJumpDownLink");
		return Clss;
	}

};

// 0x28 (0x58 - 0x30)
// Class FortniteGame.FortKeepEventInfo
class UFortKeepEventInfo : public UDataAsset
{
public:
	class FText                                  EventDescription;                                  // 0x30(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<struct FKeepEventWaveData>            Waves;                                             // 0x48(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortKeepEventInfo");
		return Clss;
	}

	int32 NumberOfWaves();
	struct FKeepEventWaveData& GetWave(int32 Index);
};

// 0x10 (0x40 - 0x30)
// Class FortniteGame.FortKeepEventList
class UFortKeepEventList : public UDataAsset
{
public:
	TArray<struct FKeepEventInfo>                Events;                                            // 0x30(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortKeepEventList");
		return Clss;
	}

	class FText GetEventDescription(int32 Idx);
	struct FKeepEventInfo GetEvent(int32 Idx);
};

// 0xD0 (0x400 - 0x330)
// Class FortniteGame.FortKeepDefenseManager
class AFortKeepDefenseManager : public AActor
{
public:
	UMulticastDelegateProperty_                  OnEventStarted;                                    // 0x330(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnWarmupEnded;                                     // 0x340(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnEncounterTimeout;                                // 0x350(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnEventEnded;                                      // 0x360(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnEventStopped;                                    // 0x370(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnAllEnemiesKilled;                                // 0x380(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnEncounterStarted;                                // 0x390(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnEncounterEnded;                                  // 0x3A0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnDefenseStateChanged;                             // 0x3B0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_1C50[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UFortAIEncounterInfo*                  ActiveAIEncounter;                                 // 0x3D0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UFortAISpawnGroupProgressionInfo*      ActiveAISpawnGroup;                                // 0x3D8(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1C51[0x20];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortKeepDefenseManager");
		return Clss;
	}

	void StopEvent();
	void StartEventFromList(class UFortKeepEventList* EventList, int32 EventNumber);
	void StartEvent(class UFortKeepEventInfo* EventTemplate, int32 DifficultyLevelOffset);
	class UFortAIEncounterInfo* StartAIEncounter(TSubclassOf<class UFortAIEncounterInfo> EncounterTemplate, class AActor* TargetActor, class UFortAISpawnGroupProgressionInfo* SpawnGroupProgressionInfo, int32 ActivationDelay, int32 EncounterDifficultyLevel, float AliveMultiplier);
	void SkipWarmup();
	void GoToNextWave();
	class FText GetWaveDescription();
	int32 GetNumberAliveEnemies();
};

// 0x320 (0x348 - 0x28)
// Class FortniteGame.FortKeepItemManager
class UFortKeepItemManager : public UObject
{
public:
	uint8                                        Pad_1C52[0x320];                                   // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortKeepItemManager");
		return Clss;
	}

};

// 0x0 (0x28 - 0x28)
// Class FortniteGame.FortKismetLibrary
class UFortKismetLibrary : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortKismetLibrary");
		return Clss;
	}

	float VectorToNormalizedAngleInDegrees(const struct FVector& V);
	void UnhideTutorialWidget(class UObject* WorldContextObject, class FName WidgetName);
	void UnhideAllTutorialWidgets(class UObject* WorldContextObject);
	void UnequipFortAbilitySet(struct FFortAbilitySetHandle& AbilitySetHandle);
	void TriggerFeedbackEvent(class UObject* WorldContextObject, const struct FFortFeedbackHandle& EventHandle, class AFortPawn* InstigatorPawn, class AFortPawn* Recipient, float OverriddenDelay, bool bOverriddenQueuing, bool bAllowReplication);
	bool SwitchHeroType(class AFortPlayerController* FortPC, const class FString& NewHeroName);
	void StopUIConversation(class UObject* WorldContextObject);
	void StartUIConversation(class UObject* WorldContextObject);
	class AFortTracerBase* SpawnTracerFromPool(class UObject* WorldContextObject, TSubclassOf<class AFortTracerBase> TracerClass, struct FVector& Origin, struct FVector& Destination, class AFortPawn* Instigator);
	class AFortProjectileBase* SpawnProjectile(TSubclassOf<class AFortProjectileBase> ProjectileClass, class AActor* RequestedBy, struct FVector& SpawnLocation, const struct FRotator& SpawnRotation, struct FRotator& SpawnDirection, const struct FFortGameplayEffectContainerSpec& EffectContainerSpecToApplyOnHit, const struct FFortGameplayEffectContainerSpec& EffectContainerSpecToApplyOnExplode, bool bUseDefaultPhysics, class AActor* HomingTarget, float InitialSpeed, float GravityScale, float ChargePercent);
	class ABuildingGameplayActor* SpawnBuildingGameplayActor(TSubclassOf<class ABuildingGameplayActor> BGAClass, struct FTransform& Transform, class AActor* Instigator);
	class AFortAreaOfEffectCloud* SpawnAreaOfEffectCloud(TSubclassOf<class AFortAreaOfEffectCloud> AreaOfEffectClass, class AActor* RequestedBy, struct FVector& SpawnLocation, struct FRotator& SpawnRotation, const struct FFortGameplayEffectContainerSpec& EffectContainerSpecToApplyOnHit, const struct FFortGameplayEffectContainerSpec& EffectContainerSpecToApplyOnExplode);
	void ShowSoundIndicatorLocalForTeam(class UObject* WorldContextObject, class AFortPawn* TrackedPawn, const struct FVector& Location, float MaxAudibleDistance, enum class EFortSoundIndicatorTypes IndicatorType, enum class EFortTeam Team, const TArray<enum class EFortTeamAffiliation>& Affiliations, class AActor* Instigator, const struct FLinearColor& Tint, class UTexture* OverrideIcon);
	void ShowSoundIndicatorLocal(class UObject* WorldContextObject, class AFortPawn* TrackedPawn, const struct FVector& Location, float MaxAudibleDistance, enum class EFortSoundIndicatorTypes IndicatorType, TArray<class AFortPlayerController*>& IgnoreOnControllers, class AActor* Instigator, const struct FLinearColor& Tint, class UTexture* OverrideIcon);
	bool ShouldHideTutorialWidget(class FName WidgetName);
	void SetTimeOfDaySpeed(class UObject* WorldContextObject, float TimeOfDaySpeedFactor);
	void SetTimeOfDay(class UObject* WorldContextObject, float TimeOfDay);
	void SetEndGameTimeDilation(class UObject* WorldContextObject, float TimeDilation);
	void SetCanBeDamaged(class AActor* Actor, bool bCanBeDamaged);
	class UMaterialInstance* SelectMaterialInstance(class UMaterialInstance* A, class UMaterialInstance* B, bool bSelectA);
	void ScriptError(const class FString& MESSAGE);
	void ScriptEnsureIsValid(const class FString& MESSAGE, class UObject* Object);
	struct FFortGameplayEffectContainer ReplaceRangeInGameplayEffectContainer(const struct FFortGameplayEffectContainer& EffectContainer, struct FScalableFloat& NewRange);
	void RemoveActorsOfClassFromBuildingSMActorArray(TArray<class ABuildingSMActor*>& ArrayToRemoveClassFrom, TSubclassOf<class ABuildingSMActor> ClassToRemove, TArray<class ABuildingSMActor*>* ArrayWithClassRemoved);
	void RegisterDayTimeHitCallback(class UObject* Object, const class FString& FunctionName, float TimeInHours, bool bRecurring, bool bBlockTriggeringThisCycle);
	void RegisterDayPhaseHitCallback(class UObject* Object, const class FString& FunctionName, enum class EFortDayPhase Phase, bool bRecurring, bool bBlockTriggeringThisCycle);
	bool RandomGroundLocationInCircle(class UObject* WorldContextObject, struct FVector& CircleCenter, float CircleRadius, class AActor* TraceIgnoreActor, float TraceStartZ, float TraceEndZ, float TraceRadius, const struct FCollisionProfileName& TraceProfile, struct FVector* OutLocation);
	struct FTransform PushOffTransformByHitLocation(class AActor* RequestedBy, struct FTransform& InTransform, struct FHitResult& Hit, float Distance);
	struct FVector PushOffHitLocation(class AActor* RequestedBy, struct FHitResult& Hit, float Distance);
	void PlayLocalForceFeedbackAtLocationMulti(class UObject* WorldContextObject, class UForceFeedbackEffect* NearForceFeedbackEffect, class UForceFeedbackEffect* FarForceFeedbackEffect, const struct FVector& Location, float InnerRadius, float OuterRadius, class FName Tag);
	void PlayLocalForceFeedbackAtLocation(class UObject* WorldContextObject, class UForceFeedbackEffect* ForceFeedbackEffect, const struct FVector& Location, float Radius, class FName Tag);
	bool PickLootDropsWithNamedWeights(class UObject* WorldContextObject, TArray<struct FFortItemEntry>* OutLootToDrop, class FName TierGroupName, int32 WorldLevel, TMap<class FName, float>& NamedWeightsMap, int32 ForcedLootTier);
	bool PickLootDrops(class UObject* WorldContextObject, TArray<struct FFortItemEntry>* OutLootToDrop, class FName TierGroupName, int32 WorldLevel, int32 ForcedLootTier);
	void OpenTalkingHead(class UObject* WorldContextObject, class UTexture2D* Image, class FText Title, class FText SpeechText, enum class EFortAnnouncementDisplayPreference DisplayPreference);
	bool OnSameTeam(class AActor* ActorA, class AActor* ActorB);
	void NotifyProjectileThrown(TSubclassOf<class AFortProjectileBase> ProjClass, class AActor* RequestedBy, struct FVector& SpawnLocation, struct FRotator& SpawnRotation, float Speed);
	bool NotEqual_UniqueNetIdReplUniqueNetIdRepl(struct FUniqueNetIdRepl& A, struct FUniqueNetIdRepl& B);
	bool NotEqual_FFortDialogWaitingForLatentActionHandle(struct FFortDialogExternalLatentActionHandle& A, struct FFortDialogExternalLatentActionHandle& B);
	struct FVector NormalizedAngleInDegreesToVector(float A);
	enum class EFortWeaponCoreAnimation MakeWeaponCoreAnimation(enum class EFortWeaponCoreAnimation Value);
	enum class EFortResourceType MakeResourceType(enum class EFortResourceType Value);
	enum class EFortMovementStyle MakeMovementStyle(enum class EFortMovementStyle Value);
	struct FFortGameplayEffectContainerSpec MakeGameplayEffectContainerSpecFromAbilityComponent(struct FFortGameplayEffectContainer& EffectContainer, class UAbilitySystemComponent* AbilityComp, int32 GameplayEffectLevel);
	struct FFortGameplayEffectContainerSpec MakeGameplayEffectContainerSpecFromAbility(struct FFortGameplayEffectContainer& EffectContainer, class UGameplayAbility* Ability, int32 GameplayEffectLevel);
	enum class EFortDayPhase MakeDayNightPhase(enum class EFortDayPhase Value);
	enum class EFortBuildingState MakeBuildingState(enum class EFortBuildingState Value);
	void MakeAllPlayersTalkToSelf(class UObject* WorldContextObject, const struct FLatentActionInfo& LatentInfo, class USoundBase* Audio, float Delay, bool bInterruptCurrentLine, bool bCanBeInterrupted, bool bCanCue, enum class EFortFeedbackBroadcastFilter BroadcastFilter, bool bLatent);
	class AFortPickup* K2_SpawnPickupInWorldWithClass(class UObject* WorldContextObject, class UFortWorldItemDefinition* ItemDefinition, TSubclassOf<class AFortPickup> PickupClass, int32 NumberToSpawn, const struct FVector& Position, const struct FVector& Direction, int32 OverrideMaxStackCount, bool bToss, bool bRandomRotation, bool bBlockedFromAutoPickup);
	class AFortPickup* K2_SpawnPickupInWorld(class UObject* WorldContextObject, class UFortWorldItemDefinition* ItemDefinition, int32 NumberToSpawn, const struct FVector& Position, const struct FVector& Direction, int32 OverrideMaxStackCount, bool bToss, bool bRandomRotation, bool bBlockedFromAutoPickup);
	void K2_SetCurrentResourceType(class AFortPlayerController* Controller, enum class EFortResourceType NewMaterial);
	int32 K2_RemoveItemFromPlayerByGuid(class AFortPlayerController* PlayerController, const struct FGuid& ItemGuid, int32 AmountToRemove, bool bForceRemoval);
	int32 K2_RemoveItemFromPlayer(class AFortPlayerController* PlayerController, class UFortWorldItemDefinition* ItemDefinition, int32 AmountToRemove, bool bForceRemoval);
	void K2_RemoveItemFromAllPlayers(class UObject* WorldContextObject, class UFortWorldItemDefinition* ItemDefinition, int32 AmountToRemove);
	int32 K2_RemoveFortItemFromPlayer(class AFortPlayerController* PlayerController, class UFortItem* Item, int32 AmountToRemove, bool bForceRemoval);
	int32 K2_PayBuildingResourceCost(class AFortPlayerController* Controller, enum class EFortResourceType ResourceType, int32 ResourceAmount);
	bool K2_HasBuildingResourcesAvailable(class AFortPlayerController* Controller, enum class EFortResourceType ResourceType, int32 ResourceAmount);
	void K2_GiveItemToPlayer(class AFortPlayerController* PlayerController, class UFortWorldItemDefinition* ItemDefinition, int32 NumberToGive, bool bNotifyPlayer);
	void K2_GiveItemToAllPlayers(class UObject* WorldContextObject, class UFortWorldItemDefinition* ItemDefinition, int32 NumberToGive, bool bNotifyPlayer);
	void K2_GiveBuildingResource(class AFortPlayerController* Controller, enum class EFortResourceType ResourceType, int32 ResourceAmount);
	class UFortResourceItemDefinition* K2_GetResourceItemDefinition(enum class EFortResourceType ResourceType);
	int32 K2_GetNumAvailableBuildingResources(class AFortPlayerController* Controller, enum class EFortResourceType ResourceType);
	int32 K2_GetItemQuantityOnPlayer(class AFortPlayerController* PlayerController, class UFortItemDefinition* ItemDefinition);
	enum class EFortResourceType K2_GetCurrentResourceType(class AFortPlayerController* Controller);
	struct FVector K2_GetClosestAxisXY(const struct FVector& InVector);
	void K2_CycleBuildingMaterial(class AFortPlayerController* Controller, bool bBroadcast, bool bDoUIFeedback, bool bHonorAutoSwitch);
	TArray<class UObject*> JonLHack_GetAllObjectsOfClassFromPath(const class FString& Path, class UClass* Class);
	bool IsValid_UniqueNetIdRepl(struct FUniqueNetIdRepl& InUniqueNetIdRepl);
	bool IsValid(struct FAttributeInfo& AttributeInfo);
	bool IsUsingBattlEye();
	bool IsTabletGame();
	bool IsRunningNoMCP();
	bool IsPhoneGame();
	bool IsMobilePlatform();
	bool IsMobileGame(class UObject* WorldContextObject);
	bool IsLinkingStreamedAccountsEnabled();
	bool IsLatentActionHandleValid(struct FFortDialogExternalLatentActionHandle& Handle);
	bool IsItemDefRandomCustomizationSelector(class UFortItemDefinition* InItemDef);
	bool IsFullBodyHit(const struct FGameplayEffectContextHandle& EffectContext);
	bool IsFatalHit(const struct FGameplayEffectContextHandle& EffectContext);
	bool IsDiceCritical(const struct FGameplayEffectContextHandle& EffectContext);
	bool IsCriticalHit(const struct FGameplayEffectContextHandle& EffectContext);
	bool IsConsolePlatform();
	bool IsAssetNull(TSoftObjectPtr<class UObject> Asset);
	void InvalidateLatentActionHandle(struct FFortDialogExternalLatentActionHandle& Handle);
	void HideTutorialWidget(class UObject* WorldContextObject, class FName WidgetName);
	bool HasSelectableRewards(struct FFortRewardInfo& RewardInfo);
	bool HasRewards(struct FFortRewardInfo& RewardInfo);
	bool HasOpenBroadcasterGrantWindow(class UObject* WorldContextObject);
	bool HasMultipleVisibleRewards(struct FFortRewardInfo& RewardInfo);
	void GiveItemToInventoryOwner(UInterfaceProperty_ InventoryOwner, class UFortWorldItemDefinition* ItemDefinition, int32 NumberToGive, bool bNotifyPlayer);
	bool GetWeaponStatsRow(const struct FDataTableRowHandle& DataTableRowHandle, struct FFortBaseWeaponStats* OutRow);
	bool GetWeaponDurabilityByRarityStatsRow(const struct FDataTableRowHandle& DataTableRowHandle, struct FFortWeaponDurabilityByRarityStats* OutRow);
	bool GetTrapStatsRow(const struct FDataTableRowHandle& DataTableRowHandle, struct FFortTrapStats* OutRow);
	bool GetTooltipTextFromTokenFromTooltipClass(class UObject* WorldContextObject, class UObject* ObjectToDescribe, TSubclassOf<class UFortTooltip> TooltipClass, const struct FGameplayTag& Tag, class UFortTooltipContext* Context, const struct FGameplayTag& Token, class FText* OutText);
	bool GetTooltipTextFromToken(class UObject* WorldContextObject, class UObject* ObjectToDescribe, const struct FGameplayTag& Tag, class UFortTooltipContext* Context, const struct FGameplayTag& Token, class FText* OutText);
	bool GetTooltipNumericValueFromTooltipClass(class UObject* WorldContextObject, class UObject* ObjectToDescribe, TSubclassOf<class UFortTooltip> TooltipClass, const struct FGameplayTag& Tag, class UFortTooltipContext* Context, const struct FGameplayTag& Token, float* Value);
	bool GetTooltipNumericValue(class UObject* WorldContextObject, class UObject* ObjectToDescribe, const struct FGameplayTag& Tag, class UFortTooltipContext* Context, const struct FGameplayTag& Token, float* Value);
	bool GetTooltipDescriptionFromTooltipClass(class UObject* WorldContextObject, class UObject* ObjectToDescribe, TSubclassOf<class UFortTooltip> TooltipClass, const struct FGameplayTag& Tag, class UFortTooltipContext* Context, TArray<class FText>* Description);
	bool GetTooltipDescription(class UObject* WorldContextObject, class UObject* ObjectToDescribe, const struct FGameplayTag& Tag, class UFortTooltipContext* Context, TArray<class FText>* Description);
	float GetTimeUntilInRealTimeSeconds(class UObject* WorldContextObject, float GameTime);
	float GetTimeOfDaySpeed(class UObject* WorldContextObject);
	float GetTimeOfDayAccumulator(class UObject* WorldContextObject);
	float GetTimeOfDay(class UObject* WorldContextObject);
	float GetTimeDayPhaseBegins(class UObject* WorldContextObject, enum class EFortDayPhase DayPhase);
	class AFortThreatVisualsManager* GetThreatVisualsManager(class UObject* WorldContextObject);
	class AFortTeamInfo* GetTeamInfo(class UObject* WorldContextObject, enum class EFortTeam Team);
	enum class EFortTeamAffiliation GetTeamAffiliationToLocalPlayer(class UObject* WorldContextObject, enum class EFortTeam Team);
	enum class EFortTeamAffiliation GetTeamAffiliationBetweenTeams(enum class EFortTeam TeamA, enum class EFortTeam TeamB);
	enum class EFortTeamAffiliation GetTeamAffiliation(class AActor* ActorA, class AActor* ActorB);
	enum class ESubGame GetSubGame(class UObject* WorldContextObject);
	float GetStunTime(const struct FGameplayEffectContextHandle& EffectContext);
	bool GetShowHeroHeadAccessoriesForLocalPlayer(class UObject* WorldContextObject);
	bool GetShowHeroBackpackForLocalPlayer(class UObject* WorldContextObject);
	bool GetSafeZoneLocation(class UObject* WorldContextObject, int32 SafeZoneIndex, struct FVector* OutLocation);
	class UFortAbilityKit* GetRemovedAbilityKit(struct FFortSpecializationSlot& Slot);
	bool GetRangedWeaponStatsRow(const struct FDataTableRowHandle& DataTableRowHandle, struct FFortRangedWeaponStats* OutRow);
	class FText GetRandomSurvivorName(class UObject* WorldContextObject, enum class EFortDisplayGender Gender, bool bRemoveFromList);
	class FText GetRandomLiveStreamingViewerName(class UObject* WorldContextObject, bool bRemoveFromList);
	bool GetPurchaseCostsRow(const struct FDataTableRowHandle& DataTableRowHandle, struct FFortCollectionBookDirectPurchaseData* OutRow);
	class UGameplayAbility* GetPrimaryInstance(struct FGameplayAbilitySpec& Spec);
	enum class EFortDayPhase GetPreviousDayPhase(class UObject* WorldContextObject);
	bool GetPlaylistUsesCustomCharacterParts(class UObject* WorldContextObject);
	bool GetPlaylistAllowsTeamSwitching(class UObject* WorldContextObject);
	class UFortRegisteredPlayerInfo* GetPlayerInfoFromUniqueID(class UObject* WorldContextObject, struct FUniqueNetIdRepl& UniqueId);
	bool GetPawnStatsRow(const struct FDataTableRowHandle& DataTableRowHandle, struct FFortPawnStats* OutRow);
	bool GetNumericCVar(const class FString& CVar, float* OutValue);
	class AFortMusicManager* GetMusicManager(class UObject* WorldContextObject);
	class UMaterialInstanceDynamic* GetMIDForSkeletalMeshComponent(class USkeletalMeshComponent* SkeletalMeshComponent, int32 ElementIndex);
	bool GetMeleeWeaponStatsRow(const struct FDataTableRowHandle& DataTableRowHandle, struct FFortMeleeWeaponStats* OutRow);
	void GetMatchmakingDifficultyRangeFromDifficultyInfo(struct FGameDifficultyInfo& DifficultyInfo, float* OutMinDifficulty, float* OutMaxDifficulty);
	int32 GetLootLevel(class UObject* WorldContextObject);
	bool GetLocalPlayerHasHeroHeadAccessories(class UObject* WorldContextObject);
	bool GetLocalPlayerHasHeroBackpack(class UObject* WorldContextObject);
	TArray<class AFortPlayerController*> GetLocalFortPlayerControllers(class UObject* WorldContextObject, bool bIncludeNonSpectators, bool bIncludeSpectators);
	int32 GetItemQuantityOnPlayerByGUID(class AFortPlayerController* PlayerController, struct FGuid& ItemGuid);
	class UFortItemDefinition* GetItemDefinitionFromItemQuantityPair(struct FFortItemQuantityPair& ItemQuantityPair);
	bool GetIsPlayingReplay(class UObject* WorldContextObject);
	bool GetIsBroadcastClient(class UObject* WorldContextObject);
	void GetImpulseData(const struct FGameplayEffectContextHandle& EffectContext, struct FVector* ImpulseDirection, float* KnockbackMagnitude, float* KnockbackZAngle);
	class FString GetHumanReadableName(class AActor* Actor);
	int32 GetHoursUntilDayPhase(class UObject* WorldContextObject, enum class EFortDayPhase DayPhase);
	float GetHostilityPercentage(class UObject* WorldContextObject);
	class UFortAbilityKit* GetGrantedAbilityKit(struct FFortSpecializationSlot& Slot);
	float GetGameDifficulty();
	bool GetGameContextGameplayTags(class UObject* WorldContextObject, struct FGameplayTagContainer* OutGameContextGameplayTags);
	TArray<class AFortPlayerPawn*> GetFortPlayerPawns(class UObject* WorldContextObject);
	class AFortPlayerController* GetFortPlayerControllerFromActor(class AActor* Actor);
	enum class EPhysicalSurface GetFortPhysicalSurface(struct FHitResult& Hit);
	class UFortGameUserSettings* GetFortGameUserSettings();
	float GetFloatHoursUntilDayPhase(class UObject* WorldContextObject, enum class EFortDayPhase DayPhase);
	struct FRotator GetDirectionActorToActor(class AActor* SourceActor, class AActor* TargetActor);
	float GetDefaultAbsoluteTimeOfDaySpeed(class UObject* WorldContextObject);
	class FString GetDebugStringForUniqueId(struct FUniqueNetIdRepl& UniqueId);
	struct FVector GetDayNightDirectionalLightVector(class UObject* WorldContextObject);
	struct FLinearColor GetDayNightDirectionalLightColor(class UObject* WorldContextObject);
	enum class EFortDayPhase GetCurrentDayPhase(class UObject* WorldContextObject);
	enum class EAthenaWinCondition GetCurrentAthenaWinCondition(class UObject* WorldContextObject);
	class AFortPlayerPawn* GetClosestFortPlayerPawn(class UObject* WorldContextObject, const struct FVector& Position);
	class ABuildingSMActor* GetClosestBuildingActorFromArray(class AActor* Actor, TArray<class ABuildingSMActor*>& ArrayOfBuildings);
	class AActor* GetClosestActorFromArray(class AActor* Actor, TArray<class AActor*>& ArrayOfActors);
	void GetCalendarEventInformation(class UObject* WorldContextObject, const class FString& EventName, bool* bIsEventActive, struct FTimespan* TimeSinceBegin, struct FTimespan* TimeUntilEnd, float* TimespanRatio);
	float GetCalculatedGameDifficulty(class UObject* WorldContextObject);
	void GetBuildingStructuralSupportSystem(class UObject* WorldContextObject, class UBuildingStructuralSupportSystem** BuildingStructuralSupportSystem);
	float GetBuildingHealthPercentage(class ABuildingActor* BuildingActor);
	float GetBroadcasterGrantWindowSecondsRemaining(class UObject* WorldContextObject);
	void GetAllFortPlayerPawns(class UObject* WorldContextObject, TArray<class AFortPlayerPawn*>* OutFortPlayerPawns);
	TArray<class AFortPlayerController*> GetAllFortPlayerControllers(class UObject* WorldContextObject, bool bIncludeNonSpectators, bool bIncludeSpectators);
	class AFortAIGoalManager* GetAIGoalManager(class UObject* WorldContextObject);
	class AFortAIDirector* GetAIDirector(class UObject* WorldContextObject);
	class AFortTeamInfo* GetActorTeamInfo(class AActor* Actor);
	enum class EFortTeam GetActorTeam(class AActor* Actor);
	void FortShippingLog(class UObject* WorldContextObject, const class FString& InString, bool bLogAsWarning);
	struct FVector FindStaticGroundLocationWithExtentAt(class UWorld* World, struct FVector& InLocation, struct FQuat& ActorRotation, struct FVector& ActorExtent, class AActor* IgnoreActor, float TraceStartZ, float TraceEndZ);
	struct FVector FindStaticGroundLocationAt(class UWorld* World, struct FVector& InLocation, class AActor* IgnoreActor, float TraceStartZ, float TraceEndZ);
	struct FVector FindGroundLocationAt(class UWorld* World, class AActor* IgnoreActor, struct FVector& InLocation, float TraceStartZ, float TraceEndZ, class FName TraceName);
	TArray<struct FHitResult> FilterTargetHitResultList(class UObject* WorldContextObject, struct FFortTargetFilter& Filter, class AActor* RequestingActor, TArray<struct FHitResult>& HitResultsToFilter, bool* bAtLeastOneActorLeft);
	TArray<class AActor*> FilterTargetActorList(class UObject* WorldContextObject, struct FFortTargetFilter& Filter, class AActor* RequestingActor, TArray<class AActor*>& ActorsToFilter, bool* bAtLeastOneActorLeft);
	bool FilterSingleTargetHitResult(class UObject* WorldContextObject, struct FFortTargetFilter& Filter, class AActor* RequestingActor, struct FHitResult& HitResult);
	bool FilterSingleTargetActor(class UObject* WorldContextObject, struct FFortTargetFilter& Filter, class AActor* RequestingActor, class AActor* TargetActor);
	struct FVector ExtractSkeletalMeshScale(TSubclassOf<class AActor> BlueprintClass);
	class USkeletalMesh* ExtractSkeletalMesh(TSubclassOf<class AActor> BlueprintClass);
	void ExecuteClientEvent(class UObject* WorldContextObject, const struct FFortClientEventName& EventType, class UObject* EventSource, class UObject* EventFocus);
	bool EvaluateCurveTableRow(const struct FCurveTableRowHandle& CurveTableRowHandle, float InXY, float* OutXY, const class FString& ContextString);
	bool EquipItemToQuickBarSlot(class UObject* WorldContextObject, class UFortItemDefinition* ItemDefinition, enum class EFortQuickBars QuickBarType, int32 SlotIndex);
	struct FFortAbilitySetHandle EquipFortAbilitySet(UInterfaceProperty_ AbilitySystemInterfaceActor, class UFortAbilitySet* AbilitySet, class UObject* OverrideSourceObject);
	bool EqualEqual_UniqueNetIdReplUniqueNetIdRepl(struct FUniqueNetIdRepl& A, struct FUniqueNetIdRepl& B);
	bool EqualEqual_FFortDialogWaitingForLatentActionHandle(struct FFortDialogExternalLatentActionHandle& A, struct FFortDialogExternalLatentActionHandle& B);
	void EndWaitForConfirmationDialog(class UObject* WorldContextObject, struct FFortDialogExternalLatentActionHandle& Handle);
	void EnableTutorialHighlight(class UObject* WorldContextObject, class FName WidgetName);
	bool EmptyQuickBarSlot(class UObject* WorldContextObject, enum class EFortQuickBars QuickBarType, int32 SlotIndex);
	void EffectContextAddSourceObject(const struct FGameplayEffectContextHandle& EffectContext, class UObject* Src);
	void DisableTutorialHighlight(class UObject* WorldContextObject, class FName WidgetName);
	bool DeviceSupportsForceFeedback();
	void DebugSphereSendToAll(class UObject* WorldContextObject, struct FVector& Center, float Radius, int32 Segments, struct FColor& Color, bool bPersistentLines, float LifeTime, uint8 DepthPriority, float Thickness);
	void DebugLineSendToAll(class UObject* WorldContextObject, struct FVector& LineStart, struct FVector& LineEnd, struct FColor& Color, bool bPersistentLines, float LifeTime, uint8 DepthPriority, float Thickness);
	void DebugCapsuleSendToAll(class UObject* WorldContextObject, struct FVector& Center, float HalfHeight, float Radius, struct FQuat& Rotation, struct FColor& Color, bool bPersistentLines, float LifeTime, uint8 DepthPriority, float Thickness);
	void DebugBoxSendToAll(class UObject* WorldContextObject, struct FVector& Center, struct FVector& Extent, struct FColor& Color, bool bPersistentLines, float LifeTime, uint8 DepthPriority, float Thickness);
	class UFortSpline* CreateNewSplineObject(class UObject* Outer);
	void CopyJerseyElements(class UMaterialInstanceDynamic* SourceMID, class UMaterialInstanceDynamic* TargetMID);
	void CopyHideElements(class UMaterialInstanceDynamic* SourceMID, class UMaterialInstanceDynamic* TargetMID);
	float ConvertToRealTime(class UObject* WorldContextObject, float InGameTime);
	float ConvertToGameTime(class UObject* WorldContextObject, float InRealTime);
	void CloseTalkingHead(class UObject* WorldContextObject);
	void ClearTutorialHighlights(class UObject* WorldContextObject);
	void BroadcastSoundAtLocation(class UObject* WorldContextObject, class USoundBase* InSound, const struct FVector& Location, float VolumeMultiplier, float PitchMultiplier);
	void BroadcastSound(class UObject* WorldContextObject, class USoundBase* InSound, float VolumeMultiplier, float PitchMultiplier);
	bool BroadcastPlayerImpactAtLocation(class UObject* WorldContextObject, class APlayerController* Player, struct FVector& Position, float* Loudness, float* Duration, bool bRelativePosition);
	void BroadcastMessage(class UObject* WorldContextObject, class FText& MESSAGE);
	void BroadcastAbilitySpinThrustAtLocation(class UObject* WorldContextObject, class USoundBase* InSound, class UObject* Instigator, struct FVector& Position, float Radius, class FName Tag);
	void BroadcastAbilityImpactAtLocation(class UObject* WorldContextObject, class USoundBase* InSound, class UObject* Instigator, struct FVector& Position, float Radius, class FName Tag);
	TArray<class AFortPlayerPawn*> AuthorityGetFortPossessedPlayerPawns(class UObject* WorldContextObject);
	bool AreCampaignVehiclesEnabled();
	bool AreAthenaVehiclesEnabled();
	struct FActiveGameplayEffectHandle ApplyGlobalEnvironmentGameplayEffectToActor(class AActor* EffectTargetActor, TSubclassOf<class UGameplayEffect> GameplayEffect, int32 GameplayEffectLevel, const struct FGameplayTagContainer& AdditionalContextTags);
	void ApplyGlobalEnvironmentDamageToActor(class AActor* DamageTargetActor, float EnvironmentDamage, const struct FGameplayTagContainer& AdditionalContextTags, TSubclassOf<class UGameplayEffect> EnvironmentDamageGE);
	struct FFortEncounterSettings ApplyEncounterOptionOverridesFromWaveDataToEncounterSettings(struct FTieredWaveSetData& WaveData, struct FFortEncounterSettings& EncounterSettings);
	void AddScoringEvent(class AFortPlayerController* Controller, const struct FGameplayTagContainer& TargetTags);
	void AddRegenItemToInventoryOwner(UInterfaceProperty_ InventoryOwner, class UFortWorldItemDefinition* RegenItemDefinition, int32 NumberToGive, bool bNotifyPlayer);
};

// 0x60 (0xE80 - 0xE20)
// Class FortniteGame.FortLauncherAthena
class AFortLauncherAthena : public ABuildingTrapFloor
{
public:
	struct FScalableFloat                        LaunchStrength;                                    // 0xE20(0x20)(Edit, NativeAccessSpecifierPublic)
	struct FScalableFloat                        LaunchStrengthVehicle;                             // 0xE40(0x20)(Edit, NativeAccessSpecifierPublic)
	class USoundBase*                            OnLaunchSound3P;                                   // 0xE60(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundBase*                            OnLaunchSound1P;                                   // 0xE68(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FServerLaunchInfo                     ServerLaunchInfo;                                  // 0xE70(0x10)(Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortLauncherAthena");
		return Clss;
	}

	void TriggerLaunchEffects(class AFortPlayerPawnAthena* Pawn);
	void ReTriggerForPawn(class AFortPlayerPawnAthena* AthenaPawn);
	void OnTriggerEndOverlap(class UPrimitiveComponent* OverlappedComp, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void OnRepLaunchServerInfo();
};

// 0x48 (0x70 - 0x28)
// Class FortniteGame.FortLeaderboardRowProxyInstance
class UFortLeaderboardRowProxyInstance : public UObject
{
public:
	struct FLeaderboardRowData                   RowData;                                           // 0x28(0x48)(BlueprintVisible, BlueprintReadOnly, Transient, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortLeaderboardRowProxyInstance");
		return Clss;
	}

};

// 0x0 (0x28 - 0x28)
// Class FortniteGame.LevelDuplicatable
class ULevelDuplicatable : public UInterface
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("LevelDuplicatable");
		return Clss;
	}

	void PostFinishDuplication(class UObject* SourceObject);
};

// 0x60 (0x158 - 0xF8)
// Class FortniteGame.LevelSaveBaseComponent
class ULevelSaveBaseComponent : public UActorComponent
{
public:
	class FString                                ExplicitSaveFile;                                  // 0xF8(0x10)(Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        TimeBetweenSaves;                                  // 0x108(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bAutoLoadRecord : 1;                               // Mask : 0x1 0x10C(0x1)(Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1CFA[0x13];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class ULevelSaveRecord*                      LevelRecord;                                       // 0x120(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class AActor*>                        ActorToAddAfterWrite;                              // 0x128(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1CFB[0x20];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("LevelSaveBaseComponent");
		return Clss;
	}

	void StopPeriodicSaveTimer();
	void StartPeriodicSaveTimer();
	void SaveOutLevelRecord();
	bool ResaveActor(class AActor* Actor);
	bool RegisterNewActor(class AActor* Actor);
	void RegisterModificationToRollback(class AActor* Actor);
	void RegisterDeletionToRollback(class AActor* Actor);
	bool RegisterDeletedActor(class AActor* Actor);
	void RegisterCreationToRollback(class AActor* Actor);
	void OnFinishSpawning(struct FAsyncTaskResult& Result);
	void OnFinishedRecordWrite(struct FAsyncTaskResult& Result);
	void OnFinishedRecordRead(struct FAsyncTaskResult& Result);
	void LoadLevelRecord();
	void HandleVolumeStateChanged(enum class EVolumeState NewState, class AFortVolume* Volume);
	void ConstructNewLevelRecord(class AActor* Owner);
	void ApplySaveToWorld(bool bComplexShouldSpawn);
};

// 0x0 (0x158 - 0x158)
// Class FortniteGame.LevelSaveComponent
class ULevelSaveComponent : public ULevelSaveBaseComponent
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("LevelSaveComponent");
		return Clss;
	}

};

// 0x2A0 (0x3F8 - 0x158)
// Class FortniteGame.FortLevelSaveComponent
class UFortLevelSaveComponent : public ULevelSaveComponent
{
public:
	UMulticastDelegateProperty_                  OnStartPlotLoadForUser;                            // 0x158(0x10)(ZeroConstructor, Transient, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnFinishedReadingMnemonicLink;                     // 0x168(0x10)(ZeroConstructor, Transient, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnFinishedPlaysetLoad;                             // 0x178(0x10)(ZeroConstructor, Transient, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnFinishedEnumeratingFiles;                        // 0x188(0x10)(ZeroConstructor, Transient, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnFinishedLoadingCloudFiles;                       // 0x198(0x10)(ZeroConstructor, Transient, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnFinishedWritingCloudFiles;                       // 0x1A8(0x10)(ZeroConstructor, Transient, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnFinishedEnumeratingTitleFiles;                   // 0x1B8(0x10)(ZeroConstructor, Transient, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnFinishedReadingCloudFiles;                       // 0x1C8(0x10)(ZeroConstructor, Transient, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnClientSaveStateChanged;                          // 0x1D8(0x10)(ZeroConstructor, Transient, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnClientBackupSaveStateChanged;                    // 0x1E8(0x10)(ZeroConstructor, Transient, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnClientBackupRestoreStateChanged;                 // 0x1F8(0x10)(ZeroConstructor, Transient, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnClientCheckpointDateChanged;                     // 0x208(0x10)(ZeroConstructor, Transient, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnPlotUnloaded;                                    // 0x218(0x10)(ZeroConstructor, Transient, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UFortCreativeRealEstatePlotItemDefinition* RestrictedPlotDefinition;                          // 0x228(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bAutoLoadFromRestrictedPlotDefinition;             // 0x230(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1CFD[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        LinkCodeNumberToAutoLoad;                          // 0x234(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bLoadPlaysetFromPlot;                              // 0x238(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1CFE[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FUniqueNetIdRepl                      AccountIdOfOwner;                                  // 0x240(0x28)(Net, Transient, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFortCreativeRealEstatePlotItem*       LoadedPlot;                                        // 0x268(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bPermissionsSaveInProgress;                        // 0x270(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1CFF[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FFortCreativePlotPermissionData       PlotPermissions;                                   // 0x278(0x18)(Net, Transient, RepNotify, Protected, NativeAccessSpecifierProtected)
	class FString                                LoadedPlotInstanceId;                              // 0x290(0x10)(Net, ZeroConstructor, Transient, RepNotify, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FCreativeLoadedLinkData               LoadedLinkData;                                    // 0x2A0(0x30)(Transient, Protected, NativeAccessSpecifierProtected)
	bool                                         bIsLoaded;                                         // 0x2D0(0x1)(Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bIsAutoSaving;                                     // 0x2D1(0x1)(Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EBackupSaveState                  BackupSaveState;                                   // 0x2D2(0x1)(Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EBackupSaveState                  RestoringState;                                    // 0x2D3(0x1)(Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1D00[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FDateTime                             LastCheckpointDateUtc;                             // 0x2D8(0x8)(Net, ZeroConstructor, Transient, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1D01[0x48];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FFortCreativePlotPermissionData       OldPermissions;                                    // 0x328(0x18)(Transient, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1D02[0x90];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        PublishRateLimitSeconds;                           // 0x3D0(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1D03[0xC];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        BackupRateLimitSeconds;                            // 0x3E0(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1D04[0xC];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        RestoreRateLimitSeconds;                           // 0x3F0(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1D05[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortLevelSaveComponent");
		return Clss;
	}

	void RestrictedPlotLoadComplete(struct FAsyncTaskResult& Result);
	void OnRep_RestoringStateChanged(enum class EBackupSaveState OldValue);
	void OnRep_PlotPermissionsChanged();
	void OnRep_LoadedPlotInstanceId();
	void OnRep_Loaded();
	void OnRep_LastCheckpointDate(const struct FDateTime& OldValue);
	void OnRep_IsAutoSaving(bool bOldValue);
	void OnRep_BackupSaveState(enum class EBackupSaveState OldValue);
	void OnAsyncLoadingOfPlaysetComplete(TSoftObjectPtr<class UFortPlaysetItemDefinition> PlaysetPtr);
	bool IsLoaded();
	struct FUniqueNetIdRepl GetAccountIdOfOwner();
	bool DoesPlayerHavePermissionToEdit(struct FUniqueNetIdRepl& UserRequestingPermission);
	void CloudSaveFinished(struct FAsyncTaskResult& Result);
	void CloudLoadFinished(struct FAsyncTaskResult& Result);
};

// 0x10 (0x348 - 0x338)
// Class FortniteGame.FortLevelScriptActor
class AFortLevelScriptActor : public ALevelScriptActor
{
public:
	uint8                                        Pad_1D06[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	uint8                                        bWorldReadyCalled : 1;                             // Mask : 0x1 0x340(0x1)(Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1D07[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortLevelScriptActor");
		return Clss;
	}

	void OnWorldReady();
	void OnMatchStarted();
};

// 0xB0 (0x3E0 - 0x330)
// Class FortniteGame.FortLevelSpawnActor
class AFortLevelSpawnActor : public AActor
{
public:
	class FName                                  SpecialActorUniqueID;                              // 0x330(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          SpecialActorCategoryTag;                           // 0x338(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSlateBrush                           MiniMapIconBrush;                                  // 0x340(0x88)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FVector2D                             MiniMapIconScale;                                  // 0x3C8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        CachedSpecialActorIdx;                             // 0x3D0(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  SpecialActorID;                                    // 0x3D4(0x8)(Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1D08[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortLevelSpawnActor");
		return Clss;
	}

};

// 0x50 (0x388 - 0x338)
// Class FortniteGame.FortLightningActor
class AFortLightningActor : public AFortClientOnlyActor
{
public:
	int32                                        MaxBoltMeshes;                                     // 0x338(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MaxBoltWidth;                                      // 0x33C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  BoltMaterialParamTopPct;                           // 0x340(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  BoltMaterialParamBottomPct;                        // 0x348(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AActor*                                ActorToNotify;                                     // 0x350(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FVector>                       BoltLocations;                                     // 0x358(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	TArray<class UStaticMeshComponent*>          BoltMeshes;                                        // 0x368(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	TArray<class UMaterialInstanceDynamic*>      BoltMIDs;                                          // 0x378(0x10)(BlueprintVisible, ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortLightningActor");
		return Clss;
	}

	void OnLightingInitialized();
	void OnLightingCleanup();
	void InitializeLightning(class AActor* InActorToNotify);
	void GenerateBoltLocations(struct FVector& StartLocation, struct FVector& EndLocation, float MinLength, float MaxLength, float RandomVectorContribution, float MinSizeDecayRate, float MaxSizeDecayRate, float FalloffMultiplier);
	void CleanupLightning();
};

// 0x8 (0x30 - 0x28)
// Class FortniteGame.FortLinkedAccount
class UFortLinkedAccount : public UObject
{
public:
	class UFortLinkedAccountManager*             Manager;                                           // 0x28(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortLinkedAccount");
		return Clss;
	}

};

// 0x18 (0x40 - 0x28)
// Class FortniteGame.FortLinkedAccountManager
class UFortLinkedAccountManager : public UObject
{
public:
	uint8                                        Pad_1D09[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UFortLinkedAccount*>            LinkedAccounts;                                    // 0x30(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortLinkedAccountManager");
		return Clss;
	}

};

// 0x240 (0x1E50 - 0x1C10)
// Class FortniteGame.FortPlayerControllerGameplay
class AFortPlayerControllerGameplay : public AFortPlayerController
{
public:
	class UFortAmbientAudioController*           FortAmbientAudioController;                        // 0x1C10(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int16                                        PoiTagContainerTableID;                            // 0x1C18(0x2)(Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1D0C[0x1E];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTimerHandle                          VerifyAllowedToFlyTimerHandle;                     // 0x1C38(0x8)(Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVehicleTrickInfo                     VehicleTrickInfo;                                  // 0x1C40(0x148)(Edit, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FGhostModeRepData                     GhostModeRepData;                                  // 0x1D88(0x18)(Net, Transient, RepNotify, NoDestructor, Protected, NativeAccessSpecifierProtected)
	UMulticastDelegateProperty_                  OnGhostModeChanged;                                // 0x1DA0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	UMulticastDelegateProperty_                  OnBalloonMovementChanged;                          // 0x1DB0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	UMulticastDelegateProperty_                  OnWorldInventoryChangedDelegate;                   // 0x1DC0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	UMulticastDelegateProperty_                  OnCreativeFlyChangedDelegate;                      // 0x1DD0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	uint16                                       ServerNumNPCs;                                     // 0x1DE0(0x2)(Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint16                                       ServerMaxNumNPCs;                                  // 0x1DE2(0x2)(Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bDisplayNPCNumbers;                                // 0x1DE4(0x1)(Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1D0D[0x43];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTimerHandle                          AmbientControllerInitializeTimer;                  // 0x1E28(0x8)(Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1D0E[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bHasSetInitialPoiTags;                             // 0x1E40(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1D0F[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UInputComponent*                       CreativeFlyingModeInputComponent;                  // 0x1E48(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortPlayerControllerGameplay");
		return Clss;
	}

	bool Validation_IsFlyingPossible();
	void StartGhostMode(class UFortWorldItemDefinition* ItemProvidingGhostMode);
	void SetHUDElementVisibility(struct FGameplayTagContainer& HUDElementTags, bool bHideElements);
	void ServerRPCSetDisplayNPCNumbers(bool bEnable);
	void ServerCreativeToggleFly();
	void ServerCreativeStopFlyUp();
	void ServerCreativeStopFlyDown();
	void ServerCreativeStopFly();
	void ServerCreativeStartFlyUp();
	void ServerCreativeStartFlyDown();
	void ServerAwardVehicleTrickPoints(int32 InPoints, int32 InAirTimeX1000);
	void ResetHUDElementVisibilityToSettings(struct FGameplayTagContainer& HUDElementTags);
	void RefreshHUDElementVisibilitiesToSettings();
	void OnVerifyAllowedToFly();
	void OnRep_PoiTagContainerTableID(int16 PreviousPoiTagContainerTableID);
	void OnRep_GhostModeRepData();
	bool IsInGhostMode();
	bool IsAllowedToFly();
	void InitializeAmbientAudioController();
	void HandlePoiTagContainerTableFinishedReplicating(class AFortPoiManager* PoiManager);
	struct FVehicleTrickInfo& GetVehicleTrickInfo();
	void EndGhostMode();
	void DisplayNPCNumbers(bool bDisplay);
	void DisableTrickCredit();
	void ClientCreativeStopFly();
	void CheckGhostModeItemReplicated();
	void CheckGhostModeItemRemoved(class UFortWorldItemDefinition* GhostModeItemDef);
	bool AreHUDElementsVisible(struct FGameplayTagContainer& HUDElementTags);
};

// 0x570 (0x23C0 - 0x1E50)
// Class FortniteGame.FortPlayerControllerSpectating
class AFortPlayerControllerSpectating : public AFortPlayerControllerGameplay
{
public:
	enum class ESpectatorCameraType              CurrentCameraType;                                 // 0x1E50(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bCameraCollision;                                  // 0x1E51(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1D12[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<enum class ESpectatorCameraType>      CameraModeCycle;                                   // 0x1E58(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_1D13[0x30];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FLinearColor                          MinimapPlayerIconColorBase;                        // 0x1E98(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          MinimapPlayerIconColorHovered;                     // 0x1EA8(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ZoomThresholdForPlayerNames;                       // 0x1EB8(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1D14[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	UMulticastDelegateProperty_                  OnFollowedPlayerChanged;                           // 0x1EC0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnCameraTypeChanged;                               // 0x1ED0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnPlayerBecameRelevant;                            // 0x1EE0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnPlayerBecameIrrelevant;                          // 0x1EF0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnPlayerStateAdded;                                // 0x1F00(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnPlayerStateChanged;                              // 0x1F10(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnPlayerDied;                                      // 0x1F20(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnTimelineScrubbed;                                // 0x1F30(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnDistanceToPlayerChanged;                         // 0x1F40(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnZoomChanged;                                     // 0x1F50(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnCameraSettingsChanged;                           // 0x1F60(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnShowNotification;                                // 0x1F70(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnNameplatesEnabledChanged;                        // 0x1F80(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnNameplatesViewDistanceChanged;                   // 0x1F90(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_1D15[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UMaterialInterface*                    SpectatorPostProcessMaterial;                      // 0x1FA8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1D16[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UFortSpectatorCameraComponent*         CurrentSpectatorCamComp;                           // 0x1FC0(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1D17[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UPostProcessComponent*                 OutsideSafeZonePPComponent;                        // 0x1FD0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class AFortReplaySpectatorPawnBase> SpectatorPawnBaseClass;                            // 0x1FD8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class AArenaCamPawn>             ArenaCamPawnClass;                                 // 0x1FE0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class AHoverDronePawn>           HoverDronePawnClass;                               // 0x1FE8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class AAutoFrameDronePawn>       HoverDroneAutoFramePawnClass;                      // 0x1FF0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UFortMiniMapTeamIndicators> MinimapIndicatorClass;                             // 0x1FF8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FSpectatorOwnedCameraComponentRecord> OwnedCameraComponents;                             // 0x2000(0x10)(ZeroConstructor, Transient, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	TArray<struct FSavedPlayerSpectatorCameraData> SavedCameraStates;                                 // 0x2010(0x10)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_1D18[0x120];                                   // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<class APlayerState*, bool>              PlayerRelevancyTrackingMap;                        // 0x2140(0x50)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TMap<struct FUniqueNetIdRepl, class AFortPlayerStateAthena*> AddedPlayersMap;                                   // 0x2190(0x50)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TMap<class FString, class UAthenaPlayerMatchReport*> PlayerMatchReports;                                // 0x21E0(0x50)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_1D19[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               ChaseCamOffset;                                    // 0x2238(0xC)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1D1A[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AFortPlayerState*                      FollowedPlayerPrivate;                             // 0x2248(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AFortPlayerState*                      HoveredPlayerPrivate;                              // 0x2250(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AFortPlayerState*                      LastDamager;                                       // 0x2258(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AActor*                                HoveredActor;                                      // 0x2260(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UInputComponent*                       FullScreenMapInputComponent;                       // 0x2268(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1D1B[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FSavedSpectatorCameras                HotkeyCameras;                                     // 0x2290(0x10)(Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_1D1C[0x28];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class AFortProjectileBase*>           RecentlySpawnedProjectiles;                        // 0x22C8(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_1D1D[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AActor*                                LastKnownViewTarget;                               // 0x22E0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1D1E[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class AArenaCamPawn*                         ArenaCamPawn;                                      // 0x2308(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AHoverDronePawn*                       DroneCamPawn;                                      // 0x2310(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AAutoFrameDronePawn*                   AutoFrameCamPawn;                                  // 0x2318(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AFortReplaySpectatorPawnBase*          SpectatorCamPawn;                                  // 0x2320(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AVolume*                               CameraBoundsVolume;                                // 0x2328(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1D1F[0x70];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class AFortRelevancyZoneIndicator> RelevancyZoneIndicatorClass;                       // 0x23A0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AFortRelevancyZoneIndicator*           RelevancyZoneIndicator;                            // 0x23A8(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFortReplayContext*                    ReplayContext;                                     // 0x23B0(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1D20[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortPlayerControllerSpectating");
		return Clss;
	}

	void ZoomIn(float Val);
	void ToggleSpectatorHUD();
	void SpectatorClearSavedCameraShots();
	void ShowHoveredPlayersConsoleProfile();
	void SetThirdPersonAutoFollow(int32 FollowMode);
	void SetStormEffectsEnabled(bool bEnable);
	void SetShareLensSettingsEnabled(bool bEnabled);
	void SetRelevancyZoneVisible(bool bVisible);
	void SetOutsideSafeZoneOpacity(float NewOpacity);
	void SetOutlinesEnabled(bool bEnable);
	void SetNewCameraType(enum class ESpectatorCameraType NewCameraType, bool bReset);
	void SetNameplatesViewDistance(float NewDistance);
	void SetNameplatesEnabled(bool bEnable);
	void SetMapWeaponTracersEnabled(bool bEnable);
	void SetFollowedPlayer(class AFortPlayerState* NewPlayerToFollow, bool bHideMap, bool bForceChange);
	void SetDamageFXEnabled(bool bEnable);
	void SetCameraCollision(bool Collide);
	void SetBlendType(enum class EFortSpectatorBlendType NewBlendType);
	void ResetCamera();
	void ResetAllCameras();
	void PlayerBecameRelevant(class AFortPlayerState* FPS);
	void OnNextCameraMode();
	void OnGamePhaseChanged(enum class EAthenaGamePhase GamePhase);
	bool JumpToHoveredActor();
	bool IsPlayerInRelevancy(class AFortPlayerState* FPS);
	bool IsFollowedPlayerInBus();
	bool IsAllowedChangeCamera();
	void HandleTimelineScrubbed();
	bool GetStormEffectsEnabled();
	bool GetShareLensSettingsEnabled();
	bool GetRelevancyZoneVisible();
	float GetOutsideSafeZoneOpacity();
	bool GetOutlinesEnabled();
	float GetNameplatesViewDistance();
	bool GetNameplateShowDebug();
	bool GetNameplatesEnabled();
	float GetNameplateMinScaleDistance();
	float GetNameplateMinScale();
	float GetNameplateMaxScaleDistance();
	float GetNameplateMaxScale();
	float GetNameplateHideDistance();
	bool GetMapWeaponTracersEnabled();
	class AFortPlayerState* GetFollowedPlayer();
	bool GetDamageFXEnabled();
	class UFortSpectatorCameraComponent* GetCurrentSpectatorCameraComponent();
	enum class EFortSpectatorBlendType GetBlendType();
	TMap<struct FUniqueNetIdRepl, class AFortPlayerStateAthena*>& GetAddedPlayersMap();
	void FullscreenMapZoom(float Value);
	void FullScreenMapCursorStopDrag();
	void FullScreenMapCursorStartDrag();
	void FullScreenMapCursorMoved(struct FVector2D& CursorWidgetLocation, struct FVector2D& CursorDelta);
	void FollowPrevTeamMember();
	void FollowPrevSquadMember();
	void FollowPrevPlayer();
	void FollowPlayerByName(const class FString& PlayerName);
	void FollowNextTeamMember();
	void FollowNextSquadMember();
	void FollowNextPlayer();
	void FollowLastDamager();
	bool FollowHoveredPlayer();
	void AdjustNormalizedDistanceToPlayer(float Val);
};

// 0x0 (0x23C0 - 0x23C0)
// Class FortniteGame.FortLiveSpectatorController
class AFortLiveSpectatorController : public AFortPlayerControllerSpectating
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortLiveSpectatorController");
		return Clss;
	}

};

// 0x110 (0x24D0 - 0x23C0)
// Class FortniteGame.FortLiveBroadcastController
class AFortLiveBroadcastController : public AFortLiveSpectatorController
{
public:
	//UMulticastDelegateProperty_                OnToggleOffAirWidgetVisibilty;                     // 0x23B8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_1D21[0x38];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FQuickBarData                         QuickBarDefinitions;                               // 0x23F8(0x10)(Edit, NativeAccessSpecifierPublic)
	uint8                                        Pad_1D22[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UAthenaGadgetItemDefinition*           SpookyMistItemDefinition;                          // 0x2418(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        FollowedPawnLocationIndex;                         // 0x2420(0x4)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1D23[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class AFortPlayerMarkerBase>     SquadMarkerActorClass;                             // 0x2428(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class AFortPlayerStateAthena*>        SquadMembers;                                      // 0x2430(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1D24[0x68];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class AFortBroadcastRemoteClientInfo*        FollowedPlayerRemoteClientInfo;                    // 0x24A8(0x8)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1D25[0x20];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortLiveBroadcastController");
		return Clss;
	}

	void TryBeginBusPhase();
	void ServerSetFollowedPlayer(class AFortPlayerState* NewPlayerToFollow);
	void ServerBeginBusPhase();
	void OnRep_FollowedPlayerRemoteClientInfo();
	void OnRep_FollowedPawnLocation();
	void NoParamDelegate__DelegateSignature();
	void HandleFollowedPlayerWeaponAttachmentChanged(class AFortWeapon* NewWeapon, class AFortWeapon* OldWeapon);
	bool CanStartBattleBus();
};

// 0x438 (0x468 - 0x30)
// Class FortniteGame.FortLoadingConfig
class UFortLoadingConfig : public UDataAsset
{
public:
	struct FFortSubGameLoadingScreen             LoadingScreenFallback;                             // 0x30(0x50)(Edit, NativeAccessSpecifierPublic)
	struct FFortSubGameLoadingScreen             LoadingScreens;                                    // 0x80(0x50)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	uint8                                        Pad_1D26[0x50];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FSlateBrush                           LoadingScreenEABackground;                         // 0x120(0x88)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FSlateBrush                           LoadingScreenMissionBackground;                    // 0x1A8(0x88)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FSlateBrush                           LoadingScreenTipBackground;                        // 0x230(0x88)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FProgressBarStyle                     LoadingProgressBar;                                // 0x2B8(0x1A0)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<struct FFortPSALoadingScreen>         PSALoadingScreens;                                 // 0x458(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortLoadingConfig");
		return Clss;
	}

};

// 0x10 (0x340 - 0x330)
// Class FortniteGame.FortLoadingScreenPreviewActor
class AFortLoadingScreenPreviewActor : public AActor
{
public:
	uint8                                        Pad_1D27[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortLoadingScreenPreviewActor");
		return Clss;
	}

	void PreviewLoadingScreen(class UAthenaLoadingScreenItemDefinition* LoadingScreen);
};

// 0x0 (0x438 - 0x438)
// Class FortniteGame.FortLobbyBeaconClient
class AFortLobbyBeaconClient : public ALobbyBeaconClient
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortLobbyBeaconClient");
		return Clss;
	}

	void ServerTeamChatRoomReady(const class FString& ChatRoomId);
	void ServerSetMatchmakingLevel(struct FUniqueNetIdRepl& InUniqueId, int32 MatchmakingLevel);
	void ServerSetHeroType(struct FUniqueNetIdRepl& InUniqueId, class UFortHeroType* InHeroType);
	void ServerSetHeroSquadId(struct FUniqueNetIdRepl& InUniqueId, class FName& InHeroSquadId);
	void ServerSetHeroId(struct FUniqueNetIdRepl& InUniqueId, const class FString& InHeroId);
	void ServerSetGadget(struct FUniqueNetIdRepl& InUniqueId, int32 Index, const class FString& GadgetPersistentName);
	void ServerSetCurrentCharacterXp(struct FUniqueNetIdRepl& InUniqueId, int32 CurrentCharacterXp);
	void ServerSetConsoleUniqueNetId(struct FUniqueNetIdRepl& InUniqueId, struct FUniqueNetIdRepl& NewConsoleNetId);
	void ServerSetCharacterGender(struct FUniqueNetIdRepl& InUniqueId, enum class EFortCustomGender GenderType);
	void ServerIncrementHomeBaseVersion(struct FUniqueNetIdRepl& InUniqueId);
	void ClientCreateOrJoinChatRoom(const class FString& ChatRoomId);
};

// 0x0 (0x438 - 0x438)
// Class FortniteGame.FortLobbyBeaconClientPvE
class AFortLobbyBeaconClientPvE : public AFortLobbyBeaconClient
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortLobbyBeaconClientPvE");
		return Clss;
	}

};

// 0x18 (0x450 - 0x438)
// Class FortniteGame.FortLobbyBeaconClientPvP
class AFortLobbyBeaconClientPvP : public AFortLobbyBeaconClient
{
public:
	uint8                                        Pad_1D2C[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortLobbyBeaconClientPvP");
		return Clss;
	}

	void ServerReadyUp();
};

// 0x28 (0x460 - 0x438)
// Class FortniteGame.FortLobbyBeaconClientRM
class AFortLobbyBeaconClientRM : public AFortLobbyBeaconClient
{
public:
	UMulticastDelegateProperty_                  LocalReadiedUpStatusChanged;                       // 0x438(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPrivate)
	UMulticastDelegateProperty_                  OnUpdateLobbyPlayerPadTop;                         // 0x448(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1D2E[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortLobbyBeaconClientRM");
		return Clss;
	}

	void UpdateNewlyJoinedPlayer();
	void SetLocalReadyStatus(bool bIsReady);
	void ServerUpdateReadyStatus(bool bIsReady);
	void ServerUpdateNewlyJoinedPlayerInternal();
	void ClientBroadcastLobbyPlayerPadTop(struct FUniqueNetIdRepl& ReadiedPlayer, bool bIsReadiedUp);
};

// 0x18 (0x3A8 - 0x390)
// Class FortniteGame.FortLobbyBeaconHost
class AFortLobbyBeaconHost : public ALobbyBeaconHost
{
public:
	uint8                                        bAllowReservationsToProceedToLobby : 1;            // Mask : 0x1 0x390(0x1)(Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bWorldRecordLoaded : 1;                            // Mask : 0x2 0x390(0x1)(Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1D2F[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        LastReservationCountForPermissionTimeoutChange;    // 0x394(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        LobbyPermissionTimeout;                            // 0x398(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1D30[0xC];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortLobbyBeaconHost");
		return Clss;
	}

};

// 0x0 (0x3A8 - 0x3A8)
// Class FortniteGame.FortLobbyBeaconHostPvE
class AFortLobbyBeaconHostPvE : public AFortLobbyBeaconHost
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortLobbyBeaconHostPvE");
		return Clss;
	}

};

// 0x0 (0x3A8 - 0x3A8)
// Class FortniteGame.FortLobbyBeaconHostOutpost
class AFortLobbyBeaconHostOutpost : public AFortLobbyBeaconHostPvE
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortLobbyBeaconHostOutpost");
		return Clss;
	}

};

// 0x0 (0x3A8 - 0x3A8)
// Class FortniteGame.FortLobbyBeaconHostPvP
class AFortLobbyBeaconHostPvP : public AFortLobbyBeaconHost
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortLobbyBeaconHostPvP");
		return Clss;
	}

};

// 0x0 (0x3A8 - 0x3A8)
// Class FortniteGame.FortLobbyBeaconHostRM
class AFortLobbyBeaconHostRM : public AFortLobbyBeaconHost
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortLobbyBeaconHostRM");
		return Clss;
	}

};

// 0xE0 (0x4B8 - 0x3D8)
// Class FortniteGame.FortLobbyBeaconPlayerState
class AFortLobbyBeaconPlayerState : public ALobbyBeaconPlayerState
{
public:
	struct FUniqueNetIdRepl                      ConsoleUniqueNetId;                                // 0x3D8(0x28)(Net, RepNotify, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                Platform;                                          // 0x400(0x10)(Net, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortTeam                         TeamAffiliation;                                   // 0x410(0x1)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1D31[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        CurrentCharXP;                                     // 0x414(0x4)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MatchmakingLevel;                                  // 0x418(0x4)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1D32[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                HeroId;                                            // 0x420(0x10)(Net, ZeroConstructor, RepNotify, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFortHeroType*                         HeroType;                                          // 0x430(0x8)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  HeroSquadId;                                       // 0x438(0x8)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1D33[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        LobbyTimeRemaining;                                // 0x448(0x4)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1D34[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int64                                        HomeBaseVersion;                                   // 0x450(0x8)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FString>                        SelectedGadgets;                                   // 0x458(0x10)(Net, ZeroConstructor, RepNotify, NativeAccessSpecifierPublic)
	enum class ETrustedPlatformType              TrustedPlatformType;                               // 0x468(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EFortCustomGender                 CharacterGender;                                   // 0x469(0x1)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1D35[0x4E];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortLobbyBeaconPlayerState");
		return Clss;
	}

	void OnRep_LobbyTimeRemaining();
	void OnRep_HomeBaseVersion();
	void OnRep_HeroType();
	void OnRep_HeroSquadId();
	void OnRep_HeroId();
	void OnRep_Gadgets();
	void OnRep_ConsoleUniqueNetId();
	void OnRep_CharXP();
	void OnRep_CharacterGender();
};

// 0x0 (0x4B8 - 0x4B8)
// Class FortniteGame.FortLobbyBeaconPlayerStatePvE
class AFortLobbyBeaconPlayerStatePvE : public AFortLobbyBeaconPlayerState
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortLobbyBeaconPlayerStatePvE");
		return Clss;
	}

};

// 0x8 (0x4C0 - 0x4B8)
// Class FortniteGame.FortLobbyBeaconPlayerStatePvP
class AFortLobbyBeaconPlayerStatePvP : public AFortLobbyBeaconPlayerState
{
public:
	uint8                                        bReadiedUp : 1;                                    // Mask : 0x1 0x4B8(0x1)(Net, Transient, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1D36[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortLobbyBeaconPlayerStatePvP");
		return Clss;
	}

	void OnRep_bReadiedUp();
};

// 0x8 (0x4C0 - 0x4B8)
// Class FortniteGame.FortLobbyBeaconPlayerStateRM
class AFortLobbyBeaconPlayerStateRM : public AFortLobbyBeaconPlayerState
{
public:
	uint8                                        Pad_1D37[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortLobbyBeaconPlayerStateRM");
		return Clss;
	}

};

// 0x40 (0x4C0 - 0x480)
// Class FortniteGame.FortLobbyBeaconState
class AFortLobbyBeaconState : public ALobbyBeaconState
{
public:
	int32                                        MatchmakingLevel;                                  // 0x480(0x4)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1D38[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                MissionGeneratorClassPath;                         // 0x488(0x10)(Net, ZeroConstructor, RepNotify, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFortMissionGenerator*                 CachedMissionGeneratorCDO;                         // 0x498(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class ELobbyMissionGeneratorDetailsRequirement MissionGeneratorDetailsRequirement;                // 0x4A0(0x1)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bWorldRecordLoaded;                                // 0x4A1(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1D39[0x1E];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortLobbyBeaconState");
		return Clss;
	}

	void OnRep_MissionGeneratorDetailsRequirement();
	void OnRep_MissionGeneratorClassPath();
};

// 0x0 (0x4C0 - 0x4C0)
// Class FortniteGame.FortLobbyBeaconStatePvE
class AFortLobbyBeaconStatePvE : public AFortLobbyBeaconState
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortLobbyBeaconStatePvE");
		return Clss;
	}

};

// 0x0 (0x4C0 - 0x4C0)
// Class FortniteGame.FortLobbyBeaconStateOutpost
class AFortLobbyBeaconStateOutpost : public AFortLobbyBeaconStatePvE
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortLobbyBeaconStateOutpost");
		return Clss;
	}

};

// 0x8 (0x4C8 - 0x4C0)
// Class FortniteGame.FortLobbyBeaconStatePvP
class AFortLobbyBeaconStatePvP : public AFortLobbyBeaconState
{
public:
	int32                                        PvPLobbyTimeLimit;                                 // 0x4C0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        PvPLobbyTimeRemaining;                             // 0x4C4(0x4)(Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortLobbyBeaconStatePvP");
		return Clss;
	}

	void OnRep_PvPLobbyTimeRemaining();
};

// 0x8 (0x4C8 - 0x4C0)
// Class FortniteGame.FortLobbyBeaconStateRM
class AFortLobbyBeaconStateRM : public AFortLobbyBeaconState
{
public:
	uint8                                        Pad_1D3A[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        LobbyTimeRemaining;                                // 0x4C4(0x4)(Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortLobbyBeaconStateRM");
		return Clss;
	}

	void OnRep_LobbyTimeRemaining();
};

// 0x60 (0x1F0 - 0x190)
// Class FortniteGame.FortSocialManager
class UFortSocialManager : public USocialManager
{
public:
	bool                                         bTutorialCompleted;                                // 0x190(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1D3B[0x1F];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bLeftLastPartyFromGameDisconnect;                  // 0x1B0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1D3C[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UFortLocalTeam*                        LocalTeam;                                         // 0x1B8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1D3D[0x30];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortSocialManager");
		return Clss;
	}

};

// 0x5D0 (0x830 - 0x260)
// Class FortniteGame.FortSocialParty
class UFortSocialParty : public USocialParty
{
public:
	struct FGameDifficultyInfo                   CachedZoneDifficultyInfo;                          // 0x260(0x98)(NativeAccessSpecifierPrivate)
	struct FFortPartyRepData                     PartyRepData;                                      // 0x2F8(0x518)(NativeAccessSpecifierPrivate)
	uint8                                        Pad_1D3E[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bSendSocialFriendsActiveAnalytics;                 // 0x811(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1D3F[0x1E];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortSocialParty");
		return Clss;
	}

};

// 0x5D0 (0x6A8 - 0xD8)
// Class FortniteGame.FortPartyMember
class UFortPartyMember : public UPartyMember
{
public:
	struct FFortPartyMemberRepData               MemberRepData;                                     // 0xD8(0x5B8)(Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_1D40[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortPartyMember");
		return Clss;
	}

};

// 0x10 (0x6B8 - 0x6A8)
// Class FortniteGame.FortLocalPartyMember
class UFortLocalPartyMember : public UFortPartyMember
{
public:
	uint8                                        NumAthenaPlayersLeftDeltaThreshold;                // 0x6A8(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1D41[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        AthenaPlayersLeftUpdateDelay;                      // 0x6AC(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1D42[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortLocalPartyMember");
		return Clss;
	}

	void HandlePlayerControllerSet();
	void HandleNumAthenaPlayersLeftChanged(int32 NumPlayersLeft);
	void HandleMcpProfilesIntialized();
};

// 0x0 (0x28 - 0x28)
// Class FortniteGame.FortLocalPlayerSubsystem
class UFortLocalPlayerSubsystem : public ULocalPlayerSubsystem
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortLocalPlayerSubsystem");
		return Clss;
	}

};

// 0x30 (0x58 - 0x28)
// Class FortniteGame.FortLocalTeam
class UFortLocalTeam : public UObject
{
public:
	TArray<class UFortTeamMember*>               TeamMembers;                                       // 0x28(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1D43[0x20];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortLocalTeam");
		return Clss;
	}

};

// 0x0 (0x28 - 0x28)
// Class FortniteGame.FortLockOnTargetInterface
class UFortLockOnTargetInterface : public UInterface
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortLockOnTargetInterface");
		return Clss;
	}

};

// 0x48 (0x140 - 0xF8)
// Class FortniteGame.FortLOSComponent
class UFortLOSComponent : public UActorComponent
{
public:
	float                                        LOSMaxDistance;                                    // 0xF8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FOVInDegrees;                                      // 0xFC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TimeBetweenChecks;                                 // 0x100(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bStopAfterHasBeenFound;                            // 0x104(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDistanceCheckOnly;                                // 0x105(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1D44[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	UMulticastDelegateProperty_                  OnHasBeenFound;                                    // 0x108(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	bool                                         bHasBeenFound;                                     // 0x118(0x1)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1D45[0x27];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortLOSComponent");
		return Clss;
	}

};

// 0x10 (0x340 - 0x330)
// Class FortniteGame.FortMapMarkerTopperActor
class AFortMapMarkerTopperActor : public AActor
{
public:
	uint8                                        Pad_1D46[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortMapMarkerTopperActor");
		return Clss;
	}

	void SetLiveMapMarker(class UAthenaMapMarkerItemDefinition* Marker);
	void PreviewMapMarker(class UAthenaMapMarkerItemDefinition* Marker);
	void OnMarkerMoved();
};

// 0xD8 (0x408 - 0x330)
// Class FortniteGame.FortMarkActor
class AFortMarkActor : public AActor
{
public:
	TWeakObjectPtr<class AFortPlayerStateZone>   OwningPlayer;                                      // 0x330(0x8)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                MarkString;                                        // 0x338(0x10)(Net, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                  PreapprovedMarkString;                             // 0x348(0x18)(Net, NativeAccessSpecifierPublic)
	bool                                         bFinishedEditing;                                  // 0x360(0x1)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1D47[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AActor*                                AttachedToActor;                                   // 0x368(0x8)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               AttachmentOffset;                                  // 0x370(0xC)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1D48[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FSlateBrush                           MiniMapIconBrush;                                  // 0x380(0x88)(NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortMarkActor");
		return Clss;
	}

	void OnRep_AttachedToActor();
};

// 0xD8 (0x100 - 0x28)
// Class FortniteGame.FortMatchAnalytics
class UFortMatchAnalytics : public UObject
{
public:
	uint8                                        Pad_1D49[0xD8];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortMatchAnalytics");
		return Clss;
	}

	void OnGamePhaseChanged(enum class EAthenaGamePhase Phase);
};

// 0x160 (0x260 - 0x100)
// Class FortniteGame.FortMatchClientAnalytics
class UFortMatchClientAnalytics : public UFortMatchAnalytics
{
public:
	uint8                                        Pad_1D4A[0x160];                                   // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortMatchClientAnalytics");
		return Clss;
	}

};

// 0x350 (0x378 - 0x28)
// Class FortniteGame.FortMatchmaking
class UFortMatchmaking : public UObject
{
public:
	uint8                                        Pad_1D4B[0x120];                                   // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class APartyBeaconClient>        ReservationBeaconClientClass;                      // 0x148(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AFortPartyBeaconClient*                ReservationBeaconClient;                           // 0x150(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AFortLobbyBeaconClient*                LobbyBeaconClient;                                 // 0x158(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1D4C[0x68];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        ControllerId;                                      // 0x1C8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1D4D[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                TempZoneInstanceId;                                // 0x1D0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FFortCachedMatchmakingSearchParams    CachedMatchmakingSearchParams;                     // 0x1E0(0xC0)(NativeAccessSpecifierPrivate)
	uint8                                        Pad_1D4E[0xB8];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UFortMatchmakingPolicy*                Matchmaking;                                       // 0x358(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FString                                LastCriticalMissionSessionId;                      // 0x360(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	enum class EFortMatchmakingPrivacyConfiguration LastMatchmakingPrivacyConfiguration;               // 0x370(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1D4F[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortMatchmaking");
		return Clss;
	}

};

// 0x100 (0x128 - 0x28)
// Class FortniteGame.FortMatchmakingPolicy
class UFortMatchmakingPolicy : public UObject
{
public:
	uint8                                        Pad_1D50[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bMatchmakingInProgress;                            // 0x48(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1D51[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  SessionName;                                       // 0x4C(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1D52[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FMatchmakingParams                    CurrentParams;                                     // 0x58(0xB0)(Transient, Protected, NativeAccessSpecifierProtected)
	class UFortSearchPass*                       MMPass;                                            // 0x108(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        ChanceToHostAttempt;                               // 0x110(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1D53[0x14];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortMatchmakingPolicy");
		return Clss;
	}

};

// 0x18 (0x140 - 0x128)
// Class FortniteGame.FortMatchmakingCommon
class UFortMatchmakingCommon : public UFortMatchmakingPolicy
{
public:
	uint8                                        Pad_1D54[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortMatchmakingCommon");
		return Clss;
	}

};

// 0x190 (0x1B8 - 0x28)
// Class FortniteGame.FortMatchmakingContext
class UFortMatchmakingContext : public UFortBlueprintContext
{
public:
	UMulticastDelegateProperty_                  OnMatchmakingStarted;                              // 0x28(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnMatchmakingComplete;                             // 0x38(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnMatchmakingStateChange;                          // 0x48(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnMatchmakingFlowChanged;                          // 0x58(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnLobbyConnectionAttemptStarted;                   // 0x68(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnLobbyConnectionAttemptFailed;                    // 0x78(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnLobbyConnectionAttemptProceedToLobby;            // 0x88(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnLobbyWaitingForPlayers;                          // 0x98(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnLobbyWaitingForPlayersTimeUpdate;                // 0xA8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnLobbyStarted;                                    // 0xB8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnLobbyDisconnected;                               // 0xC8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnLobbyConnectingToGame;                           // 0xD8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnLobbyTimeUpdated;                                // 0xE8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnLobbyTimeExpired;                                // 0xF8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnLocalReadyUpStatusChange;                        // 0x108(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnWorldRecordLoadedChanged;                        // 0x118(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnRejoinCheckCompleted;                            // 0x128(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_1D56[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FFortMatchmakingConfig                NormalConfig;                                      // 0x13C(0x10)(Config, NoDestructor, NativeAccessSpecifierPrivate)
	struct FFortMatchmakingConfig                CriticalConfig;                                    // 0x14C(0x10)(Config, NoDestructor, NativeAccessSpecifierPrivate)
	struct FFortMatchmakingConfig                QuickPlayConfig;                                   // 0x15C(0x10)(Config, NoDestructor, NativeAccessSpecifierPrivate)
	struct FFortMatchmakingConfig                OnboardingConfig;                                  // 0x16C(0x10)(Config, NoDestructor, NativeAccessSpecifierPrivate)
	struct FFortMatchmakingConfig                OutpostConfig;                                     // 0x17C(0x10)(Config, NoDestructor, NativeAccessSpecifierPrivate)
	struct FFortMatchmakingConfig                PvPConfig;                                         // 0x18C(0x10)(Config, NoDestructor, NativeAccessSpecifierPrivate)
	bool                                         bMatchmakingFlowActive;                            // 0x19C(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1D57[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	UMulticastDelegateProperty_                  OnOutpostDiscoveryFailure;                         // 0x1A0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1D58[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortMatchmakingContext");
		return Clss;
	}

	void StartQuickPlay(float MinMissionDifficulty, float MaxMissionDifficulty);
	bool StartOnboardingMission();
	void StartMatchmaking();
	void StartCriticalMission(float MinMissionDifficulty, float MaxMissionDifficulty);
	void SetMatchmakingFlowActive(bool InFlow);
	void SetCustomMatchmakingKey(const class FString& Key);
	void ReadyUp();
	bool NeedToCheckRejoinStatus();
	bool JoinFromLobby();
	bool IsWorldRecordLoaded();
	bool IsWaitingOnUpdateManager();
	bool IsOutpostPermitted();
	bool IsMatchmakingLocal();
	bool IsMatchmakingFlowActive();
	bool IsJoinableGameAvailable();
	bool IsInputBasedMatchmakingEnabled();
	bool IsInLobby();
	bool IsCustomMatchmakingKeyEnabled();
	bool IsConnectedToGame();
	class FText GetMatchmakingFillText(bool bDesiredFill);
	float GetLobbyWaitForPlayersTimeRemaining();
	class AFortLobbyBeaconClient* GetLobbyBeaconClient();
	class FText GetLegacyNonInputBasedPlayAgainstText();
	enum class ECommonInputType GetInputBasedMatchmakingPool(bool* bIsDefaultPool, bool* bEntirePartyUsingTargetPoolInput);
	class FString GetCustomMatchmakingKey();
	void EnterPvPFOB();
	void EnterOutpost();
	void DisplayAntiTaxiError();
	void DisconnectFromLobby();
	void CheckRejoinStatus();
	void CancelMatchmaking();
};

// 0x10 (0x138 - 0x128)
// Class FortniteGame.FortMatchmakingMissionCommon
class UFortMatchmakingMissionCommon : public UFortMatchmakingPolicy
{
public:
	uint8                                        Pad_1D59[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortMatchmakingMissionCommon");
		return Clss;
	}

};

// 0x0 (0x138 - 0x138)
// Class FortniteGame.FortMatchmakingCriticalMission
class UFortMatchmakingCriticalMission : public UFortMatchmakingMissionCommon
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortMatchmakingCriticalMission");
		return Clss;
	}

};

// 0x20 (0x148 - 0x128)
// Class FortniteGame.FortMatchmakingGather
class UFortMatchmakingGather : public UFortMatchmakingPolicy
{
public:
	float                                        ChanceToJoinInProgress;                            // 0x128(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1D5A[0x1C];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortMatchmakingGather");
		return Clss;
	}

};

// 0x0 (0x140 - 0x140)
// Class FortniteGame.FortMatchmakingPvE
class UFortMatchmakingPvE : public UFortMatchmakingCommon
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortMatchmakingPvE");
		return Clss;
	}

};

// 0x0 (0x138 - 0x138)
// Class FortniteGame.FortMatchmakingQuickPlay
class UFortMatchmakingQuickPlay : public UFortMatchmakingMissionCommon
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortMatchmakingQuickPlay");
		return Clss;
	}

};

// 0x40 (0x168 - 0x128)
// Class FortniteGame.FortMatchmakingSingleSession
class UFortMatchmakingSingleSession : public UFortMatchmakingPolicy
{
public:
	struct FFortInviteSessionParams              CurrentSessionParams;                              // 0x128(0x38)(Transient, NativeAccessSpecifierPrivate)
	class UFortSessionHelper*                    SessionHelper;                                     // 0x160(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortMatchmakingSingleSession");
		return Clss;
	}

};

// 0x310 (0x338 - 0x28)
// Class FortniteGame.FortMatchmakingV2
class UFortMatchmakingV2 : public UObject
{
public:
	class FString                                MMSVersionCompatability;                           // 0x28(0x10)(ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FString                                MMSTicketURLClient;                                // 0x38(0x10)(ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        MMSPingInterval;                                   // 0x48(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bCustomKeyEnabled;                                 // 0x4C(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1D5B[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        UpdateCheckInterval;                               // 0x50(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bEnablePrivateMatchUpdateCheck;                    // 0x54(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1D5C[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        MatchmakingRetryInterval;                          // 0x58(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint32                                       MaxMatchmakingRetries;                             // 0x5C(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FMMSAltDomainRecord>           AltDomainRecords;                                  // 0x60(0x10)(ZeroConstructor, Config, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1D5D[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        LogSubmitChance;                                   // 0x80(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        LogTailKb;                                         // 0x84(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1D5E[0x2B0];                                   // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortMatchmakingV2");
		return Clss;
	}

};

// 0x18 (0x118 - 0x100)
// Class FortniteGame.FortMatchServerAnalytics
class UFortMatchServerAnalytics : public UFortMatchAnalytics
{
public:
	uint8                                        Pad_1D5F[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortMatchServerAnalytics");
		return Clss;
	}

};

// 0x58 (0x88 - 0x30)
// Class FortniteGame.FortAsyncAction_CalendarEventWatcherBase
class UFortAsyncAction_CalendarEventWatcherBase : public UBlueprintAsyncActionBase
{
public:
	UMulticastDelegateProperty_                  OnEventActive;                                     // 0x30(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnEventUpdated;                                    // 0x40(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnEventEnded;                                      // 0x50(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UFortGameInstance*                     MyGameInstance;                                    // 0x60(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1D60[0x20];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAsyncAction_CalendarEventWatcherBase");
		return Clss;
	}

};

// 0x0 (0x88 - 0x88)
// Class FortniteGame.FortAsyncAction_CalendarMultiEventWatcher
class UFortAsyncAction_CalendarMultiEventWatcher : public UFortAsyncAction_CalendarEventWatcherBase
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAsyncAction_CalendarMultiEventWatcher");
		return Clss;
	}

	class UFortAsyncAction_CalendarMultiEventWatcher* WatchCalendarEvents(class UObject* WorldContextObject, const TArray<class FString>& EventsToWatch);
};

// 0x0 (0x88 - 0x88)
// Class FortniteGame.FortAsyncAction_CalendarEventWatcher
class UFortAsyncAction_CalendarEventWatcher : public UFortAsyncAction_CalendarEventWatcherBase
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAsyncAction_CalendarEventWatcher");
		return Clss;
	}

	class UFortAsyncAction_CalendarEventWatcher* WatchCalendarEvent(class UObject* WorldContextObject, const class FString& EventToWatch);
};

// 0x20 (0x50 - 0x30)
// Class FortniteGame.FortAsyncAction_MCPContextUpgradeItem
class UFortAsyncAction_MCPContextUpgradeItem : public UBlueprintAsyncActionBase
{
public:
	UMulticastDelegateProperty_                  OnMCPRequestComplete;                              // 0x30(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class UFortMcpContext>        MCPContext;                                        // 0x40(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TWeakObjectPtr<class UFortItem>              ItemToUpgrade;                                     // 0x48(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAsyncAction_MCPContextUpgradeItem");
		return Clss;
	}

	class UFortAsyncAction_MCPContextUpgradeItem* UpgradeItem(class UFortMcpContext* MCPContext, class UFortItem* ItemToUpgrade);
	void OnMCPRequestComplete__DelegateSignature();
};

// 0x28 (0x58 - 0x30)
// Class FortniteGame.FortAsyncAction_MCPContextRecycleItems
class UFortAsyncAction_MCPContextRecycleItems : public UBlueprintAsyncActionBase
{
public:
	UMulticastDelegateProperty_                  OnMCPRequestComplete;                              // 0x30(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class UFortMcpContext>        MCPContext;                                        // 0x40(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<TWeakObjectPtr<class UFortItem>>      ItemsToRecycle;                                    // 0x48(0x10)(ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAsyncAction_MCPContextRecycleItems");
		return Clss;
	}

	class UFortAsyncAction_MCPContextRecycleItems* RecycleItems(class UFortMcpContext* MCPContext, TArray<class UFortItem*>& ItemsToRecycle);
	void OnMCPRequestComplete__DelegateSignature();
};

// 0x48 (0x78 - 0x30)
// Class FortniteGame.FortAsyncAction_MCPContextConsumeItem
class UFortAsyncAction_MCPContextConsumeItem : public UBlueprintAsyncActionBase
{
public:
	UMulticastDelegateProperty_                  OnMCPRequestComplete;                              // 0x30(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class UFortMcpContext>        MCPContext;                                        // 0x40(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TWeakObjectPtr<class UFortItem>              ItemToConsume;                                     // 0x48(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FUniqueNetIdRepl                      TargetAccountId;                                   // 0x50(0x28)(HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAsyncAction_MCPContextConsumeItem");
		return Clss;
	}

	void OnMCPRequestComplete__DelegateSignature();
	class UFortAsyncAction_MCPContextConsumeItem* ConsumeItem(class UFortMcpContext* MCPContext, class UFortItem* ItemToConsume, struct FUniqueNetIdRepl& TargetAccountId);
};

// 0x3E0 (0x408 - 0x28)
// Class FortniteGame.FortMcpContext
class UFortMcpContext : public UBlueprintContextBase
{
public:
	uint8                                        Pad_1D77[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	UMulticastDelegateProperty_                  OnHeroesChanged;                                   // 0x30(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnGiftBoxRemovedDelegate;                          // 0x40(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnXpBoostChanged;                                  // 0x50(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnFounderGranted;                                  // 0x60(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnDailyRewardTokenGranted;                         // 0x70(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnLocalAccountInfoChanged;                         // 0x80(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnCurrentlyViewedAccountInfoChanged;               // 0x90(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FMcpPrivacySettings                   PrivacySettings;                                   // 0xA0(0x2)(BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_1D78[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	UMulticastDelegateProperty_                  OnMissionRewardsOpened;                            // 0xA8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnMissionRewardsOpenFailed;                        // 0xB8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnMissionAlertRewardsOpened;                       // 0xC8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnDifficultyIncreaseRewardsClaimed;                // 0xD8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnDifficultyIncreaseRewardsClaimFailed;            // 0xE8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnItemCacheRewardsClaimed;                         // 0xF8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnItemCacheRewardsClaimFailed;                     // 0x108(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnResourceCollectorClaimed;                        // 0x118(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnConversionComplete;                              // 0x128(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnRarityUpgraded;                                  // 0x138(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnTransmogComplete;                                // 0x148(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnTransmogFailed;                                  // 0x158(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnLiveStreamingQuestWindowStarts;                  // 0x168(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnLiveStreamingQuestWindowEnds;                    // 0x178(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnLiveStreamingQuestWindowSelectedViewers;         // 0x188(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnOfferPurchaseComplete;                           // 0x198(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnRealMoneyPurchaseComplete;                       // 0x1A8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	uint8                                        Pad_1D79[0x60];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FFriendCode>                   CachedFriendCodes;                                 // 0x218(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	TArray<UDelegateProperty_>                   PendingFriendCodeOnCompleteDelegates;              // 0x228(0x10)(ZeroConstructor, Transient, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_1D7A[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	double                                       MinTimeBetweenFriendCodeRequestsSeconds;           // 0x248(0x8)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FText                                  FriendCodeMessageTitle;                            // 0x250(0x18)(Edit, Config, Protected, NativeAccessSpecifierProtected)
	TArray<struct FFriendCodeLocString>          FriendCodeMessageTitleLocTexts;                    // 0x268(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, Protected, NativeAccessSpecifierProtected)
	class FText                                  FriendCodeMessageBody;                             // 0x278(0x18)(Edit, Config, Protected, NativeAccessSpecifierProtected)
	class FText                                  FriendCodeMessageDetails;                          // 0x290(0x18)(Edit, Config, Protected, NativeAccessSpecifierProtected)
	TArray<struct FFriendCodeLocString>          FriendCodeMessageDetailsLocTexts;                  // 0x2A8(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, Protected, NativeAccessSpecifierProtected)
	bool                                         bShouldClientForcePartnerId;                       // 0x2B8(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1D7B[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                ClientForcePartnerId;                              // 0x2C0(0x10)(ZeroConstructor, Config, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1D7C[0xD0];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	UDelegateProperty_                           DisplayPurchaseWidget;                             // 0x3A0(0x10)(ZeroConstructor, InstancedReference, NoDestructor, NativeAccessSpecifierPrivate)
	UDelegateProperty_                           DismissPurchaseWidget;                             // 0x3B0(0x10)(ZeroConstructor, InstancedReference, NoDestructor, NativeAccessSpecifierPrivate)
	UDelegateProperty_                           DisplayLoginWidget;                                // 0x3C0(0x10)(ZeroConstructor, InstancedReference, NoDestructor, NativeAccessSpecifierPrivate)
	UDelegateProperty_                           DismissLoginWidget;                                // 0x3D0(0x10)(ZeroConstructor, InstancedReference, NoDestructor, NativeAccessSpecifierPrivate)
	UDelegateProperty_                           DisplayAccountCreationWidget;                      // 0x3E0(0x10)(ZeroConstructor, InstancedReference, NoDestructor, NativeAccessSpecifierPrivate)
	UDelegateProperty_                           DismissAccountCreationWidget;                      // 0x3F0(0x10)(ZeroConstructor, InstancedReference, NoDestructor, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1D7D[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortMcpContext");
		return Clss;
	}

	void UpgradeItemRarity(class UFortItem* ItemToUpgrade);
	void UpdatePrivacySettings(struct FMcpPrivacySettings& NewSettings, UDelegateProperty_& OnComplete);
	void TransmogItem(class UFortConversionControlItemDefinition* ControlKeyItem, TArray<class UFortItem*>& ItemsToSacrifice);
	bool StartExpedition(class UFortExpeditionItem* Expedition, float SuccessChance, class FName& SquadId, float SquadRating, TArray<class UFortItem*>& SlottedSquadItems, TArray<int32>& SlotIndices, TArray<float>& ItemRatingMods, float GlobalMod);
	void SetItemFavoriteStatus(class UFortAccountItem* Item, bool bFavorite, bool ShouldDeferMarking);
	void SetBansViewed(UDelegateProperty_ OnBanAcknowledged);
	void SetAffiliateName(const class FString& Name, UDelegateProperty_ OnAffilateNameSetAcknowledged);
	void SendFriendCodePlatformMessage(struct FFriendCode& FriendCode, UDelegateProperty_& OnCompleteDelegate);
	void RemoveGiftBox(class UFortGiftBoxItem* GiftBoxToRemove);
	void RegisterForEpicPurchasingDisplay(UDelegateProperty_& DisplayCallback, UDelegateProperty_& DismissCallback);
	void RefundItem(class UFortAccountItem* ItemToConvert);
	void RecycleItemBatch(TArray<class UFortItem*>& ItemsToRecycle);
	void RecycleItem(class UFortItem* ItemToRecycle);
	void ReadPrivacySettings(UDelegateProperty_& OnComplete);
	void QueryUnredeemedFriendCodes(UDelegateProperty_& OnCompleteDelegate);
	void PurchaseRealMoneyCatalogEntry(const class FString& OfferId, UDelegateProperty_& Callback);
	enum class EOfferPurchaseError PurchaseOfferAsGift(const class FString& OfferId, int32 Quantity, int32 PriceIndex, TArray<class FString>& ReceiverAccountIds, const class FString& GiftWrapTemplateId, const class FString& UserMessageToRecipients, UDelegateProperty_& OnComplete);
	enum class EOfferPurchaseError PurchaseOffer(const class FString& OfferId, int32 PriceIndex, UDelegateProperty_& Callback, int32 Quantity);
	void OpenMissionRewards();
	void OnSendFriendCodePlatformMessageComplete__DelegateSignature(bool bMessageSent);
	void OnQueryUnredeemedFriendCodesComplete__DelegateSignature(bool bSuccess, TArray<struct FFriendCode>& FriendCodes);
	void OnIssueFriendCodeComplete__DelegateSignature(bool bSuccess, struct FFriendCode& FriendCode);
	void OnDownloadEULAComplete__DelegateSignature(bool bSuccessful, class FText EULAText);
	void MarkItemSeen(class UFortAccountItem* ItemToMarkSeen);
	bool IsValid(const class FString& OfferId);
	bool IsUserCurrentlyBanned(struct FMcpBanInfo& BanInfo);
	void IssueFriendCode(UDelegateProperty_& OnCompleteDelegate);
	bool IsRealMoneyPurchasePending();
	bool IsPendingAccountTransfer(struct FDateTime* EstimatedCompletionMax);
	bool IsOwned(const class FString& OfferId);
	bool IsLocalPlayersUniqueID(struct FUniqueNetIdRepl& PlayerID);
	bool IsDailyRewardAvailable(int32* OutMinutesUntilNextReward);
	bool IsAllowedConversionIndex(class UFortItem* ItemToConvert, int32 RecipeIndex);
	bool HasPendingMissionAlertRewards();
	bool HasPendingDifficultyIncreaseRewards();
	bool HasMfaBeenEnabledAtSomePoint();
	bool HasEULADownloaded();
	void GrantPendingMissionAlertRewards();
	void GrantPendingDifficultyIncreaseRewards();
	int32 GetXpBoostBalance();
	int32 GetUpgradeXPBalance(enum class EFortItemType ItemTypeToBeUpgraded);
	class FString GetTencentIdString();
	int32 GetSchematicXpBalance();
	int32 GetRestXpBonusPercent();
	int32 GetRestXpBalance();
	int32 GetPlayersXPPercentContributionToLocalPlayer(struct FUniqueNetIdRepl& PlayerID);
	int32 GetPersonnelXpBalance();
	int32 GetPersonalXpBonusPercent();
	void GetPendingItemCacheRewards(TArray<class UFortItem*>* OutItemCacheRewards);
	int32 GetNumFriendCodesToIssue(const class FString& CodeType);
	class UFortGiftBoxItem* GetNextMessage();
	class UFortGiftBoxItem* GetNextGiftBox();
	class UFortMcpProfileCampaign* GetMcpProfile();
	int32 GetMaxAccountLevel();
	void GetLocalAccountInfo(struct FFortPrivateAccountInfo* Result);
	struct FFortAthenaLoadout GetLoadoutForPlayer(const struct FUniqueNetIdRepl& MemberUniqueId);
	void GetHomeBaseInfoForPlayer(struct FFortHomeBaseInfo* Result, const struct FUniqueNetIdRepl& MemberUniqueId);
	void GetHomeBaseInfo(struct FFortHomeBaseInfo* Result);
	int32 GetHeroXpBalance();
	int32 GetGroupXpBonusPercent();
	class FText GetFriendCodeDisplayName(struct FFriendCode& FriendCode);
	class FText GetFriendCodeDescription(struct FFriendCode& FriendCode);
	class FText GetEULAText();
	class UFortHero* GetDefaultHero();
	void GetCurrentlyViewedAccountInfo(struct FFortPublicAccountInfo* Result);
	class UFortMcpProfileCreative* GetCreativeProfile();
	class UFortMcpProfileCommonPublic* GetCommonPublicMcpProfile();
	class UFortMcpProfileCommonCore* GetCommonCoreMcpProfile();
	struct FFortCampaignLoadout GetCampaignLoadoutForPlayer(const struct FUniqueNetIdRepl& MemberUniqueId);
	struct FMcpBanInfo& GetBanInfo();
	struct FTimespan GetBanDuration(struct FMcpBanInfo& BanInfo);
	class UFortMcpProfileAthena* GetAthenaProfile();
	class FString GetAppName();
	void GetAllResourceCollectors(TArray<class UFortCollectedResourceItem*>* ResourceCollectorsOwned);
	void GetAllHeroes(TArray<class UFortHero*>* Result);
	void GetAllAlterations(TArray<class UFortAlterationItem*>* OutAlterations, enum class EFortAlteration InAlterationType);
	class FString GetAffiliateName();
	class UFortAccountItem* GetAccountItemWithDefinition(class UFortAccountItemDefinition* AccountItemDefinition);
	void DownloadEULA(UDelegateProperty_ OnCompleteDelegate);
	bool DoesPlatformSupportFriendCodes();
	void DisplayEmptyStoreDialog();
	void ConvertItem(class UFortItem* ItemToConvert, int32 RecipeIndex);
	void CollectExpedition(class UFortExpeditionItem* Expedition);
	void ClaimResourceCollectors(TArray<class UFortCollectedResourceItem*>& CollectorTypes);
	void ClaimItemCacheReward(class UFortItem* ItemCache);
	void ClaimAllResourceCollectors();
	void CheckAffiliateName(const class FString& AffiliateName, UDelegateProperty_ OnCheckAffiliateNameComplete);
	enum class EOfferPurchaseError CanPurchaseOffer(const class FString& OfferId, int32 PriceIndex, int32 Quantity);
	enum class EOfferPurchaseError CanGiftOffer(const class FString& OfferId, TArray<class FString>& ReceiverAccountIds, const class FString& GiftWrapTemplateId, const class FString& UserMessageToRecipients, int32 PriceIndex);
	void CancelEpicPurchasingDisplay();
	bool AreMissionRewardsAvailable();
	void ApplyAlteration(class UFortAlterableItem* Item, class UFortAlterationItem* AlterationToApply);
	void AbandonExpedition(class UFortExpeditionItem* Expedition);
};

// 0x40 (0x1C8 - 0x188)
// Class FortniteGame.FortMcpProfile
class UFortMcpProfile : public UMcpProfile
{
public:
	uint8                                        Pad_1D7E[0x40];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortMcpProfile");
		return Clss;
	}

	void MarkItemSeen(TArray<class FString>& ItemIds, struct FClientUrlContext* Context);
};

// 0x28 (0x1F0 - 0x1C8)
// Class FortniteGame.FortMcpProfileSubgame
class UFortMcpProfileSubgame : public UFortMcpProfile
{
public:
	struct FFortSubgameClientSettings            CachedClientSettings;                              // 0x1C8(0x10)(NativeAccessSpecifierPrivate)
	uint8                                        Pad_1D81[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortMcpProfileSubgame");
		return Clss;
	}

	void UpdateQuests(TArray<struct FFortQuestObjectiveCompletion>& Advance, struct FDedicatedServerUrlContext* Context);
	void UpdateQuestClientObjectives(TArray<struct FFortQuestObjectiveCompletion>& Advance, struct FClientUrlContext* Context);
	void SetPinnedQuests(TArray<class FString>& PinnedQuestIds, struct FClientUrlContext* Context);
	void SetItemFavoriteStatusBatch(TArray<class FString>& ItemIds, TArray<bool>& ItemFavStatus, struct FClientUrlContext* Context);
	void SetItemFavoriteStatus(const class FString& TargetItemId, bool bFavorite, struct FClientUrlContext* Context);
	void ServerQuestLogin(const class FString& MatchmakingSessionId, struct FDedicatedServerUrlContext* Context);
	void MarkNewQuestNotificationSent(TArray<class FString>& ItemIds, struct FClientUrlContext* Context);
	void FortRerollDailyQuest(const class FString& QuestId, struct FClientUrlContext* Context);
	void ClientQuestLogin(struct FClientUrlContext* Context);
	void ClaimQuestReward(const class FString& QuestId, int32 SelectedRewardIndex, struct FClientUrlContext* Context);
};

// 0x1D8 (0x3C8 - 0x1F0)
// Class FortniteGame.FortMcpProfileAthena
class UFortMcpProfileAthena : public UFortMcpProfileSubgame
{
public:
	uint8                                        Pad_1D89[0x1D8];                                   // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortMcpProfileAthena");
		return Clss;
	}

	void SetBattleRoyaleBanner(const class FString& HomebaseBannerIconId, const class FString& HomebaseBannerColorId, struct FClientUrlContext* Context);
	void ReportConsumableUsed(int32 UsedQuantity, const class FString& ItemType, struct FDedicatedServerUrlContext* Context);
	bool HasPurchasedSeasonBook();
	int32 GetSeasonMatchXpBoost();
	bool GetSeasonLevelUpReward(int32 SeasonLevel, struct FFortItemInstanceQuantityPair* Reward, int32* RewardLevel);
	struct FAthenaSeasonRewardLevelInfo GetSeasonLevelInfo(int32 SeasonLevel);
	int32 GetSeasonFriendMatchXpBoost();
	int32 GetSeasonBookLevel();
	class UAthenaSeasonItemDefinition* GetActiveSeasonDefinition();
	void EquipBattleRoyaleCustomization(enum class EAthenaCustomizationCategory SlotName, const class FString& ItemToSlot, int32 IndexWithinSlot, TArray<struct FMcpVariantReader>& VariantUpdates, struct FClientUrlContext* Context);
	void EndBattleRoyaleGame(TArray<struct FFortQuestObjectiveCompletion>& Advance, const class FString& PlaylistId, struct FAthenaMatchStats& MatchStats, int32 FriendshipXpBoost, int32 CosmeticXpBoost, float AntiAddictionPlayTimeMultiplier, bool ShouldAccumulateToProfileStats, bool ShouldSaveToRecentGameLists, TArray<class FString>& Medals, struct FDedicatedServerUrlContext* Context);
	bool CanPurchaseSeasonBook();
	void BulkEquipBattleRoyaleCustomization(TArray<struct FFortAthenaLoadoutData>& LoadoutData, struct FClientUrlContext* Context);
};

// 0x58 (0x220 - 0x1C8)
// Class FortniteGame.FortMcpProfileAthenaStats
class UFortMcpProfileAthenaStats : public UFortMcpProfile
{
public:
	uint8                                        Pad_1D8A[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UAthenaSeasonStats*                    LifeTimeStats;                                     // 0x1D8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1D8B[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UAthenaSeasonStats*>            LifeTimeAndSeasonStatsList;                        // 0x1F8(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1D8C[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortMcpProfileAthenaStats");
		return Clss;
	}

	class UAthenaSeasonStats* GetLifetimeStats();
	TArray<class UAthenaSeasonStats*> GetLifeTimeAndSeasonList();
};

// 0x118 (0x308 - 0x1F0)
// Class FortniteGame.FortMcpProfileCampaign
class UFortMcpProfileCampaign : public UFortMcpProfileSubgame
{
public:
	UMulticastDelegateProperty_                  OnDifferentHeroLoadoutActivated;                   // 0x1F0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_1D99[0x108];                                   // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortMcpProfileCampaign");
		return Clss;
	}

	void UpgradeItemRarity(const class FString& TargetItemId, struct FClientUrlContext* Context);
	void UpgradeItem(const class FString& TargetItemId, struct FClientUrlContext* Context);
	void UpgradeAlteration(const class FString& TargetItemId, int32 AlterationSlot, struct FClientUrlContext* Context);
	void UpdateBuildingLevelAndRating(const class FString& BuildingId, int32 LastBuildingLevel, int32 LastBuildingRating, struct FClientUrlContext* Context);
	void UnslotItemFromCollectionBook(const class FString& ItemId, const class FString& Specific, const class FString& TemplateId, struct FClientUrlContext* Context);
	void UnslotAllWorkers(TArray<class FString>& BuildingIds, struct FClientUrlContext* Context);
	void UnloadWarehouse(TArray<class FString>& ResourceTypes, struct FClientUrlContext* Context);
	void UnassignAllSquads(TArray<class FString>& SquadIds, struct FClientUrlContext* Context);
	void TransmogItem(const class FString& TransmogKeyTemplateId, TArray<class FString>& SacrificeItemIds, struct FClientUrlContext* Context);
	void StartPrimaryMission(TArray<struct FFortQuestObjectiveCompletion>& Advance, const class FString& MatchmakingSessionId, const class FString& MissionName, struct FDedicatedServerUrlContext* Context);
	void StartExpedition(const class FString& ExpeditionId, const class FString& SquadId, TArray<class FString>& ItemIds, TArray<int32>& SlotIndices, struct FClientUrlContext* Context);
	void SlotItemInCollectionBook(const class FString& ItemId, struct FClientUrlContext* Context);
	void SkipTutorial(struct FClientUrlContext* Context);
	void SetModeLoadout(struct FFortSavedModeLoadout& ModeLoadout, const class FString& HeroId, struct FFortSavedModeLoadout& HeroModeLoadout, struct FClientUrlContext* Context);
	void SetLoadoutName(const class FString& LoadoutName, const class FString& LoadoutId, struct FClientUrlContext* Context);
	void SetHeroModeLoadout(const class FString& HeroId, struct FFortSavedModeLoadout& ModeLoadout, struct FClientUrlContext* Context);
	void SetGameplayStats(TArray<struct FFortPersistentGameplayStatValue>& GameplayStats, struct FClientUrlContext* Context);
	void SetActiveHeroLoadout(const class FString& SelectedLoadout, struct FClientUrlContext* Context);
	void RespecUpgrades(struct FClientUrlContext* Context);
	void RespecResearch(struct FClientUrlContext* Context);
	void RespecAlteration(const class FString& TargetItemId, int32 AlterationSlot, const class FString& AlterationId, struct FClientUrlContext* Context);
	void ResearchItemFromCollectionBook(const class FString& TemplateId, struct FClientUrlContext* Context);
	void RefundItem(const class FString& TargetItemId, struct FClientUrlContext* Context);
	void RefreshExpeditions(struct FClientUrlContext* Context);
	void RecycleItemBatch(TArray<class FString>& TargetItemIds, struct FClientUrlContext* Context);
	void RecycleItem(const class FString& TargetItemId, struct FClientUrlContext* Context);
	void PurchaseResearchStatUpgrade(const class FString& StatId, struct FClientUrlContext* Context);
	void PurchaseOrUpgradeHomebaseNode(const class FString& NodeId, struct FClientUrlContext* Context);
	void PopulatePrerolledOffers(struct FClientUrlContext* Context);
	void OpenCardPackBatch(TArray<class FString>& CardPackItemIds, struct FClientUrlContext* Context);
	void OpenCardPack(const class FString& CardPackItemId, int32 SelectionIdx, struct FClientUrlContext* Context);
	void OnDifferentHeroLoadoutActivated__DelegateSignature(class UFortMcpProfileCampaign* Profile);
	void ModifyMission(const class FString& MatchmakingSessionId, const class FString& Difficulty, struct FDedicatedServerUrlContext* Context);
	TArray<class UFortCampaignHeroLoadoutItem*> GetOrderedHeroLoadoutItems();
	void GetCurrentHeroLoadoutItem(class UFortCampaignHeroLoadoutItem** OutCampaignHeroLoadoutItem);
	void FailsafeSaveMissionResults(struct FEndZoneScoreAndAwards& PlayerScoreData, const class FString& MatchmakingSessionId, const class FString& MissionName, const class FString& MissionStatus, int32 DifficultyIncreaseTier, struct FDedicatedServerUrlContext* Context);
	void EquipCharCosmetic(const class FString& CharacterId, const class FString& CosmeticId, int32 TypeId, struct FClientUrlContext* Context);
	void EquipCampaignCustomization(enum class ECampaignCustomizationCategory SlotName, const class FString& ItemToSlot, int32 IndexWithinSlot, struct FClientUrlContext* Context);
	void EndPrimaryMission(TArray<struct FFortQuestObjectiveCompletion>& Advance, const class FString& MatchmakingSessionId, const class FString& MissionName, const class FString& MissionStatus, TArray<struct FFortQuestEarnedBadgeData>& EarnedBadgeData, TArray<class FString>& EarnedItemCaches, int32 DifficultyIncreaseTier, int32 NumMissionPoints, bool bCriticalMatchBonus, struct FDedicatedServerUrlContext* Context);
	void EndMatch(TArray<struct FAccountIdAndMatchEndData>& PlayersAndMatchEndData, const class FString& MatchmakingSessionId, const class FString& MissionName, const class FString& MissionStatus, int32 DifficultyIncreaseTier, struct FDedicatedServerUrlContext* Context);
	void EarnScore(TArray<struct FAccountIdAndScore>& PlayersAndScores, const class FString& MatchmakingSessionId, struct FDedicatedServerUrlContext* Context);
	void ConvertLegacyAlterations(const class FString& TargetItemId, struct FClientUrlContext* Context);
	void ConvertItem(const class FString& TargetItemId, int32 ConversionIndex, struct FClientUrlContext* Context);
	void ConsumeItems(TArray<class FString>& ItemsToConsumeIds, TArray<int32>& ItemCountsToConsume, const class FString& ConsumeReason, struct FDedicatedServerUrlContext* Context);
	void CollectExpedition(const class FString& ExpeditionTemplate, const class FString& ExpeditionId, struct FClientUrlContext* Context);
	void ClearHeroLoadout(const class FString& LoadoutId, struct FClientUrlContext* Context);
	void ClaimMissionAlertRewards(struct FClientUrlContext* Context);
	void ClaimLoginReward(struct FClientUrlContext* Context);
	void ClaimDifficultyIncreaseRewards(struct FClientUrlContext* Context);
	void ClaimCollectionBookRewards(int32 RequiredXp, int32 SelectedRewardIndex, struct FClientUrlContext* Context);
	void ClaimCollectedResources(TArray<class FString>& CollectorsToClaim, struct FClientUrlContext* Context);
	void AssignWorkerToSquadBatch(TArray<class FString>& CharacterIds, TArray<class FString>& SquadIds, TArray<int32>& SlotIndices, struct FClientUrlContext* Context);
	void AssignWorkerToSquad(const class FString& CharacterId, const class FString& SquadId, int32 SlotIndex, struct FClientUrlContext* Context);
	void AssignHeroToLoadout(const class FString& HeroId, const class FString& LoadoutId, const class FString& SlotName, struct FClientUrlContext* Context);
	void AssignGadgetToLoadout(const class FString& GadgetId, const class FString& LoadoutId, int32 SlotIndex, struct FClientUrlContext* Context);
	void ApplyAlteration(const class FString& TargetItemId, const class FString& AlterationItemId, struct FClientUrlContext* Context);
	void ActivateConsumable(const class FString& TargetItemId, const class FString& TargetAccountId, struct FClientUrlContext* Context);
	void AbandonExpedition(const class FString& ExpeditionId, struct FClientUrlContext* Context);
};

// 0x0 (0x1C8 - 0x1C8)
// Class FortniteGame.FortMcpProfileCollectionBook
class UFortMcpProfileCollectionBook : public UFortMcpProfile
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortMcpProfileCollectionBook");
		return Clss;
	}

	void UpgradeSlottedItem(const class FString& TargetItemId, struct FClientUrlContext* Context);
	void ConvertSlottedItem(const class FString& TargetItemId, int32 ConversionIndex, struct FClientUrlContext* Context);
	void ClaimCollectionBookPageRewards(const class FString& PageTemplateId, const class FString& SectionId, int32 SelectedRewardIndex, struct FClientUrlContext* Context);
};

// 0xE0 (0x2A8 - 0x1C8)
// Class FortniteGame.FortMcpProfileCommonCore
class UFortMcpProfileCommonCore : public UFortMcpProfile
{
public:
	uint8                                        Pad_1D9F[0x98];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                ListCatalogEntriesUrl;                             // 0x260(0x10)(ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1DA0[0x34];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        AffiliateExpirationSeconds;                        // 0x2A4(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortMcpProfileCommonCore");
		return Clss;
	}

	void TwitchUpdateBroadcasterRegistration(const class FString& AccessToken, const class FString& ChannelId, struct FClientUrlContext* Context);
	void SetReceiveGiftsEnabled(bool bReceiveGifts, struct FClientUrlContext* Context);
	void SetMtxPlatform(const class FString& NewPlatform, struct FClientUrlContext* Context);
	void SetBansViewed(struct FClientUrlContext* Context);
	void SetAffiliateName(const class FString& AffiliateName, struct FClientUrlContext* Context);
	void RemoveGiftBox(const class FString& GiftBoxItemId, struct FClientUrlContext* Context);
	void RefundMtxPurchase(const class FString& PurchaseId, struct FClientUrlContext* Context);
	void IssueFriendCode(const class FString& CodeTokenType, struct FClientUrlContext* Context);
	void ClaimMfaEnabled(bool bClaimForStw, struct FClientUrlContext* Context);
	void ClaimImportFriendsReward(enum class ESocialImportPanelPlatform Network, struct FClientUrlContext* Context);
};

// 0x58 (0x220 - 0x1C8)
// Class FortniteGame.FortMcpProfileCommonPublic
class UFortMcpProfileCommonPublic : public UFortMcpProfile
{
public:
	uint8                                        Pad_1DA1[0x58];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortMcpProfileCommonPublic");
		return Clss;
	}

	void SetHomebaseName(const class FString& HomebaseName, struct FClientUrlContext* Context);
	void SetHomebaseBanner(const class FString& HomebaseBannerIconId, const class FString& HomebaseBannerColorId, struct FClientUrlContext* Context);
};

// 0x20 (0x1E8 - 0x1C8)
// Class FortniteGame.FortMcpProfileCreative
class UFortMcpProfileCreative : public UFortMcpProfile
{
public:
	uint8                                        Pad_1DA3[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bEnablePublishing;                                 // 0x1E0(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bRequirePublishingPermissions;                     // 0x1E1(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1DA4[0x6];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortMcpProfileCreative");
		return Clss;
	}

	void SetLastUsedCreativePlot(const class FString& PlotItemId, struct FDedicatedServerUrlContext* Context);
	void SetCreativePlotIslandName(const class FString& PlotItemId, const class FString& IslandName, struct FClientUrlContext* Context);
	void ModifyCreativePlotPermissions(const class FString& PlotItemId, enum class EFortCreativePlotPermission Permission, TArray<class FString>& AccountIds, struct FDedicatedServerUrlContext* Context);
};

// 0x0 (0x1C8 - 0x1C8)
// Class FortniteGame.FortMcpProfileMetadata
class UFortMcpProfileMetadata : public UFortMcpProfile
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortMcpProfileMetadata");
		return Clss;
	}

	void UpdateOutpostCore(const class FString& CoreId, struct FFortOutpostCoreInfo& CoreInfo, struct FDedicatedServerUrlContext* Context);
	void UpdateDeployableBaseTierProgression(const class FString& DeployableBaseItemId, const class FString& ProgressionLayoutGuid, int32 TierDefeated, struct FDedicatedServerUrlContext* Context);
	void CreateOrUpgradeOutpostItem(const class FString& TemplateId, struct FClientUrlContext* Context);
	void CreateDeployableBaseItem(const class FString& TemplateId, struct FDedicatedServerUrlContext* Context);
};

// 0x1B0 (0x378 - 0x1C8)
// Class FortniteGame.FortMcpProfileWorld
class UFortMcpProfileWorld : public UFortMcpProfile
{
public:
	TArray<struct FFortWorldProfileUpdateRequest> UpdateRequests;                                    // 0x1C8(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	struct FFortWorldPlayerLoadout               CachedPlayerLoadout;                               // 0x1D8(0x140)(Protected, NativeAccessSpecifierProtected)
	class AFortInventory*                        FortInventory;                                     // 0x318(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UFortWorldItem*>                WorldItemsCachedForRejoin;                         // 0x320(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	bool                                         bIsInventoryInitialized;                           // 0x330(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1DA8[0x47];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortMcpProfileWorld");
		return Clss;
	}

	void UnlockProfiles(const class FString& Code, struct FDedicatedServerUrlContext* Context);
	void StorageTransfer(TArray<struct FItemTransferOperation>& TransferOperations, struct FClientUrlContext* Context);
	void ModifyQuickbar(TArray<class FString>& PrimaryQuickbarChoices, const class FString& SecondaryQuickbarChoice, struct FClientUrlContext* Context);
	void LockProfiles(const class FString& Code, int32 Timeout, struct FDedicatedServerUrlContext* Context);
	void InitializeTheater(const class FString& TheaterGuid, struct FDedicatedServerUrlContext* Context);
	void FabricateItem(const class FString& TemplateId, struct FDedicatedServerUrlContext* Context);
	void DisintegrateItems(TArray<class FString>& ItemsToDisintegrateIds, TArray<int32>& ItemCountsToDisintegrate, struct FDedicatedServerUrlContext* Context);
	void DisassembleWorldItems(TArray<struct FItemIdAndQuantityPair>& TargetItemIdAndQuantityPairs, struct FClientUrlContext* Context);
	void DestroyWorldItems(TArray<class FString>& ItemIds, struct FClientUrlContext* Context);
	void DepositPostResources(TArray<class FString>& ItemsToDepositIds, TArray<int32>& ItemCountsToDeposit, struct FDedicatedServerUrlContext* Context);
	void CraftWorldItem(const class FString& TargetSchematicItemId, int32 NumTimesToCraft, const class FString& TargetSchematicTier, struct FClientUrlContext* Context);
	void BatchUpdatePlayers_Outpost(TArray<struct FFortBatchUpdatePlayer_Update>& Updates, const class FString& OutpostId, struct FFortOutpostCoreInfo& OutpostInfo, struct FFortCloudSaveInfo& CloudSaveInfo, struct FDedicatedServerUrlContext* Context);
	void BatchUpdatePlayers_DeployableBase(TArray<struct FFortBatchUpdatePlayer_Update>& Updates, TArray<struct FFortBatchUpdatePlayer_DeployableBaseUpdate>& DeployableBaseUpdates, struct FDedicatedServerUrlContext* Context);
	void BatchUpdatePlayers(TArray<struct FFortBatchUpdatePlayer_Update>& Updates, struct FDedicatedServerUrlContext* Context);
	void AbortDisintegration(struct FDedicatedServerUrlContext* Context);
};

// 0x18 (0x40 - 0x28)
// Class FortniteGame.FortMcpResource
class UFortMcpResource : public UObject
{
public:
	uint8                                        Pad_1DA9[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortMcpResource");
		return Clss;
	}

};

// 0x0 (0x40 - 0x40)
// Class FortniteGame.FortMcpTwitch
class UFortMcpTwitch : public UFortMcpResource
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortMcpTwitch");
		return Clss;
	}

};

// 0x1F0 (0x218 - 0x28)
// Class FortniteGame.FortMcpUtils
class UFortMcpUtils : public UObject
{
public:
	uint8                                        Pad_1DAA[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                CreateXboxDedicatedServerSessionUrl;               // 0x48(0x10)(ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FString                                UnredeemedCodesUrl;                                // 0x58(0x10)(ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FString                                QueryUserXuidUrl;                                  // 0x68(0x10)(ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FString                                RecordUserStatsUrl;                                // 0x78(0x10)(ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FString                                QueryUserStatsUrl;                                 // 0x88(0x10)(ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FString                                QueryLeaderboardUrl;                               // 0x98(0x10)(ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FString                                QueryCohortUrl;                                    // 0xA8(0x10)(ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FString                                InMatchTimePlayedUrl;                              // 0xB8(0x10)(ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bShouldSendTimeTracking;                           // 0xC8(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1DAB[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                VoiceLoginUrl;                                     // 0xD0(0x10)(ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FString                                VoiceJoinUrl;                                      // 0xE0(0x10)(ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FString                                UpdateMatchmakingRatingUrl;                        // 0xF0(0x10)(ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FString                                GetEventTournamentAndHistoryUrl;                   // 0x100(0x10)(ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FString                                GetEventWindowHistoryUrl;                          // 0x110(0x10)(ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FString                                ReportTournamentStatsUrl;                          // 0x120(0x10)(ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FString                                GetEventsAndHistoryUrl;                            // 0x130(0x10)(ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FString                                ReportEventStatsUrl;                               // 0x140(0x10)(ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FString                                GetEventsWindowHistoryUrl;                         // 0x150(0x10)(ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FString                                PrivacySettingsUrl;                                // 0x160(0x10)(ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FString                                AllowHomebaseCharactersUrl;                        // 0x170(0x10)(ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FString                                QuerySwitchEntitlementsUrl;                        // 0x180(0x10)(ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FString                                ReportPlayerToxicityUrl;                           // 0x190(0x10)(ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FString                                EventCalendardTestUrl;                             // 0x1A0(0x10)(ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FString                                IslandFavoritesUrl;                                // 0x1B0(0x10)(ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1DAC[0x50];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        DefaultLogTailLengthKb;                            // 0x210(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1DAD[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortMcpUtils");
		return Clss;
	}

};

// 0x80 (0xC0 - 0x40)
// Class FortniteGame.FortMcpWorlds
class UFortMcpWorlds : public UFortMcpResource
{
public:
	struct FFortActiveTheaterInfo                TheaterInfo;                                       // 0x40(0x30)(NativeAccessSpecifierPrivate)
	int32                                        TheaterQueryRetry;                                 // 0x70(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1DAE[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FDateTime                             LastTheaterRefresh;                                // 0x78(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class UWorld>                 LastWorld;                                         // 0x80(0x28)(UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1DAF[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortMcpWorlds");
		return Clss;
	}

};

// 0x238 (0x268 - 0x30)
// Class FortniteGame.FortMedicPackSet
class UFortMedicPackSet : public UFortAttributeSet
{
public:
	uint8                                        Pad_1DB0[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FFortGameplayAttributeData            MaxFuel;                                           // 0x38(0x28)(BlueprintVisible, BlueprintReadOnly, Net, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            Fuel;                                              // 0x60(0x28)(BlueprintVisible, BlueprintReadOnly, Net, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            ReserveMaxFuel;                                    // 0x88(0x28)(BlueprintVisible, BlueprintReadOnly, Net, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            ReserveFuel;                                       // 0xB0(0x28)(BlueprintVisible, BlueprintReadOnly, Net, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            FuelBurnRate;                                      // 0xD8(0x28)(BlueprintVisible, BlueprintReadOnly, Net, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            FuelRegenRate;                                     // 0x100(0x28)(BlueprintVisible, BlueprintReadOnly, Net, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            FuelRegenDelay;                                    // 0x128(0x28)(BlueprintVisible, BlueprintReadOnly, Net, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            SelfReviveActive;                                  // 0x150(0x28)(BlueprintVisible, BlueprintReadOnly, Net, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            SelfReviveTime;                                    // 0x178(0x28)(BlueprintVisible, BlueprintReadOnly, Net, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            SelfReviveCost;                                    // 0x1A0(0x28)(BlueprintVisible, BlueprintReadOnly, Net, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            DamageBreaksSelfRevive;                            // 0x1C8(0x28)(BlueprintVisible, BlueprintReadOnly, Net, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            Heal;                                              // 0x1F0(0x28)(BlueprintVisible, BlueprintReadOnly, Net, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            HealRadius;                                        // 0x218(0x28)(BlueprintVisible, BlueprintReadOnly, Net, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            HealPeriod;                                        // 0x240(0x28)(BlueprintVisible, BlueprintReadOnly, Net, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortMedicPackSet");
		return Clss;
	}

};

// 0x38 (0x368 - 0x330)
// Class FortniteGame.MegaStormManager
class AMegaStormManager : public AActor
{
public:
	uint8                                        Pad_1DB1[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        MaxSecondsInMegaStormUpdate;                       // 0x338(0x4)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        NumBuildingActorMegaStormShouldDamagePerFrame;     // 0x33C(0x4)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SleepTimeAfterDamagingBuildingActors;              // 0x340(0x4)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MinDelayTimeBeforeDestruction;                     // 0x344(0x4)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bFloorRadiusToGridConversion;                      // 0x348(0x1)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1DB2[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        GridRadiusCellOffset;                              // 0x34C(0x4)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MegaStormStartTime;                                // 0x350(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        SleepTimeRemaining;                                // 0x354(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FMegaStormCircle>              MegaStormCircles;                                  // 0x358(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("MegaStormManager");
		return Clss;
	}

};

// 0x0 (0x3E8 - 0x3E8)
// Class FortniteGame.FortMeshBeaconClient
class AFortMeshBeaconClient : public AMeshBeaconClient
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortMeshBeaconClient");
		return Clss;
	}

};

// 0x0 (0x420 - 0x420)
// Class FortniteGame.FortMeshBeaconHost
class AFortMeshBeaconHost : public AMeshBeaconHost
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortMeshBeaconHost");
		return Clss;
	}

};

// 0x0 (0x360 - 0x360)
// Class FortniteGame.FortMeshBeaconHostObject
class AFortMeshBeaconHostObject : public AMeshBeaconHostObject
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortMeshBeaconHostObject");
		return Clss;
	}

};

// 0x0 (0x28 - 0x28)
// Class FortniteGame.FortMeshNetworkFunctionLibrary
class UFortMeshNetworkFunctionLibrary : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortMeshNetworkFunctionLibrary");
		return Clss;
	}

	void FireEvent_MeshHeartbeat(class UObject* WorldContextObject);
};

// 0x8 (0x338 - 0x330)
// Class FortniteGame.FortMeshNetworkActor
class AFortMeshNetworkActor : public AActor
{
public:
	class UMeshNetworkComponent*                 MeshNetworkComponent;                              // 0x330(0x8)(Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortMeshNetworkActor");
		return Clss;
	}

};

// 0x0 (0x460 - 0x460)
// Class FortniteGame.FortMeshReplicationGraph
class UFortMeshReplicationGraph : public UMeshReplicationGraph
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortMeshReplicationGraph");
		return Clss;
	}

};

// 0x10 (0x58 - 0x48)
// Class FortniteGame.FortMetaNavArea
class UFortMetaNavArea : public UNavAreaMeta
{
public:
	TArray<struct FNavAgentData>                 AgentData;                                         // 0x48(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortMetaNavArea");
		return Clss;
	}

};

// 0x8 (0x50 - 0x48)
// Class FortniteGame.FortMetaNavArea_Obstacles
class UFortMetaNavArea_Obstacles : public UNavAreaMeta
{
public:
	int32                                        HealthThreshold;                                   // 0x48(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1DB3[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortMetaNavArea_Obstacles");
		return Clss;
	}

};

// 0x0 (0x58 - 0x58)
// Class FortniteGame.FortMetaNavArea_Wall
class UFortMetaNavArea_Wall : public UFortMetaNavArea
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortMetaNavArea_Wall");
		return Clss;
	}

};

// 0x370 (0x6A0 - 0x330)
// Class FortniteGame.FortMinigame
class AFortMinigame : public AInfo
{
public:
	UMulticastDelegateProperty_                  StateChangedDelegate;                              // 0x330(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  StatChangedDelegate;                               // 0x340(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  PlayerAddedDelegate;                               // 0x350(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  PlayerRemovedDelegate;                             // 0x360(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  MinigameStartedDelegate;                           // 0x370(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  MinigameEndedDelegate;                             // 0x380(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TArray<struct FPlaylistUIExtension>          UIExtensions;                                      // 0x390(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FText                                  DisplayName;                                       // 0x3A0(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, Net, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	enum class EFortMinigamePlayerSpawnLocationSetting SpawnLocationSetting;                              // 0x3B8(0x1)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EFortMinigamePostGameSpawnLocationSetting PostGameSpawnLocationSetting;                      // 0x3B9(0x1)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1DDD[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        TimeLimit;                                         // 0x3BC(0x4)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        WarmupDuration;                                    // 0x3C0(0x4)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EFortMinigameWarmupType           WarmupType;                                        // 0x3C4(0x1)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1DDE[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        PostGameResetDelay;                                // 0x3C8(0x4)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1DDF[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FFortMinigameStatQuery>        EndConditions;                                     // 0x3D0(0x10)(Edit, BlueprintVisible, Net, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<TSubclassOf<class UFortMinigameStatFilter>> TrackedStats;                                      // 0x3E0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	TArray<TSubclassOf<class UFortMinigameStatFilter>> ScoreboardStats;                                   // 0x3F0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	struct FFortMinigameGroupStats               GroupStats;                                        // 0x400(0x10)(Edit, Net, DisableEditOnTemplate, Transient, EditConst, RepNotify, Protected, NativeAccessSpecifierProtected)
	TArray<struct FFortMinigameTeamStats>        TeamStats;                                         // 0x410(0x10)(Edit, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, RepNotify, Protected, NativeAccessSpecifierProtected)
	TArray<struct FFortMinigamePlayerStats>      PlayerStats;                                       // 0x420(0x10)(Edit, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, RepNotify, Protected, NativeAccessSpecifierProtected)
	enum class EFortMinigameState                CurrentState;                                      // 0x430(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EFortMinigameState                PreviousState;                                     // 0x431(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1DE0[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class UFortMinigameStatFilter>   PlayerDeathsStatFilter;                            // 0x438(0x8)(Edit, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        MaxLivesForPlayer;                                 // 0x440(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EFortTeam                         TeamToSwapToWhenOutOfSpawns;                       // 0x444(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1DE1[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        AutoEndTeamThreshold;                              // 0x448(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        LastStartTime;                                     // 0x44C(0x4)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        LastEndTime;                                       // 0x450(0x4)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        StartTime;                                         // 0x454(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        EndTime;                                           // 0x458(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1DE2[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FMinigamePlayers                      PlayerArray;                                       // 0x460(0xC8)(Edit, Net, DisableEditOnTemplate, Transient, EditConst, Protected, NativeAccessSpecifierProtected)
	struct FMinigamePlayers                      SpectatingPlayerArray;                             // 0x528(0xC8)(Edit, Net, DisableEditOnTemplate, Transient, EditConst, Protected, NativeAccessSpecifierProtected)
	TArray<class UFortMinigameLogicComponent*>   MinigameComponents;                                // 0x5F0(0x10)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	TArray<class UFortMinigamePlayerStartComponent*> PlayerStartComponents;                             // 0x600(0x10)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	class AFortVolume*                           Volume;                                            // 0x610(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bSortScoreboardEntries;                            // 0x618(0x1)(Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bTeamMinigame;                                     // 0x619(0x1)(Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1DE3[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AFortPlayerState*                      MinigameStarter;                                   // 0x620(0x8)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1DE4[0x48];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  ClientMinigameStartedText;                         // 0x670(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	class FText                                  ClientMinigameEndedText;                           // 0x688(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortMinigame");
		return Clss;
	}

	bool WasInProgress();
	void TeleportPlayersToStartLocations();
	void StartMinigame(class AFortPlayerController* InstigatorPC);
	bool SortTeamsByScore(enum class EFortTeam First, enum class EFortTeam Second);
	bool SortPlayersByScore(class AFortPlayerState* First, class AFortPlayerState* Second);
	void SetTeamForPlayer(class AFortPlayerState* PlayerState, enum class EFortTeam NewTeam);
	void SetStatForTeam(enum class EFortTeam InTeam, TSubclassOf<class UFortMinigameStatFilter> InFilter, int32 InValue);
	void SetStatForPlayer(class AFortPlayerState* InPlayer, TSubclassOf<class UFortMinigameStatFilter> InFilter, int32 InValue);
	void SetStatForGroup(TSubclassOf<class UFortMinigameStatFilter> InFilter, int32 InValue);
	void SetPvPTeamForPlayer(class AFortPlayerState* PlayerState, int32 Team);
	void RestartMinigame(class AFortPlayerController* InstigatorPC);
	void RespawnMinigamePlayers();
	void ResetStats();
	void RemoveMinigamePlayer(class AFortPlayerState* PlayerState);
	void RemoveMinigameComponent(class UFortMinigameLogicComponent* MinigameComponent);
	void RemoveMinigameActor(class AActor* Actor);
	void RecheckInventory(class APawn* PlayerPawn);
	void PutPlayerIntoStasis(class APawn* PlayerPawn);
	bool OverridePlayerSpawnLocation(class APawn* PlayerPawn, class AFortPlayerStateAthena* PlayerState, struct FVector* OutLocation, struct FRotator* OutRotation);
	void OnVolumeStateChanged(enum class EVolumeState NewState, class AFortVolume* ChangedVolume);
	void OnRep_StatsChanged();
	void OnRep_CurrentState();
	void OnPlayerTeleportedForMinigameStart(class APlayerState* PlayerState, bool bTeleportedToSky);
	void OnPlayerPawnPossessed(class APawn* PlayerPawn);
	void OnPlayerPawnDied(class AFortPlayerPawnAthena* PlayerPawn);
	void NotifyStatEvent(enum class EFortQuestObjectiveStatEvent Type, class UObject* TargetObject, class AFortPlayerController* PlayerController, struct FGameplayTagContainer& TargetTags, struct FGameplayTagContainer& SourceTags, struct FGameplayTagContainer& ContextTags, int32 Count);
	void NativeExitedVolumeEvent(class AFortPlayerState* LeftPlayerState);
	void NativeEnteredVolumeEvent(class AFortPlayerState* PlayerState);
	void K2_IsInProgress(enum class EFortMinigameExec* OutExec);
	void K2_HasStarted(enum class EFortMinigameExec* OutExec);
	void K2_ExitedVolumeEvent(class AFortPlayerState* LeftPlayerState);
	void K2_EnteredVolumeEvent(class AFortPlayerState* PlayerState);
	bool IsPregame();
	bool IsPlayerTeleportingOrRespawningForGameplay(class APlayerState* PlayerToCheck);
	bool IsPlayerOutOfLives(class AFortPlayerState* InPlayerState);
	bool IsPlayerInOurVolume(class AFortPlayerState* PlayerState);
	bool IsPlayerInMinigame(class AFortPlayerState* PlayerState);
	bool IsMinigameStarter(class AFortPlayerController* PlayerController);
	bool IsMinigameComponent(class UFortMinigameLogicComponent* MinigameComponent);
	bool IsMinigameActor(class AActor* Actor);
	bool IsLocationInsideTerrain(const struct FVector& Location, struct FHitResult* OutHit);
	bool IsInProgress();
	bool IsAnyEndConditionComplete();
	bool IsActorPositionInsideTerrain(class AActor* Actor, struct FHitResult* OutHit);
	bool HasStarted();
	bool HasMinigameStarter();
	void HandleVolumeEditModeChange(bool bInEditMode);
	void HandleMinigameWarmup();
	void HandleMinigameStarted();
	void HandleMinigameEnded();
	void HandleMinigameComponentRemoved(class UFortMinigameLogicComponent* MinigameComponent);
	void HandleMinigameComponentInPlayChanged(class UFortMinigameLogicComponent* MinigameComponent);
	void HandleMinigameComponentAdded(class UFortMinigameLogicComponent* MinigameComponent);
	int32 GetTrackedTeams(TArray<enum class EFortTeam>* OutTeams);
	int32 GetTrackedPlayers(TArray<class AFortPlayerState*>* OutPlayers);
	enum class EFortTeam GetTeamToSwapToWhenOutOfSpawns();
	int32 GetStatForTeam(enum class EFortTeam InTeam, TSubclassOf<class UFortMinigameStatFilter> InFilter);
	int32 GetStatForPlayer(class AFortPlayerState* InPlayer, TSubclassOf<class UFortMinigameStatFilter> InFilter);
	int32 GetStatForGroup(TSubclassOf<class UFortMinigameStatFilter> InFilter);
	struct FGameplayTagQuery GetStartQueryForPlayer(class APlayerState* Player);
	enum class EFortMinigamePlayerSpawnLocationSetting GetSpawnLocationSetting();
	void GetSortedParticipatingPlayers(TArray<class AFortPlayerState*>* PlayerStates);
	float GetRuntime();
	void GetPlayerStartComponentsByTagQuery(TArray<class UFortMinigamePlayerStartComponent*>* OutPlayerStartComponents, struct FGameplayTagQuery& TagQuery);
	void GetParticipatingPlayers(TArray<class AFortPlayerState*>* OutPlayers);
	bool GetOrderedMinigameStatsRows(TArray<struct FMinigameStatRow>* OutStats);
	void GetMinigameComponentsByTagQuery(TArray<class UFortMinigameLogicComponent*>* OutComponents, struct FGameplayTagQuery& TagQuery);
	bool GetAirSpawnLocation(class AFortPlayerStateAthena* PlayerState, bool bShouldClaim, struct FVector* OutLocation, struct FRotator* OutRotation);
	class FText FormatStat(TSubclassOf<class UFortMinigameStatFilter> InStat, int32 InValue);
	void FinishRespawnPrep(class AFortPlayerControllerAthena* PlayerController, const struct FVector& RespawnLocation, const struct FRotator& RespawnRotation, float RespawnCameraDist, class FName InRespawnCameraBehavior, class FText HUDReasonText);
	void FinishPlayerTeleportedToPreMinigameLocations(class AFortPlayerPawn* PlayerPawn);
	void FinishPlayerTeleportedForMinigameStart(class AFortPlayerPawn* PlayerPawn);
	bool EvaluateStatQuery(struct FFortMinigameStatQuery& InQuery);
	void EndWarmup();
	void EndMinigame(class AFortPlayerController* InstigatorPC, bool bAbandon);
	bool DetermineSpawnLocation(class AFortPlayerStateAthena* PlayerState, bool bShouldClaim, struct FVector* OutLocation, struct FRotator* OutRotation, bool* bShouldSkydive, bool bCanUseVolumeSpawnPointsAsBackup);
	void ClearPlayerInventory(class AFortPlayerControllerAthena* PlayerController);
	void ClearPlayerInventories();
	class AActor* ChoosePlayerStart(class AController* Player);
	bool CheckRemainingLivingPlayersForEndCondition();
	void CheckEndConditionsInternal();
	void CheckEndConditions();
	bool CanPlayerRespawn(class AFortPlayerState* InPlayerState);
	void AddStatToTeam(enum class EFortTeam InTeam, TSubclassOf<class UFortMinigameStatFilter> InFilter, int32 InCount);
	void AddStatToPlayer(class AFortPlayerState* InPlayer, TSubclassOf<class UFortMinigameStatFilter> InFilter, int32 InCount);
	void AddStatToGroup(TSubclassOf<class UFortMinigameStatFilter> InFilter, int32 InCount);
	void AddMinigamePlayer(class AFortPlayerState* PlayerState);
	void AddMinigameComponent(class UFortMinigameLogicComponent* MinigameComponent);
	void AddMinigameActor(class AActor* Actor);
};

// 0x78 (0x170 - 0xF8)
// Class FortniteGame.FortMinigameLogicComponent
class UFortMinigameLogicComponent : public UActorComponent
{
public:
	uint8                                        Pad_1DE5[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	UMulticastDelegateProperty_                  MinigameStartedDelegate;                           // 0x100(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  MinigameEndedDelegate;                             // 0x110(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnPlayspaceEditModeChanged;                        // 0x120(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                 MinigameTags;                                      // 0x130(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, Net, SaveGame, NativeAccessSpecifierPublic)
	TArray<TSubclassOf<class UFortMinigameStatFilter>> DesiredStats;                                      // 0x150(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, SaveGame, UObjectWrapper, NativeAccessSpecifierPublic)
	class AFortMinigame*                         CurrentMinigame;                                   // 0x160(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AFortMinigame*                         CachedMinigame;                                    // 0x168(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortMinigameLogicComponent");
		return Clss;
	}

	bool TryAttachToMinigame();
	void HandlePlayspaceEditModeChange(bool bInEditMode);
	void HandleMinigameStarted();
	void HandleMinigameSet();
	void HandleMinigameEnded();
};

// 0x10 (0x38 - 0x28)
// Class FortniteGame.FortMinigameManager
class UFortMinigameManager : public UObject
{
public:
	class AFortPlayerController*                 PlayerController;                                  // 0x28(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AFortMinigame*                         CurrentMinigame;                                   // 0x30(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortMinigameManager");
		return Clss;
	}

	void SendStatEventWithTags(enum class EFortQuestObjectiveStatEvent Type, class UObject* TargetObject, struct FGameplayTagContainer& TargetTags, struct FGameplayTagContainer& SourceTags, struct FGameplayTagContainer& ContextTags, int32 Count);
	void GetSourceAndContextTags(struct FGameplayTagContainer* OutSourceTags, struct FGameplayTagContainer* OutContextTags);
};

// 0x0 (0x330 - 0x330)
// Class FortniteGame.FortMinigameMode
class AFortMinigameMode : public AInfo
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortMinigameMode");
		return Clss;
	}

};

// 0x60 (0x1D0 - 0x170)
// Class FortniteGame.FortMinigamePlayerStartComponent
class UFortMinigamePlayerStartComponent : public UFortMinigameLogicComponent
{
public:
	class AFortPlayerStartCreative*              PlayerStart;                                       // 0x170(0x8)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsCheckpoint : 1;                                 // Mask : 0x1 0x178(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1DEA[0x57];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortMinigamePlayerStartComponent");
		return Clss;
	}

	void SetPlayerCheckpoint(class APlayerState* Player, float Value);
	void ResetCheckpoints();
	bool GetPlayerCheckpointValue(class APlayerState* Player, float* OutValue);
};

// 0x98 (0x208 - 0x170)
// Class FortniteGame.FortMinigameProgressComponent
class UFortMinigameProgressComponent : public UFortMinigameLogicComponent
{
public:
	UMulticastDelegateProperty_                  ProgressStartedDelegate;                           // 0x170(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  ProgressFinishedDelegate;                          // 0x180(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  ProgressAbortedDelegate;                           // 0x190(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  ProgressRevertedDelegate;                          // 0x1A0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	float                                        ActivationTime;                                    // 0x1B0(0x4)(Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1DEB[0x54];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortMinigameProgressComponent");
		return Clss;
	}

	void StartProgress(class APlayerState* PlayerState);
	void RevertProgress(class APlayerState* PlayerState);
	bool HasActivationTime();
	void FinishProgress(class APlayerState* PlayerState);
	void AbortProgress(class APlayerState* PlayerState);
};

// 0x110 (0x440 - 0x330)
// Class FortniteGame.FortMinigameScoreRegistry
class AFortMinigameScoreRegistry : public AInfo
{
public:
	class UFortPlaysetItemDefinition*            Playset;                                           // 0x330(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMinigameScoreTemplate                ScoreTemplate;                                     // 0x338(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, Net, DisableEditOnTemplate, Transient, EditConst, NoDestructor, NativeAccessSpecifierPublic)
	bool                                         bPostToKillFeed;                                   // 0x344(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1DF3[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	UMulticastDelegateProperty_                  OnScoreRecorded;                                   // 0x348(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnScoreRankingsUpdated;                            // 0x358(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FMinigameScoreArray                   Scores;                                            // 0x368(0xD8)(Edit, Net, Transient, EditConst, RepNotify, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortMinigameScoreRegistry");
		return Clss;
	}

	class FText TimeToText(float Time);
	class FText ScoreToText(float Score);
	bool RemoveAllScores(class AFortPlayerState* PlayerState);
	bool RecordScore(class AFortPlayerState* PlayerState, float Score);
	class FText PointsToText(float Points);
	void OnRep_Scores();
	void OnRep_Playset();
	bool GetScores(class AFortPlayerState* PlayerState, TArray<struct FMinigameScoreEntry>* ScoreEnties);
	bool GetHighScores(TArray<struct FMinigameScoreEntry>* HighScores);
};

// 0x8 (0xC90 - 0xC88)
// Class FortniteGame.FortMinigameSettingsBuilding
class AFortMinigameSettingsBuilding : public ABuildingSMActor
{
public:
	class UFortCreativeVolumeLinkComponent*      CreativeLinkComponent;                             // 0xC88(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortMinigameSettingsBuilding");
		return Clss;
	}

	void OnLinkedVolumeSet(class AFortVolume* PreviousVolume, class AFortVolume* NewVolume);
};

// 0x18 (0x110 - 0xF8)
// Class FortniteGame.FortMinigameSpawnerComponent
class UFortMinigameSpawnerComponent : public UActorComponent
{
public:
	uint8                                        Pad_1DF4[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FMinigameSpawnerSpawnParams>   ToSpawnList;                                       // 0x100(0x10)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnTemplate, SaveGame, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortMinigameSpawnerComponent");
		return Clss;
	}

};

// 0x160 (0x188 - 0x28)
// Class FortniteGame.MinigameObjectiveDefinition
class UMinigameObjectiveDefinition : public UObject
{
public:
	enum class EFortQuestObjectiveStatEvent      StatEvent;                                         // 0x28(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortQuestObjectiveItemEvent      ItemEvent;                                         // 0x29(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1DF5[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftObjectPtr<class UFortItemDefinition>    ItemDefinition;                                    // 0x30(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTagQuery                     TargetTagsQuery;                                   // 0x58(0x48)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayTagQuery                     SourceTagsQuery;                                   // 0xA0(0x48)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayTagQuery                     ContextTagsQuery;                                  // 0xE8(0x48)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class FText                                  Description;                                       // 0x130(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class FText                                  HudShortDescription;                               // 0x148(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UTexture2D>             HudIcon;                                           // 0x160(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("MinigameObjectiveDefinition");
		return Clss;
	}

};

// 0x0 (0x330 - 0x330)
// Class FortniteGame.FortMinigameState
class AFortMinigameState : public AInfo
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortMinigameState");
		return Clss;
	}

};

// 0x160 (0x188 - 0x28)
// Class FortniteGame.FortMinigameStatFilter
class UFortMinigameStatFilter : public UObject
{
public:
	enum class EFortQuestObjectiveStatEvent      StatEvent;                                         // 0x28(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EFortQuestObjectiveItemEvent      ItemEvent;                                         // 0x29(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1DF9[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftObjectPtr<class UFortItemDefinition>    ItemDefinition;                                    // 0x30(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTagQuery                     TargetTagsQuery;                                   // 0x58(0x48)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	struct FGameplayTagQuery                     SourceTagsQuery;                                   // 0xA0(0x48)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	struct FGameplayTagQuery                     ContextTagsQuery;                                  // 0xE8(0x48)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	class FText                                  Description;                                       // 0x130(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	class FText                                  HudShortDescription;                               // 0x148(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UTexture2D>             HudIcon;                                           // 0x160(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortMinigameStatFilter");
		return Clss;
	}

	bool Matches(enum class EFortQuestObjectiveStatEvent InStatEvent, class UObject* InTargetObject, class AFortPlayerController* InPlayerController, struct FGameplayTagContainer& InTargetTags, struct FGameplayTagContainer& InSourceTags, struct FGameplayTagContainer& InContextTags);
	class FText FormatStat(int32 InCount);
	int32 Compare(int32 FirstScore, int32 SecondScore);
};

// 0x18 (0x110 - 0xF8)
// Class FortniteGame.FortMinigameVolumeComponent
class UFortMinigameVolumeComponent : public UActorComponent
{
public:
	class AFortMinigameSettingsBuilding*         CurrentMinigameSettingsMachine;                    // 0xF8(0x8)(Edit, BlueprintVisible, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class AFortMinigame>             MinigameClass;                                     // 0x100(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AFortMinigame*                         CurrentMinigame;                                   // 0x108(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortMinigameVolumeComponent");
		return Clss;
	}

	void OnClientExitVolume(class APlayerState* InPlayerState, class AFortVolume* InVolume);
	void OnClientEnterVolume(class APlayerState* InPlayerState, class AFortVolume* InVolume);
};

// 0x20 (0x118 - 0xF8)
// Class FortniteGame.FortVisibilityComponent
class UFortVisibilityComponent : public UActorComponent
{
public:
	uint8                                        bRegisterWithVisibilityManager : 1;                // Mask : 0x1 0xF8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bObserver : 1;                                     // Mask : 0x2 0xF8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bDistanceCheck2D : 1;                              // Mask : 0x4 0xF8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bCheckFacing : 1;                                  // Mask : 0x8 0xF8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bCheckLOS : 1;                                     // Mask : 0x10 0xF8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bRevealWithMap : 1;                                // Mask : 0x20 0xF8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1DFA[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	enum class EFortVisibilityBehavior           VisibilityBehavior;                                // 0xFC(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1DFB[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	UMulticastDelegateProperty_                  OnVisibilityChangedEvent;                          // 0x100(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	float                                        Radius;                                            // 0x110(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1DFC[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortVisibilityComponent");
		return Clss;
	}

};

// 0xB8 (0x1D0 - 0x118)
// Class FortniteGame.FortMiniMapComponent
class UFortMiniMapComponent : public UFortVisibilityComponent
{
public:
	struct FFortMiniMapData                      MiniMapData;                                       // 0x118(0x80)(Edit, BlueprintVisible, BlueprintReadOnly, Net, SaveGame, RepNotify, NoDestructor, Protected, NativeAccessSpecifierProtected)
	class UTexture2D*                            LocalMinimapIconOverride;                          // 0x198(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class UFortMiniMapIndicator>  MiniMapIndicator;                                  // 0x1A0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1DFD[0x28];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortMiniMapComponent");
		return Clss;
	}

	void SetupMiniMapComponent(class UTexture2D* MiniMapIcon, const struct FLinearColor& IconColor, const struct FLinearColor& PulseColor, float ColorPulsesPerSecond, float SizePulsesPerSecond);
	void SetMinimapViewableDistance(float ViewDistance);
	void SetMiniMapLocationOffset(struct FVector& LocationOffset);
	void SetMiniMapIndicatorIsVisibleOnMiniMap(bool bVisibleOnMiniMap);
	void SetMiniMapIndicatorIsVisible(bool bVisible);
	void SetMiniMapIconSizePulsesPerSecond(float SizePulsesPerSecond);
	void SetMiniMapIconScale(struct FVector2D& IconScale);
	void SetMiniMapIconPulseColor(const struct FLinearColor& PulseColor);
	void SetMiniMapIconColorPulsesPerSecond(float ColorPulsesPerSecond);
	void SetMiniMapIconColor(const struct FLinearColor& InColor);
	void SetMiniMapIcon(class UTexture2D* MiniMapIcon);
	void OverrideLocalMiniMapIndicatorIsVisible(bool bVisible);
	void OverrideLocalMiniMapIcon(class UTexture2D* MiniMapIcon);
	void OnRep_MiniMapData();
};

// 0x3E0 (0x4E8 - 0x108)
// Class FortniteGame.FortMiniMapTeamIndicators
class UFortMiniMapTeamIndicators : public UFortMiniMapIndicator
{
public:
	class AFortPlayerController*                 PlayerController;                                  // 0x108(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bSpectating;                                       // 0x110(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1DFE[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AFortPlayerControllerSpectating*       SpectatorPC;                                       // 0x118(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        PlatformScale;                                     // 0x120(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1DFF[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FSlateBrush                           SquadPlayerBrush;                                  // 0x128(0x88)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FSlateBrush                           TeamPlayerBrush;                                   // 0x1B0(0x88)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FSlateBrush                           EnemyPlayerBrush;                                  // 0x238(0x88)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FSlateBrush                           SpectatedPlayerBrush;                              // 0x2C0(0x88)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FSlateBrush                           MiniMapIconBrushDBNO;                              // 0x348(0x88)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FLinearColor                          MinimapIconColorSelf;                              // 0x3D0(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FLinearColor                          MinimapIconColorTeammate;                          // 0x3E0(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FLinearColor                          MinimapIconColorEnemy;                             // 0x3F0(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FLinearColor>                  MinimapIconColorEnemy_MultiTeam;                   // 0x400(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FSlateBrush                           PlayerNameBackgroundBrush;                         // 0x410(0x88)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FSlateFontInfo                        PlayerNameFontInfo;                                // 0x498(0x50)(Edit, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortMiniMapTeamIndicators");
		return Clss;
	}

};

// 0x38 (0x368 - 0x330)
// Class FortniteGame.FortMissionState
class AFortMissionState : public AActor
{
public:
	uint8                                        Pad_1E00[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	UMulticastDelegateProperty_                  OnUpdateUI;                                        // 0x338(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnMissionUIEvent;                                  // 0x348(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	bool                                         bAlreadySetTimerOnce;                              // 0x358(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bAlreadyCalledOnAllPlayersLoadedIn;                // 0x359(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1E01[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        TimerForOnAllPlayersLoadedIn;                      // 0x35C(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1E02[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortMissionState");
		return Clss;
	}

	void UpdateUI();
	void SetTimerForOnAllPlayersLoadedIn(float Timer);
	void SendMissionUIEvent(struct FGameplayTagContainer& EventTags);
	void OnWorldReady();
	void OnMatchStarted();
	void OnAllPlayersLoadedInWrapper();
	void OnAllPlayersLoadedIn();
};

// 0x378 (0x6E0 - 0x368)
// Class FortniteGame.FortMission
class AFortMission : public AFortMissionState
{
public:
	uint8                                        Pad_1E1E[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UFortMissionInfo*                      MissionInfo;                                       // 0x378(0x8)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UClass*>                        MissionEnemyClasses;                               // 0x380(0x10)(Net, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TSubclassOf<class UFortBotMissionLogic>      BotLogicClass;                                     // 0x390(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFortBotMissionLogic*                  BotLogic;                                          // 0x398(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<TSoftObjectPtr<class UFortItemDefinition>> MissionPreloadAssets;                              // 0x3A0(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	class UFortMissionGenerator*                 MissionGenerator;                                  // 0x3B0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EMissionGenerationCategory        MissionCategory;                                   // 0x3B8(0x1)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1E1F[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        UIIndex;                                           // 0x3BC(0x4)(Net, ZeroConstructor, SaveGame, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FUniqueNetIdRepl                      QuestOwnerAccount;                                 // 0x3C0(0x28)(Net, SaveGame, RepNotify, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FFortMissionEventName>         MissionEventNames;                                 // 0x3E8(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, AssetRegistrySearchable, AdvancedDisplay, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnObjectivesUpdated;                               // 0x3F8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnMissionInfoSet;                                  // 0x408(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TArray<struct FFortMissionPlacementActorPreferredTagInfo> PlacementActorPreferredTagData;                    // 0x418(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	bool                                         bLoadedFromRecord;                                 // 0x428(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bFiredParTimeEvent;                                // 0x429(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1E20[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        MissionActivationTime;                             // 0x42C(0x4)(Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FFortMissionFocusDisplayData          CurrentFocusData;                                  // 0x430(0x20)(Net, Transient, RepNotify, Protected, NativeAccessSpecifierProtected)
	bool                                         bSilentDestroyNextFrame;                           // 0x450(0x1)(Net, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1E21[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class AFortObjectiveBase*>            ActiveObjectives;                                  // 0x458(0x10)(Net, ZeroConstructor, Transient, RepNotify, Protected, NativeAccessSpecifierProtected)
	TArray<struct FUniqueNetIdRepl>              ParticipatingAccounts;                             // 0x468(0x10)(Net, ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	TArray<struct FUniqueNetIdRepl>              ParticipatingButDisconnectedAccounts;              // 0x478(0x10)(Net, ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	enum class EFortMissionStatus                MissionStatus;                                     // 0x488(0x1)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, SaveGame, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1E22[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGameplayTagContainer                 MissionCompletionTags;                             // 0x490(0x20)(BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	bool                                         bIsMissionVisible;                                 // 0x4B0(0x1)(Net, ZeroConstructor, SaveGame, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EFortMissionAudibility            MissionAudibility;                                 // 0x4B1(0x1)(Net, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1E23[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        CurrentObjectiveBlockIndex;                        // 0x4B4(0x4)(ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bIsMissionVisibleOverride;                         // 0x4B8(0x1)(ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1E24[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGuid                                 MissionGuid;                                       // 0x4BC(0x10)(Net, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        StartingDay;                                       // 0x4CC(0x4)(Net, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFortMissionTimerComponent*            TimerComponent;                                    // 0x4D0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFortMissionTimerComponent*            TimerElapsedComponent;                             // 0x4D8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bObjectiveTimerExpireShouldFailObjectives;         // 0x4E0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bMissionTimerExpireShouldFailMission;              // 0x4E1(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1E25[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bNeedsEnemyKilledEventForAllPawns;                 // 0x4E3(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        ChosenRewardIdx;                                   // 0x4E4(0x4)(Net, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FFortBadgeCountArray                  PotentialBadgesArray;                              // 0x4E8(0xC0)(Net, Transient, RepNotify, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_1E26[0xB8];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FFortGeneratedDifficultyOptions       GeneratedMissionOptions;                           // 0x660(0x40)(Protected, NativeAccessSpecifierProtected)
	struct FFortMissionInstancedConfigData       ConfigData;                                        // 0x6A0(0x10)(Transient, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1E27[0x30];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortMission");
		return Clss;
	}

	void StopMissionAIEncounter(class UFortAIEncounterInfo* EncounterToStop);
	void StopEncounterSequence(class UFortAIEncounterSequence* SequenceToStop);
	class UFortAIEncounterInfo* StartMissionAIEncounterFromGeneratedProfile(int32 GeneratedEncounterProfileIndex, TArray<class AActor*>& TargetActors, class UFortAIAssignmentSettings* AssignmentSettings, const struct FEncounterEnvironmentQueryInfo& EnvironmentQueryInfo, class AActor* QueryActor, const struct FGameplayTagContainer& InjectedTags, const struct FFortEncounterSettings& EncounterSettings, int32 ActivationDelay, bool bUseAssignments);
	class UFortAIEncounterInfo* StartMissionAIEncounter(TSubclassOf<class UFortAIEncounterInfo> EncounterTemplate, TArray<class AActor*>& TargetActors, class UFortAIAssignmentSettings* AssignmentSettings, const struct FEncounterEnvironmentQueryInfo& EnvironmentQueryInfo, class AActor* QueryActor, const struct FGameplayTagContainer& InjectedTags, const struct FFortEncounterSettings& EncounterSettings, int32 ActivationDelay);
	TArray<class AActor*> SpawnAtPlacementActorsAsArray(class AFortMission* Mission, bool* bSucceeded);
	void SetUiVisibility(bool bInIsMissionVisible);
	void SetToSilentDestroy();
	void SetTimerElapsedComponent(class UFortMissionTimerComponent* InTimerElapsedComponent);
	void SetTimerComponent(class UFortMissionTimerComponent* InTimerComponent);
	void SendBotLogicMessage(const class FString& EventName);
	bool RemoveParticipantAccount(struct FUniqueNetIdRepl* AbandoningPlayerId);
	void RemoveGoalsFromEncounterAssignment(const struct FFortAIAssignmentIdentifier& AssignmentIdentifier, class UFortAIEncounterInfo*& Encounter, TArray<struct FFortAIGoalInfo>& GoalInfos);
	void RemoveGoalFromEncounterAssignment(const struct FFortAIAssignmentIdentifier& AssignmentIdentifier, class UFortAIEncounterInfo*& Encounter, struct FFortAIGoalInfo& GoalInfo);
	void RecordResourceActorSpawn(class AActor* SpawnedActor);
	void ProvideAllPotentialBadges(TArray<struct FGameplayTag>& BadgeTags);
	void OnWaveCompleted(int32 Tier, int32 Wave, enum class EFortCompletionResult Result);
	void OnRep_UIIndex();
	void OnRep_QuestOwnerAccount();
	void OnRep_PotentialBadgesArray();
	void OnRep_MissionStatus();
	void OnRep_MissionInfo();
	void OnRep_CurrentFocusDisplayData();
	void OnRep_bIsMissionVisible();
	void OnRep_ActiveObjectives();
	void MissionTimerVisibilityOverrideSet();
	void MissionTimerSet();
	bool IsPlayerParticipating(class AFortPlayerController* PlayerController);
	void InitializeModifiersRRV(int32 Seed);
	bool InitializeActorsForMissionMatchingItemIdentifyingQuery(class AFortMission* Mission, struct FGameplayTagQuery& TagQuery, TArray<class AActor*>* OutActorsInitialized);
	bool InitializeActorsForMission(class AFortMission* Mission, TArray<class AActor*>* OutActorsInitialized);
	bool HasMissionPar();
	void HandleEnemyKilled(class AFortPlayerController* KilledBy, class AFortPawn* KilledPawn, struct FGameplayTagContainer& SourceTags);
	void GrantRewardsByTag(const struct FGameplayTag& RewardTag, enum class EFortRewardType RewardType);
	void GetTieredModifierSet(class FName TieredModifierSetName, TArray<struct FTieredModifierSetData>* OutModifierSetData);
	bool GetSpawnLocationsMatchingQuery(struct FGameplayTagQuery& TagQuery, TArray<struct FVector>* SpawnLocations);
	bool GetSpawnLocationActorsMatchingQuery(struct FGameplayTagQuery& TagQuery, TArray<class AActor*>* SpawnLocationActors);
	void GetRewardItemsByTag(const struct FGameplayTag& RewardTag, TArray<class UFortWorldItemDefinition*>* OutRewardItems);
	int32 GetPawnDamageLootTier(class AFortPlayerController* PlayerController);
	TArray<class AFortPlayerController*> GetParticipatingMissionControllers();
	enum class EFortObjectiveStatus GetObjectiveStatusByHandle(struct FGameplayTagContainer& ObjectiveHandle);
	TArray<struct FGameplayTagContainer> GetObjectiveHandlesWithTag(const struct FGameplayTag& ObjectiveTag, int32 MaxNumberOfObjectives);
	class AFortObjectiveBase* GetObjectiveByHandle(struct FGameplayTagContainer& ObjectiveHandle);
	class FText GetMissionName();
	struct FGuid GetMissionGuid();
	class FText GetMissionCompletionResultText(enum class EFortCompletionResult Result);
	float GetExpectedCompletionTime();
	int32 GetDaysRemainingBeforeOverPar();
	float GetCurrentFocusPercentage();
	class FText GetCurrentFocusDisplayText();
	int32 GetCurrentBluGloRewards();
	class UFortMissionConfigData* GetConfigData(const struct FGameplayTag& InBucketTag);
	int32 GetBuildingDamageLootTier(class AFortPlayerController* PlayerController);
	TArray<class AFortObjectiveBase*> GetAllObjectives();
	bool GetAdditionalMissionSuccessBadges(TArray<class UFortWorldItemDefinition*>* SuccessItems);
	int32 GetAdditionalMissionCompletionMissionPoints(enum class EFortMissionStatus CompletionStatus);
	bool GetActorsSpawnedMatchingQuery(struct FGameplayTagQuery& TagQuery, TArray<class AActor*>* SpawnedActors);
	void FocusThisMission(class FText FocusDisplayText, float FocusPercentage);
	void FindGoalLocationsForEncounterAssignment(struct FFortAIAssignmentIdentifier& AssignmentIdentifier, class UFortAIEncounterInfo*& Encounter, TArray<struct FVector>* OutGoalLocations);
	class UFortAIEncounterSequence* CreateEncounterSequenceByIndex(int32 EncounterSequenceIndex);
	class UFortAIEncounterSequence* CreateEncounterSequence(struct FGameplayTagContainer& SequenceTags);
	enum class EAssignmentCreationResult CreateEncounterAssignment(struct FGameplayTagContainer& AssignmentTags, class UFortAIEncounterInfo*& Encounter, class UFortAIAssignmentSettings* AssignmentSettings, TSubclassOf<class UFortAIGoalProvider> GoalProvider, struct FFortAIAssignmentIdentifier* AssignmentIdentifier);
	struct FFortMissionWeightedReward ChooseRandomReward();
	void BlueprintPostMissionLoad();
	void BlueprintOnStartPlaying();
	void BlueprintOnMissionEnd(enum class EFortMissionStatus Status);
	void BlueprintOnActivated();
	void BlueprintCustomHandleMissionEvent(const struct FGuid& InMissionGuid, const struct FGameplayTagContainer& ObjectiveHandle, class UFortMissionEventParams* Params, bool DO_NOT_USE_THIS_OR_VARIABLES_BELOW, class UObject* EventFocus, class UDataAsset* EventContent, class AActor* EventInstigator, int32 GenericInt, float GenericFloat, class FText& GenericText, const struct FGameplayTagContainer& GameplayTags, struct FFortMissionEvent& MissionEvent);
	bool BlueprintCanPlayerParticipate(class AFortPlayerController* PlayerController);
	void AttemptMissionSave(const class FString& OptionalSaveName);
	void ApplyTieredModifierSet(TArray<struct FTieredModifierSetData>& ModifierSetData, int32 Tier, int32 WaveNum, bool bDeferTemporaryModifiers, TArray<struct FActiveGameplayModifierHandle>* OutAppliedModifiers);
	bool AddParticipantAccount(class AFortPlayerController* PlayerController);
	void AddGoalToEncounterAssignment(const struct FFortAIAssignmentIdentifier& AssignmentIdentifier, class UFortAIEncounterInfo*& Encounter, struct FFortAIGoalInfo& GoalInfo);
	void AddGoalToAssignment(class UFortAIAssignment* Assignment, struct FFortAIGoalInfo& GoalInfo);
	void AddGoalsToEncounterAssignment(const struct FFortAIAssignmentIdentifier& AssignmentIdentifier, class UFortAIEncounterInfo*& Encounter, TArray<struct FFortAIGoalInfo>& GoalInfos);
	void AddGoalsToAssignment(class UFortAIAssignment* Assignment, TArray<struct FFortAIGoalInfo>& GoalInfos);
	void AddCompletionTags(const struct FGameplayTagContainer& NewCompletionTagContainer);
	void AddCompletionTag(const struct FGameplayTag& NewCompletionTag);
};

// 0x90 (0x770 - 0x6E0)
// Class FortniteGame.FortMission_ActiveThreat
class AFortMission_ActiveThreat : public AFortMission
{
public:
	bool                                         bStartBasedOnAthenaGamePhases;                     // 0x6E0(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	enum class EAthenaGamePhase                  StartingGamePhase;                                 // 0x6E1(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1E28[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        StartingDelay;                                     // 0x6E4(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        StartingActiveThreatEncounterIndex;                // 0x6E8(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1E29[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FFortEncounterSettings                EncounterSettings;                                 // 0x6F0(0x68)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	TArray<struct FFortActiveThreatPlayerData>   PlayerData;                                        // 0x758(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	float                                        SyncedEncounterStartingTime;                       // 0x768(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        CurrentActiveThreatEncounterIndex;                 // 0x76C(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortMission_ActiveThreat");
		return Clss;
	}

	void HandleAthenaGamePhaseChanged(enum class EAthenaGamePhase GamePhase);
	void HandleAISpawned(class UFortAIEncounterInfo* Encounter, class AFortAIPawn* SpawnedEnemy);
};

// 0x48 (0x728 - 0x6E0)
// Class FortniteGame.FortMission_HarvestingBase
class AFortMission_HarvestingBase : public AFortMission
{
public:
	TArray<TSubclassOf<class ABuildingActor>>    BuildingActorClassesValidForHarvestDrop;           // 0x6E0(0x10)(Edit, BlueprintVisible, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<TSubclassOf<class ABuildingDeco>>     DecoActorClassesValidForHarvestDrop;               // 0x6F0(0x10)(Edit, BlueprintVisible, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	float                                        ItemDropChancePercent;                             // 0x700(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        ItemMinDropQuantity;                               // 0x704(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        ItemMaxDropQuantity;                               // 0x708(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinDurationBetweenDrops;                           // 0x70C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaxFailedDropsInARow;                              // 0x710(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnableConversations;                              // 0x714(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1E2A[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FFortReactiveQuestDialogue>    Conversations;                                     // 0x718(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortMission_HarvestingBase");
		return Clss;
	}

};

// 0x168 (0x848 - 0x6E0)
// Class FortniteGame.FortMission_RiftSpawners
class AFortMission_RiftSpawners : public AFortMission
{
public:
	bool                                         bStartBasedOnAthenaGamePhases;                     // 0x6E0(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	enum class EAthenaGamePhase                  StartingGamePhase;                                 // 0x6E1(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1E2E[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        StartingDelay;                                     // 0x6E4(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bUseAthenaSafeZonePhases;                          // 0x6E8(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bSynchronizeEncounterStartTimes;                   // 0x6E9(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1E2F[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        MinEncounterIndex;                                 // 0x6EC(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        MaxEncounterIndex;                                 // 0x6F0(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1E30[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FFortEncounterSettings                EncounterSettings;                                 // 0x6F8(0x68)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	bool                                         bAllowRiftIntensification;                         // 0x760(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1E31[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FScalableFloat                        MinDamageTriggerPercentage;                        // 0x768(0x20)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FScalableFloat                        MaxDamageTriggerPercentage;                        // 0x788(0x20)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FGameplayTagQuery                     RequiredRiftTagsQuery;                             // 0x7A8(0x48)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	class FString                                RequiredEventFlag;                                 // 0x7F0(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class FName>                          AssociatedSupplyDropIDs;                           // 0x800(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	float                                        SpawnerShutdownCheckInterval;                      // 0x810(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        BurstFallbackTime;                                 // 0x814(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        CalendarRecheckInterval;                           // 0x818(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1E32[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FFortRiftSpawnerData>          ActiveRiftSpawnerData;                             // 0x820(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	int32                                        CurrentEncounterIndex;                             // 0x830(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bRiftSpawningInProgress;                           // 0x834(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1E33[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        SyncedEncounterStartTime;                          // 0x838(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bCalendarAllowsSpawning;                           // 0x83C(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1E34[0xB];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortMission_RiftSpawners");
		return Clss;
	}

	void SetCalendarAllowsActive(bool bInCanBeActive);
	void OnActiveEventsChanged(TArray<class FString>& ActiveEventFlags);
	void HandleRiftDamaged(class AActor* DamagedActor, float Damage, class AController* InstigatedBy, class AActor* DamageCauser, const struct FVector& HitLocation, class UPrimitiveComponent* FHitComponent, class FName BoneName, const struct FVector& Momentum);
	void HandleRampStarted(class UFortAIEncounterInfo* Encounter);
	void HandleEncounterAllBurstEnemiesSpawned(class UFortAIEncounterInfo* Encounter);
	void HandleAthenaSafeZonePhaseChanged();
	void HandleAthenaGamePhaseChanged(enum class EAthenaGamePhase GamePhase);
	void HandleAISpawned(class UFortAIEncounterInfo* Encounter, class AFortAIPawn* SpawnedEnemy);
};

// 0x0 (0x28 - 0x28)
// Class FortniteGame.FortMissionConfigData
class UFortMissionConfigData : public UObject
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortMissionConfigData");
		return Clss;
	}

};

// 0x50 (0x80 - 0x30)
// Class FortniteGame.FortMissionCSVEventMap
class UFortMissionCSVEventMap : public UPrimaryDataAsset
{
public:
	TMap<class FName, class FString>             MissionMappings;                                   // 0x30(0x50)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortMissionCSVEventMap");
		return Clss;
	}

};

// 0xD8 (0x108 - 0x30)
// Class FortniteGame.FortMissionGenerationData
class UFortMissionGenerationData : public UDataAsset
{
public:
	TArray<class UFortMissionGenerator*>         PrimaryMissionGenerators;                          // 0x30(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	float                                        PrimaryMissionMinPowerPointsUsagePercentage;       // 0x40(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1E35[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FCurveTableRowHandle                  SecondaryMissionPowerPointsBudgetMultiplier;       // 0x48(0x10)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FCurveTableRowHandle                  MinSecondaryMissionPowerPointsMultiplier;          // 0x58(0x10)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FCurveTableRowHandle                  MaxSecondaryMissionPowerPointsMultiplier;          // 0x68(0x10)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FCurveTableRowHandle                  MinSecondaryMissions;                              // 0x78(0x10)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FCurveTableRowHandle                  MaxSecondaryMissions;                              // 0x88(0x10)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FCurveTableRowHandle                  TertiaryMissionPowerPointsBudgetMultiplier;        // 0x98(0x10)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FCurveTableRowHandle                  MinTertiaryMissionPowerPointsMultiplier;           // 0xA8(0x10)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FCurveTableRowHandle                  MaxTertiaryMissionPowerPointsMultiplier;           // 0xB8(0x10)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FCurveTableRowHandle                  PowerPointsCurve;                                  // 0xC8(0x10)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FFortDifficultyOptionBudget>   EncounterDifficultyOptionBudgets;                  // 0xD8(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	float                                        EncounterMinDifficultyOptionPointsUsagePercentage; // 0xE8(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1E36[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FFortDifficultyOptionBudget>   MissionDifficultyOptionBudgets;                    // 0xF0(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	float                                        MissionMinDifficultyOptionPointsUsagePercentage;   // 0x100(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1E37[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortMissionGenerationData");
		return Clss;
	}

};

// 0x58 (0x88 - 0x30)
// Class FortniteGame.FortMissionGenerationList
class UFortMissionGenerationList : public UPrimaryDataAsset
{
public:
	struct FGameplayTagQuery                     GameplayContextRequirements;                       // 0x30(0x48)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TArray<struct FPerDifficultyMissionGenerationInfo> PerDifficultyMissionGenerationInfos;               // 0x78(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortMissionGenerationList");
		return Clss;
	}

};

// 0x8 (0x338 - 0x330)
// Class FortniteGame.FortMissionGenerationManager
class AFortMissionGenerationManager : public AActor
{
public:
	enum class EFortCheatMissionGenType          CheatMissionGenType;                               // 0x330(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1E38[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortMissionGenerationManager");
		return Clss;
	}

};

// 0x690 (0x6C0 - 0x30)
// Class FortniteGame.FortMissionGenerator
class UFortMissionGenerator : public UPrimaryDataAsset
{
public:
	class FText                                  MissionName;                                       // 0x30(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	class FText                                  MissionDescription;                                // 0x48(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	struct FSlateBrush                           MissionIcon;                                       // 0x60(0x88)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	struct FFortMultiSizeBrush                   MissionIcons;                                      // 0xE8(0x330)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	struct FZoneLoadingScreenConfig              LoadingScreenConfig;                               // 0x418(0x110)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FFortAthenaLTMConfig                  AthenaLTMConfig;                                   // 0x528(0x58)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UFortMissionInfo>       PrimaryMissionInfo;                                // 0x580(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bUseNewMissionGeneration;                          // 0x5A8(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1E39[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGameplayTagQuery                     OptionalRequirementsForAllOtherMissions;           // 0x5B0(0x48)(Edit, Protected, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UFortMissionGenerationList> MissionGenerationList;                             // 0x5F8(0x28)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MissionGenerationChance;                           // 0x620(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1E3A[0xC];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FFortPossibleMission>          SecondaryMissionList;                              // 0x630(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<struct FFortPossibleMission>          TertiaryMissionList;                               // 0x640(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<struct FFortPossibleMission>          SurvivorMissionList;                               // 0x650(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	bool                                         bUseOverridePlayerSpawnPadPlacementData;           // 0x660(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1E3B[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FFortPlayerSpawnPadPlacementData      OverridePlayerSpawnPadPlacementData;               // 0x668(0x58)(Edit, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortMissionGenerator");
		return Clss;
	}

};

// 0x748 (0x778 - 0x30)
// Class FortniteGame.FortMissionInfo
class UFortMissionInfo : public UPrimaryDataAsset
{
public:
	TSoftClassPtr<class AFortMission>            MissionRef;                                        // 0x30(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	enum class EFortMissionType                  MissionType;                                       // 0x58(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1E3C[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGameplayTagContainer                 MissionTags;                                       // 0x60(0x20)(Edit, DisableEditOnInstance, AssetRegistrySearchable, NativeAccessSpecifierPublic)
	float                                        TimeOfDaySpeed;                                    // 0x80(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ZoneEndDelay;                                      // 0x84(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ZoneEndDelayOverrideForFailure;                    // 0x88(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1E3D[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UFortBadgeItemDefinition*              MissionRewardBadge;                                // 0x90(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  MissionRewardItemsLootTierGroup;                   // 0x98(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaxRewardLootTierPoints;                           // 0xA0(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        ParTime;                                           // 0xA4(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFortBadgeItemDefinition*              UnderParBadge;                                     // 0xA8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaxMissionPoints;                                  // 0xB0(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bVictoryTileRequired;                              // 0xB4(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1E3E[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  MissionDescription;                                // 0xB8(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FFortMultiSizeBrush                   MissionIcons;                                      // 0xD0(0x330)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class UMediaSource*                          EndOfMissionMediaSource;                           // 0x400(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bSkipEndOfMissionVideo;                            // 0x408(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1E3F[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        DaysToLive;                                        // 0x40C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FFortObjectiveBlock>           ObjectiveBlocks;                                   // 0x410(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	bool                                         bShowMinimapIconsOnlyIfFocused;                    // 0x420(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1E40[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        ExpectedCompletionTime;                            // 0x424(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MissionEncounterTime;                              // 0x428(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1E41[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FFortMissionPlacementItems            MissionPlacementInfo;                              // 0x430(0x40)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	float                                        MinDistanceToOtherMissions;                        // 0x470(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinDistanceToAllowSpawnPad;                        // 0x474(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFortPlacementActorFinderInfo         PlacementActorInfo;                                // 0x478(0x18)(Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)
	bool                                         bStartPlayingOnLoad;                               // 0x490(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bRequiresActivation;                               // 0x491(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1E42[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        BluGloActivationRequirement;                       // 0x494(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bAllowDifficultyIncrease;                          // 0x498(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1E43[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  RewardsTitleText;                                  // 0x4A0(0x18)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FText                                  RewardsDescriptionText;                            // 0x4B8(0x18)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FText                                  NonParticipationRewardsDescriptionText;            // 0x4D0(0x18)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FFortMissionPopupWidgetData           PopupWidgetData;                                   // 0x4E8(0x1D0)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class UFortMissionWeightedRewards*           WeightedRewards;                                   // 0x6B8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsGroupContent;                                   // 0x6C0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1E44[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  MissionName;                                       // 0x6C8(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TArray<struct FFortEncounterProfile>         EncounterProfiles;                                 // 0x6E0(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	TArray<struct FFortEncounterSequenceSettings> EncounterSequences;                                // 0x6F0(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UFortDifficultyOptionSetMission> MissionOptions;                                    // 0x700(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTagContainer                 MissionDifficultyOptionTags;                       // 0x728(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	TArray<struct FFortMissionTaggedRewards>     TaggedRewards;                                     // 0x748(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TArray<struct FMissionPerDifficultyProperties> PerDifficultyProperties;                           // 0x758(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FFortMissionConfigDataParams          ConfigParams;                                      // 0x768(0x10)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortMissionInfo");
		return Clss;
	}

};

// 0x28 (0xB0 - 0x88)
// Class FortniteGame.FortMissionInfoIndicator
class UFortMissionInfoIndicator : public UFortSlateHUDIndicator
{
public:
	uint8                                        Pad_1E45[0x28];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortMissionInfoIndicator");
		return Clss;
	}

};

// 0x0 (0x28 - 0x28)
// Class FortniteGame.FortMissionInterface
class UFortMissionInterface : public UInterface
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortMissionInterface");
		return Clss;
	}

};

// 0x0 (0x870 - 0x870)
// Class FortniteGame.FortMissionItemDefinition
class UFortMissionItemDefinition : public UFortWorldItemDefinition
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortMissionItemDefinition");
		return Clss;
	}

};

// 0x0 (0x28 - 0x28)
// Class FortniteGame.FortMissionLibrary
class UFortMissionLibrary : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortMissionLibrary");
		return Clss;
	}

	bool UnregisterForMissionEvents(class AActor* ActorToUnregister, const struct FGuid& MissionGuid);
	void TeleportPlayerPawn(class AFortPlayerPawn* PlayerPawn, const struct FVector& DestLocation, const struct FRotator& DestRotation, bool bIgnoreCollision);
	void TeleportPawnNearLocation(class AFortPawn* Pawn, const struct FVector& DestLocation);
	void StopAIEncounterAgainstActor(class UObject* WorldContextObject, class AActor* TargetActor);
	void StopAIEncounter(class UObject* WorldContextObject, class UFortAIEncounterInfo* ActiveEncounter, enum class EFortObjectiveStatus ObjectiveStatus);
	void StartPlayingMission(class UObject* WorldContextObject, struct FGuid& MissionGuid);
	class UFortAIEncounterInfo* StartAIEncounterWithEnvironmentQuery(class UObject* WorldContextObject, class FString* AssociatedMissionName, TSubclassOf<class UFortAIEncounterInfo> EncounterTemplate, class AActor* TargetActor, const struct FEncounterEnvironmentQueryInfo& EnvironmentQueryInfo, class AActor* QueryActor, const struct FGameplayTagContainer& InjectedTags, const struct FFortEncounterSettings& EncounterSettings, int32 ActivationDelay);
	class UFortAIEncounterInfo* StartAIEncounter(class UObject* WorldContextObject, class FString* AssociatedMissionName, TSubclassOf<class UFortAIEncounterInfo> EncounterTemplate, class AActor* TargetActor, const struct FGameplayTagContainer& InjectedTags, const struct FFortEncounterSettings& EncounterSettings, int32 ActivationDelay);
	bool SpawnPlacementMissionActor(class UObject* WorldContextObject, TSubclassOf<class AActor>& ActorToSpawn, struct FVector& SpawnLocation, struct FRotator& SpawnRotation, class AActor* PlacementLocationActor, class AActor** OutSpawnedActor);
	class AFortPickup* SpawnMissionItemPickupInWorld(class UObject* WorldContextObject, const struct FGuid& MissionGuid, class UFortWorldItemDefinition* ItemDefinition, int32 NumberToSpawn, const struct FVector& Position, const struct FVector& Direction, int32 OverrideMaxStackCount);
	class AFortPickup* SpawnMissionItemPickup(class UObject* WorldContextObject, const struct FGuid& MissionGuid, class UFortMissionItemDefinition* MissionItemDefinition, const struct FVector& StartPosition, class AFortPawn* TargetPawn);
	class ABuildingActor* SpawnBuildingActorAtTransform(class UObject* WorldContextObject, const struct FGuid& MissionGuid, TSubclassOf<class ABuildingActor> BuildingClass, struct FTransform& Transform);
	TArray<class AActor*> SpawnAtPlacementActorsHelper(class UObject* WorldContextObject, class UClass* Entries, bool* bSucceeded);
	void SpawnAndCollectPlayerPickups(class UObject* WorldContextObject, class AFortPlayerController* PlayerController, const struct FVector& StartPosition, class FName LootTierGroup, int32 LootTier);
	bool ShouldUseAlternateAIDirectorBalance();
	void SetWorldSavingEnabled(class UObject* WorldContextObject, bool bEnabled);
	void SetOnlinePresenceDoNotDisturb(class UObject* WorldContextObject, bool bDoNotDisturb, class AFortPlayerController* SpecificPlayer);
	bool RegisterMissionInfoUIActor(class AActor* AttachmentActor, const struct FGuid& MissionGuid, const struct FVector& AttachementOffset, float MaxVisibleDistance);
	bool RegisterForMissionEvents(class AActor* ActorToRegister, const struct FGuid& MissionGuid);
	int32 PollActorsInVolume(class UObject* WorldContextObject, class UBoxComponent* VolumeBoxComponent, enum class EPollActorsInVolumeTypes PollBuildingTypes, TSubclassOf<class AActor> ActorClassToPoll);
	void PingMinimap(class UObject* WorldContextObject, const struct FVector& WorldLocation, const struct FLinearColor& PingColor, enum class EFortTeam RequiredTeam);
	int32 NumBluGloFromPlayerState(class AFortPlayerStateZone* PlayerState);
	int32 NumBluGloFromPlayerPawn(class AFortPlayerPawn* PlayerPawn);
	void LoadMission(class UObject* WorldContextObject, class UFortMissionInfo* MissionInfo);
	bool IsUsingNewMissionGeneration(class UObject* WorldContextObject);
	bool HasTags(struct FGameplayTagContainer& ContainerToCheck, struct FGameplayTagContainer& TagsToCheck, bool bRequireAll, bool bCountEmptyAsMatch);
	bool GiveMissionSchematicItemDirectlyToPlayer(class UObject* WorldContextObject, class AFortPlayerController* TargetPlayer, const struct FGuid& MissionGuid, class UFortSchematicItemDefinition* SchematicDefinition);
	void GiveMissionRewardsToPlayerAsPickups(class UObject* WorldContextObject, const struct FGuid& MissionGuid, class AFortPlayerController* PlayerController, const struct FVector& StartPosition, float Radius, class FName LootTierGroup, int32 LootTier);
	void GiveMissionRewardsToPlayer(class UObject* WorldContextObject, const struct FGuid& EventGuid, class AFortPlayerController* PlayerController, class FText TitleText, class FText DescriptionText, class FName LootTierGroup, int32 LootTier, float RewardDisplayTime);
	void GetTieredWaveSet(class FName TieredWaveCollectionName, int32 Tier, struct FTieredWaveSetCollectionData* WaveCollectionInfo, TArray<struct FTieredWaveSetData>* OutWaveData);
	void GetTieredWaveBaseWaveLength(class UObject* WorldContextObject, class FName BaseWaveLengthRowName, float OverrideDifficulty, float* OutBaseWaveLength);
	void GetTieredWaveBaseNumKills(class UObject* WorldContextObject, class FName BaseNumOfKillsRowName, float OverrideDifficulty, float* OutBaseNumKills);
	void GetTieredWaveBaseNumKillPoints(class UObject* WorldContextObject, class FName BaseNumOfKillPointsRowName, float OverrideDifficulty, float* OutBaseNumKillPoints);
	class AFortMission* GetPrimaryMission(class UObject* WorldContextObject);
	float GetMissionHUDTextLineHeightEstimate(class FText Text);
	class AFortMission* GetMissionFromGuid(class UObject* WorldContextObject, struct FGuid& MissionGuid);
	TArray<class AActor*> GetMissionActorsInVectorDirection(class UObject* WorldContextObject, TSubclassOf<class AActor> ActorSubclass, const struct FVector& StartLocation, const struct FVector& DirectionToLookForActors, float Angle, float MaxDistance);
	TArray<class AActor*> GetMissionActorsInEncounterDirection(class UObject* WorldContextObject, TSubclassOf<class AActor> ActorSubclass, const struct FVector& StartLocation, enum class EFortEncounterDirection DirectionToLookForActors, float Angle, float MaxDistance);
	class AFortBluGloManager* GetBluGloManager(class UObject* WorldContextObject);
	TArray<class AFortMission*> GetAllLoadedMissions(class UObject* WorldContextObject);
	class AFortPlacementActor* FindOriginatingPlacementActor(class ABuildingActor* BuildingActor);
	TArray<class ABuildingActor*> FindActorsWithTags(class UObject* WorldContextObject, struct FGameplayTagContainer& Tags);
	void ExecuteMissionEventEx(class UObject* WorldContextObject, const struct FFortMissionEventName& EventType, const struct FGuid& MissionGuid, const struct FGameplayTagContainer& ObjectiveHandle, class UFortMissionEventParams* Params, bool DO_NOT_USE_THIS_OR_VARIABLES_BELOW, class UObject* EventFocus, class UDataAsset* EventContent, class AActor* EventInstigator, int32 GenericInt, float GenericFloat, class FText GenericText, const struct FGameplayTagContainer& GameplayTags);
	void ExecuteMissionEvent(class UObject* WorldContextObject, class FName EventType, const struct FGuid& MissionGuid, const struct FGameplayTagContainer& ObjectiveHandle, class UFortMissionEventParams* Params, bool DO_NOT_USE_THIS_OR_VARIABLES_BELOW, class UObject* EventFocus, class UDataAsset* EventContent, class AActor* EventInstigator, int32 GenericInt, float GenericFloat, class FText GenericText, const struct FGameplayTagContainer& GameplayTags);
	struct FFortMissionEvent CreateMissionEvent(class UObject* WorldContextObject, class FName EventType, const struct FGuid& MissionGuid, const struct FGameplayTagContainer& ObjectiveHandle, class UFortMissionEventParams* Params, bool DO_NOT_USE_THIS_OR_VARIABLES_BELOW, class UObject* EventFocus, class UDataAsset* EventContent, class AActor* EventInstigator, int32 GenericInt, float GenericFloat, class FText GenericText, const struct FGameplayTagContainer& GameplayTags);
	void CreateDynamicBuildingDeconstructor(class UObject* WorldContextObject, const struct FVector& Origin, const struct FVector& BoxExtent, bool bIgnoreMissionActors, bool bShrinkAndDestroy);
	void AdjustWaveBasedGameDifficulty(class UObject* WorldContextObject, float FDifficultyAddMod);
	void AddCompletionTagToMission(class UObject* WorldContextObject, const struct FGuid& MissionGuid, const struct FGameplayTag& NewCompletionTag);
	void AddCompletionTagsToMission(class UObject* WorldContextObject, const struct FGuid& MissionGuid, const struct FGameplayTagContainer& NewCompletionTagContainer);
};

// 0x200 (0x530 - 0x330)
// Class FortniteGame.FortMissionManager
class AFortMissionManager : public AActor
{
public:
	TArray<struct FFortMissionEventName>         MissionEventNames;                                 // 0x330(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TSoftClassPtr<class UGameplayEffect>         PrimaryMissionGE;                                  // 0x340(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1E67[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AFortBluGloManager*                    BluGloManager;                                     // 0x370(0x8)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class AFortMission*>                  Missions;                                          // 0x378(0x10)(Net, ZeroConstructor, RepNotify, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_1E68[0x50];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FFortMissionUIActorHandle>     MissionUIActors;                                   // 0x3D8(0x10)(Net, ZeroConstructor, RepNotify, Protected, NativeAccessSpecifierProtected)
	class AFortMission*                          CurrentUIFocusedMission;                           // 0x3E8(0x8)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AFortMission*                          MissionClosestToPar;                               // 0x3F0(0x8)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	UMulticastDelegateProperty_                  OnMissionsUpdated;                                 // 0x3F8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_1E69[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FEarnedBadgeEntryArray                EarnedBadgesArray;                                 // 0x420(0xC0)(Net, Transient, RepNotify, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_1E6A[0x38];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	UMulticastDelegateProperty_                  OnShouldShowSecondaryMissionHeadersChanged;        // 0x518(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	bool                                         bDisplaySecondaryMissionHeaders;                   // 0x528(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1E6B[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortMissionManager");
		return Clss;
	}

	bool ShouldShowSecondaryMissionHeaders();
	void OnRep_MissionUIActors();
	void OnRep_Missions();
	void OnRep_EarnedBadgesArray();
	void OnRep_CurrentUIFocusedMission();
	bool GetSpawnLocationActorsThatHaveAddedTagsMatchingQuery(class UObject* WorldContextObject, struct FGameplayTagQuery& TagQuery, TArray<class AActor*>* SpawnLocationActors);
	bool GetSpawnLocationActorsMatchingEntryItemQuery(class UObject* WorldContextObject, struct FGameplayTagQuery& TagQuery, TArray<class AActor*>* SpawnLocationActors);
};

// 0x10 (0x38 - 0x28)
// Class FortniteGame.FortMissionOutpostConfigData
class UFortMissionOutpostConfigData : public UFortMissionConfigData
{
public:
	struct FDataTableRowHandle                   DifficultyData;                                    // 0x28(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortMissionOutpostConfigData");
		return Clss;
	}

};

// 0x8 (0x30 - 0x28)
// Class FortniteGame.FortMissionOutpostQuestConfigData
class UFortMissionOutpostQuestConfigData : public UFortMissionConfigData
{
public:
	struct FGameplayTag                          LegTag;                                            // 0x28(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortMissionOutpostQuestConfigData");
		return Clss;
	}

};

// 0x0 (0x28 - 0x28)
// Class FortniteGame.FortMissionPowerPointsInterface
class UFortMissionPowerPointsInterface : public UInterface
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortMissionPowerPointsInterface");
		return Clss;
	}

	float GetPowerPointsCost(float LerpValue);
	float GetMaxRangeLerpValue(float PointsAvailable, float PreviousLerpValue);
	float GetInitialRangeLerpValue(float PointsAvailable);
	float GetAvailabilityWeight(float DifficultyLevel);
};

// 0x18 (0x348 - 0x330)
// Class FortniteGame.FortMissionStormSafeZone
class AFortMissionStormSafeZone : public AActor
{
public:
	class UStaticMeshComponent*                  SafeZoneMesh;                                      // 0x330(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bScaleUniformly;                                   // 0x338(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1E6C[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        SafeZoneRadius;                                    // 0x33C(0x4)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1E6D[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortMissionStormSafeZone");
		return Clss;
	}

	void SetSafeZoneRadius(float InRadius);
	void OnRep_ZoneRadius();
	float GetSafeZoneRadius();
};

// 0x240 (0x570 - 0x330)
// Class FortniteGame.FortMissionStormShield
class AFortMissionStormShield : public AActor
{
public:
	class USceneComponent*                       Root;                                              // 0x330(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaticMeshComponent*                  ShieldRing;                                        // 0x338(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<TSubclassOf<class UGameplayEffect>>   SafeFromStormPlayerEffects;                        // 0x340(0x10)(Edit, BlueprintVisible, ZeroConstructor, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	TArray<TSubclassOf<class UGameplayEffect>>   InStormPlayerEffects;                              // 0x350(0x10)(Edit, BlueprintVisible, ZeroConstructor, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	TArray<TSubclassOf<class UGameplayEffect>>   SafeFromStormEnemyEffects;                         // 0x360(0x10)(Edit, BlueprintVisible, ZeroConstructor, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	TArray<TSubclassOf<class UGameplayEffect>>   InStormEnemyEffects;                               // 0x370(0x10)(Edit, BlueprintVisible, ZeroConstructor, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	float                                        MapWorldScale;                                     // 0x380(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        Radius;                                            // 0x384(0x4)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        GrowthRate;                                        // 0x388(0x4)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1E70[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        MoveRate;                                          // 0x390(0x4)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        TargetRadius;                                      // 0x394(0x4)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        StartingRadius;                                    // 0x398(0x4)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        InitialRadius;                                     // 0x39C(0x4)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               TargetLocation;                                    // 0x3A0(0xC)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               StartingLocation;                                  // 0x3AC(0xC)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SafeAreaStartRadiusChangeTime;                     // 0x3B8(0x4)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SafeAreaFinishRadiusChangeTime;                    // 0x3BC(0x4)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SafeAreaStartLocationChangeTime;                   // 0x3C0(0x4)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SafeAreaFinishLocationChangeTime;                  // 0x3C4(0x4)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        RadiusToWorldScaleConversion;                      // 0x3C8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1E71[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	UMulticastDelegateProperty_                  OnStormShieldReachedRadius;                        // 0x3D0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	UMulticastDelegateProperty_                  OnStormShieldReachedLocation;                      // 0x3E0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	TSubclassOf<class AFortMissionStormSafeZone> SafeAreaTemplate;                                  // 0x3F0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UEnvQuery*                             StormShieldQuery;                                  // 0x3F8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1E72[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	enum class EMissionStormShieldState          State;                                             // 0x408(0x1)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1E73[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UMaterialInterface*                    StormMiniMapMaterial;                              // 0x410(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInstanceDynamic*              StormMiniMapMaterialMID;                           // 0x418(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FSlateBrush                           StormMiniMapMaterialBrush;                         // 0x420(0x88)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	class UMaterialInterface*                    StormMainMapMaterial;                              // 0x4A8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInstanceDynamic*              StormMainMapMaterialMID;                           // 0x4B0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FSlateBrush                           StormMainMapMaterialBrush;                         // 0x4B8(0x88)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_1E74[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class AFortMissionStormSafeZone*>     SafeAreas;                                         // 0x548(0x10)(Net, ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<class UFortStormShieldComponent*>     StormShieldComponents;                             // 0x558(0x10)(ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1E75[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortMissionStormShield");
		return Clss;
	}

	class AFortMissionStormSafeZone* SpawnSafeAreaAtLocation(struct FVector& InLocation, float InRadius);
	void SetTargetRadiusSizeChangeOverGrowthRate(float InTargetRadius, float InGrowthRate, bool bUseGrowthRateDirectly);
	void SetTargetLocationToMoveTo(const struct FVector& InTargetLocation, float InMoveRate);
	void SetAbsoluteShieldRadius(float InRadius);
	bool RemoveAndDestroySafeArea(class AFortMissionStormSafeZone* AreaToRemove);
	void OnRep_Radius();
	void OnRep_InitialRadius();
	void InitializeRadiusValue(float InRadius);
	void GetSafeZones(TArray<class AFortMissionStormSafeZone*>* OutSafeZones);
};

// 0x88 (0x180 - 0xF8)
// Class FortniteGame.FortMissionTimerComponent
class UFortMissionTimerComponent : public UActorComponent
{
public:
	bool                                         bShowTimeElapsed;                                  // 0xF8(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bUpdateQuestsTimeElapsed;                          // 0xF9(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1E77[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	UMulticastDelegateProperty_                  OnMissionTimerComponentUpdated;                    // 0x100(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	TArray<struct FMissionTimeDisplayData>       DisplayData;                                       // 0x110(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FMissionTimerData                     TimerData;                                         // 0x120(0x28)(Net, RepNotify, NoDestructor, Protected, NativeAccessSpecifierProtected)
	class FText                                  TimerLabelText;                                    // 0x148(0x18)(Edit, Net, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	bool                                         bDisplayInTimeFormat;                              // 0x160(0x1)(Edit, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class ETimerOverrideSetting             TimerVisibilityOverrideSetting;                    // 0x161(0x1)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1E78[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        TimerVisibilityShowAtEndTime;                      // 0x164(0x4)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1E79[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortMissionTimerComponent");
		return Clss;
	}

	void UnpauseMissionTimer();
	void SetTimerVisibilityOverrideToShowAtEnd(float ShowTime);
	void SetTimerVisibilityOverrideSetting(enum class ETimerOverrideSetting NewVisibilitySetting);
	void SetTimerLabelText(class FText NewLabelText);
	void SetTimerDisplayFormat(bool bNewDisplayInTimeFormat);
	void SetMissionTimer(const class FString& FunctionName, float TimerLength, class AActor* CallbackActor);
	void SetMissionTimeElapsedTimer();
	void ResetMissionTimer();
	void PauseMissionTimer();
	void OnRep_TimerVisibilityOverride();
	void OnRep_TimerData();
	bool IsTimerVisible();
	bool IsMissionTimerSet();
	bool IsMissionTimerPaused();
	class FText GetTimeText();
	class FText GetTimerLabelText();
	float GetNormalizedTime();
	float GetMissionTimerTimeRemaining();
	float GetMissionTimerTimeElapsed();
	struct FMissionTimeDisplayData GetCorrectTimeDisplayData();
	void DummyTimer();
	void ClearMissionTimer();
};

// 0x0 (0x28 - 0x28)
// Class FortniteGame.FortMissionTimerInterface
class UFortMissionTimerInterface : public UInterface
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortMissionTimerInterface");
		return Clss;
	}

};

// 0x78 (0xA0 - 0x28)
// Class FortniteGame.FortUINotification
class UFortUINotification : public UObject
{
public:
	class FText                                  Title;                                             // 0x28(0x18)(BlueprintVisible, BlueprintReadOnly, ExposeOnSpawn, NativeAccessSpecifierPublic)
	class FText                                  Description;                                       // 0x40(0x18)(BlueprintVisible, BlueprintReadOnly, ExposeOnSpawn, NativeAccessSpecifierPublic)
	bool                                         bHasAction;                                        // 0x58(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortNotificationType             NotificationType;                                  // 0x59(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1E7A[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FUniqueNetIdRepl                      IdToRepresent;                                     // 0x60(0x28)(BlueprintVisible, BlueprintReadOnly, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnNotificationCleared;                             // 0x88(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_1E7B[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortUINotification");
		return Clss;
	}

	void TakeAction();
	bool ShouldShowNotification();
	void SetPriority(enum class EFortNotificationPriority InPriority);
	void NotificationShown();
	enum class EFortNotificationPriority GetPriority();
	class UTexture2D* GetImageOverride();
	class UUserWidget* CreateWidget(class APlayerController* OwningPlayer);
	void ClearNotification();
};

// 0x8 (0xA8 - 0xA0)
// Class FortniteGame.FortMissionVoteUINotification
class UFortMissionVoteUINotification : public UFortUINotification
{
public:
	enum class EFortVoteType                     VoteType;                                          // 0xA0(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bHasVoteEnded;                                     // 0xA1(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1E7C[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        VoteResult;                                        // 0xA4(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortMissionVoteUINotification");
		return Clss;
	}

	void OnActionTaken();
};

// 0x10 (0x40 - 0x30)
// Class FortniteGame.FortMissionWeightedRewards
class UFortMissionWeightedRewards : public UDataAsset
{
public:
	TArray<struct FFortMissionWeightedReward>    Rewards;                                           // 0x30(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortMissionWeightedRewards");
		return Clss;
	}

};

// 0x10 (0x620 - 0x610)
// Class FortniteGame.FortMobileInteractionComponent
class UFortMobileInteractionComponent : public UStaticMeshComponent
{
public:
	//class UMaterialInstanceDynamic*            IconMID;                                           // 0x608(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1E7D[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortMobileInteractionComponent");
		return Clss;
	}

	void StopRadialTimer();
	void StartRadialTimer(float Duration);
	void SetVisibleStartTime();
	void SetRarityColor(const struct FLinearColor& InColor);
	void SetRadialStartTime(float StartTime);
	void SetRadialOpacity(float Opacity);
	void SetRadialDuration(float Duration);
	void SetIcon(enum class EMobileInteractionIconTypes IconType);
	void SetExtents(const struct FVector& Extents);
	void SetCameraPush(float Offset);
	bool IsAvailable();
};

// 0x0 (0x28 - 0x28)
// Class FortniteGame.FortMobileKismetLibrary
class UFortMobileKismetLibrary : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortMobileKismetLibrary");
		return Clss;
	}

	bool GetTapToFireEnabled(class UObject* WorldContextObject);
	bool GetDedicatedButtonEnabled(class UObject* WorldContextObject);
	bool GetAutoFireEnabled(class UObject* WorldContextObject);
	bool Get3DTouchEnabled(class UObject* WorldContextObject);
};

// 0x0 (0x490 - 0x490)
// Class FortniteGame.FortMobileLocalPlayer
class UFortMobileLocalPlayer : public UFortLocalPlayer
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortMobileLocalPlayer");
		return Clss;
	}

};

// 0x10 (0x40 - 0x30)
// Class FortniteGame.FortMontageLookupTable
class UFortMontageLookupTable : public UPrimaryDataAsset
{
public:
	TArray<struct FMontageLookupData>            MontageLookupDataArray;                            // 0x30(0x10)(Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortMontageLookupTable");
		return Clss;
	}

};

// 0x180 (0xE10 - 0xC90)
// Class FortniteGame.FortMountedTurret
class AFortMountedTurret : public AFortAthenaSKMotorVehicle
{
public:
	//enum class EFortTeam                       TeamIndex;                                         // 0xC88(0x1)(BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AFortWeaponRangedDualMountedTurret*    CachedWeapon;                                      // 0xC90(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFortWeaponRangedItemDefinition*       CachedWeaponDef;                                   // 0xC98(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CachedOverheatMax;                                 // 0xCA0(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CachedOverheatValue;                               // 0xCA4(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        OverheatValueRepped;                               // 0xCA8(0x4)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bWeaponEquipped;                                   // 0xCAC(0x1)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1E84[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AActor*                                ActorBase;                                         // 0xCB0(0x8)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LastTickTime;                                      // 0xCB8(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        TickCount;                                         // 0xCBC(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bReadyToSleep;                                     // 0xCC0(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1E85[0xF];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTransform                            LastFrameTurretTransform;                          // 0xCD0(0x30)(Transient, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FRotator                              TargetAimOrientation;                              // 0xD00(0xC)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FRotator                              TargetAimOrientationCorrected;                     // 0xD0C(0xC)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FRotator                              CurrentAimOrientation;                             // 0xD18(0xC)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FRotator                              CurrentAimOrientationCorrected;                    // 0xD24(0xC)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FRotator                              TargetAimOrientationRepped;                        // 0xD30(0xC)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, NativeAccessSpecifierPublic)
	struct FRotator                              TargetAimOrientationCorrectedRepped;               // 0xD3C(0xC)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, NativeAccessSpecifierPublic)
	float                                        UnmannedDesiredPitch;                              // 0xD48(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HorizAimRotDelta;                                  // 0xD4C(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PedalScaler;                                       // 0xD50(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  LeftMuzzleSocketName;                              // 0xD54(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  RightMuzzleSocketName;                             // 0xD5C(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bPlayerEnteredThisFrame;                           // 0xD64(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1E86[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        YawDiffRemaining;                                  // 0xD68(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MovementParam;                                     // 0xD6C(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BatteryParam;                                      // 0xD70(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RumbleIntensity;                                   // 0xD74(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCameraShake*                          DriverCameraShake;                                 // 0xD78(0x8)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCameraShake*                          PassengerCameraShake;                              // 0xD80(0x8)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AFortPlayerPawn*                       LocalPlayerPawn;                                   // 0xD88(0x8)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortAbilityTargetingSource       AimSourceType;                                     // 0xD90(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1E87[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FScalableFloat                        TotalShotsAllowedThenShutdown;                     // 0xD98(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	int32                                        ShotsFired;                                        // 0xDB8(0x4)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1E88[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	UMulticastDelegateProperty_                  OnMountedTurretFiredEvent;                         // 0xDC0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_1E89[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class UFortMountedTurretConfigs> FortMountedTurretConfigsClass;                     // 0xDE0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UFortMountedTurretConfigs*             FortMountedTurretConfigs;                          // 0xDE8(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bWeaponOverheatDataHasBeenCached;                  // 0xDF0(0x1)(Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1E8A[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FFortCachedWeaponOverheatData         CachedWeaponOverheatData;                          // 0xDF4(0x18)(Net, NoDestructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_1E8B[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortMountedTurret");
		return Clss;
	}

	void SetActorBase(class AActor* InActorBase);
	void OnRep_TeamIndex(enum class EFortTeam OldVal);
	void OnRep_TargetAimOrientationRepped();
	void OnRep_TargetAimOrientationCorrectedRepped();
	void OnRep_ShotsFired();
	void OnRep_OverheatValueRepped();
	void OnMountedTurretFired(int32 ShotsRemaining);
	void OnGetExitSocketTransform(class FName ExitSocket, int32 SocketIndex, const struct FTransform& InTransform, bool* bOutOverriderExitSocket, struct FTransform* OutOverrideTransform);
	bool IsLocalPlayerRiding();
	float GetOverheatScaler();
	float GetOverheatingMaxValue();
	float GetCurrentOverheatValue();
};

// 0x10 (0x410 - 0x400)
// Class FortniteGame.FortMountedTurretAnimInstance
class UFortMountedTurretAnimInstance : public UFortVehicleAnimInstance
{
public:
	//class AFortMountedTurret*                  MountedTurret;                                     // 0x3F8(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsUsingMountedTurret;                             // 0x400(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1E8C[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        AimingYaw;                                         // 0x404(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AimingPitch;                                       // 0x408(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PedalScaler;                                       // 0x40C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortMountedTurretAnimInstance");
		return Clss;
	}

};

// 0x58 (0x398 - 0x340)
// Class FortniteGame.FortMountedTurretConfigs
class UFortMountedTurretConfigs : public UFortSKMotorVehicleConfigs
{
public:
	float                                        CameraShakeAmplitudeMin;                           // 0x340(0x4)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CameraShakeAmplitudeMax;                           // 0x344(0x4)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CameraShakeNormalizedSpeed;                        // 0x348(0x4)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CameraShakeSpeedCurvePow;                          // 0x34C(0x4)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AimInterpSpeed;                                    // 0x350(0x4)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        InitialCameraInterpSpeed;                          // 0x354(0x4)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        InitialCameraLerpTime;                             // 0x358(0x4)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxYawPerSecondThreshold;                          // 0x35C(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxPitchPerSecondThreshold;                        // 0x360(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PitchConstraintAngleOffset;                        // 0x364(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bConstrainVerticalRotationOnly;                    // 0x368(0x1)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1E8D[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               LocalAimOffsetWhenPitchedUp;                       // 0x36C(0xC)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               LocalAimOffsetWhenPitchedFlat;                     // 0x378(0xC)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               LocalAimOffsetWhenPitchedDown;                     // 0x384(0xC)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PedalCyclesPerFullTurn;                            // 0x390(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        bWeaponIgnoresMountedTurretBase;                   // 0x394(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortMountedTurretConfigs");
		return Clss;
	}

};

// 0xAD0 (0x1210 - 0x740)
// Class FortniteGame.FortMovementComp_Character
class UFortMovementComp_Character : public UCharacterMovementComponent
{
public:
	float                                        LandHardSoundFallSpeedThreshold;                   // 0x740(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LandSoundFallSpeedThreshold;                       // 0x744(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class AFortPawn>                 PushBumpedPawnClass;                               // 0x748(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1E8E[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        NetworkSmoothingVisibilityThreshold;               // 0x760(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        PlayerLodRequiredForFloorCheckWhenRendered;        // 0x764(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortAILODLevel                   AILodRequiredForFloorCheckWhenRendered;            // 0x768(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1E8F[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UCurveFloat*                           VelocityBasedStrafeCurve;                          // 0x770(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                           VelocityBasedTurnCurve;                            // 0x778(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                           VelocityBasedBackupCurve;                          // 0x780(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bWasUsingVelocityBasedTurnCurve;                   // 0x788(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1E90[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        RotationYawRateToRestore;                          // 0x78C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FallingSlopeSafeSlideAngle;                        // 0x790(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FallingSlopeSafeSlideMaxSpeed;                     // 0x794(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FallingSlopeDamageScalarMin;                       // 0x798(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FallingSlopeSafeSlideNormalZ;                      // 0x79C(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FAirControlParams                     SkydivingControlParamsPassive;                     // 0x7A0(0x100)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	struct FAirControlParams                     SkydivingControlParamsActive;                      // 0x8A0(0x100)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	struct FAirControlParams                     ParachuteControlParamsSkydive;                     // 0x9A0(0x100)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	struct FAirControlParams                     ParachuteControlParamsJump;                        // 0xAA0(0x100)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	struct FAirControlParams                     ParachuteControlParamsGliderRedeploy;              // 0xBA0(0x100)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	struct FAirControlParams                     BalloonControlParams;                              // 0xCA0(0x100)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	struct FAirControlParams                     VortexSkydivingControlParamsPassive;               // 0xDA0(0x100)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	struct FAirControlParams                     VortexSkydivingControlParamsActive;                // 0xEA0(0x100)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	struct FAirControlParams                     VortexSkydivingControlParamsActiveUpward;          // 0xFA0(0x100)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	struct FAirControlParams                     VortexParachuteControlParams;                      // 0x10A0(0x100)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	float                                        SkydivingMaxSmoothUpdateDistanceScale;             // 0x11A0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SlideTimeUntilReset;                               // 0x11A4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SlideIfVelocityLessThanZ;                          // 0x11A8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SlideIfAngleLessThan;                              // 0x11AC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SlideIfAngleGreaterThan;                           // 0x11B0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1E91[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        GravityCeilingRelation;                            // 0x11BC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1E92[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        CurrentZiplineVelocityDirection;                   // 0x11C4(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        FallingStartedZ;                                   // 0x11C8(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1E93[0x28];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               ReplicatedAcceleration;                            // 0x11F4(0xC)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bTriggeredFallingFeedbackSinceLanded : 1;          // Mask : 0x1 0x1200(0x1)(Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        : 4;                                               // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        bUpdatesFloorWhenNotInFullSimulation : 1;          // Mask : 0x20 0x1200(0x1)(Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bUpdatesFloorWhenNotInFullSimulationOnlyOnNetUpdate : 1; // Mask : 0x40 0x1200(0x1)(Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1E94[0xF];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortMovementComp_Character");
		return Clss;
	}

	bool IsPassivelySkydiving();
	bool IsActivelyStrafingInAir();
	bool IsActivelySkydivingUpInVortex();
	bool IsActivelySkydiving();
};

// 0x10 (0x1220 - 0x1210)
// Class FortniteGame.FortMovementComp_AIChar
class UFortMovementComp_AIChar : public UFortMovementComp_Character
{
public:
	uint8                                        bDeimos : 1;                                       // Mask : 0x1 0x1208(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, AdvancedDisplay, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1E95[0x17];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortMovementComp_AIChar");
		return Clss;
	}

};

// 0x90 (0x12A0 - 0x1210)
// Class FortniteGame.FortMovementComp_CharacterAthena
class UFortMovementComp_CharacterAthena : public UFortMovementComp_Character
{
public:
	//TArray<struct FAthenaJumpPenalty>          JumpPenalties;                                     // 0x1208(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_1E96[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        JumpPenaltyResetTime;                              // 0x1218(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1E97[0xC];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        NetworkSmoothingThrottleProxyUpdateForPawnLOD;     // 0x1228(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        NetworkSkipSkyDivingCollisionForPawnLOD;           // 0x122C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        NetworkSmoothingViewAngleThreshold;                // 0x1230(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1E98[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        NetworkSmoothingViewAngleThresholdSmall;           // 0x1238(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1E99[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        NetworkSmoothingNoThrottleWithinDistanceInMeters;  // 0x1240(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1E9A[0x44];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        MaxAccelerationFlying;                             // 0x1288(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1E9B[0x14];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortMovementComp_CharacterAthena");
		return Clss;
	}

};

// 0x1B8 (0x1E8 - 0x30)
// Class FortniteGame.FortMovementSet
class UFortMovementSet : public UFortAttributeSet
{
public:
	struct FFortGameplayAttributeData            WalkSpeed;                                         // 0x30(0x28)(BlueprintVisible, BlueprintReadOnly, Net, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            RunSpeed;                                          // 0x58(0x28)(BlueprintVisible, BlueprintReadOnly, Net, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            SprintSpeed;                                       // 0x80(0x28)(BlueprintVisible, BlueprintReadOnly, Net, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            FlySpeed;                                          // 0xA8(0x28)(BlueprintVisible, BlueprintReadOnly, Net, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            CrouchedRunSpeed;                                  // 0xD0(0x28)(BlueprintVisible, BlueprintReadOnly, Net, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            CrouchedSprintSpeed;                               // 0xF8(0x28)(BlueprintVisible, BlueprintReadOnly, Net, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            BackwardSpeedMultiplier;                           // 0x120(0x28)(BlueprintVisible, BlueprintReadOnly, Net, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            JumpHeight;                                        // 0x148(0x28)(BlueprintVisible, BlueprintReadOnly, Net, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            GravityZScale;                                     // 0x170(0x28)(BlueprintVisible, BlueprintReadOnly, Net, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            VehicleGravityZScale;                              // 0x198(0x28)(BlueprintVisible, BlueprintReadOnly, Net, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            SpeedMultiplier;                                   // 0x1C0(0x28)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortMovementSet");
		return Clss;
	}

	void OnRep_SpeedMultiplier();
};

// 0x50 (0x78 - 0x28)
// Class FortniteGame.FortMtxWallets
class UFortMtxWallets : public UObject
{
public:
	TMap<enum class EFortMtxPlatform, struct FFortMtxPlatformList> SharedWallets;                                     // 0x28(0x50)(ZeroConstructor, Config, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortMtxWallets");
		return Clss;
	}

	void SetSelectedAppStore(enum class EAppStore InAppStore);
	bool GetSelectedAppStore(enum class EAppStore* OutAppStore);
	TArray<enum class EAppStore> GetAvailableAppStores();
};

// 0x50 (0x80 - 0x30)
// Class FortniteGame.FortMusicAsset
class UFortMusicAsset : public UPrimaryDataAsset
{
public:
	struct FFortMusicSection                     Sections;                                          // 0x30(0x18)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_1E9C[0x30];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        Priority;                                          // 0x78(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortMusicSectionStopBehavior     StopBehavior;                                      // 0x7C(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsStinger;                                        // 0x7D(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1E9D[0x2];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortMusicAsset");
		return Clss;
	}

};

// 0x20 (0x50 - 0x30)
// Class FortniteGame.FortMusicCombatBank
class UFortMusicCombatBank : public UDataAsset
{
public:
	class UFortMusicAsset*                       Assets;                                            // 0x30(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1E9F[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortMusicCombatBank");
		return Clss;
	}

	class UFortMusicAsset* GetAssetFromCombatIntensity(enum class EFortMusicCombatIntensity Intensity);
};

// 0x28 (0x50 - 0x28)
// Class FortniteGame.FortMusicContext
class UFortMusicContext : public UBlueprintContextBase
{
public:
	UMulticastDelegateProperty_                  OnMusicPackChanged;                                // 0x28(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UAthenaMusicPackItemDefinition*        DesiredActiveMusicPack;                            // 0x38(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FPrimaryAssetId>               LoadedPacks;                                       // 0x40(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortMusicContext");
		return Clss;
	}

	void SetActiveMusicPack(class UAthenaMusicPackItemDefinition* NewMusicPack);
	class UAthenaMusicPackItemDefinition* GetEquippedMusicPack();
};

// 0x68 (0x90 - 0x28)
// Class FortniteGame.FortMusicVoice
class UFortMusicVoice : public UObject
{
public:
	UMulticastDelegateProperty_                  OnVoiceStarted;                                    // 0x28(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnVoiceFinished;                                   // 0x38(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_1EA0[0x48];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortMusicVoice");
		return Clss;
	}

};

// 0x60 (0x390 - 0x330)
// Class FortniteGame.FortMusicManager
class AFortMusicManager : public AActor
{
public:
	uint8                                        Pad_1EA4[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AFortPlayerController*                 ControllerOwner;                                   // 0x338(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFortMusicVoice*                       Voices;                                            // 0x340(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1EA5[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UFortMusicVoice*>               VoicesToCleanUp;                                   // 0x350(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1EA6[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	uint8                                        bWorldReadyCalled : 1;                             // Mask : 0x1 0x364(0x1)(Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1EA7[0x1B];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UFortMusicManagerBank*                 MusicBank;                                         // 0x380(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1EA8[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortMusicManager");
		return Clss;
	}

	void StopPrimaryMusic(bool bPlayOutro);
	void StopMusicVoice(class UFortMusicVoice* Voice);
	void SetPrimaryMusicVolume(float InVolumeMultiplier);
	void SetMusicBank(class UFortMusicManagerBank* Bank);
	void PlayStinger(class UFortMusicAsset* NewMusicAsset);
	class UFortMusicVoice* PlayMusicVoice(class UFortMusicAsset* Asset);
	void OnVoiceFinished(class UFortMusicVoice* Voice);
	void OnThresholdChange(enum class EFortCombatThresholds OldThreshold, enum class EFortCombatThresholds NewThreshold);
	void OnPlayerSpawned();
	void OnPlayerDowned(struct FFortPlayerDeathReport& DeathReport);
	void OnMusicBankChanged(class UFortMusicManagerBank* NewBank);
	void OnDayPhaseChanged(enum class EFortDayPhase CurrentDayPhase, enum class EFortDayPhase PreviousDayPhase, bool bAtCreation);
	float GetPrimaryMusicVolume();
	class UFortMusicManagerBank* GetMusicBank();
	float GetEventHeatPercentTotal(enum class EFortCombatEvents CombatEvent);
	float GetEventHeatPercent(enum class EFortCombatEvents CombatEvent);
	class UFortMusicVoice* ChangePrimaryMusic(class UFortMusicAsset* NewMusicAsset, bool bPlayStinger);
};

// 0x10 (0x40 - 0x30)
// Class FortniteGame.FortMusicManagerBank
class UFortMusicManagerBank : public UDataAsset
{
public:
	class UFortMusicTimeOfDayBank*               TimeOfDayBank;                                     // 0x30(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFortMusicCombatBank*                  CombatBank;                                        // 0x38(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortMusicManagerBank");
		return Clss;
	}

};

// 0x10 (0x340 - 0x330)
// Class FortniteGame.FortMusicPackPreviewActor
class AFortMusicPackPreviewActor : public AActor
{
public:
	uint8                                        Pad_1EA9[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortMusicPackPreviewActor");
		return Clss;
	}

	void PreviewMusicPack(class UAthenaMusicPackItemDefinition* MusicPack);
};

// 0x20 (0x50 - 0x30)
// Class FortniteGame.FortMusicTimeOfDayBank
class UFortMusicTimeOfDayBank : public UDataAsset
{
public:
	class UFortMusicAsset*                       Assets;                                            // 0x30(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1EAB[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortMusicTimeOfDayBank");
		return Clss;
	}

	class UFortMusicAsset* GetAssetFromDayPhase(enum class EFortDayPhase DayPhase);
};

// 0x0 (0x28 - 0x28)
// Class FortniteGame.FortMutatorOwner
class UFortMutatorOwner : public UInterface
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortMutatorOwner");
		return Clss;
	}

	void RemoveMutatorFromList(class AFortGameplayMutator* Mutator);
	void AddMutatorToList(class AFortGameplayMutator* Mutator);
};

// 0x0 (0x28 - 0x28)
// Class FortniteGame.FortMutatorContext
class UFortMutatorContext : public UInterface
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortMutatorContext");
		return Clss;
	}

	void GetMutatorContext(struct FMutatorContext* MutatorContext);
};

// 0x110 (0x208 - 0xF8)
// Class FortniteGame.FortMutatorListComponent
class UFortMutatorListComponent : public UActorComponent
{
public:
	TArray<TSoftClassPtr<class AFortGameplayMutator>> MutatorDefs;                                       // 0xF8(0x10)(Edit, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	class UPlaylistUserOptions*                  UserOptions;                                       // 0x108(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class AFortGameplayMutator*>          Mutators;                                          // 0x110(0x10)(Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnSettingsChanged;                                 // 0x120(0x10)(ZeroConstructor, InstancedReference, NativeAccessSpecifierPublic)
	struct FPropertyOverrideData                 PropertyOverrideArray;                             // 0x130(0xD8)(Net, RepNotify, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortMutatorListComponent");
		return Clss;
	}

	void UnregisterMinigameMutators();
	void RegisterMinigameMutators();
	void OnRep_PropertyOverrideArray();
	void HandleActorExitedVolume(class AActor* Actor, class AFortVolume* Volume);
	void HandleActorEnteredVolume(class AActor* Actor, class AFortVolume* Volume);
};

// 0x18 (0x48 - 0x30)
// Class FortniteGame.FortNavAgentCostData
class UFortNavAgentCostData : public UPrimaryDataAsset
{
public:
	class FName                                  NavAgentName;                                      // 0x30(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<TSubclassOf<class UNavArea>>          NavAreaStrengthBuckets;                            // 0x38(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortNavAgentCostData");
		return Clss;
	}

};

// 0x8 (0x50 - 0x48)
// Class FortniteGame.FortNavArea
class UFortNavArea : public UNavArea
{
public:
	uint8                                        bObstacle : 1;                                     // Mask : 0x1 0x48(0x1)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bSmashable : 1;                                    // Mask : 0x2 0x48(0x1)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1EAC[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortNavArea");
		return Clss;
	}

};

// 0x0 (0x50 - 0x50)
// Class FortniteGame.FortNavArea_CheapObstacle
class UFortNavArea_CheapObstacle : public UFortNavArea
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortNavArea_CheapObstacle");
		return Clss;
	}

};

// 0x0 (0x50 - 0x50)
// Class FortniteGame.FortNavArea_ClosedDoors
class UFortNavArea_ClosedDoors : public UFortNavArea
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortNavArea_ClosedDoors");
		return Clss;
	}

};

// 0x0 (0x50 - 0x50)
// Class FortniteGame.FortNavArea_DefaultSmashable
class UFortNavArea_DefaultSmashable : public UFortNavArea
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortNavArea_DefaultSmashable");
		return Clss;
	}

};

// 0x0 (0x50 - 0x50)
// Class FortniteGame.FortNavArea_DefenderNull
class UFortNavArea_DefenderNull : public UFortNavArea
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortNavArea_DefenderNull");
		return Clss;
	}

};

// 0x0 (0x50 - 0x50)
// Class FortniteGame.FortNavArea_HuskNull
class UFortNavArea_HuskNull : public UFortNavArea
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortNavArea_HuskNull");
		return Clss;
	}

};

// 0x0 (0x50 - 0x50)
// Class FortniteGame.FortNavArea_LowJump
class UFortNavArea_LowJump : public UFortNavArea
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortNavArea_LowJump");
		return Clss;
	}

};

// 0x0 (0x50 - 0x50)
// Class FortniteGame.FortNavArea_LowSmashable
class UFortNavArea_LowSmashable : public UFortNavArea_DefaultSmashable
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortNavArea_LowSmashable");
		return Clss;
	}

};

// 0x0 (0x50 - 0x50)
// Class FortniteGame.FortNavArea_Obstacle
class UFortNavArea_Obstacle : public UFortNavArea
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortNavArea_Obstacle");
		return Clss;
	}

};

// 0x0 (0x50 - 0x50)
// Class FortniteGame.FortNavArea_PortalOrSmash
class UFortNavArea_PortalOrSmash : public UFortNavArea
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortNavArea_PortalOrSmash");
		return Clss;
	}

};

// 0x8 (0x58 - 0x50)
// Class FortniteGame.FortNavArea_SmashableJump
class UFortNavArea_SmashableJump : public UFortNavArea
{
public:
	int32                                        Strength;                                          // 0x50(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1EAD[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortNavArea_SmashableJump");
		return Clss;
	}

};

// 0x0 (0x50 - 0x50)
// Class FortniteGame.FortNavArea_StoneWall
class UFortNavArea_StoneWall : public UFortNavArea
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortNavArea_StoneWall");
		return Clss;
	}

};

// 0x0 (0x50 - 0x50)
// Class FortniteGame.FortNavArea_TakerOnly
class UFortNavArea_TakerOnly : public UFortNavArea
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortNavArea_TakerOnly");
		return Clss;
	}

};

// 0x0 (0x50 - 0x50)
// Class FortniteGame.FortNavArea_TraceSmashable
class UFortNavArea_TraceSmashable : public UFortNavArea_DefaultSmashable
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortNavArea_TraceSmashable");
		return Clss;
	}

};

// 0x0 (0x50 - 0x50)
// Class FortniteGame.FortNavArea_Unwalkable
class UFortNavArea_Unwalkable : public UFortNavArea
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortNavArea_Unwalkable");
		return Clss;
	}

};

// 0x0 (0x50 - 0x50)
// Class FortniteGame.FortNavArea_WalkOverWall
class UFortNavArea_WalkOverWall : public UFortNavArea
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortNavArea_WalkOverWall");
		return Clss;
	}

};

// 0x0 (0x50 - 0x50)
// Class FortniteGame.FortNavArea_WallCorner
class UFortNavArea_WallCorner : public UFortNavArea
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortNavArea_WallCorner");
		return Clss;
	}

};

// 0x0 (0x50 - 0x50)
// Class FortniteGame.FortNavArea_WoodenWall
class UFortNavArea_WoodenWall : public UFortNavArea
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortNavArea_WoodenWall");
		return Clss;
	}

};

// 0x18 (0x68 - 0x50)
// Class FortniteGame.FortNavAreaAutomatic
class UFortNavAreaAutomatic : public UFortNavArea
{
public:
	struct FCurveTableRowHandle                  NavCostCurveHandle;                                // 0x50(0x10)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        NavAreaStrength;                                   // 0x60(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        AutomaticNavCost;                                  // 0x64(0x4)(Edit, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortNavAreaAutomatic");
		return Clss;
	}

};

// 0x10 (0x340 - 0x330)
// Class FortniteGame.FortNavGraphGoal
class AFortNavGraphGoal : public AActor
{
public:
	uint8                                        Pad_1EAE[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        GraphRadius;                                       // 0x338(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1EAF[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortNavGraphGoal");
		return Clss;
	}

};

// 0x0 (0x48 - 0x48)
// Class FortniteGame.FortNavigationMetaFilter
class UFortNavigationMetaFilter : public UNavigationQueryFilter
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortNavigationMetaFilter");
		return Clss;
	}

};

// 0x0 (0x48 - 0x48)
// Class FortniteGame.FortNavigationFilter_Hunting
class UFortNavigationFilter_Hunting : public UFortNavigationMetaFilter
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortNavigationFilter_Hunting");
		return Clss;
	}

};

// 0x0 (0x48 - 0x48)
// Class FortniteGame.FortNavigationFilter_IgnoreSmashingCost
class UFortNavigationFilter_IgnoreSmashingCost : public UNavigationQueryFilter
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortNavigationFilter_IgnoreSmashingCost");
		return Clss;
	}

};

// 0x0 (0x48 - 0x48)
// Class FortniteGame.FortNavigationFilter_NoSmashing
class UFortNavigationFilter_NoSmashing : public UNavigationQueryFilter
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortNavigationFilter_NoSmashing");
		return Clss;
	}

};

// 0x0 (0x48 - 0x48)
// Class FortniteGame.FortNavigationFilter_NoSmashingIncludeLow
class UFortNavigationFilter_NoSmashingIncludeLow : public UNavigationQueryFilter
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortNavigationFilter_NoSmashingIncludeLow");
		return Clss;
	}

};

// 0x0 (0x48 - 0x48)
// Class FortniteGame.FortNavigationFilter_TetherZone
class UFortNavigationFilter_TetherZone : public UNavigationQueryFilter
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortNavigationFilter_TetherZone");
		return Clss;
	}

};

// 0x118 (0x608 - 0x4F0)
// Class FortniteGame.FortNavigationGraph
class AFortNavigationGraph : public ANavigationData
{
public:
	uint8                                        Pad_1EB0[0x118];                                   // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortNavigationGraph");
		return Clss;
	}

};

// 0x0 (0x5A0 - 0x5A0)
// Class FortniteGame.FortNavLinkBlockerComponent
class UFortNavLinkBlockerComponent : public UBoxComponent
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortNavLinkBlockerComponent");
		return Clss;
	}

};

// 0x0 (0x330 - 0x330)
// Class FortniteGame.FortNavLinkContainer
class AFortNavLinkContainer : public AActor
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortNavLinkContainer");
		return Clss;
	}

};

// 0x30 (0x80 - 0x50)
// Class FortniteGame.FortNavLinkDefinition
class UFortNavLinkDefinition : public UNavLinkDefinition
{
public:
	struct FFortNavLinkPattern                   Pattern;                                           // 0x50(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	TArray<struct FFortNavLinkPattern>           AdditionalPatterns;                                // 0x58(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<enum class EBuildingStairsRailing>    StairsRailing;                                     // 0x68(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	enum class EBuildingFloorRailing             FloorRailing;                                      // 0x78(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortNavLinkPattern               PatternType;                                       // 0x79(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1EB1[0x6];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortNavLinkDefinition");
		return Clss;
	}

};

// 0x8 (0x130 - 0x128)
// Class FortniteGame.FortNavObstacleComponent
class UFortNavObstacleComponent : public UNavRelevantComponent
{
public:
	TSubclassOf<class UNavArea>                  ObstacleAreaClass;                                 // 0x128(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortNavObstacleComponent");
		return Clss;
	}

};

// 0x0 (0x870 - 0x870)
// Class FortniteGame.FortNeverPersistItemDefinition
class UFortNeverPersistItemDefinition : public UFortWorldItemDefinition
{
public:
	uint8                                        bAccumulateOnPlayerState : 1;                      // Mask : 0x1 0x868(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1EB2[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortNeverPersistItemDefinition");
		return Clss;
	}

};

// 0x10 (0x260 - 0x250)
// Class FortniteGame.FortNiagaraCascadeProxyComponent
class UFortNiagaraCascadeProxyComponent : public USceneComponent
{
public:
	//class UNiagaraComponent*                   NiagaraComponent;                                  // 0x248(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystemComponent*              CascadeComponent;                                  // 0x250(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1EB3[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortNiagaraCascadeProxyComponent");
		return Clss;
	}

	void SetVectorParameter(class FName ParameterName, const struct FVector& Param);
	void SetFloatParameter(class FName ParameterName, float Param);
	void SetColorParameter(class FName ParameterName, const struct FLinearColor& Param);
	void SetActorParameter(class FName ParameterName, class AActor* Param);
};

// 0x0 (0x28 - 0x28)
// Class FortniteGame.FortNiagaraGameplayLibrary
class UFortNiagaraGameplayLibrary : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortNiagaraGameplayLibrary");
		return Clss;
	}

	class UFortNiagaraCascadeProxyComponent* SpawnEmitterAttached(struct FFortNiagaraCascadeSystemPair& NiagaraCascadeSystemPair, class USceneComponent* AttachToComponent, class FName AttachPointName, const struct FVector& Location, const struct FRotator& Rotation, const struct FVector& Scale, enum class EAttachLocation LocationType, bool bAutoDestroy, enum class EPSCPoolMethod PoolingMethod);
};

// 0x0 (0x28 - 0x28)
// Class FortniteGame.FortniteAutomationBlueprintLibrary
class UFortniteAutomationBlueprintLibrary : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortniteAutomationBlueprintLibrary");
		return Clss;
	}

	bool ResetFPSChartsData();
	bool ResetForcedAthenaCosmetics();
	struct FMcpVariantChannelInfo MakeVariantChannelInfo(class UAthenaCosmeticItemDefinition* ItemDefinition, const struct FGameplayTag& Channel, const struct FGameplayTag& ActiveVariant);
	TArray<struct FGameplayTag> GetVariantNames(class UAthenaCosmeticItemDefinition* ItemDefinition, const struct FGameplayTag& VariantChannel);
	TArray<struct FGameplayTag> GetVariantChannels(class UAthenaCosmeticItemDefinition* ItemDefinition);
	int32 GetItemWrapperLockerSlotIndex(class UFortItemDefinition* ItemDefinition);
	TArray<TSubclassOf<class AActor>> GetAllItemWrapCompatibleActors(bool Vehicles, bool RespectDropTables);
	TArray<class UFortVariantTokenType*> GetAllFortVariantTokens();
	TArray<class UAthenaCosmeticItemDefinition*> GetAllAthenaCosmetics_MultipleType(const TArray<enum class EFortItemType>& Types);
	TArray<class UAthenaCosmeticItemDefinition*> GetAllAthenaCosmetics(enum class EFortItemType Type);
	bool ForceAthenaCosmetic(class UAthenaCosmeticItemDefinition* ItemDefinition);
	bool DumpFPSChartsData(const class FString& EntryName);
	void ApplyItemWrapToActor(class UAthenaItemWrapDefinition* Wrap, class AActor* Actor, enum class EItemWrapMaterialType MaterialType);
};

// 0x0 (0x28 - 0x28)
// Class FortniteGame.FortNotificationMessage
class UFortNotificationMessage : public ULocalMessage
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortNotificationMessage");
		return Clss;
	}

};

// 0x98 (0x400 - 0x368)
// Class FortniteGame.FortObjectiveBase
class AFortObjectiveBase : public AFortMissionState
{
public:
	class UFortBadgeItemDefinition*              ObjectiveRewardBadge;                              // 0x368(0x8)(ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UFortWorldItemDefinition*>      ItemsToGiveOnObjectiveStart;                       // 0x370(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                         bStartPlayingOnMissionStart;                       // 0x380(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bAcceptsMissionEventsWhenFinished;                 // 0x381(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1EBF[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGameplayTagContainer                 ObjectiveHandle;                                   // 0x388(0x20)(BlueprintVisible, BlueprintReadOnly, Net, SaveGame, NativeAccessSpecifierPublic)
	class FString                                ObjectiveAnalyticsName;                            // 0x3A8(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortObjectiveRequirement         MissionRequirement;                                // 0x3B8(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, EditConst, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsObjectiveVisible;                               // 0x3B9(0x1)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, SaveGame, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EFortMissionVisibilityOverride    VisibilityOverride;                                // 0x3BA(0x1)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, SaveGame, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bIsProgressBarHidden;                              // 0x3BB(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EFortMissionAudibility            ObjectiveAudiblity;                                // 0x3BC(0x1)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bRelevantToSpecificTeam;                           // 0x3BD(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EFortTeam                         RelevantTeam;                                      // 0x3BE(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EFortObjectiveStatus              ObjectiveStatus;                                   // 0x3BF(0x1)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, SaveGame, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1EC0[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UFortMissionTimerComponent*            TimerComponent;                                    // 0x3C8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	UMulticastDelegateProperty_                  OnObjectiveStatusChanged;                          // 0x3D0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnObjectiveVisibilityChanged;                      // 0x3E0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnObjectiveVisibilityOverrideChanged;              // 0x3F0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortObjectiveBase");
		return Clss;
	}

	void UnpauseObjectiveTimer();
	void StopObjective(enum class EFortObjectiveStatus Status, const class FString& Description, class UFortBadgeItemDefinition* ExtraBadgeToGrant);
	bool StartPlayingObjective();
	void SetUIVisibilityOverride(enum class EFortMissionVisibilityOverride InVisibilityOverride);
	void SetUiVisibility(bool bInIsObjectiveVisible);
	void SetObjectiveTimer(const class FString& FunctionName, float TimerLength, bool bStartPaused);
	void PauseObjectiveTimer();
	void OnRep_ObjectiveVisibilityOverride();
	void OnRep_ObjectiveStatus();
	void OnRep_bIsObjectiveVisible();
	void OnGenericObjectiveEvent();
	bool IsRelevantToTeam(enum class EFortTeam Team);
	bool IsRelevantToASpecificTeam();
	bool IsObjectiveTimerPaused();
	void GrantRewardsByTag(const struct FGameplayTag& RewardTag, enum class EFortRewardType RewardType);
	class UFortMissionTimerComponent* GetTimerComponent();
	void GetRewardItemsByTag(const struct FGameplayTag& RewardTag, TArray<class UFortWorldItemDefinition*>* OutRewardItems);
	float GetObjectiveTimerTimeRemaining();
	class FText GetObjectiveDisplayString();
	struct FGuid GetMissionGuid();
	class AFortMission* GetMission();
	void EnableTick(bool bEnabled);
	void ClearObjectiveTimer();
	void BlueprintPostObjectiveLoad();
	void BlueprintOnStartPlaying();
	void BlueprintOnObjectiveEnd(enum class EFortObjectiveStatus Status);
	void BlueprintOnActivated();
	class FText BlueprintGetProgressBarText(int32 ProgressBarIdx);
	float BlueprintGetProgressBarPercentage(int32 ProgressBarIdx);
	struct FLinearColor BlueprintGetProgressBarColor(int32 ProgressBarIdx);
	class FText BlueprintGetObjectiveDisplayText();
	int32 BlueprintGetNumProgressBars();
	void AttemptMissionSave(const class FString& OptionalSaveName);
};

// 0x2E0 (0xE70 - 0xB90)
// Class FortniteGame.FortOctopusVehicle
class AFortOctopusVehicle : public AFortAthenaSMVehicle
{
public:
	//float                                      BounceContactRepulsionForce;                       // 0xB88(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	//float                                      BoostForce;                                        // 0xB8C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BoostSpeed;                                        // 0xB90(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSphericalDriveParams                 BaseSphericalDriveParams;                          // 0xB94(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, Config, NoDestructor, NativeAccessSpecifierPublic)
	struct FTowhookParams                        BaseTowhookParams;                                 // 0xBBC(0x48)(Edit, BlueprintVisible, BlueprintReadOnly, Config, NoDestructor, NativeAccessSpecifierPublic)
	bool                                         bAutoRetractGrapple;                               // 0xC04(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bUseSecondaryTowhook;                              // 0xC05(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1EC1[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FFortRechargingActionTimer            BoostAction;                                       // 0xC08(0x58)(Edit, BlueprintVisible, BlueprintReadOnly, ContainsInstancedReference, NativeAccessSpecifierPublic)
	TSubclassOf<class UFortOctopusVehicleConfigs> FortOctopusVehicleConfigsClass;                    // 0xC60(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFortOctopusVehicleConfigs*            FortOctopusVehicleConfigs;                         // 0xC68(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1EC2[0x200];                                   // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortOctopusVehicle");
		return Clss;
	}

};

// 0x0 (0x318 - 0x318)
// Class FortniteGame.FortOctopusVehicleConfigs
class UFortOctopusVehicleConfigs : public UFortVehicleConfigs
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortOctopusVehicleConfigs");
		return Clss;
	}

};

// 0x128 (0x778 - 0x650)
// Class FortniteGame.FortOnlineAccount
class UFortOnlineAccount : public UOnlineAccountCommon
{
public:
	uint8                                        Pad_1EC3[0x1A];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bShouldCheckIfPlatformAllowed;                     // 0x66A(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bShouldAthenaQueryRecentPlayers;                   // 0x66B(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bHadLoginPurchaseCheckFailure;                     // 0x66C(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1EC4[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class FString>                        IgnoreProducts;                                    // 0x670(0x10)(ZeroConstructor, Config, NativeAccessSpecifierPrivate)
	TMap<class FString, struct FRestrictedCountry> RestrictedCountries;                               // 0x680(0x50)(Edit, ZeroConstructor, Config, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1EC5[0x78];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bDisablePurchasingOnRedemptionFailure;             // 0x748(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1EC6[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	double                                       MinimumSecondsBetweenPurchaseRedemptionAttempts;   // 0x750(0x8)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1EC7[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class FString>                        RealMoneyPurchaseBlockedCountryCodes;              // 0x768(0x10)(ZeroConstructor, Config, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortOnlineAccount");
		return Clss;
	}

};

// 0x0 (0x418 - 0x418)
// Class FortniteGame.FortOnlineBeaconHost
class AFortOnlineBeaconHost : public AOnlineBeaconHost
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortOnlineBeaconHost");
		return Clss;
	}

};

// 0x110 (0x2A0 - 0x190)
// Class FortniteGame.FortOnlineSessionClient
class UFortOnlineSessionClient : public UOnlineSessionClient
{
public:
	uint8                                        Pad_1EC8[0x110];                                   // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortOnlineSessionClient");
		return Clss;
	}

};

// 0x0 (0xCD8 - 0xCD8)
// Class FortniteGame.FortOutpostBuilding
class AFortOutpostBuilding : public ABuildingProp
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortOutpostBuilding");
		return Clss;
	}

};

// 0x40 (0x68 - 0x28)
// Class FortniteGame.FortOutpostContext
class UFortOutpostContext : public UBlueprintContextBase
{
public:
	UMulticastDelegateProperty_                  OnBuildingLevelChanged;                            // 0x28(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnItemsNeedRefresh;                                // 0x38(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnGooContentNeedRefresh;                           // 0x48(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnCraftingTableActivationBonusChanged;             // 0x58(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortOutpostContext");
		return Clss;
	}

	void UpgradePOST();
	void UpgradeBuildingByDefinition(class UFortOutpostItemDefinition* BuildingToUpgrade);
	void UpgradeBuilding(enum class EOutpostBuildings OutpostBuilding);
	void LeaveOutpostAsParty();
	float GetPOSTBuildingHealthMod(int32 POSTLevel);
	int32 GetOutpostCoreLevel();
	TArray<class UOutpostPOSTRequirementData*> GetNextPOSTLevelRequirements();
	class UFortWorldItemDefinition* GetHarvestingToolForLevel(int32 InHarvestingOptimizerLevel);
	void GetBuildingUpgradeCostFromDefinition(class UFortOutpostItemDefinition* OutpostBuilding, TArray<struct FFortItemQuantityPair>* OutWorldItems, TArray<struct FFortItemQuantityPair>* OutAccountItems);
	void GetBuildingUpgradeCost(enum class EOutpostBuildings OutpostBuilding, TArray<struct FFortItemQuantityPair>* OutWorldItems, TArray<struct FFortItemQuantityPair>* OutAccountItems);
	int32 GetBuildingMaxLevelFromDefinition(class UFortOutpostItemDefinition* OutpostBuilding);
	int32 GetBuildingMaxLevel(enum class EOutpostBuildings OutpostBuilding);
	int32 GetBuildingLevelFromDefinition(class UFortOutpostItemDefinition* OutpostBuilding);
	int32 GetBuildingLevel(enum class EOutpostBuildings OutpostBuilding);
	void DepositPOSTResource(class UFortItemDefinition* ResourceItem, int32 Count);
	bool CanUpgradePOST();
	bool CanUpgradeBuildingFromDefinition(class UFortOutpostItemDefinition* OutpostBuilding, bool bLog);
	bool CanUpgradeBuilding(enum class EOutpostBuildings OutpostBuilding, bool bLog);
};

// 0x20 (0x48 - 0x28)
// Class FortniteGame.OutpostPOSTRequirementData
class UOutpostPOSTRequirementData : public UObject
{
public:
	class UFortItemDefinition*                   RequirementItemDefinition;                         // 0x28(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        TotalRequired;                                     // 0x30(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        AlreadyDeposited;                                  // 0x34(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        AmountOwned;                                       // 0x38(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bHasEnough;                                        // 0x3C(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1ED1[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        AmountToDeposit;                                   // 0x40(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1ED2[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("OutpostPOSTRequirementData");
		return Clss;
	}

};

// 0x1C8 (0x1F8 - 0x30)
// Class FortniteGame.FortOutpostData
class UFortOutpostData : public UDataAsset
{
public:
	int32                                        StructureLimitNotificationThreshold;               // 0x30(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1ED3[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FOutpostBuildingData                  StormShieldData;                                   // 0x38(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FCraftingTableBuildingData            CraftingTableData;                                 // 0x60(0x38)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FFabricatorBuildingData               FabricatorData;                                    // 0x98(0x70)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FHarvestingOptimizerBuildingData      HarvestingOptimizerData;                           // 0x108(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FStorageVaultBuildingData             StorageVaultData;                                  // 0x130(0x38)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FOutpostUpgradeAndPrestigeBuildingData OutpostUpgradeAndPrestigeData;                     // 0x168(0x90)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortOutpostData");
		return Clss;
	}

};

// 0x0 (0x28 - 0x28)
// Class FortniteGame.FortOutpostFunctionLibrary
class UFortOutpostFunctionLibrary : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortOutpostFunctionLibrary");
		return Clss;
	}

	void TransferItemToStorage(class AFortPlayerController* Player, class UFortWorldItem* Item, int32 Count);
	void TransferItemFromStorage(class AFortPlayerController* Player, class UFortWorldItem* Item, int32 Count);
	void SetOutpostGameDifficultyRow(class UObject* WorldContextObject, struct FDataTableRowHandle& GameDifficultyInfo);
	void SetOutpostDefenseActive(class UObject* WorldContextObject, bool bActive);
	void SetCriticalMissionJoinability(class UObject* WorldContextObject, bool bJoinable);
	struct FGameplayTag GetPlacementTagFromOutpostBuildingTag(class UObject* WorldContextObject, struct FGameplayTag& BuildingTag);
	class UFortMissionConfigData* GetOutpostQuestMissionConfigData(class UObject* WorldContextObject, const struct FGameplayTag& ConfigTag);
	class AFortPlayerControllerOutpost* GetOutpostOwner(class UObject* WorldContextObject);
	struct FGameplayTag GetOutpostBuildingTagFromPlacementTag(class UObject* WorldContextObject, struct FGameplayTag& PlacementTag);
	class UFortOutpostItemDefinition* GetOutpostBuildingItemDefinition(class UObject* WorldContextObject, enum class EOutpostBuildings Building);
	void FlushTransferRequests(class AFortPlayerController* Player);
	bool DeployOutpostBuildingTagOnPlacementTag(class UObject* WorldContextObject, struct FGameplayTag& BuildingTag, struct FGameplayTag& PlacementTag);
	void DeactivateCraftingTable(class AFortPlayerControllerOutpost* FortPC);
	void ActivateCraftingTable(class AFortPlayerControllerOutpost* FortPC);
};

// 0x20 (0xF8 - 0xD8)
// Class FortniteGame.FortOutpostItem
class UFortOutpostItem : public UFortCloudSaveItem
{
public:
	struct FFortOutpostCoreInfo                  Outpost_core_info;                                 // 0xD8(0x20)(Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortOutpostItem");
		return Clss;
	}

};

// 0x30 (0x330 - 0x300)
// Class FortniteGame.FortOutpostItemDefinition
class UFortOutpostItemDefinition : public UFortCloudSaveItemDefinition
{
public:
	//TArray<TSubclassOf<class UGameplayEffect>> StaticGameplayEffectsByLevel;                      // 0x2F8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	uint8                                        Pad_1EDA[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        TheaterIndex;                                      // 0x308(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1EDB[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  LongDescription;                                   // 0x310(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_1EDC[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortOutpostItemDefinition");
		return Clss;
	}

	class FText GetLongDescription();
};

// 0xE8 (0x118 - 0x30)
// Class FortniteGame.FortPackPersonality
class UFortPackPersonality : public UDataAsset
{
public:
	class USoundCue*                             TickleVOSound;                                     // 0x30(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundCue*                             TickleSFXSound;                                    // 0x38(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundCue*                             XRayVOSound;                                       // 0x40(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundCue*                             HoverVOSound;                                      // 0x48(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundCue*                             BuySFXSound;                                       // 0x50(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundCue*                             OpenGenericVO_Sound;                               // 0x58(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundCue*                             OpenGenericSFX_Sound;                              // 0x60(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundCue*                             UpgradeSilverVO_Sound;                             // 0x68(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundCue*                             UpgradeSilverSFX_Sound;                            // 0x70(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundCue*                             OpenSilverVO_Sound;                                // 0x78(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundCue*                             OpenSilverSFX_Sound;                               // 0x80(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundCue*                             UpgradeGoldVO_Sound;                               // 0x88(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundCue*                             UpgradeGoldSFX_Sound;                              // 0x90(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundCue*                             OpenGoldVO_Sound;                                  // 0x98(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundCue*                             OpenGoldSFX_Sound;                                 // 0xA0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundCue*                             GreetGenericVO_Sound;                              // 0xA8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundCue*                             GreetAxeVO_Sound;                                  // 0xB0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundCue*                             GreetBaseballBatVO_Sound;                          // 0xB8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundCue*                             GreetGardenHoeVO_Sound;                            // 0xC0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundCue*                             GreetGardenRakeVO_Sound;                           // 0xC8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundCue*                             GreetHockeyStickVO_Sound;                          // 0xD0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundCue*                             GreetPickAxeVO_Sound;                              // 0xD8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundCue*                             GreetPitchforkVO_Sound;                            // 0xE0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundCue*                             GreetScytheVO_Sound;                               // 0xE8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundCue*                             GreetSledgehammerVO_Sound;                         // 0xF0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundCue*                             GreetSwordVO_Sound;                                // 0xF8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundCue*                             PreHitVO_Sound;                                    // 0x100(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundCue*                             DropMusic_Sound;                                   // 0x108(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundCue*                             OpenMusic_Sound;                                   // 0x110(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortPackPersonality");
		return Clss;
	}

};

// 0x88 (0x4E8 - 0x460)
// Class FortniteGame.FortPartyBeaconClient
class AFortPartyBeaconClient : public APartyBeaconClient
{
public:
	struct FEmptyServerReservation               PendingEmptyReservation;                           // 0x460(0x58)(Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_1EDD[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        ReconnectionInitialTimeout;                        // 0x4D8(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ReconnectionTimeout;                               // 0x4DC(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bHasReconnected;                                   // 0x4E0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1EDE[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortPartyBeaconClient");
		return Clss;
	}

	void ServerReconnectExistingReservation(const class FString& InSessionId, const struct FUniqueNetIdRepl& RequestingPlayer);
	void ServerEmptyServerReservationRequest(const class FString& InSessionId, const struct FEmptyServerReservation& ReservationData, const struct FPartyReservation& Reservation);
	void ServerAbandonExistingReservation(const class FString& InSessionId, const struct FUniqueNetIdRepl& RequestingPlayer);
	void ClientReconnectResponse(enum class EPartyReservationResult ReservationResponse);
	void ClientAllowedToProceedFromReservationTimeout();
	void ClientAllowedToProceedFromReservation();
	void ClientAbandonResponse(enum class EPartyReservationResult ReservationResponse);
};

// 0x38 (0x408 - 0x3D0)
// Class FortniteGame.FortPartyBeaconHost
class AFortPartyBeaconHost : public APartyBeaconHost
{
public:
	uint8                                        Pad_1EDF[0x38];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortPartyBeaconHost");
		return Clss;
	}

};

// 0xA0 (0x118 - 0x78)
// Class FortniteGame.FortPartyBeaconState
class UFortPartyBeaconState : public UPartyBeaconState
{
public:
	struct FUniqueNetIdRepl                      GameSessionOwner;                                  // 0x78(0x28)(Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FEmptyServerReservation               ReservationData;                                   // 0xA0(0x58)(Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_1EE0[0x20];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortPartyBeaconState");
		return Clss;
	}

};

// 0x540 (0x568 - 0x28)
// Class FortniteGame.FortPartyContext
class UFortPartyContext : public UFortBlueprintContext
{
public:
	uint8                                        Pad_1EF3[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	UMulticastDelegateProperty_                  OnPartyJoined;                                     // 0x38(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnClientPartyStateChanged;                         // 0x48(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnPartyTypeChanged;                                // 0x58(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnCrossplayPreferenceChanged;                      // 0x68(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnPlayerStateChanged;                              // 0x78(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnAthenaNumAliveChanged;                           // 0x88(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnAthenaTimeSpentInMatch;                          // 0x98(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnAthenaReadyTypeChanged;                          // 0xA8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnPartyJoinRequested;                              // 0xB8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnPartyInvitesCountChanged;                        // 0xC8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnLFGChanged;                                      // 0xD8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_1EF4[0x60];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	UMulticastDelegateProperty_                  OnActiveFriendsCountUpdated;                       // 0x148(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnLocalPlayerStateChanged;                         // 0x158(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnPartyLeft;                                       // 0x168(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_1EF5[0xE8];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UFortSocialUser*>               FriendsNeedingPartyUpdate;                         // 0x260(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1EF6[0x28];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<enum class EFortTeam, class UFortUITeamInfo*> TeamsMap;                                          // 0x298(0x50)(ZeroConstructor, NativeAccessSpecifierPrivate)
	TMap<struct FUniqueNetIdRepl, class AFortPlayerState*> UnassignedPlayerStatesByID;                        // 0x2E8(0x50)(ZeroConstructor, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1EF7[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UFortUITeamInfo*                       LocalPlayerTeam;                                   // 0x358(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1EF8[0x48];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TSet<struct FFortTeamMemberInfo>             PendingChangedMemberInfos;                         // 0x3A8(0x50)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1EF9[0x168];                                   // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bShouldTryToJoinEpicPartyOnConsoleFailure;         // 0x560(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1EFA[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortPartyContext");
		return Clss;
	}

	void ShowLocalPlayerExternalProfile();
	void ShowExternalProfile(struct FUniqueNetIdRepl& ProfileToShow);
	void ShowExternalFriendsUI();
	void ShowCrossplaySelectionDialog();
	bool ShouldShowMainMenuFriendsListButton();
	bool ShouldShowExternalFriendsUI();
	bool ShouldShowCrossplayWarningDialog();
	bool ShouldMcpPartyInvitesBeEnabled();
	void SetPartyPrivacySetting(enum class EPartyType PartyType, bool bLeaderFriendsOnly, bool bLeaderInvitesOnly);
	void SetMcpPartyInvitesEnabled(bool bEnabled);
	void SetLocalPlayerLFG(bool bInLFG);
	void SetLocalPartyMemberLocation(enum class EFortPartyMemberLocation Location);
	void SetLocalPartyMemberEmoting(class UFortMontageItemDefinitionBase* EmoteAsset);
	void SendTeamMemberFriendRequest(struct FFortTeamMemberInfo& TeamMemberInfo);
	void SendPartyInviteNetID(struct FUniqueNetIdRepl& PlayerID);
	void SendMcpFriendRequest(struct FUniqueNetIdRepl& PlayerID);
	void SendConsoleFriendRequest(struct FUniqueNetIdRepl& PlayerID);
	void ProcessPendingChangedMemberInfos();
	void OnTimeSpentInMatchChanged__DelegateSignature(struct FUniqueNetIdRepl& UniqueId, class FText& Mins, class FText& Seconds);
	void OnPlayerStateChangedDelegate__DelegateSignature(struct FFortTeamMemberInfo& PlayerInfo);
	void OnPartyTypeChanged__DelegateSignature(enum class EPartyType PartyType);
	void OnPartyLeftDelegate__DelegateSignature();
	void OnPartyJoinRequested__DelegateSignature();
	void OnPartyJoinedDelegate__DelegateSignature();
	void OnPartyInvitesCountUpdatedDelegate__DelegateSignature(int32 PartyInvitesCount);
	void OnNumAliveChanged__DelegateSignature(struct FUniqueNetIdRepl& UniqueId, int32 NumAlive);
	void OnLFGChanged__DelegateSignature(bool bLFG);
	void OnFriendsCountChangedDelegate__DelegateSignature(int32 ActiveFriendsCount);
	void OnCrossplayPreferenceChanged__DelegateSignature();
	void OnClientPartyStateChanged__DelegateSignature(enum class EFortPartyState PartyState);
	void LeaveParty();
	void LeaveAction();
	bool IsValidNetID(struct FUniqueNetIdRepl& UniqueNetId);
	bool IsTeamMemberFriend(struct FFortTeamMemberInfo& TeamMemberInfo);
	bool IsPlayerInOurParty(struct FUniqueNetIdRepl& PlayerIdToCheck);
	bool IsNetIdFromLocalPlayersPlatform(struct FUniqueNetIdRepl& PlayerID);
	bool IsLocalPlayerPartyLeader();
	bool IsLocalPlayerLFG();
	bool IsLocalPlayerInParty();
	bool IsInLocalPlayersParty(struct FUniqueNetIdRepl& PlayerID);
	bool IsEntirePartyInFrontEnd();
	bool HasPendingMcpPartyInvitation(struct FUniqueNetIdRepl& PlayerID);
	bool GetPartyPrivacySetting(enum class EPartyType* OutPartyType, bool* OutLeaderFriendsOnly, bool* OutLeaderInvitesOnly);
	bool GetPartyMemberLocation(struct FUniqueNetIdRepl& MemberId, enum class EFortPartyMemberLocation* LocationOut);
	enum class ECommonInputType GetPartyMemberInputType(struct FUniqueNetIdRepl& MemberId);
	enum class EFortPartyMemberDisplayState GetPartyMemberDisplayState(struct FFortTeamMemberInfo& PartyMemberInfo);
	int32 GetNumPlayersInLocalParty();
	enum class EFortFriendRequestStatus GetMcpFriendRequestStatusForPlayer(struct FUniqueNetIdRepl& PlayerID);
	int32 GetMaxTeamSizeForSelectedTheater();
	bool GetLocalTeamTeamMemberInfo(class AFortPlayerState* TeamMemberState, struct FFortTeamMemberInfo* TeamMemberInfo);
	void GetLocalPlayerTeamMemberInfo(struct FFortTeamMemberInfo* LocalPlayerInfo);
	class UFortUITeamInfo* GetLocalPlayerTeam();
	class FString GetLocalPlayerDisplayName();
	enum class EFortPartyState GetLocalPartyProgression();
	bool GetLocalPartyMemberLocation(enum class EFortPartyMemberLocation* Location);
	enum class EFortFriendRequestStatus GetFriendRequestStatusForTeamMember(struct FFortTeamMemberInfo& TeamMemberInfo, struct FUniqueNetIdRepl* UniqueIdUsed, bool* bIsMcpId);
	int32 GetCurrentPartyMaxSize();
	enum class EFortFriendRequestStatus GetConsoleFriendRequestStatusForPlayer(struct FUniqueNetIdRepl& PlayerID);
	enum class EAthenaPartyMemberReadyType GetAthenaPartyMemberReadyType(struct FUniqueNetIdRepl& MemberId);
	class FText GetAthenaPartyMemberReadyText(struct FUniqueNetIdRepl& MemberId);
	bool CanShowExternalProfile(const class FString& TargetPlatform);
	bool CanBeInvitedNetID(struct FUniqueNetIdRepl& PlayerID);
	void AthenaPartyMemberReadyTypeChanged__DelegateSignature(struct FUniqueNetIdRepl& UniqueId, enum class EAthenaPartyMemberReadyType MemberReadyType);
	void AcceptMcpFriendRequest(struct FUniqueNetIdRepl& PlayerID);
};

// 0x80 (0xA8 - 0x28)
// Class FortniteGame.FortPathCostEstimator
class UFortPathCostEstimator : public UObject
{
public:
	class AActor*                                GoalActor;                                         // 0x28(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AFortNavigationGraph*                  NavGraph;                                          // 0x30(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1EFB[0x70];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortPathCostEstimator");
		return Clss;
	}

};

// 0x0 (0x28 - 0x28)
// Class FortniteGame.FortPatrolWardInterface
class UFortPatrolWardInterface : public UInterface
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortPatrolWardInterface");
		return Clss;
	}

	enum class EWardAffectType GetAffectingType();
	float GetAffectingDistance();
};

// 0x0 (0x1100 - 0x1100)
// Class FortniteGame.FortPawn_FeedbackAnnouncer
class AFortPawn_FeedbackAnnouncer : public AFortPawn
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortPawn_FeedbackAnnouncer");
		return Clss;
	}

};

// 0x10 (0x1F80 - 0x1F70)
// Class FortniteGame.FortPawn_Flinger
class AFortPawn_Flinger : public AFortAIPawn
{
public:
	float                                        SlowShackleScale;                                  // 0x1F70(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1EFC[0xC];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortPawn_Flinger");
		return Clss;
	}

	void SetScalarParameterOnAllCharacterMIDs(class FName ParameterName, float ScalarValue);
	void RestorePreviousMaterialOnCharacterMesh(float ScalarValue);
	void OverrideMaterialAndCopyParametersOnCharacterMesh(class UMaterialInterface* NewMaterialToApply);
};

// 0x10 (0x1F80 - 0x1F70)
// Class FortniteGame.FortPawn_InteractablePawn
class AFortPawn_InteractablePawn : public AFortAIPawn
{
public:
	struct FGuid                                 MyGuid;                                            // 0x1F70(0x10)(ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortPawn_InteractablePawn");
		return Clss;
	}

	void BlueprintOnInteract(class AFortPawn* InteractingPawn);
	void BlueprintOnBeginInteract();
	class FText BlueprintGetInteractionString(class AFortPawn* InteractingPawn);
	bool BlueprintCanInteract(class AFortPawn* InteractingPawn);
};

// 0x20 (0x1F90 - 0x1F70)
// Class FortniteGame.FortPawn_Taker
class AFortPawn_Taker : public AFortAIPawn
{
public:
	float                                        SlowShackleScale;                                  // 0x1F70(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bUseClimbLinks : 1;                                // Mask : 0x1 0x1F74(0x1)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1EFE[0xB];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FBuildingHitTime>              BuildingCollisions;                                // 0x1F80(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortPawn_Taker");
		return Clss;
	}

	void SetScalarParameterOnAllCharacterMIDs(class FName ParameterName, float ScalarValue);
	void RestorePreviousMaterialOnCharacterMesh(float ScalarValue);
	void OverrideMaterialAndCopyParametersOnCharacterMesh(class UMaterialInterface* NewMaterialToApply);
};

// 0x10A0 (0x21A0 - 0x1100)
// Class FortniteGame.FortPlayerPawn
class AFortPlayerPawn : public AFortPawn
{
public:
	uint8                                        Pad_1F11[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        JumpLastActivatedTime;                             // 0x1118(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        CrouchMeshOffset;                                  // 0x111C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1F12[0x2C];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FFortAthenaVehicleInputStateUnreliable VehicleInputStateUnreliable;                       // 0x114C(0x28)(Net, RepNotify, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_1F13[0x48];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bIsOutsideSafeZone;                                // 0x11BC(0x1)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsNearSafeZoneEdge;                               // 0x11BD(0x1)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bPlayingSafeZoneEffects;                           // 0x11BE(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDoSafeZoneCleanup;                                // 0x11BF(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        OutsideSafeZoneBlendSpeed;                         // 0x11C0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CurrentOutsideSafeZonePPVBlend;                    // 0x11C4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TargetOutsideSafeZonePPVBlend;                     // 0x11C8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1F14[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UPostProcessComponent*                 OutsideSafeZonePPComponent;                        // 0x11D0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UGameplayEffect>           SafeZoneAppliedGE;                                 // 0x11D8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1F15[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class UGameplayEffect>           SelfReviveGameplayEffect;                          // 0x11F8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UGameplayEffect>           TeammateReviveGameplayEffect;                      // 0x1200(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FScalableFloat                        SetByCallerReviveHealth;                           // 0x1208(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	class FName                                  DBNOInteractionCollisionProfile;                   // 0x1228(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               DBNOInteractionBoxExtent;                          // 0x1230(0xC)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DBNODeferTime;                                     // 0x123C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBoxComponent*                         DBNOInteractCollisionComponent;                    // 0x1240(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTag                          EventReviveTag;                                    // 0x1248(0x8)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        AggroRangeOverride;                                // 0x1250(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EFortPawnStasisMode               StasisMode;                                        // 0x1254(0x1)(Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortPawnStasisMode               PreviousStasisMode;                                // 0x1255(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1F16[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UBuildingEditModeMetadata*             LastBuildingMetadata;                              // 0x1258(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1F17[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bIsSprintJump;                                     // 0x1268(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1F18[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        SprintCancelTime;                                  // 0x126C(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FZiplinePawnState                     ZiplineState;                                      // 0x1270(0x28)(Net, Transient, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FCurveTableRowHandle                  ZiplineJumpDampening;                              // 0x1298(0x10)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FCurveTableRowHandle                  ZiplineJumpStrength;                               // 0x12A8(0x10)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FScalableFloat                        ZiplineJumpActivateDelay;                          // 0x12B8(0x20)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                        ZiplineRentryProtectionDelay;                      // 0x12D8(0x20)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	bool                                         bIsUsingJetpack;                                   // 0x12F8(0x1)(Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bCanPredictJumpApex;                               // 0x12F9(0x1)(Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1F19[0xE];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class AFortAIPawn*>                   AbilityAITargets;                                  // 0x1308(0x10)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_1F1A[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UAnimMontage*                          UnableToPerformActionMontage;                      // 0x1330(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USoundBase*                            UnableToPerformActionSound;                        // 0x1338(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MoveSoundStimulusBroadcastInterval;                // 0x1340(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1F1B[0xE4];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        EmoteStartTime;                                    // 0x1428(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bPlayingPassengerToPassengerAnimation;             // 0x142C(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1F1C[0xB];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bPlayingDriverToPassengerAnimation;                // 0x1438(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1F1D[0xF];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bPlayingPassengerToDriverAnimation;                // 0x1448(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1F1E[0xF];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bCameraLockedForVehicleSeatTransition;             // 0x1458(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1F1F[0xF];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        VehicleSpeedAtTimeOfJump;                          // 0x1468(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1F20[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVehiclePawnState                     VehicleStateRep;                                   // 0x1470(0x20)(Net, RepNotify, NoDestructor, NativeAccessSpecifierPublic)
	struct FVehiclePawnState                     VehicleStateLocal;                                 // 0x1490(0x20)(Transient, NoDestructor, NativeAccessSpecifierPublic)
	struct FVehiclePawnState                     VehicleStateLastTick;                              // 0x14B0(0x20)(Transient, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_1F21[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class ABuildingGameplayActor*                BalloonRope;                                       // 0x14E8(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShowingOverdriveEffect;                           // 0x14F0(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EFortBuildingState                BuildingState;                                     // 0x14F1(0x1)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsTargeting;                                      // 0x14F2(0x1)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1F22[0x35];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	int64                                        SlopeCameraOffsetFrameCounter;                     // 0x1528(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVectorRK4SpringInterpolator          SlopeCameraOffsetInterpolator;                     // 0x1530(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1F23[0x48];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGuid                                 LastEquippedWeaponOrGadgetGUID;                    // 0x1580(0x10)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1F24[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UInputComponent*                       VehicleInputComponent;                             // 0x15A0(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1F25[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UAnimMontage*                          BluePrintPlaceAnimation;                           // 0x15B0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                          BluePrintEditAnimation;                            // 0x15B8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1F26[0xC];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	uint8                                        bPawnLODDirty : 1;                                 // Mask : 0x1 0x15CC(0x1)(Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1F27[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bStartedInteractSearch;                            // 0x15CE(0x1)(Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1F28[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	UMulticastDelegateProperty_                  OnStartedInteractSearch;                           // 0x15D0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	UMulticastDelegateProperty_                  OnEndedInteractSearch;                             // 0x15E0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	UMulticastDelegateProperty_                  OnPartChanged;                                     // 0x15F0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UMaterialInstanceDynamic*              BlueprintPaperMID;                                 // 0x1600(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FTimeline                             BlueprintPaperPulseTimeline;                       // 0x1608(0x98)(Transient, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	class UCustomColorComponent*                 AccessoryColorSwatchHandler;                       // 0x16A0(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1F29[0x28];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TWeakObjectPtr<class UFortHero>              Hero;                                              // 0x16D0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCustomPlayerComponent*                HACK_CustomPRIComponent;                           // 0x16D8(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	enum class EFortCustomGender                 CharacterGender;                                   // 0x16E0(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	enum class EFortCustomBodyType               CharacterBodyType;                                 // 0x16E1(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1F2A[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UCustomCharacterPart*                  CharacterParts;                                    // 0x16E8(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1F2B[0x28];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UCustomColorSwatch*                    CharacterColorSwatches;                            // 0x1718(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1F2C[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UCustomColorSwatch*                    CharacterPartColorSwatches;                        // 0x1728(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1F2D[0x28];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bCharacterPartsCastIndirectShadows;                // 0x1758(0x1)(ZeroConstructor, Transient, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1F2E[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class USkeletalMeshComponentBudgeted*        CharacterPartSkeletalMeshComponents;               // 0x1760(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1F2F[0x28];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UCustomCharacterPart*                  PreviousCharacterParts;                            // 0x1790(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1F30[0x28];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class ACustomCharacterPartModifier*          CharacterPartModifiers;                            // 0x17C0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1F31[0x28];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FFortCharacterPartsRepMontageInfo     RepCharPartAnimMontageInfo;                        // 0x17F0(0x20)(Net, Transient, RepNotify, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1F32[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FFortClientObservedStatArray          ClientObservedStats;                               // 0x1818(0xE0)(Net, Transient, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1F33[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class UAnimInstance>             AnimBPOverride;                                    // 0x1910(0x8)(Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UAnimInstance>             OriginalAnimBP;                                    // 0x1918(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFortFootstepAudioBank*                FootstepBankOverride;                              // 0x1920(0x8)(Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFortFootstepAudioBank*                OriginalFootstepBank;                              // 0x1928(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class AFortPickup*>                   QueuedAutoPickups;                                 // 0x1930(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	struct FScalableFloat                        AutoPickupDropRepickupDelay;                       // 0x1940(0x20)(Edit, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_1F34[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  CarriedObjectAttachmentSocket;                     // 0x1968(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        PickupSpeedMultiplier;                             // 0x1970(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1F35[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FSlateBrush                           MiniMapIconBrush;                                  // 0x1978(0x88)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FSlateBrush                           AboveBelowMiniMapIconBrush;                        // 0x1A00(0x88)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FSlateBrush                           FarOffMiniMapIconBrush;                            // 0x1A88(0x88)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FSlateBrush                           DBNOMiniMapIconBrush;                              // 0x1B10(0x88)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FLinearColor                          MinimapIconColorSelf;                              // 0x1B98(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLinearColor                          MinimapIconColorTeammate;                          // 0x1BA8(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLinearColor                          MinimapIconColorEnemy;                             // 0x1BB8(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MaxIndicatorVisibilityDistForEnemies;              // 0x1BC8(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MaxIndicatorVisibilityDistForAllies;               // 0x1BCC(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1F36[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	uint16                                       PackedReplicatedSlopeAngles;                       // 0x1BE8(0x2)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bBeingRepossessed;                                 // 0x1BEA(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bInitAbilitySystemComponentFromPlayerState;        // 0x1BEB(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1F37[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	UMulticastDelegateProperty_                  OnFinishedCharacterCustomization;                  // 0x1BF0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UFortCustomizationAssetLoader*         CustomizationAssetLoader;                          // 0x1C00(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1F38[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UParticleSystem*                       SpawnParticles;                                    // 0x1C18(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USoundBase*                            SpawnSound;                                        // 0x1C20(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        NumSecondsOnGroundBeforeStoppingRagdoll;           // 0x1C28(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1F39[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	uint8                                        : 3;                                               // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        bIsLocalPlayer : 1;                                // Mask : 0x8 0x1C30(0x1)(Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        : 1;                                               // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        bIsInCharacterCustomization : 1;                   // Mask : 0x20 0x1C30(0x1)(Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bDontCrossArms : 1;                                // Mask : 0x40 0x1C30(0x1)(Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bDamagedEnemy : 1;                                 // Mask : 0x80 0x1C30(0x1)(Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1F3A[0x17];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	uint32                                       PlayerStatus;                                      // 0x1C48(0x4)(Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint16                                       AccelerationPack;                                  // 0x1C4C(0x2)(Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int8                                         AccelerationZPack;                                 // 0x1C4E(0x1)(Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1F3B[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UFortAnimNotifyState_RootMotionInterrupt*> RootMotionInterruptNotifyStack;                    // 0x1C50(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	TArray<class UAnimMontage*>                  RootMotionInterruptMontageStack;                   // 0x1C60(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1F3C[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UFortVisibilityComponent*              VisibilityComponent;                               // 0x1C90(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPostProcessComponent*                 BlendablesPostProcessComp;                         // 0x1C98(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1F3D[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	uint8                                        bUseControllerRotationYawToRestore : 1;            // Mask : 0x1 0x1CA8(0x1)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1F3E[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	UMulticastDelegateProperty_                  OnBeginSkydivingEvent;                             // 0x1CB0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnEndSkydivingEvent;                               // 0x1CC0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnBallooningGravityCeilingChanged;                 // 0x1CD0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	bool                                         bBalloonMovementActivated;                         // 0x1CE0(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1F3F[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<enum class EFortCustomMovement, class UTexture*> CustomMovementIndicators;                          // 0x1CE8(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_1F40[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class USoundBase*                            CurrentGliderOpenSound;                            // 0x1D40(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class UAudioComponent>        CurrentGliderOpenAudioComponent;                   // 0x1D48(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USoundBase*                            CurrentGliderCloseSound;                           // 0x1D50(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class UAudioComponent>        CurrentGliderCloseAudioComponent;                  // 0x1D58(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1F41[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bInGliderRedeploy;                                 // 0x1D70(0x1)(Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1F42[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FRepFortMeshAttachment                AttachmentMesh;                                    // 0x1D78(0x10)(Net, RepNotify, NoDestructor, Protected, NativeAccessSpecifierProtected)
	class USkeletalMeshComponentBudgeted*        AttachmentMeshComponent;                           // 0x1D88(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFortPawnScriptedBehavior*             BotScriptedBehavior;                               // 0x1D90(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsScriptedBot;                                    // 0x1D98(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1F43[0x1F];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVortexParams                         VortexParams;                                      // 0x1DB8(0x10)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FSlipperySlopeParams                  SlipperySlopeParams;                               // 0x1DC8(0x160)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class UAthenaGliderItemDefinition*           GliderClass;                                       // 0x1F28(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1F44[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bIsSkydiving;                                      // 0x1F40(0x1)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bLocalIsSkydiving;                                 // 0x1F41(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bIsParachuteOpen;                                  // 0x1F42(0x1)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bIsParachuteForcedOpen;                            // 0x1F43(0x1)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bIsSkydivingFromBus;                               // 0x1F44(0x1)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bIsSkydivingFromLaunchPad;                         // 0x1F45(0x1)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bPendingSkydiveLaunch;                             // 0x1F46(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bIsInVortex;                                       // 0x1F47(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bReplicatedIsInVortex;                             // 0x1F48(0x1)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bIsInSlipperyMovement;                             // 0x1F49(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bReplicatedIsInSlipperyMovement;                   // 0x1F4A(0x1)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bIsBelowAutoDeployTestHeight;                      // 0x1F4B(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bIsSlopeSliding;                                   // 0x1F4C(0x1)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bIsProxySimulationTimedOut;                        // 0x1F4D(0x1)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bIsPedestalHero;                                   // 0x1F4E(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1F45[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AFortPlayerPetRepState*                PetState;                                          // 0x1F50(0x8)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AFortPlayerPet*                        CosmeticPetInstance;                               // 0x1F58(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1F46[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class AFortPlayerParachute*                  ParachuteAttachment;                               // 0x1F70(0x8)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  ParachuteAttachSocket;                             // 0x1F78(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FScalableFloat                        ParachuteDeployTraceForGroundDistance;             // 0x1F80(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                        LaunchPadParachuteDeployTraceForGroundDistance;    // 0x1FA0(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                        LaunchPadParachuteDeployTraceForDownwardSpeed;     // 0x1FC0(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                        ParachuteDeployVelocityBlend;                      // 0x1FE0(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	float                                        ParachuteCooldownToOpen;                           // 0x2000(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ParachuteCooldownToClose;                          // 0x2004(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bParachuteDeployFixedVerticalDistance;             // 0x2008(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1F47[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FScalableFloat                        GliderRedeployAllowedRow;                          // 0x2010(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                        GliderRedeployLateralVelocityMultiplierRow;        // 0x2030(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                        GliderRedeployHeighLimitRow;                       // 0x2050(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                        BalloonFallDamageThresholdVelocityZ;               // 0x2070(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	uint8                                        BalloonActiveCount;                                // 0x2090(0x1)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1F48[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class UAnimInstance>             PreDrivingAnimBP;                                  // 0x2098(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAudioComponent*                       ParachuteAudioLoop;                                // 0x20A0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ParachuteAndSkydiveAudioFadeInTime;                // 0x20A8(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ParachuteAndSkydiveAudioFadeOutTime;               // 0x20AC(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAudioComponent*                       SkydiveAudioLoop;                                  // 0x20B0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USoundBase*                            SkydivingLoop1P;                                   // 0x20B8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USoundBase*                            SkydivingLoop3P;                                   // 0x20C0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USoundBase*                            ParachuteOpenLoop1P;                               // 0x20C8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USoundBase*                            ParachuteOpenLoop3P;                               // 0x20D0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1F49[0x2C];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	uint32                                       RemoteViewData32;                                  // 0x2104(0x4)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1F4A[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        LastQuickBarSwitchRequestTime;                     // 0x2110(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bBuildHotfix;                                      // 0x2114(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1F4B[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        CrouchStartTime;                                   // 0x2118(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CrouchEndTime;                                     // 0x211C(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CrouchLerpTime;                                    // 0x2120(0x4)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MeleeAbilityCooldown;                              // 0x2124(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class AFortRemoteControlledPawnAthena> ControlledRCPawn;                                  // 0x2128(0x8)(Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EFortTeam                         CachedTeamControllingRC;                           // 0x2130(0x1)(Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1F4C[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FRotator                              StoredControlRotation;                             // 0x2134(0xC)(Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, Protected, NativeAccessSpecifierProtected)
	float                                        GhostModeExitStartTime;                            // 0x2140(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        GhostModeExitDuration;                             // 0x2144(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1F4D[0x58];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortPlayerPawn");
		return Clss;
	}

	void VerifySkydivingMatchesServer();
	void UpdateAimbotDetectionStatus();
	void UnlockCameraAfterVehicleSeatTransition();
	void UnableToPerformAction(bool bPlayMontage, struct FGameplayTagContainer& FailedReason);
	void ToggleGender();
	void ToggleBodyType();
	float TimeFromJumpApex();
	void SwitchToPreviousPart(const class FString& PartName);
	void SwitchToNextPart(const class FString& PartName);
	void StopItemInteractionAbility(enum class EItemInteractionStatus ItemInteractionStatus);
	void StartGhostModeExit(float InGhostModeExitDuration);
	void StartedInteractSearch();
	bool ShouldPlayDeathAnimation();
	bool ShouldDriverHaveReticle();
	void SetVehicleOverrideExit(bool bIgnoreLaunch);
	void SetStasisMode(enum class EFortPawnStasisMode InStasisMode);
	void SetPetType(class UAthenaPetItemDefinition* PetToCreate);
	void SetPendingSkydiveLaunch(bool bPending);
	void SetNumActiveBalloons(int32 NewBalloonCount);
	void SetInVortex(bool bNewValue, float UpwardLaunchVelocity, float GravityFloorAltitude, float GravityFloorWidth, float GravityFloorGravityScalar, float GravityFloorTerminalVelocity);
	void SetInSlipperyMovement(bool bIsSlippery);
	void SetHomeActor(class AActor* NewActor);
	void SetFirstPersonCamera(bool bNewUseFirstPersonCamera);
	void SetBalloonRope(class ABuildingGameplayActor* InBalloonRope);
	void ServerUpdateVehicleInputStateUnreliable(const struct FFortAthenaVehicleInputStateUnreliable& ReliableInput, float Timestamp);
	void ServerUpdateVehicleInputStateReliable(const struct FFortAthenaVehicleInputStateReliable& ReliableInput);
	void ServerToggleGender();
	void ServerToggleBodyType();
	void ServerSetAttachment(const struct FRepFortMeshAttachment& Attachment);
	void ServerSetAimbotDetection(bool bEnableDetection);
	void ServerSendZiplineState(struct FZiplinePawnState& InZiplineState);
	void ServerSendAimbotDetectionStatus(TArray<uint8>& Payload);
	void ServerRootMotionInterruptNotifyStopMontage(class UAnimMontage* MontageToStop);
	void ServerReviveFromDBNO(class AController* EventInstigator);
	void ServerRespawnFromDBNO();
	void ServerPlayUnableToPerformActionMontage();
	class AFortAthenaVehicle* ServerOnExitVehicle();
	void ServerHandlePickupWithSwap(class AFortPickup* Pickup, const struct FGuid& Swap, float InFlyTime, const struct FVector& InStartDirection, bool bPlayPickupSound);
	void ServerHandlePickup(class AFortPickup* Pickup, float InFlyTime, const struct FVector& InStartDirection, bool bPlayPickupSound);
	void ServerCyclePart(enum class EFortCustomPartType Part, bool bNextPart);
	void ServerCycleColorSwatch(enum class EColorSwatchType SwatchType, bool bNext);
	void ServerCycleAccessoryColorSwatch(enum class EFortCustomPartType Part, bool bNext);
	void ServerChoosePart(enum class EFortCustomPartType Part, class UCustomCharacterPart* ChosenCharacterPart);
	void ServerChooseGender(enum class EFortCustomGender Gender);
	void SafeZoneStatusChanged();
	void ReviveFromDBNO(class AController* EventInstigator);
	void ResetClothAndDynamics();
	void RemoveAttachment();
	void RemoveAbilityAITarget(class AFortAIPawn* InTarget);
	void RandomizeCharacter(const class FString& GenderString);
	void PushFootstepBankOverride(int32 Priority, class UFortFootstepAudioBank* InFootstepBankOverride);
	void PushAnimBPOverride(int32 Priority, TSubclassOf<class UAnimInstance> InAnimBPOverride);
	void PopFootstepBankOverride(int32 Priority, class UFortFootstepAudioBank* InFootstepBankOverride);
	void PopAnimBPOverride(int32 Priority, TSubclassOf<class UAnimInstance> InAnimBPOverride);
	void PassengerToPassengerAnimationStopped();
	void PassengerToDriverAnimationStopped();
	void OnStartLongInteract(class AActor* ReceivingActor, bool* Out_bConsumeEvent, bool* Out_bSkipSetInteractDuration, bool* Out_bSkipStartAnimation, enum class EItemInteractionType* Out_ItemInteractionType);
	void OnSlidingStateChanged(bool bNewSlidingState);
	void OnRep_VehicleInputStateUnreliable();
	void OnRep_StoredControlRotation();
	void OnRep_StartedInteractSearch();
	void OnRep_ReplicatedIsInVortex();
	void OnRep_ReplicatedIsInSlipperyMovement();
	void OnRep_ParachuteAttachment();
	void OnRep_IsTargeting();
	void OnRep_IsSlopeSliding();
	void OnRep_IsSkydivingFromBus();
	void OnRep_IsSkydiving(bool bPreviousState);
	void OnRep_IsParachuteOpen(bool bPreviousState);
	void OnRep_IsOutsideSafeZone();
	void OnRep_InVehicle();
	void OnRep_FootstepBankOverride();
	void OnRep_ControlledRCPawn();
	void OnRep_CharPartAnimMontageInfo();
	void OnRep_AttachmentMesh();
	void OnRep_AnimBPOverride();
	void OnRep_AccelerationZPack();
	void OnRep_AccelerationPack();
	void OnOpenParachute(bool* bConsumeEvent);
	void OnLockOnSearchCompleted(bool* bConsumeEvent);
	void OnLocalItemInteractionComplete(class AActor* ReceivingActor);
	void OnExitedVehicle();
	void OnEnteredVehicle();
	void OnCharacterPartsReinitialized();
	void OnCapsuleBeginOverlap(class UPrimitiveComponent* OverlappedComp, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult);
	void NotifyTeammateSkydivedFromBus();
	void MulticastUpdateVehicleInputStateReliable(const struct FFortAthenaVehicleInputStateReliable& ReliableInput);
	void MarkSafe(TSubclassOf<class UGameplayEffect> GEtoApply);
	bool LocalIsTryingToGetPickup();
	void ListCharacterParts(const class FString& GenderAndOrPartString);
	bool IsZiplining();
	bool IsUsingUmbrella();
	bool IsUsingPersonalVehicle();
	bool IsSprinting();
	bool IsSkydivingFromLaunchPad();
	bool IsSkydivingFromBus();
	bool IsSkydiving();
	bool IsPassivelySkydiving();
	bool IsParachuteOpen();
	bool IsParachuteForcedOpen();
	bool IsOperatingTurret();
	bool IsInVortex();
	bool IsInVehicle();
	bool IsInSlipperyMovement();
	bool IsInCharacterCustomization();
	bool IsDrivingVehicle();
	bool IsActivelyStrafingInAir();
	bool IsActivelySkydivingUpInVortex();
	bool IsActivelySkydiving();
	bool HasRecentlyExitedZiplineFromJumping();
	bool HasControlledRCPawn();
	void HandleInStasis();
	uint8 GetVehicleSeatIndex();
	bool GetVehicleOverrideExit();
	class AFortAthenaVehicle* GetVehicle();
	enum class EFortPawnStasisMode GetStasisMode();
	float GetStamina();
	struct FVector GetSlopeSlidingNormal();
	void GetSlopeSlidingAngles(float* LocalPitch, float* LocalRoll);
	class USkeletalMeshComponent* GetSkeletalMeshForPartType(enum class EFortCustomPartType PartType);
	float GetSimulatedAttributeValue(struct FGameplayAttribute& Attribute, float DefaultValue);
	bool GetPendingSkydiveLaunch();
	int32 GetPawnRawBudgetValue();
	int32 GetPawnLOD();
	int32 GetNumActiveBalloons();
	struct FFortNiagaraCascadeSystemPair GetNiagaraContrailParticleSystem();
	float GetMaxStamina();
	bool GetIsSlopeSliding();
	class AActor* GetHomeActor();
	void GetGender(bool* IsMale, bool* IsFemale);
	int32 GetExtraLives();
	class UParticleSystem* GetContrailParticleSystem();
	enum class EFortCustomGender GetCharacterGender();
	enum class EFortCustomBodyType GetCharacterBodyType();
	float GetBaseAimPitchQuantized();
	void ForceDetachFromRemoteControlledPawn();
	void EndZiplining(bool bFromJump);
	void EndSkydiving();
	void EndHovering();
	void EndGhostModeExit();
	void EndedInteractSearch();
	void DriverToPassengerAnimationStopped();
	bool DontCrossArms();
	void DisableFaceRotation(float DurationInSeconds, bool bSetStasis);
	void DestroyBalloonRope();
	void DebugDestroyVehicle();
	void ClientResetAbilitySystemComponent();
	void ClientNotifyAbilityFailed(class UGameplayAbility* FailedAbility, struct FGameplayTagContainer& FailedReason);
	void ClientAcknowledgeVehicleInputState(float Timestamp);
	void ClearExistingCosmeticPetInstance();
	bool CanUseInventoryAsDriver();
	bool CanShootFromVehicle();
	bool CanPredictJumpApex();
	void CancelJumpAbility();
	void BeginZiplining(class AFortAthenaZipline* Zipline, class USceneComponent* SocketComponent, class FName SocketName, const struct FVector& SocketOffset);
	void BeginSkydiving(bool bFromBus);
	void BeginHovering();
	void AnimTrailsSetup(class UParticleSystem* ParticleSystemReference, class FName FirstSocketName, class FName SecondSocketName, float Width, class UParticleSystemComponent* OverrideParticleComp, class FName OverideFirstSocketName, class FName OverideSecondSocketName);
	void AnimTrailsNotify(bool bActive);
	void AnimTrailsDisable();
	void AITargetDied(class AActor* DamagedActor, float Damage, class AController* InstigatedBy, class AActor* DamageCauser, const struct FVector& HitLocation, class UPrimitiveComponent* FHitComponent, class FName BoneName, const struct FVector& Momentum);
	void AddAttachment(class USkeletalMesh* Attachment, class UAnimBlueprint* InAnimBP);
	void AddAbilityAITarget(class AFortAIPawn* InTarget);
};

// 0xD8 (0x100 - 0x28)
// Class FortniteGame.FortPawnScriptedBehavior
class UFortPawnScriptedBehavior : public UObject
{
public:
	uint8                                        Pad_1F4E[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FScriptedAction>               ActionTemplates;                                   // 0x48(0x10)(ZeroConstructor, Config, NativeAccessSpecifierPublic)
	TArray<struct FScriptedBehavior>             ScriptedBehaviors;                                 // 0x58(0x10)(ZeroConstructor, Config, NativeAccessSpecifierPublic)
	struct FScriptedBehavior                     CurrentBehavior;                                   // 0x68(0x20)(Protected, NativeAccessSpecifierProtected)
	struct FScriptedAction                       CurrentCommand;                                    // 0x88(0x70)(Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_1F4F[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortPawnScriptedBehavior");
		return Clss;
	}

	void PlaceStructure();
};

// 0x30 (0x58 - 0x28)
// Class FortniteGame.FortBadMatchTriggers
class UFortBadMatchTriggers : public UObject
{
public:
	TArray<struct FFortBadMatchTrigger>          Triggers;                                          // 0x28(0x10)(ZeroConstructor, Config, NativeAccessSpecifierPublic)
	TArray<class FString>                        PhasesToInclude;                                   // 0x38(0x10)(ZeroConstructor, Config, NativeAccessSpecifierPublic)
	double                                       ReportProbability;                                 // 0x48(0x8)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnabled;                                          // 0x50(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnableCsvProfile;                                 // 0x51(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bUploadAllCsvs;                                    // 0x52(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1F50[0x5];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortBadMatchTriggers");
		return Clss;
	}

};

// 0x0 (0x28 - 0x28)
// Class FortniteGame.FortPermaniteStructureInterface
class UFortPermaniteStructureInterface : public UInterface
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortPermaniteStructureInterface");
		return Clss;
	}

	void OnBoundariesChanged(int32 MinLevel, int32 MaxLevel, int32 CurrentLevel);
};

// 0x10 (0x370 - 0x360)
// Class FortniteGame.FortPersistentResourceItemDefinition
class UFortPersistentResourceItemDefinition : public UFortAccountItemDefinition
{
public:
	bool                                         bIsEventItem;                                      // 0x360(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1F51[0xF];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortPersistentResourceItemDefinition");
		return Clss;
	}

	bool IsEventItem();
};

// 0x0 (0x28 - 0x28)
// Class FortniteGame.FortItemTypeFunctionLibrary
class UFortItemTypeFunctionLibrary : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortItemTypeFunctionLibrary");
		return Clss;
	}

	class FText ToText(enum class EFortItemType ItemType, bool UsePlural);
	enum class EFortItemType GetTemplateType(enum class EFortItemType ItemType);
};

// 0x0 (0xE0 - 0xE0)
// Class FortniteGame.FortPersonalVehicleItem
class UFortPersonalVehicleItem : public UFortAccountItem
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortPersonalVehicleItem");
		return Clss;
	}

};

// 0xB0 (0x410 - 0x360)
// Class FortniteGame.FortPersonalVehicleItemDefinition
class UFortPersonalVehicleItemDefinition : public UFortAccountItemDefinition
{
public:
	TSoftClassPtr<class UFortGameplayAbility>    PersonalVehicleAbility;                            // 0x360(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        MountTime;                                         // 0x388(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1F53[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftObjectPtr<class USkeletalMesh>          SkeletalMesh;                                      // 0x390(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSubclassOf<class UAnimInstance>             AnimClass;                                         // 0x3B8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class USoundBase>             ActivateSound;                                     // 0x3C0(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class USoundBase>             DeactivateSound;                                   // 0x3E8(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortPersonalVehicleItemDefinition");
		return Clss;
	}

};

// 0x60 (0x370 - 0x310)
// Class FortniteGame.FortPetAnimInstanceShared
class UFortPetAnimInstanceShared : public UFortAnimInstance
{
public:
	float                                        DeltaTime;                                         // 0x310(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1F54[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AFortPlayerPawn*                       OwnerFortPawn;                                     // 0x318(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AFortPlayerPet*                        OwnerPet;                                          // 0x320(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTagContainer                 PendingActiveVariantContextTags;                   // 0x328(0x20)(Edit, Transient, Protected, NativeAccessSpecifierProtected)
	struct FGameplayTagContainer                 ActiveVariantContextTags;                          // 0x348(0x20)(Transient, Protected, NativeAccessSpecifierProtected)
	uint8                                        bIsFrontEndPreview : 1;                            // Mask : 0x1 0x368(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bAreActiveFlagChangesPending : 1;                  // Mask : 0x2 0x368(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1F55[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortPetAnimInstanceShared");
		return Clss;
	}

};

// 0x90 (0x400 - 0x370)
// Class FortniteGame.FortPetAnimInstance
class UFortPetAnimInstance : public UFortPetAnimInstanceShared
{
public:
	struct FFortAnimInput_Skydiving              SkydivingState;                                    // 0x370(0x48)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FRotator                              SkydiveRotation;                                   // 0x3B8(0xC)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	float                                        LookAtAlpha;                                       // 0x3C4(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               LookAtTargetLocation;                              // 0x3C8(0xC)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        LookAtTargetingSpeed;                              // 0x3D4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        JumpAnimIndex;                                     // 0x3D8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SkydiveRollWhenFloating;                           // 0x3DC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SkydiveRollWhenDiving;                             // 0x3E0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SkydiveRollInterpSpeed;                            // 0x3E4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bIsFlyingPet;                                      // 0x3E8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bIsOnGround : 1;                                   // Mask : 0x1 0x3E9(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bIsSlopeSliding : 1;                               // Mask : 0x2 0x3E9(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bIsJumpLandComplete : 1;                           // Mask : 0x4 0x3E9(0x1)(Edit, BlueprintVisible, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bIsZiplining : 1;                                  // Mask : 0x8 0x3E9(0x1)(Edit, BlueprintVisible, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bIsBallooning : 1;                                 // Mask : 0x10 0x3E9(0x1)(Edit, BlueprintVisible, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bIsFlying : 1;                                     // Mask : 0x20 0x3E9(0x1)(Edit, BlueprintVisible, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bIsInAirNotJumping : 1;                            // Mask : 0x40 0x3E9(0x1)(Edit, BlueprintVisible, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bUseSkydiveRotation : 1;                           // Mask : 0x80 0x3E9(0x1)(Edit, BlueprintVisible, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bIsTargeting : 1;                                  // Mask : 0x1 0x3EA(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bIsDBNO : 1;                                       // Mask : 0x2 0x3EA(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bIsHappy : 1;                                      // Mask : 0x4 0x3EA(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bIsHunker : 1;                                     // Mask : 0x8 0x3EA(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bIsFrontEndLobbyPartyMember : 1;                   // Mask : 0x10 0x3EA(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bIsOwnerPawnBeingControlledByNonPlayerAnimBP : 1;  // Mask : 0x20 0x3EA(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        : 1;                                               // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        bIsCrouching : 1;                                  // Mask : 0x80 0x3EA(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bIsMoving2D : 1;                                   // Mask : 0x1 0x3EB(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bIsLocomotion : 1;                                 // Mask : 0x2 0x3EB(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bIsJogging : 1;                                    // Mask : 0x4 0x3EB(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bIsSprinting : 1;                                  // Mask : 0x8 0x3EB(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bIsCrouchSprinting : 1;                            // Mask : 0x10 0x3EB(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bIsCrouchMoving : 1;                               // Mask : 0x20 0x3EB(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bIsTargetingAndMoving : 1;                         // Mask : 0x40 0x3EB(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bTransition_Idle_IdleLobby : 1;                    // Mask : 0x80 0x3EB(0x1)(BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bTransition_Idle_Locomotion : 1;                   // Mask : 0x1 0x3EC(0x1)(BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bTransition_Idle_Skydive : 1;                      // Mask : 0x2 0x3EC(0x1)(BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bTransition_InnerIdle_IdleToHappy : 1;             // Mask : 0x4 0x3EC(0x1)(BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bTransition_Locomotion_StartJump : 1;              // Mask : 0x8 0x3EC(0x1)(BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bTransition_Locomotion_LocomotionHappy : 1;        // Mask : 0x10 0x3EC(0x1)(BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bTransition_Crouch_CrouchToLocomotion : 1;         // Mask : 0x20 0x3EC(0x1)(BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bTransition_Crouching_CrouchToIdle : 1;            // Mask : 0x40 0x3EC(0x1)(BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bTransition_Crouching_CrouchToCrouchADSNotMoving : 1; // Mask : 0x80 0x3EC(0x1)(BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bTransition_CrouchToCrouchADSNotMoving_Crouching : 1; // Mask : 0x1 0x3ED(0x1)(BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bTransition_SkyDive_Idle : 1;                      // Mask : 0x2 0x3ED(0x1)(BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bTransition_Hunker_Idle : 1;                       // Mask : 0x4 0x3ED(0x1)(BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bTransition_Hunker_Locomotion : 1;                 // Mask : 0x8 0x3ED(0x1)(BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bTransition_Hunker_HunkerToCrouch : 1;             // Mask : 0x10 0x3ED(0x1)(BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bTransition_DownSights_ADSToCrouch : 1;            // Mask : 0x20 0x3ED(0x1)(BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bTransition_DownSights_DownSightsToIdle : 1;       // Mask : 0x40 0x3ED(0x1)(BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bTransition_CrouchWalkingDownSights_DownSights : 1; // Mask : 0x80 0x3ED(0x1)(BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bTransition_IdleLobby_Idle : 1;                    // Mask : 0x1 0x3EE(0x1)(BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bTransition_FrontEndSkydive_LobbyHunker : 1;       // Mask : 0x2 0x3EE(0x1)(BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bTransition_FrontEndSkydive_IdleLobby : 1;         // Mask : 0x4 0x3EE(0x1)(BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bTransition_LobbyHunker_HunkerToLobby : 1;         // Mask : 0x8 0x3EE(0x1)(BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bEmotePlaying_WhereHunkeringIsBest : 1;            // Mask : 0x10 0x3EE(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bEmotePlaying_WhereHappyIsBest : 1;                // Mask : 0x20 0x3EE(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bResponse_ShouldBeHappy : 1;                       // Mask : 0x40 0x3EE(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1F57[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UFortMontageItemDefinitionBase*        LastObservedFrontEndEmote;                         // 0x3F0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1F58[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortPetAnimInstance");
		return Clss;
	}

	void TEMP_OnActiveTagChanged(const struct FGameplayTag& NewTag);
	struct FGameplayTag TEMP_GetActiveTag();
	void ApplyOrRemoveFlagsFromEmote(class UFortMontageItemDefinitionBase* Emote, bool bApply);
};

// 0x10 (0x380 - 0x370)
// Class FortniteGame.FortPetAnimInstance_AnimDynamics
class UFortPetAnimInstance_AnimDynamics : public UFortPetAnimInstanceShared
{
public:
	float                                        PawnSpeedForAnimDynamics;                          // 0x370(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        PawnSpeedForPlayingEmote;                          // 0x374(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        PawnSpeedForDBNO;                                  // 0x378(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bIsJoggingOrSprinting : 1;                         // Mask : 0x1 0x37C(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bPetWantsAnimDynamics : 1;                         // Mask : 0x2 0x37C(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bIsPlayingEmote : 1;                               // Mask : 0x4 0x37C(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bIsDBNO : 1;                                       // Mask : 0x8 0x37C(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bIsPlayingEmoteOrDBNO : 1;                         // Mask : 0x10 0x37C(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1F59[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortPetAnimInstance_AnimDynamics");
		return Clss;
	}

};

// 0x20 (0x48 - 0x28)
// Class FortniteGame.FortPetManager
class UFortPetManager : public UObject
{
public:
	TArray<class AFortPlayerPetRepState*>        RegisteredPets;                                    // 0x28(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	TArray<class AFortPlayerPetRepState*>        PetsPendingUpdate;                                 // 0x38(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortPetManager");
		return Clss;
	}

};

// 0x10 (0x40 - 0x30)
// Class FortniteGame.FortPetStimuliBank
class UFortPetStimuliBank : public UDataAsset
{
public:
	TArray<struct FPetResponseFromQuestSystem>   QuestTriggers;                                     // 0x30(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortPetStimuliBank");
		return Clss;
	}

};

// 0x60 (0x7F0 - 0x790)
// Class FortniteGame.FortPhysicsBall
class AFortPhysicsBall : public ABuildingGameplayActor
{
public:
	bool                                         bDetachRootChildrenOnServer;                       // 0x790(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bUpdateRotationOnlyIfRendered;                     // 0x791(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bRollingAudioFaded;                                // 0x792(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1F5A[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        UpdateRollingAudioRangeMeters;                     // 0x794(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USphereComponent*                      SphereCollision;                                   // 0x798(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USceneComponent*                       RotationPivot;                                     // 0x7A0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USceneComponent*                       RotatedComponent;                                  // 0x7A8(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFortVehicleAudioVoice*                RollingAudioComponent;                             // 0x7B0(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1F5B[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bEnableBackspinOnKick;                             // 0x7C8(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bApplyingBackspin;                                 // 0x7C9(0x1)(Edit, BlueprintVisible, Net, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1F5C[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        BackspinRotationScale;                             // 0x7CC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bEnableLiftAndDrag;                                // 0x7D0(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bStopLiftWhenFalling;                              // 0x7D1(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bApplyingLift;                                     // 0x7D2(0x1)(Edit, BlueprintVisible, Net, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1F5D[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        LiftFactor;                                        // 0x7D4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        StopLiftHorizontalVelocityThreshold;               // 0x7D8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        StopLiftVerticalVelocityThreshold;                 // 0x7DC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        StopLiftTimeDuration;                              // 0x7E0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        LiftDuration;                                      // 0x7E4(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DragVelocityThreshold;                             // 0x7E8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DragFactor;                                        // 0x7EC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortPhysicsBall");
		return Clss;
	}

	void UpdateDirectionAndRotation(float DeltaSeconds);
};

// 0x10 (0x340 - 0x330)
// Class FortniteGame.FortPhysicsReplicatedTargetGhost
class AFortPhysicsReplicatedTargetGhost : public AActor
{
public:
	class USkeletalMeshComponent*                SkeletalMesh;                                      // 0x330(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1F5E[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortPhysicsReplicatedTargetGhost");
		return Clss;
	}

};

// 0x30 (0x360 - 0x330)
// Class FortniteGame.FortPickaxePreviewActor
class AFortPickaxePreviewActor : public AActor
{
public:
	uint8                                        Pad_1F5F[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UAnimMontage*                          MontageToPlayForSwinging;                          // 0x340(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAthenaPickaxeItemDefinition*          CosmeticPickaxeItemDefinition;                     // 0x348(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AFortWeapon*                           WeaponActor;                                       // 0x350(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1F60[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortPickaxePreviewActor");
		return Clss;
	}

};

// 0x0 (0x638 - 0x638)
// Class FortniteGame.FortPickupAthena
class AFortPickupAthena : public AFortPickup
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortPickupAthena");
		return Clss;
	}

};

// 0x0 (0x638 - 0x638)
// Class FortniteGame.FortPickupBackpack
class AFortPickupBackpack : public AFortPickup
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortPickupBackpack");
		return Clss;
	}

};

// 0x78 (0x3A8 - 0x330)
// Class FortniteGame.FortPickupEffect
class AFortPickupEffect : public AActor
{
public:
	class UStaticMesh*                           StaticMesh;                                        // 0x330(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USkeletalMesh*                         SkeletalMesh;                                      // 0x338(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UFortAlterationItemDefinition*> ActiveAlterations;                                 // 0x340(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	class UFortWorldItemDefinition*              ItemDefinition;                                    // 0x350(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDoNotShowSpawnParticles;                          // 0x358(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDoNotTickSkeletalMeshComponents;                  // 0x359(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1F62[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               PickupColor;                                       // 0x35C(0xC)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          BackpackWorldPosition;                             // 0x368(0x10)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bOwnedByALocalPlayer : 1;                          // Mask : 0x1 0x378(0x1)(BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bOwnedByPlayer : 1;                                // Mask : 0x2 0x378(0x1)(BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1F63[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bRandomRotation;                                   // 0x37C(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1F64[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftObjectPtr<class USoundBase>             PickupByNearbyPawnSound;                           // 0x380(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortPickupEffect");
		return Clss;
	}

	void OnTossed();
	void OnPickedUp();
	void OnAttached();
	void OnAboutToEnterBackpack(class AFortPawn* PickupTarget);
	void EnableBacchusHighlight();
	void DisableBacchusHighlight();
	class UMaterialInstanceDynamic* ApplyCosmeticOverridesToMaterial(class UMeshComponent* MeshComponent, int32 MatIndex);
};

// 0xA0 (0x390 - 0x2F0)
// Class FortniteGame.FortPlaceableActorItemDefinition
class UFortPlaceableActorItemDefinition : public UFortItemDefinition
{
public:
	class UClass*                                BasePlaceableActorClass;                           // 0x2F0(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSlateBrush                           DisplayImage;                                      // 0x2F8(0x88)(BlueprintVisible, NativeAccessSpecifierPublic)
	class FName                                  ActorName;                                         // 0x380(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1F65[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortPlaceableActorItemDefinition");
		return Clss;
	}

	class FName GetActorName();
	class UFortPlaceableActorItemDefinition* CreatePlaceableActorItemDefinitionFromActor(const struct FBuildingDuplicationData& DuplicationData, const struct FSlateBrush& ImageToDisplay);
};

// 0x0 (0x358 - 0x358)
// Class FortniteGame.FortPlacedPawnMarker
class AFortPlacedPawnMarker : public ANavigationObjectBase
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortPlacedPawnMarker");
		return Clss;
	}

};

// 0x8 (0x6D0 - 0x6C8)
// Class FortniteGame.FortPlacementActor
class AFortPlacementActor : public ABuildingActor
{
public:
	TWeakObjectPtr<class AActor>                 OccupyingActor;                                    // 0x6C8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortPlacementActor");
		return Clss;
	}

};

// 0x0 (0x28 - 0x28)
// Class FortniteGame.FortPlacementActorDataProviderInterface
class UFortPlacementActorDataProviderInterface : public UInterface
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortPlacementActorDataProviderInterface");
		return Clss;
	}

};

// 0x40 (0x68 - 0x28)
// Class FortniteGame.FortPlacementActorTagTest
class UFortPlacementActorTagTest : public UObject
{
public:
	struct FGameplayTagContainer                 TagsToApplyOnSuccess;                              // 0x28(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                 TagsToApplyOnFailure;                              // 0x48(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortPlacementActorTagTest");
		return Clss;
	}

	bool ShouldApplyTagsToPlacementActor(class AFortPlacementActor* FocusPlacementActor, struct FVector& AveragePlacementActorLocation);
	bool LineTraceByChannel(class AFortPlacementActor* PlacementActor, const struct FVector& Start, const struct FVector& End, enum class ETraceTypeQuery TraceChannel, bool bTraceComplex, TArray<class AActor*>& ActorsToIgnore, struct FHitResult* OutHit, bool bIgnoreSelf);
};

// 0x3F70 (0x4280 - 0x310)
// Class FortniteGame.FortPlayerAnimInstance
class UFortPlayerAnimInstance : public UFortAnimInstance
{
public:
	uint8                                        Pad_1F6B[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        DeltaTime;                                         // 0x318(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1F6C[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AFortPlayerPawn*                       FortPlayerPawn;                                    // 0x320(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortCustomBodyType               BodyType;                                          // 0x328(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortPlayerAnimBodyType           AnimBodyType;                                      // 0x329(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortCustomGender                 Gender;                                            // 0x32A(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1F6D[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        FallAnimDuration;                                  // 0x32C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FallPlayRate;                                      // 0x330(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1F6E[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AFortPlayerPawnAthena*                 FortPlayerPawnAthena;                              // 0x338(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFortAnimInput_SpeedWarping           SpeedWarping;                                      // 0x340(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	float                                        JogStartSpeedWarpingAlpha;                         // 0x360(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1F6F[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FFortAnimInput_SpeedWarping           JogStartSpeedWarping;                              // 0x368(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	struct FFortAnimInput_HoverBoard             HoverBoardInput;                                   // 0x388(0x68)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	struct FFortAnimInput_ShoppingCart           ShoppingCartInput;                                 // 0x3F0(0x5C)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	struct FFortAnimInput_GolfCart               GolfCartInput;                                     // 0x44C(0x54)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	struct FFortAnimInput_Quad                   QuadBikeInput;                                     // 0x4A0(0x70)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	struct FFortAnimInput_MountedTurret          MountedTurretInput;                                // 0x510(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	struct FFortAnimInput_FerretVehicle          FerretVehicleInput;                                // 0x520(0x64)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	struct FFortAnimInput_Zipline                ZiplineInput;                                      // 0x584(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	struct FFortAnimInput_JackalVehicle          JackalVehicleInput;                                // 0x5A4(0x190)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	struct FFortAnimInput_CommonVehicle          CommonVehicleInput;                                // 0x734(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	struct FFortAnimInput_CommonWeapon           CommonWeaponInput;                                 // 0x740(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	struct FFortAnimInput_CreativeMoveTool       CreativeMoveToolInput;                             // 0x741(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_1F70[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FFortAnimInput_WeaponCheck            WeaponCheckInput;                                  // 0x744(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	float                                        SlopeWarpingAlpha;                                 // 0x764(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DBNOSlopeWarpingAlpha;                             // 0x768(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                              DBNOSlopeRotation;                                 // 0x76C(0xC)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	float                                        DBNOTurnPlayRate;                                  // 0x778(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1F71[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FFortAnimInput_TurnInPlace            TurnInPlaceInput;                                  // 0x780(0x58)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FRotator                              TurnPelvisRotationOffset;                          // 0x7D8(0xC)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FFortAnimInput_AdjustedAim            AdjustedAimBase;                                   // 0x7E4(0x200)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FFortAnimInput_AdjustedAim            AdjustedAimAthena;                                 // 0x9E4(0x200)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FFortAnimInput_AdjustedAim            AdjustedAim;                                       // 0xBE4(0x200)(BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, NativeAccessSpecifierPublic)
	float                                        ADSToNonADSBlendTime;                              // 0xDE4(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RightHandIKAlpha;                                  // 0xDE8(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LeftHandIKAlpha;                                   // 0xDEC(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LeftHandFKAlpha;                                   // 0xDF0(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnableHandIK;                                     // 0xDF4(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1F72[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        SnapWeapon_LHandAlpha;                             // 0xDF8(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LegIKAlpha;                                        // 0xDFC(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFortAnimInput_Skydiving              Skydiving;                                         // 0xE00(0x48)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, NativeAccessSpecifierPublic)
	bool                                         bIsSlopeSliding;                                   // 0xE48(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1F73[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        SlopeSlidingPitch;                                 // 0xE4C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SlopeSlidingRoll;                                  // 0xE50(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        JumpAdditiveLayerAlpha;                            // 0xE54(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FCachedAnimStateData                  JumpAdditiveLayerPassthrough;                      // 0xE58(0x1C)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_1F74[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FCachedAnimStateArray                 JumpAdditiveLeanOverride;                          // 0xE78(0x18)(Edit, NativeAccessSpecifierPublic)
	float                                        JumpAdditiveLeanAlpha;                             // 0xE90(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DisableArmsHeadAdditiveCurveAlpha;                 // 0xE94(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFortAnimInput_PlayerAnimAsset        CurrentAnimSet;                                    // 0xE98(0xC8)(BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, NativeAccessSpecifierPublic)
	struct FFortAnimInput_PlayerAnimAsset        DefaultAnimSetMale;                                // 0xF60(0xC8)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FFortAnimInput_PlayerAnimAsset        DefaultAnimSetFemale;                              // 0x1028(0xC8)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FFortAnimInput_PlayerAnimAsset        MaleAnimSetOverrides;                              // 0x10F0(0xC8)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_1F75[0x16A8];                                  // Fixing Size After Last Property  [ Dumper-7 ]
	struct FFortAnimInput_PlayerAnimAsset        FemaleAnimSetOverrides;                            // 0x2860(0xC8)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_1F76[0x16A8];                                  // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        AimPitchAdjustment;                                // 0x3FD0(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AimYawAdjustment;                                  // 0x3FD4(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1F77[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTransform                            LastFramePawnTransform;                            // 0x3FE0(0x30)(Transient, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	float                                        MaxAimYawAdjustment;                               // 0x4010(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxPitch;                                          // 0x4014(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxYaw;                                            // 0x4018(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ReticleAimDistance;                                // 0x401C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AimAdjustmentInterpSpeed;                          // 0x4020(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AimTwistCorrectionExponent;                        // 0x4024(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               SlopeWarpingFloorOffset;                           // 0x4028(0xC)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                              WeaponAimingFreezeInterpScale;                     // 0x4034(0xC)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	class FName                                  WeaponAimingCurveName;                             // 0x4040(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  WeaponAimingFreezeCurveName;                       // 0x4048(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                         ConsumableOffsetPose;                              // 0x4050(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bAimWeaponTowardsReticle : 1;                      // Mask : 0x1 0x4058(0x1)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bDebugWeaponAiming : 1;                            // Mask : 0x2 0x4058(0x1)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bCachedPawnTransform : 1;                          // Mask : 0x4 0x4058(0x1)(Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bHasValidWeaponMuzzleSocket : 1;                   // Mask : 0x8 0x4058(0x1)(Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bUseCustomFloorOffset : 1;                         // Mask : 0x10 0x4058(0x1)(BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bPlayConsumableOffsetPose : 1;                     // Mask : 0x20 0x4058(0x1)(BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsOnGround : 1;                                   // Mask : 0x40 0x4058(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsTargeting : 1;                                  // Mask : 0x80 0x4058(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bPlayUpperBodyTargeting : 1;                       // Mask : 0x1 0x4059(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bPlayingRootMotion : 1;                            // Mask : 0x2 0x4059(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsStunned : 1;                                    // Mask : 0x4 0x4059(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsMontagePlaying : 1;                             // Mask : 0x8 0x4059(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsPlayingMeleeAnim : 1;                           // Mask : 0x10 0x4059(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsGoingCommando : 1;                              // Mask : 0x20 0x4059(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bTempIsRelaxedLevel1 : 1;                          // Mask : 0x40 0x4059(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsCrouching : 1;                                  // Mask : 0x80 0x4059(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsCrouchSprinting : 1;                            // Mask : 0x1 0x405A(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bUsingHoverboard : 1;                              // Mask : 0x2 0x405A(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsSprinting : 1;                                  // Mask : 0x4 0x405A(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsAccelerating2D : 1;                             // Mask : 0x8 0x405A(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsMoving2D : 1;                                   // Mask : 0x10 0x405A(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsAboveMinimumLocomotionSpeed : 1;                // Mask : 0x20 0x405A(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsBackpedaling : 1;                               // Mask : 0x40 0x405A(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bShouldWalkRightFootFwd : 1;                       // Mask : 0x80 0x405A(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bShouldPlayJogStartTransition : 1;                 // Mask : 0x1 0x405B(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bShouldPlayJogStopTransition : 1;                  // Mask : 0x2 0x405B(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bShouldPlayJogPivotTransition : 1;                 // Mask : 0x4 0x405B(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bStartTransitionActive : 1;                        // Mask : 0x8 0x405B(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bStopTransitionActive : 1;                         // Mask : 0x10 0x405B(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bPivotTransitionActive : 1;                        // Mask : 0x20 0x405B(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bShouldPlayPostPivotTransition : 1;                // Mask : 0x40 0x405B(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bShouldEarlyOutStartState : 1;                     // Mask : 0x80 0x405B(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bShouldEarlyOutStopState : 1;                      // Mask : 0x1 0x405C(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bShouldEarlyOutPivotState : 1;                     // Mask : 0x2 0x405C(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsDBNO : 1;                                       // Mask : 0x4 0x405C(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsUsingJetpack : 1;                               // Mask : 0x8 0x405C(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsUsingRemoteControlPawn : 1;                     // Mask : 0x10 0x405C(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsInVehicle : 1;                                  // Mask : 0x20 0x405C(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsInShoppingCart : 1;                             // Mask : 0x40 0x405C(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsShoppingCartFrontPassenger : 1;                 // Mask : 0x80 0x405C(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsShoppingCartSidePassenger : 1;                  // Mask : 0x1 0x405D(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bHasFacialAnimationData : 1;                       // Mask : 0x2 0x405D(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bStopJogDoOnceTriggered : 1;                       // Mask : 0x4 0x405D(0x1)(Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bStartJogDoOnceTriggered : 1;                      // Mask : 0x8 0x405D(0x1)(Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bPivotTransitionDoOnceTriggered : 1;               // Mask : 0x10 0x405D(0x1)(Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bPostPivotTransitionDoOnceTriggered : 1;           // Mask : 0x20 0x405D(0x1)(Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsFallingSlow : 1;                                // Mask : 0x40 0x405D(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsFloatingHigher : 1;                             // Mask : 0x80 0x405D(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsFloatingHigherInAir : 1;                        // Mask : 0x1 0x405E(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsBalloonInAir : 1;                               // Mask : 0x2 0x405E(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bHasBalloons : 1;                                  // Mask : 0x4 0x405E(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsGhost : 1;                                      // Mask : 0x8 0x405E(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bHasIcyFeet : 1;                                   // Mask : 0x10 0x405E(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsMovingAndInMotionEmote : 1;                     // Mask : 0x20 0x405E(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsPlayingEmote : 1;                               // Mask : 0x40 0x405E(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortBuildingState                BuildingState;                                     // 0x405F(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TargetingWeight;                                   // 0x4060(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MeleeTwistCurveValue;                              // 0x4064(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        JumpUpperBodyBlendWeight;                          // 0x4068(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RightArmMaskWeight;                                // 0x406C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LeftArmMaskWeight;                                 // 0x4070(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        UpperBodyNoAdditivesMaskWeight;                    // 0x4074(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LocomotionAdditiveAlpha;                           // 0x4078(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LocalAccelYawAngle;                                // 0x407C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LocalAccelYawAngleLastTick;                        // 0x4080(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LocalAccelDeltaYawAngle;                           // 0x4084(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxSpeed;                                          // 0x4088(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        VelocityZ;                                         // 0x408C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Speed2D;                                           // 0x4090(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LocalVelocityYawAngle;                             // 0x4094(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LocalVelocityYawAngleMinusJogBlendSpaceRotation;   // 0x4098(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LocalVelocityYawAngleMinusMeleeTwist;              // 0x409C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LocalAccelVelocityYawDelta;                        // 0x40A0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SpeedAdjustedPlayRate;                             // 0x40A4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LeanAdditiveAlpha;                                 // 0x40A8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LeanAngle;                                         // 0x40AC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SprintYawAngle;                                    // 0x40B0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LocomotionTransitionAdditiveAlpha;                 // 0x40B4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        StartStateWeight;                                  // 0x40B8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        StartStateRotationMultiplier;                      // 0x40BC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        StartAnimDeltaAngleNorth;                          // 0x40C0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        StartAnimDeltaAngleEast;                           // 0x40C4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        StartAnimDeltaAngleSouth;                          // 0x40C8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        StartAnimDeltaAngleWest;                           // 0x40CC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        StopStateRotationMultiplier;                       // 0x40D0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        StopStateWeight;                                   // 0x40D4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        StopAnimDeltaAngle;                                // 0x40D8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        JogPrePivotTimer;                                  // 0x40DC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PivotStateWeight;                                  // 0x40E0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PrePivotAnimDeltaAngle;                            // 0x40E4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PostPivotAnimDeltaAngle;                           // 0x40E8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TransitionPlayRate;                                // 0x40EC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        YawDeltaCurrentTick;                               // 0x40F0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        YawDeltaLastTick;                                  // 0x40F4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        YawDeltaSmoothed;                                  // 0x40F8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AbsYawDeltaSmoothed;                               // 0x40FC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PawnToVehicleDeltaYawAngleDegrees;                 // 0x4100(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LastPawnToVehicleDeltaYawAngleDegrees;             // 0x4104(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               WorldAcceleration;                                 // 0x4108(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               LocalAcceleration;                                 // 0x4114(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               WorldVelocity;                                     // 0x4120(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               LocalVelocity;                                     // 0x412C(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               ActorSpaceVelocityDirPreTurn;                      // 0x4138(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                              ActorRotationLastTick;                             // 0x4144(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	enum class EFortWeaponCoreAnimation          WeaponCoreAnim;                                    // 0x4150(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1F78[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UFortWeaponAnimSet*                    WeaponAnimSet;                                     // 0x4158(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortCardinalDirection            PreviousFrameLocomotionCardinalDirection;          // 0x4160(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortCardinalDirection            LocomotionCardinalDirection;                       // 0x4161(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortCardinalDirection            StartTransitionInitialDirection;                   // 0x4162(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortCardinalDirection            StopCardinalDirection;                             // 0x4163(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortCardinalDirection            PrePivotCardinalDirection;                         // 0x4164(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortCardinalDirection            PostPivotCardinalDirection;                        // 0x4165(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1F79[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        TargetingSpeed;                                    // 0x4168(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        JumpUpperBodyBlendSpeed;                           // 0x416C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TargetingWeightInLocomotion;                       // 0x4170(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinimumLocomotionSpeed;                            // 0x4174(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BackpedalSpeedThresholdAngle;                      // 0x4178(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SpeedAdjustedPlayratePivotSpeed;                   // 0x417C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AuthoredCrouchSprintSpeed;                         // 0x4180(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AuthoredCrouchWalkSpeed;                           // 0x4184(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AuthoredCrouchJogSpeed;                            // 0x4188(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AuthoredSprintSpeed;                               // 0x418C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AuthoredWalkSpeed;                                 // 0x4190(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AuthoredJogBwdSpeed;                               // 0x4194(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AuthoredJogFwdSpeed;                               // 0x4198(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AuthoredJogStrafeSpeed;                            // 0x419C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LeanFadeInSpeed;                                   // 0x41A0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LeanFadeOutSpeed;                                  // 0x41A4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LeanAngleMultiplier;                               // 0x41A8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LeanAngleBackpedalMultiplier;                      // 0x41AC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SprintYawAngleInterpSpeed;                         // 0x41B0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SprintYawAngleFadeOutSpeed;                        // 0x41B4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LocomotionDeadZoneAngle;                           // 0x41B8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        StartStateRotationFadeInSpeed;                     // 0x41BC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        StopStateRotationFadeOutSpeed;                     // 0x41C0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        JogPivotTimeToPivot;                               // 0x41C4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PostPivotAnimInterpSpeed;                          // 0x41C8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxAllowedPivotRotation;                           // 0x41CC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  MeleeTwistCurveValueName;                          // 0x41D0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  MeleeAnimCurveValueName;                           // 0x41D8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  AdditiveLayerCurveValueName;                       // 0x41E0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  MaskRightArmCurveValueName;                        // 0x41E8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  StartAnimCurveValueName;                           // 0x41F0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  StopAnimCurveValueName;                            // 0x41F8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  PivotAnimCurveValueName;                           // 0x4200(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bEnableAdditiveLayer : 1;                          // Mask : 0x1 0x4208(0x1)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bShouldDisableJogTransitions : 1;                  // Mask : 0x2 0x4208(0x1)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1F7A[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  HeadTrackingReticleSocketName;                     // 0x420C(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EAxis                             HeadTrackingReticleSocketLookAtAxis;               // 0x4214(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1F7B[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        HeadTrackingReticleInterpSpeed;                    // 0x4218(0x4)(Edit, BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                              HeadTrackingReticleAdjustment;                     // 0x421C(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	float                                        HeadTrackingReticlePitchAlpha;                     // 0x4228(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HeadTrackingReticleAimDistance;                    // 0x422C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HeadTrackingReticleAimDistanceDownsights;          // 0x4230(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1F7C[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGameplayTagAnimations                GameplayTagAnimations;                             // 0x4238(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FVector                               StandardIdlePelvisOffset;                          // 0x4248(0xC)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               LargeFemaleIdlePelvisOffset;                       // 0x4254(0xC)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               IdlePelvisOffset;                                  // 0x4260(0xC)(Edit, BlueprintVisible, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        IdlePelvisOffsetAlpha;                             // 0x426C(0x4)(Edit, BlueprintVisible, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        PawnLOD;                                           // 0x4270(0x4)(Edit, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bTransition_FullBody_Sprinting : 1;                // Mask : 0x1 0x4274(0x1)(BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bTransition_FullBody_Stunned : 1;                  // Mask : 0x2 0x4274(0x1)(BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bTransition_FullBody_DBNOMove : 1;                 // Mask : 0x4 0x4274(0x1)(BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bTransition_FullBody_DBNOTurn : 1;                 // Mask : 0x8 0x4274(0x1)(BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bTransition_Fullbody_LaunchpadTakeOff : 1;         // Mask : 0x10 0x4274(0x1)(BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bEarlyOut_Lowerbody_Turns : 1;                     // Mask : 0x20 0x4274(0x1)(BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bTransition_LowerBody_Shuffle : 1;                 // Mask : 0x40 0x4274(0x1)(BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bTransition_LowerBody_Movement : 1;                // Mask : 0x80 0x4274(0x1)(BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bTransition_LocomotionAdditive_CrouchTurning : 1;  // Mask : 0x1 0x4275(0x1)(BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bLocomotion_Idles_to_Turns : 1;                    // Mask : 0x2 0x4275(0x1)(BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bFullBodyAdditives_NewFallAdditive_to_BalloonLoop : 1; // Mask : 0x4 0x4275(0x1)(BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1F7D[0xA];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortPlayerAnimInstance");
		return Clss;
	}

	void OnPlayMontageFromGameplayTagQuery(struct FGameplayTagQuery& MatchingQuery, class UAnimMontage* MontagePlaying);
	void HandleBeginSkydiving();
	float GetRelativeAngle(float MovementAngle, enum class EFortCardinalDirection Direction, bool bMirrorBackside);
	enum class EFortCardinalDirection GetCardinalDirectionFromAngle(float Angle, float DeadZoneAngle);
	void AnimNotify_StopFireFX(class UAnimNotify* Notify);
	void AnimNotify_SkydiveAdditiveEnd(class UAnimNotify* Notify);
	void AnimNotify_PlaySecondaryFireFX(class UAnimNotify* Notify);
	void AnimNotify_PlayFireFX(class UAnimNotify* Notify);
};

// 0x1A0 (0x4420 - 0x4280)
// Class FortniteGame.FortPlayerAnimInstance_ATVDriver
class UFortPlayerAnimInstance_ATVDriver : public UFortPlayerAnimInstance
{
public:
	//struct FFortAnimInput_VelocityImpact       VelocityImpact;                                    // 0x4278(0xBC)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_1F7E[0xB4];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               ImpactDisplacement;                                // 0x4334(0xC)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AbsSteerAngle;                                     // 0x4340(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1F7F[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bInAir;                                            // 0x4348(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsInRollAngleThreshold;                           // 0x4349(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsDriveStarting;                                  // 0x434A(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1F80[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               LocalLeftOffset;                                   // 0x434C(0xC)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               WorldPosLeft;                                      // 0x4358(0xC)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                              LocalRotLeftOffset;                                // 0x4364(0xC)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FRotator                              WorldRotLeft;                                      // 0x4370(0xC)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FVector                               LocalRightOffset;                                  // 0x437C(0xC)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               WorldPosRight;                                     // 0x4388(0xC)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                              LocalRotRightOffset;                               // 0x4394(0xC)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FRotator                              WorldRotRight;                                     // 0x43A0(0xC)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	bool                                         bIsSteeringRotating;                               // 0x43AC(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsStopped;                                        // 0x43AD(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsSlowingDown;                                    // 0x43AE(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsDrivingFast;                                    // 0x43AF(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsTurningRightHard;                               // 0x43B0(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsTurningLeftHard;                                // 0x43B1(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsBraking;                                        // 0x43B2(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1F81[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bIsBoosting;                                       // 0x43B4(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsJumpTrick;                                      // 0x43B5(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1F82[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        JumpPlayRate;                                      // 0x43B8(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsJumpFlipping;                                   // 0x43BC(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShouldEnableAO;                                   // 0x43BD(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsBodyDragging;                                   // 0x43BE(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1F83[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        FallDistanceJumpingThreshold;                      // 0x43C0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FallDistanceJumpTrickThreshold;                    // 0x43C4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RollAngleThreshold;                                // 0x43C8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        StartSpeedThreshold;                               // 0x43CC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SlowingSpeedThreshold;                             // 0x43D0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FastSpeedThreshold;                                // 0x43D4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BrakingDeltaThreshold;                             // 0x43D8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SteerHardAngleThreshold;                           // 0x43DC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        GroundTraceUpOffset;                               // 0x43E0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        GroundTraceLength;                                 // 0x43E4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             JumpPlayRateInRange;                               // 0x43E8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             JumpPlayRateOutRange;                              // 0x43F0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsJumpingAndNotRolling;                           // 0x43F8(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsOnGroundAndNotRolling;                          // 0x43F9(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsOnGroundAndBoosting;                            // 0x43FA(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bPlayPivotOnGroundAndNotBoosting;                  // 0x43FB(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1F84[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector2D                             LandStartPosInRange;                               // 0x4400(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             LandStartPosOutRange;                              // 0x4408(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LandStartPosition;                                 // 0x4410(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1F85[0xC];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortPlayerAnimInstance_ATVDriver");
		return Clss;
	}

	void AnimNotify_JumpEntered();
};

// 0x210 (0x4490 - 0x4280)
// Class FortniteGame.FortPlayerAnimInstance_FerretDriver
class UFortPlayerAnimInstance_FerretDriver : public UFortPlayerAnimInstance
{
public:
	//struct FFortAnimInput_VelocityImpact       VelocityImpact;                                    // 0x4278(0xBC)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_1F86[0xB4];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               ImpactDisplacement;                                // 0x4334(0xC)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AbsSteerAngle;                                     // 0x4340(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1F87[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	uint8                                        bInAir : 1;                                        // Mask : 0x1 0x4348(0x1)(BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bOnGround : 1;                                     // Mask : 0x2 0x4348(0x1)(BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsInRollAngleThreshold : 1;                       // Mask : 0x4 0x4348(0x1)(BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsDriveStarting : 1;                              // Mask : 0x8 0x4348(0x1)(BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1F88[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               LocalLeftOffset;                                   // 0x434C(0xC)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               WorldPosLeft;                                      // 0x4358(0xC)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                              LocalRotLeftOffset;                                // 0x4364(0xC)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FRotator                              WorldRotLeft;                                      // 0x4370(0xC)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FVector                               LocalRightOffset;                                  // 0x437C(0xC)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               WorldPosRight;                                     // 0x4388(0xC)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                              LocalRotRightOffset;                               // 0x4394(0xC)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FRotator                              WorldRotRight;                                     // 0x43A0(0xC)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        bIsSteeringRotating : 1;                           // Mask : 0x1 0x43AC(0x1)(BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsStopped : 1;                                    // Mask : 0x2 0x43AC(0x1)(BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsSlowingDown : 1;                                // Mask : 0x4 0x43AC(0x1)(BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsDrivingFast : 1;                                // Mask : 0x8 0x43AC(0x1)(BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsTurningRightHard : 1;                           // Mask : 0x10 0x43AC(0x1)(BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsTurningLeftHard : 1;                            // Mask : 0x20 0x43AC(0x1)(BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsBraking : 1;                                    // Mask : 0x40 0x43AC(0x1)(BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsBoosting : 1;                                   // Mask : 0x1 0x43AD(0x1)(BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsJumpTrick : 1;                                  // Mask : 0x2 0x43AD(0x1)(BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1F89[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        JumpPlayRate;                                      // 0x43B0(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsJumpFlipping : 1;                               // Mask : 0x1 0x43B4(0x1)(BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bShouldEnableAO : 1;                               // Mask : 0x2 0x43B4(0x1)(BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsBodyDragging : 1;                               // Mask : 0x4 0x43B4(0x1)(BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1F8A[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        FallDistanceJumpingThreshold;                      // 0x43B8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FallDistanceJumpTrickThreshold;                    // 0x43BC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RollAngleThreshold;                                // 0x43C0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        StartSpeedThreshold;                               // 0x43C4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SlowingSpeedThreshold;                             // 0x43C8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FastSpeedThreshold;                                // 0x43CC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BrakingDeltaThreshold;                             // 0x43D0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SteerHardAngleThreshold;                           // 0x43D4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        GroundTraceUpOffset;                               // 0x43D8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        GroundTraceLength;                                 // 0x43DC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             JumpPlayRateInRange;                               // 0x43E0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             JumpPlayRateOutRange;                              // 0x43E8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsJumpingAndNotRolling : 1;                       // Mask : 0x1 0x43F0(0x1)(BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsOnGroundAndNotRolling : 1;                      // Mask : 0x2 0x43F0(0x1)(BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsOnGroundAndBoosting : 1;                        // Mask : 0x4 0x43F0(0x1)(BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bPlayPivotOnGroundAndNotBoosting : 1;              // Mask : 0x8 0x43F0(0x1)(BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1F8B[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector2D                             LandStartPosInRange;                               // 0x43F8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             LandStartPosOutRange;                              // 0x4400(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LandStartPosition;                                 // 0x4408(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DriverAimPitch;                                    // 0x440C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DriverAimYaw;                                      // 0x4410(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EPlaneDirection                   FerretCardinalDirection;                           // 0x4414(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1F8C[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        ElevatorDeadZone;                                  // 0x4418(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RudderDeadZone;                                    // 0x441C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bFerretShouldPlayStartTransition : 1;              // Mask : 0x1 0x4420(0x1)(BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        : 1;                                               // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        bFerretShouldPlayStopTransition : 1;               // Mask : 0x4 0x4420(0x1)(BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EPlaneDirection                   FerretStopCardinalDirection;                       // 0x4421(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EPlaneDirection                   FerretPrePivotCardinalDirection;                   // 0x4422(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bFerretShouldPlayPivotTransition : 1;              // Mask : 0x1 0x4423(0x1)(BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        : 1;                                               // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        bIsFerretRotating : 1;                             // Mask : 0x4 0x4423(0x1)(BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsFerretShooting : 1;                             // Mask : 0x8 0x4423(0x1)(BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ElevatorRotation;                                  // 0x4424(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsRollingRight : 1;                               // Mask : 0x1 0x4428(0x1)(BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsRollingLeft : 1;                                // Mask : 0x2 0x4428(0x1)(BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1F8D[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               LeftHandLocalTranslateOffset;                      // 0x442C(0xC)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               RightHandLocalTranslateOffset;                     // 0x4438(0xC)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                              LeftHandLocalRotateOffset;                         // 0x4444(0xC)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FRotator                              RightHandLocalRotateOffset;                        // 0x4450(0xC)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FVector                               LeftHandComponentTranslateOffset;                  // 0x445C(0xC)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               RightHandComponentTranslateOffset;                 // 0x4468(0xC)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                              LeftHandComponentRotateOffset;                     // 0x4474(0xC)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FRotator                              RightHandComponentRotateOffset;                    // 0x4480(0xC)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_1F8E[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortPlayerAnimInstance_FerretDriver");
		return Clss;
	}

	void AnimNotify_JumpEntered();
};

// 0x0 (0x4280 - 0x4280)
// Class FortniteGame.FortPlayerAnimInstance_Gauntlet
class UFortPlayerAnimInstance_Gauntlet : public UFortPlayerAnimInstance
{
public:
	//float                                      FullBodyOverrideWeight;                            // 0x4278(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bCarmineJumpCharge : 1;                            // Mask : 0x1 0x427C(0x1)(BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1F8F[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortPlayerAnimInstance_Gauntlet");
		return Clss;
	}

};

// 0x120 (0x43A0 - 0x4280)
// Class FortniteGame.FortPlayerAnimInstance_GolfCartDriver
class UFortPlayerAnimInstance_GolfCartDriver : public UFortPlayerAnimInstance
{
public:
	//struct FFortAnimInput_VelocityImpact       VelocityImpact;                                    // 0x4278(0xBC)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_1F90[0xB4];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               ImpactDisplacement;                                // 0x4334(0xC)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGolfCartHandOnWheelControl           RightHand;                                         // 0x4340(0x2C)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, NativeAccessSpecifierPublic)
	struct FGolfCartHandOnWheelControl           LeftHand;                                          // 0x436C(0x2C)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_1F91[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortPlayerAnimInstance_GolfCartDriver");
		return Clss;
	}

};

// 0xD0 (0x4350 - 0x4280)
// Class FortniteGame.FortPlayerAnimInstance_JackalDriver
class UFortPlayerAnimInstance_JackalDriver : public UFortPlayerAnimInstance
{
public:
	//bool                                       bInAir;                                            // 0x4278(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	//bool                                       bIsBoosting;                                       // 0x4279(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	//bool                                       bPlayPivotOnGroundAndNotBoosting;                  // 0x427A(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	//struct FFortAnimInput_VelocityImpact       VelocityImpact;                                    // 0x427C(0xBC)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_1F92[0xB8];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               ImpactDisplacement;                                // 0x4338(0xC)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1F93[0xC];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortPlayerAnimInstance_JackalDriver");
		return Clss;
	}

};

// 0xC0 (0x4340 - 0x4280)
// Class FortniteGame.FortPlayerAnimInstance_MountedTurret
class UFortPlayerAnimInstance_MountedTurret : public UFortPlayerAnimInstance
{
public:
	//struct FFortAnimInput_VelocityImpact       VelocityImpact;                                    // 0x4278(0xBC)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_1F94[0xB4];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               ImpactDisplacement;                                // 0x4334(0xC)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortPlayerAnimInstance_MountedTurret");
		return Clss;
	}

};

// 0xD0 (0x4350 - 0x4280)
// Class FortniteGame.FortPlayerAnimInstance_ShoppingCartDriver
class UFortPlayerAnimInstance_ShoppingCartDriver : public UFortPlayerAnimInstance
{
public:
	//struct FFortAnimInput_VelocityImpact       VelocityImpact;                                    // 0x4278(0xBC)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_1F95[0xB4];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               ImpactDisplacement;                                // 0x4334(0xC)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsInAirFarFromGround;                             // 0x4340(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bForwardVelocityGT400;                             // 0x4341(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bForwardSpeedKmHLT5;                               // 0x4342(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1F96[0xD];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortPlayerAnimInstance_ShoppingCartDriver");
		return Clss;
	}

};

// 0x60 (0x390 - 0x330)
// Class FortniteGame.FortPlayerAttributesProxyActor
class AFortPlayerAttributesProxyActor : public AActor
{
public:
	uint8                                        Pad_1F97[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FFortPlayerAttributeSets              AttributeSets;                                     // 0x338(0x50)(NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	class UFortAbilitySystemComponent*           AbilitySystemComponent;                            // 0x388(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortPlayerAttributesProxyActor");
		return Clss;
	}

};

// 0x400 (0x430 - 0x30)
// Class FortniteGame.FortPlayerAttrSet
class UFortPlayerAttrSet : public UFortAttributeSet
{
public:
	uint8                                        Pad_1F98[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FFortGameplayAttributeData            Stamina;                                           // 0x38(0x28)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            StaminaRegenRate;                                  // 0x60(0x28)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            StaminaRegenDelay;                                 // 0x88(0x28)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            MaxStamina;                                        // 0xB0(0x28)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            StaminaCost;                                       // 0xD8(0x28)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            SprintCost;                                        // 0x100(0x28)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	uint8                                        Pad_1F99[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FFortGameplayAttributeData            ItemRegenMaxStack;                                 // 0x130(0x28)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            ItemRegenCooldown;                                 // 0x158(0x28)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            ItemMaxStack;                                      // 0x180(0x28)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            DoubleLootRollChance;                              // 0x1A8(0x28)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            DoubleItemLootChance;                              // 0x1D0(0x28)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            DoubleCraftChance;                                 // 0x1F8(0x28)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            CraftingTimeMultiplier;                            // 0x220(0x28)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            CraftItemLevelBonusMin;                            // 0x248(0x28)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            CraftItemLevelBonusMax;                            // 0x270(0x28)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            ResourceHarvesting;                                // 0x298(0x28)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            HarvestingTool;                                    // 0x2C0(0x28)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            ExtraLives;                                        // 0x2E8(0x28)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            ResurrectTeammateDuration;                         // 0x310(0x28)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            Fortitude_Team;                                    // 0x338(0x28)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            Offense_Team;                                      // 0x360(0x28)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            Tech_Team;                                         // 0x388(0x28)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            Resistance_Team;                                   // 0x3B0(0x28)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            ActiveEffectDuration;                              // 0x3D8(0x28)(NativeAccessSpecifierPublic)
	uint8                                        Pad_1F9A[0x30];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortPlayerAttrSet");
		return Clss;
	}

	void OnRep_Tech_Team();
	void OnRep_StaminaRegenRate();
	void OnRep_StaminaRegenDelay();
	void OnRep_StaminaCost();
	void OnRep_Stamina();
	void OnRep_SprintCost();
	void OnRep_ResurrectTeammateDuration();
	void OnRep_ResourceHarvesting();
	void OnRep_Resistance_Team();
	void OnRep_Offense_Team();
	void OnRep_MaxStamina();
	void OnRep_ItemRegenMaxStack();
	void OnRep_ItemRegenCooldown();
	void OnRep_ItemMaxStack();
	void OnRep_HarvestingTool();
	void OnRep_Fortitude_Team();
	void OnRep_ExtraLives();
	void OnRep_DoubleLootRollChance();
	void OnRep_DoubleItemLootChance();
	void OnRep_DoubleCraftChance();
	void OnRep_CraftItemLevelBonusMin();
	void OnRep_CraftItemLevelBonusMax();
	void OnRep_CraftingTimeMultiplier();
};

// 0x0 (0x2480 - 0x2480)
// Class FortniteGame.FortPlayerCameraSpectator
class AFortPlayerCameraSpectator : public APlayerCameraManager
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortPlayerCameraSpectator");
		return Clss;
	}

};

// 0x20 (0x2A70 - 0x2A50)
// Class FortniteGame.FortPlayerCameraZone
class AFortPlayerCameraZone : public AFortPlayerCameraBase
{
public:
	uint8                                        Pad_1F9B[0x20];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortPlayerCameraZone");
		return Clss;
	}

};

// 0x400 (0x2250 - 0x1E50)
// Class FortniteGame.FortPlayerControllerZone
class AFortPlayerControllerZone : public AFortPlayerControllerGameplay
{
public:
	UMulticastDelegateProperty_                  OnBeginSkydiving;                                  // 0x1E50(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnEndSkydiving;                                    // 0x1E60(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnVehicleSeatTransitionTargetIndexChange;          // 0x1E70(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnStartedRespawn;                                  // 0x1E80(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	bool                                         bDontChangeReticleColorForEnemy;                   // 0x1E90(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1FA1[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        LastVehicleSeatSwitchTime;                         // 0x1E94(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1FA2[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class APawn*                                 PlayerToSpectateOnDeath;                           // 0x1EA0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSet<struct FGuid>                           GadgetTrackedAttributeItemInstanceIds;             // 0x1EA8(0x50)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_1FA3[0x50];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<struct FGuid, struct FFortAbilitySetHandle> AppliedInGameModifierAbilitySetHandles;            // 0x1F48(0x50)(ZeroConstructor, Transient, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	class UInputComponent*                       DeathInputComponent;                               // 0x1F98(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UInputComponent*                       RemoteControlledPawnInputComponent;                // 0x1FA0(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1FA4[0x28];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FFortPlayerDeathReport                PlayerDeathReport;                                 // 0x1FD0(0x50)(BlueprintVisible, BlueprintReadOnly, Transient, Protected, NativeAccessSpecifierProtected)
	bool                                         bClientNotifiedOfPawnDied;                         // 0x2020(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bEnterCameraModeOnDeath;                           // 0x2021(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1FA5[0xDE];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	UInterfaceProperty_                          HUDTargetUnderReticle;                             // 0x2100(0x10)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	TArray<struct FUniqueNetIdRepl>              RejoinablePartyMembers;                            // 0x2110(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_1FA6[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        LastScoreEarnedTime;                               // 0x2130(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1FA7[0x1C];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        VehicleSeatTransitionTargetIndex;                  // 0x2150(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1FA8[0x1C];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                VoiceChatPlayerName;                               // 0x2170(0x10)(ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                VoiceChatChannel;                                  // 0x2180(0x10)(ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        VoiceChatJoinFailCount;                            // 0x2190(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        VoiceChatReconnectCount;                           // 0x2194(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bVoiceChatBanned;                                  // 0x2198(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1FA9[0x1F];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class AActor*>                        DesyncNotifyList;                                  // 0x21B8(0x10)(Net, ZeroConstructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_1FAA[0x60];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bJetpackExecuteToggle;                             // 0x2228(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1FAB[0x27];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortPlayerControllerZone");
		return Clss;
	}

	void TestVehicleVelocity(const class FString& Command);
	void SpectateOnDeath();
	void ServerVoiceChatRejoinChannel();
	void ServerVoiceChatReconnected();
	void ServerTriggerSetupTeleportCameraEvent();
	void ServerSubmitGameplayVote(enum class EFortVoteType VoteType, int32 VoteDecision);
	void ServerSpectatePlayerState(class AFortPlayerStateZone* PlayerToSpectate, bool bAllowStateChange);
	void ServerSpectatePlayer(class APawn* NewPlayerToSpectate, bool bAllowStateChange);
	void ServerSetShouldDisablePlayerTeleportingDuringMissionResults();
	void ServerSendPartyJoinInfoToPlayer(struct FUniqueNetIdRepl& RecipientId, const class FString& JoinInfoStr);
	void ServerSendLoadoutConfig(int32 LoadoutSeed, TArray<uint8>& Loadout);
	void ServerRequestSeatChange(int32 TargetSeatIndex);
	void ServerEndGameplayVote(enum class EFortVoteType VoteType);
	void ServerDetachFromRemoteControlledPawn();
	void ServerDestroyFromRemoteControlledPawn();
	void ServerBeginGameplayVote(enum class EFortVoteType VoteType, const struct FFortVoteConfig& VoteConfig);
	void ServerAttemptExitVehicle();
	void ServerActivateMission();
	void RewindVehicle(const class FString& Command);
	void ResurrectPlayer();
	void RespawnPlayer();
	void ResetExecuteJetpackToggle();
	void PushDeathInputComponent();
	void PopDeathInputComponent();
	void OnPlayerStartedRespawn__DelegateSignature();
	void KillAllVehicles(const class FString& Command);
	bool IsUsingHideOtherPlayerNames();
	bool IsUsingAnonymousMode();
	bool IsClientNotifiedOfPawnDied();
	int32 GetVehicleSeatTransitionTargetIndex();
	class FString GetSpectatingPlayerName();
	void FollowPreviousTeammate();
	void FollowNextTeammate();
	void DumpPhysicsVehicleBuffer(const class FString& Command);
	void DisableRangedWeaponScopeFX();
	void ClientVoiceChatLogin(const class FString& InVoiceChatPlayerName, const class FString& LoginToken);
	void ClientVoiceChatChannelJoin(const class FString& InVoiceChatPlayerName, const class FString& InVoiceChatChannel, const class FString& JoinToken);
	void ClientSendPartyJoinInfoToPlayer(const class FString& JoinInfoStr);
	void ClientOnZoneEndScoreReports(TArray<struct FFortPlayerScoreReport>& ScoreReports);
	void ClientOnPawnSpawned();
	void ClientOnPawnRevived(class AController* EventInstigator);
	void ClientOnPawnDied(const struct FFortPlayerDeathReport& DeathReport);
	void ClientClearDeathNotification();
	bool CanFollowTeammate();
};

// 0x0 (0x2250 - 0x2250)
// Class FortniteGame.FortPlayerControllerPvP
class AFortPlayerControllerPvP : public AFortPlayerControllerZone
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortPlayerControllerPvP");
		return Clss;
	}

	void ServerAttemptSelectFOBCore(class ABuildingFOBConfigActor* FOBToSelectOn, class UFortFOBCoreDecoItemDefinition* DefToSelect);
	void ClientShowGameOverWidget(enum class EFortPvPGameResult GameResult);
	void ClientReceiveKillNotification(class AFortPlayerStateZone* Killer, class AFortPlayerStateZone* Killed);
};

// 0x880 (0x2AD0 - 0x2250)
// Class FortniteGame.FortPlayerControllerAthena
class AFortPlayerControllerAthena : public AFortPlayerControllerPvP
{
public:
	//float                                      FireAbilityToWeaponSwitchTime;                     // 0x2248(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1FBE[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	UMulticastDelegateProperty_                  OnAircraftStateChange;                             // 0x2258(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnCreativePermissionsChanged;                      // 0x2268(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnItemDroppedDueToOverflow;                        // 0x2278(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	bool                                         bShouldForceDeleteDroppedItems;                    // 0x2288(0x1)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1FBF[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UFortWorldItemDefinition*              SwappingItemDefinition;                            // 0x2290(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        WinScreenDelayTime;                                // 0x2298(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bSkipPlayWinEffects;                               // 0x229C(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bAllowPlayersCreditOnLeave;                        // 0x229D(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bReplicateViewTargetInventory;                     // 0x229E(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1FC0[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AFortInventory*                        ViewTargetInventory;                               // 0x22A0(0x8)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bHasHadValidPawn;                                  // 0x22A8(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bClientNotifiedOfWin;                              // 0x22A9(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bClientNotifiedOfTeamWin;                          // 0x22AA(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bClientNotifiedOfLoss;                             // 0x22AB(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1FC1[0x1C];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class AActor*>                        CurrentlyHighlightedActors;                        // 0x22C8(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	class FString                                VoiceChat3DPlayerName;                             // 0x22D8(0x10)(ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                VoiceChat3DChannel;                                // 0x22E8(0x10)(ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bMutedPositionalVoiceChatForNoPawn;                // 0x22F8(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1FC2[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class FString>                        PlayersTalking;                                    // 0x2300(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	uint8                                        Pad_1FC3[0x50];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	UMulticastDelegateProperty_                  TalkingPlayersChanged;                             // 0x2360(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	bool                                         bDeferringStartRecordingHighlights;                // 0x2370(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1FC4[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                HighlightGroupId;                                  // 0x2378(0x10)(ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        CachedHighlightCount;                              // 0x2388(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HighlightFirstKillTime;                            // 0x238C(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        HighlightKillMultiple;                             // 0x2390(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        HighlightDownMultiple;                             // 0x2394(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HighlightKillCooldown;                             // 0x2398(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HighlightKillRewindTime;                           // 0x239C(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  RespawnCameraBehavior;                             // 0x23A0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1FC5[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        MaximumNumberOfPawnsToSearchForEmoteMusic;         // 0x23C8(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bUseNewPickupSwapLogic;                            // 0x23CC(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bTryPickupSwap;                                    // 0x23CD(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1FC6[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        SpectatorLevelStreamDistance;                      // 0x23D0(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RespawnLevelStreamDistance;                        // 0x23D4(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  SpectatorStreamingChanged;                         // 0x23D8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  InGameLoadScreenChanged;                           // 0x23E8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnCreativePlotLinkedVolumeChanged;                 // 0x23F8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnClientLeaveIsland;                               // 0x2408(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_1FC7[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class ACameraActor*                          RespawnCameraActor;                                // 0x2430(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDelayedTeleporting;                               // 0x2438(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1FC8[0x37];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	UMulticastDelegateProperty_                  InGameMatchmakingComplete;                         // 0x2470(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	bool                                         bNoInGameMatchmaking;                              // 0x2480(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1FC9[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class USoundBase*                            AudioOnExitAircraft;                               // 0x2488(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundBase*                            AudioOnExitAircraftHornDoppler;                    // 0x2490(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundBase*                            AudioOnMapIndicatorPlaced;                         // 0x2498(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinQuickChatCooldown;                              // 0x24A0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        QuickChatOffCooldownTime;                          // 0x24A4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFortAthenaLoadout                    CustomizationLoadout;                              // 0x24A8(0xD8)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	bool                                         bMarkedAlive;                                      // 0x2580(0x1)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1FCA[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FCreativeIslandData>           CreativeIslands;                                   // 0x2588(0x10)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, NativeAccessSpecifierPublic)
	class FString                                LastUsedCreativeIsland;                            // 0x2598(0x10)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsAllowedToPublish;                               // 0x25A8(0x1)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1FCB[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FSettingsHUDVisibilityAndText> HUDVisibilityGameplayTags;                         // 0x25B0(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UFortGamepadSettings>   GamepadSettingsAssetPtr;                           // 0x25C0(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               MapCursor;                                         // 0x25E8(0xC)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MapCursorSpeed;                                    // 0x25F4(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MapCursorSpeedGamepad;                             // 0x25F8(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1FCC[0x4C];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FLinearColor                          TeamMemberIndicatorColor;                          // 0x2648(0x10)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1FCD[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bRevertPlayerListenerChange;                       // 0x2668(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1FCE[0xF];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bAllowNoShadows;                                   // 0x2678(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bAllowNoDOF;                                       // 0x2679(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bHasSentMatchEndedQuestProgress;                   // 0x267A(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShowFPS;                                          // 0x267B(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1FCF[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	UMulticastDelegateProperty_                  OnShowFPSChange;                                   // 0x2680(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FQuickBarData                         QuickBarDefinitions;                               // 0x2690(0x10)(Edit, NativeAccessSpecifierPublic)
	uint8                                        Pad_1FD0[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bEnableBroadcastRemoteClientInfo;                  // 0x26C0(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1FD1[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AFortBroadcastRemoteClientInfo*        BroadcastRemoteClientInfo;                         // 0x26C8(0x8)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1FD2[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UFortHero*                             StrongMyHero;                                      // 0x26D8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1FD3[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        EndMatchHeartbeatTimerDelay;                       // 0x26E8(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1FD4[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	double                                       EndMatchHeartbeatTimestamp;                        // 0x26F0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        VoiceChatUpdateLimiter;                            // 0x26F8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1FD5[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AFortPlayerStartWarmup*                WarmupPlayerStart;                                 // 0x2700(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UInputComponent*                       AircraftInputComponent;                            // 0x2708(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UInputComponent*                       FullScreenMapInputComponent;                       // 0x2710(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1FD6[0xF8];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bUseTrapPicker;                                    // 0x2810(0x1)(ZeroConstructor, Transient, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1FD7[0x27];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        MovementCancellableActionLeashLength;              // 0x2838(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               MovementCancellableActionLeashLocation;            // 0x283C(0xC)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bAllowMovementCancellableActionsWithIceFeet;       // 0x2848(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1FD8[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        MoveForwardOnlyEmoteCancelBackwardsThreshold;      // 0x284C(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MoveForwardOnlyEmoteCancelStrafeThreshold;         // 0x2850(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1FD9[0x3C];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UAthenaPlayerMatchReport*              MatchReport;                                       // 0x2890(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1FDA[0x50];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class AFortPlayerStateAthena*>        TeamMembers;                                       // 0x28E8(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<class AFortPlayerStateAthena*>        SquadMembers;                                      // 0x28F8(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TSubclassOf<class UFortMiniMapTeamIndicators> MinimapIndicatorClass;                             // 0x2908(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class AFortPlayerMarkerBase>     SquadMarkerActorClass;                             // 0x2910(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1FDB[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        BuildingsCreated;                                  // 0x2920(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        BuildingsEdited;                                   // 0x2924(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        BuildingsRepaired;                                 // 0x2928(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        BuildingsUpgraded;                                 // 0x292C(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FBuildingEditAnalyticEvent>    BuildingAnalyticsArray;                            // 0x2930(0x10)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	float                                        TimeStartedTrackingBuildingAnalytics;              // 0x2940(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1FDC[0xDC];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class AFortVolume*                           CreativePlotLinkedVolume;                          // 0x2A20(0x8)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FCreativePlotSessionData              CreativePlotSessionData;                           // 0x2A28(0x14)(Transient, NoDestructor, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1FDD[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AFortAthenaCreativePortal*             OwnedPortal;                                       // 0x2A40(0x8)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FItemAndCount>                 CachedPurchasedItems;                              // 0x2A48(0x10)(BlueprintVisible, Net, ZeroConstructor, NativeAccessSpecifierPublic)
	class UFortPlaysetItemDefinition*            CurrentPlayset;                                    // 0x2A58(0x8)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FText                                  ClientRespawnText;                                 // 0x2A60(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	class FText                                  ClientIslandTravelText;                            // 0x2A78(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	class FText                                  ClientTravelToCreativeHubText;                     // 0x2A90(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TArray<class AFortVolume*>                   VolumesLoading;                                    // 0x2AA8(0x10)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	TArray<class AFortVolume*>                   VolumesUnloading;                                  // 0x2AB8(0x10)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	float                                        DestructedBuildingInGridTimeout;                   // 0x2AC8(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bTeamFilterDestructedBuildingsInGrid;              // 0x2ACC(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bOwnerFilterDestructedBuildingsInGrid;             // 0x2ACD(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1FDE[0x2];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortPlayerControllerAthena");
		return Clss;
	}

	void WriteCreateBuildingAnalytics();
	void UpdateRichPresenceTimer();
	void TellServer_ClientReceivedPlaysetDataForVolume(const struct FFortPlaysetStreamingData& PlaysetData, class AFortVolume* Volume);
	void TeleportToMapMarker();
	void StopRecordingHighlights();
	void StopAutoPerfCaptureWrapper();
	void StopAutoPerfCapture(enum class EAthenaGamePhase GamePhase);
	void StartRespawnLoading();
	void StartAutoPerfCapture(enum class EAthenaGamePhase GamePhase);
	void ShowHighlightSummary();
	void SetupClientRespawnTimerAndLocation(const struct FVector& RespawnLoc, const struct FRotator& RespawnRot, const struct FVector& OldPlayerLocation, bool bUsePlaylistFadeTime);
	void SetPlayset(class UFortPlaysetItemDefinition* NewPlayset);
	void SetCanStreamBuildingFoundationsIn(bool bCanStream);
	void ServerThankBusDriver();
	void ServerTeleportToPlaygroundLobbyIsland();
	void ServerTeleportToPlaygroundIslandDock();
	void ServerStopSavingCreativePlot();
	void ServerStartUnloadingVolume(class AFortVolume* VolumeToUnload);
	void ServerStartMinigame();
	void ServerStartLoadingVolume(class AFortVolume* VolumeToLoad);
	void ServerSpawnCreativeSupplyDrop(const struct FVector& Position, TSubclassOf<class AActor> InSupplyDropClass);
	void ServerSetTeam(enum class EFortTeam InTeam);
	void ServerSetShouldSwapPickup(bool bShouldSwapPickup);
	void ServerSetRespawnData(const struct FVector& RespawnLoc, const struct FRotator& RespawnRot, float RespawnCameraDist);
	void ServerSendSquadFriend(class AFortPlayerStateAthena* FriendInSquad);
	void ServerSaveIslandCheckpoint(class AFortAthenaCreativePortal* Portal);
	void ServerRestartMinigame();
	void ServerRemoveMapCursor();
	void ServerReloadCreativePlot();
	void ServerPlaySquadQuickChatMessage(const struct FAthenaQuickChatActiveEntry& ChatEntry, const struct FUniqueNetIdRepl& SenderID);
	void ServerPlaceMapCursor(const struct FVector_NetQuantize& CursorPos);
	void ServerLoadPlotForPortalFromMnemonic(class AFortAthenaCreativePortal* Portal, const class FString& Mnemonic);
	void ServerLoadPlotForPortal(class AFortAthenaCreativePortal* Portal, const class FString& PlotItemId);
	void ServerLoadIslandCheckpoint(class AFortAthenaCreativePortal* Portal);
	void ServerGiveCreativeItem(struct FFortItemEntry& CreativeItem);
	void ServerGenerateMockMatchReport();
	void ServerEndUnloadingVolume(class AFortVolume* VolumeToUnload);
	void ServerEndMinigame(bool bAbandon);
	void ServerEndLoadingVolume(class AFortVolume* VolumeToLoad);
	void ServerEnableAnonymousMode();
	void ServerDBNOReviveStarted(class AFortPlayerPawnAthena* DBNOPawn);
	void ServerDBNOReviveInterrupted(class AFortPlayerPawnAthena* DBNOPawn);
	void ServerCreateProfileGoCollectionForSublevels(const class FString& SublevelSearchString, int32 GridStepsX, int32 GridStepsY, int32 RotationSteps, int32 Quad);
	void ServerClientIsReadyToRespawn();
	void ServerAttemptAircraftJump(const struct FRotator& ClientRotation);
	void ServerAddToCachedPurchased(class UFortItemDefinition* ItemDefinition, int32 Count);
	void RevokeCreativeTool();
	void RespawnTurnCameraBackOn();
	void RespawnPlayerAfterDeath();
	void ResetMyCurrentCreativePlot();
	void RecordTeamStats();
	void RecordMatchStats();
	void PublishMyCurrentCreativePlot(const struct FCreativePublishOptions& MyPublishOptions);
	void PrepareClientForRespawning();
	void PreLobbyIslandTeleport();
	void PostLobbyIslandTeleport(class AFortPlayerPawn* PlayerPawn);
	void PlayWinEffects(class APawn* FinisherPawn, class UFortWeaponItemDefinition* FinishingWeapon, enum class EDeathCause DeathCause);
	void OnRep_ViewTargetInventoryLocalUpdate();
	void OnRep_CreativePlotLinkedVolume();
	void OnGameServerNodeTypeChanged(enum class EMeshNetworkNodeType NewNodeType);
	void MultiKillExpired();
	void MoveToolRemoved();
	bool IsTryToFireRestrictedByTypeCooldowns();
	bool IsTeamDead();
	bool IsPlayerInReadOnlyVolume();
	bool IsPlayerInAVolumeTheyCanCreateIn(bool bShouldCheckLinkedVolume);
	bool IsPlayerInAMinigame();
	bool IsLocalPlayerFriendsWithSquadMember(class AFortPlayerState* SquadMember);
	bool IsInAircraft();
	bool IsClientNotifiedOfWin();
	bool IsClientNotifiedOfTeamWin();
	bool IsClientNotifiedOfLoss();
	void HighlightNumberReturned(int32 NumHighlights);
	void HandlePlayersLeftChanged(int32 NumPlayersLeft);
	void GetSquadKills(TArray<int32>* Kills);
	class FString GetSettingsFilteredPlayerName(class AFortPlayerState* OtherPlayerState);
	bool GetRevertPlayerListenerChangeFlag();
	void GetPlaysetSize(int32* SizeX, int32* SizeY);
	class UFortPlaysetItemDefinition* GetPlayset();
	class AFortMinigame* GetMinigame();
	class UAthenaPlayerMatchReport* GetMatchReport();
	struct FVector2D GetMapIndicatorLocation();
	int32 GetFPSForHUD();
	class AFortVolume* GetCurrentVolume();
	class AFortVolume* GetCreativePlotLinkedVolume();
	int32 GetCachedHighlightCount();
	void FullscreenMapCursorRemove();
	void FullscreenMapCursorPlaceAtLocation(const struct FVector& Coords);
	void FollowSpecialActor();
	void ClientVoiceChat3DChannelJoin(const class FString& InVoiceChatPlayerName, const class FString& InVoiceChatChannel, const class FString& JoinToken);
	void ClientStartRespawnPreparation(const struct FVector& RespawnLoc, const struct FRotator& RespawnRot, float RespawnCameraDist, class FName InRespawnCameraBehavior, class FText& HUDReasonText);
	void ClientSendTeamStatsForPlayer(struct FAthenaMatchTeamStats& TeamStats);
	void ClientSendStateEncryptionKey(struct FPlayerStateEncryptionKey& Key);
	void ClientSendMatchStatsForPlayer(struct FAthenaMatchStats& Stats);
	void ClientSendEndMatchReportHeartbeat();
	void ClientSendEndBattleRoyaleMatchForPlayer(bool bSuccess, struct FAthenaRewardResult& Result);
	void ClientSendDebugPoiVolumeData(const class FString& PoiVolumes);
	void ClientSendDebugPoiLocationTags(struct FGameplayTagContainer& InPoiTags);
	void ClientReceiveSquadQuickChatMessage(const struct FAthenaQuickChatActiveEntry& ChatEntry, class AFortPlayerController* SenderPC);
	void ClientPublishMyCurrentCreativePlotComplete(const class FString& ResultErrorCode, const class FString& LinkJson);
	void ClientNotifyWon(class APawn* FinisherPawn, class UFortWeaponItemDefinition* FinishingWeapon, enum class EDeathCause DeathCause);
	void ClientNotifyTeamWon(class APawn* FinisherPawn, class UFortWeaponItemDefinition* FinishingWeapon, enum class EDeathCause DeathCause);
	void ClientNotifyLost(class APawn* WinningPawn, enum class EEndOfMatchReason LostReason);
	void ClientHideScreenWhileRespawning(class FText& HUDReasonText);
	void ClientForceWorldInventoryUpdate();
	void ClientEquipItem(const struct FGuid& ItemGuid, bool bForceExecution);
	void ClientEnterCameraMode();
	void ClientCycleQuickBarToCreativeItem(struct FGuid& CreativeItemGuid, class UFortWorldItemDefinition* CreativeItemDef);
	void ClientBotStopDogpile();
	void ClientBotStartDogpile(const struct FVector& DogpilePosition);
	void ClientAutoEquipFirstItem(const struct FGuid& ItemGuid, bool bForceExecution);
	void ClientAlertLeaveIsland();
	void ClientAddProfileGoCollection(const class FString& CollectionName, TArray<struct FProfileGoScenario>& NewScenarios);
	void ClientActivateSlot(enum class EFortQuickBars InQuickBar, int32 SlotIndex, float ActivateDelay, bool bUpdatePreviousFocusedSlot, bool bForceExecution);
	void ClearInventorySpaces(int32 NumSpaces);
	void ClearDroppableItems();
	void CheckIfSafeToTurnOnCamera();
	void CheckIfSafeToRespawn();
	bool CanPlayerCreateInCurrentVolume(class AFortVolume** OutCurrentVolume, bool bShouldCheckLinkedVolume);
	bool CanFollowSpecialActor();
};

// 0x0 (0x2250 - 0x2250)
// Class FortniteGame.FortPlayerControllerPvE
class AFortPlayerControllerPvE : public AFortPlayerControllerZone
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortPlayerControllerPvE");
		return Clss;
	}

};

// 0x0 (0x2250 - 0x2250)
// Class FortniteGame.FortPlayerControllerBoss
class AFortPlayerControllerBoss : public AFortPlayerControllerPvE
{
public:
	//class FName                                LastPossessedPawn;                                 // 0x2248(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortPlayerControllerBoss");
		return Clss;
	}

};

// 0x60 (0x22B0 - 0x2250)
// Class FortniteGame.FortPlayerControllerDeployableBase
class AFortPlayerControllerDeployableBase : public AFortPlayerControllerPvE
{
public:
	//class ADeployableBasePlot*                 CurrentPlot;                                       // 0x2248(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ADeployableBasePlot*                   PreviousPlot;                                      // 0x2250(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1FE2[0x58];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortPlayerControllerDeployableBase");
		return Clss;
	}

	void ServerMoveItemToDeployableBase(struct FGuid& ItemOnPlayer, int32 Count, class ADeployableBasePlot* ExpectedPlot);
	void ServerMoveItemFromDeployableBase(struct FGuid& ItemOnPlot, int32 Count, class ADeployableBasePlot* ExpectedPlot);
	void ServerMoveAllItemsToDeployableBase(class ADeployableBasePlot* ExpectedPlot);
	void ServerMoveAllItemsFromDeployableBase(class ADeployableBasePlot* ExpectedPlot);
	void MoveItemToDeployableBase(struct FGuid& ItemOnPlayer, int32 Count);
	void MoveItemFromDeployableBase(struct FGuid& ItemOnPlot, int32 Count);
	void MoveAllItemsToDeployableBase();
	void MoveAllItemsFromDeployableBase();
	void ClientOnHordeWaveComplete(int32 Wave, TArray<struct FItemAndCount>& Rewards);
	void ClientOnHordeTierInitialized(TArray<struct FItemAndCount>& Items);
	void ClientOnHordeTierComplete(enum class EFortCompletionResult Result);
};

// 0x0 (0x2250 - 0x2250)
// Class FortniteGame.FortPlayerControllerFOB
class AFortPlayerControllerFOB : public AFortPlayerControllerPvE
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortPlayerControllerFOB");
		return Clss;
	}

	void ServerSaveFOB(class ABuildingFOBConfigActor* FOBToSave);
	void ServerResetFOB(class ABuildingFOBConfigActor* FOBToReset);
	void ServerReloadFOB(class ABuildingFOBConfigActor* FOBToReload);
	void ServerAttemptSelectFOBCore(class ABuildingFOBConfigActor* FOBToSelectOn, class UFortFOBCoreDecoItemDefinition* DefToSelect);
};

// 0xE0 (0x1CF0 - 0x1C10)
// Class FortniteGame.FortPlayerControllerFrontEnd
class AFortPlayerControllerFrontEnd : public AFortPlayerController
{
public:
	uint8                                        Pad_1FE5[0x8A];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bUnlockAllZones;                                   // 0x1C9A(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1FE6[0x55];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortPlayerControllerFrontEnd");
		return Clss;
	}

	void StopWriteToAudioFile();
	void StopFacialAnimationTest();
	void StartWriteToAudioFile();
	void RunFacialAnimationTest(const class FString& WaveFileName, int32 SampleRate);
	void OpenEmotePicker();
	bool IsXboxPlatform();
	bool IsVoiceChatPlayerMuted(struct FUniqueNetIdRepl& UniqueNetId);
	bool IsInVoiceChat();
	void EmotePickerSelect();
	void EmotePickerPrevWheel();
	void EmotePickerNextWheel();
	void CloseEmotePicker();
};

// 0x10 (0x2260 - 0x2250)
// Class FortniteGame.FortPlayerControllerKeep
class AFortPlayerControllerKeep : public AFortPlayerControllerPvE
{
public:
	//int32                                      WorkshopPickedItems;                               // 0x224C(0x4)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        ArmoryPickedItems;                                 // 0x2250(0x4)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1FE7[0xC];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortPlayerControllerKeep");
		return Clss;
	}

	void StreamOutStuff();
	void StreamInStuff();
	void SetPermaniteAvailability(bool bAvailable);
	void RestoreContainers();
	void ResetContainers();
	void DumpItemData();
	void ClientUnloadFoundations();
	void ClientSetPermaniteAvailability(bool bAvailable);
};

// 0x30 (0x2280 - 0x2250)
// Class FortniteGame.FortPlayerControllerManor
class AFortPlayerControllerManor : public AFortPlayerControllerPvE
{
public:
	uint8                                        Pad_1FE8[0x30];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortPlayerControllerManor");
		return Clss;
	}

	void ServerOnUnlockPortalComplete(class AManorPortal* ManorPortal);
	void ClientOpenManorPortalUnlockMenu(class AManorPortal* ManorPortal);
};

// 0x70 (0x22C0 - 0x2250)
// Class FortniteGame.FortPlayerControllerOutpost
class AFortPlayerControllerOutpost : public AFortPlayerControllerPvE
{
public:
	//UMulticastDelegateProperty_                OnItemFabricated;                                  // 0x2248(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_1FF0[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UFortOutpostItemDefinition*            BuildingBeingUpgraded;                             // 0x2258(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        LevelBeforeUpgrade;                                // 0x2260(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bOutpostRefundDialogPending;                       // 0x2264(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1FF1[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UFortWorldItemDefinition*              ItemPendingToFabricate;                            // 0x2268(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1FF2[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UFortWorldItem*                        FabricatedItemPendingForNotification;              // 0x2280(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1FF3[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int64                                        DisintegrationStartTime;                           // 0x2290(0x8)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        QuantumGooCompleted;                               // 0x2298(0x4)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        QuantumGooIncoming;                                // 0x229C(0x4)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1FF4[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FFortDepositedResources>       PostDepositedResources;                            // 0x22A8(0x10)(Net, ZeroConstructor, RepNotify, Protected, NativeAccessSpecifierProtected)
	bool                                         bIsOutpostOwnerInPIE;                              // 0x22B8(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1FF5[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortPlayerControllerOutpost");
		return Clss;
	}

	void UpgradeBuildingByDefinition(class UFortOutpostItemDefinition* OutpostBuilding);
	void UpgradeBuilding(enum class EOutpostBuildings OutpostBuilding);
	void ToggleOwnerInPIE();
	void ServerUpgradePOST();
	void ServerUpgradeBuilding(class UFortOutpostItemDefinition* BuildingToUpgrade);
	void ServerNotifyPendingFabricationCompleted();
	void ServerMoveItemToStorageVault(struct FFortItemEntry& NewlyStoredItem);
	void ServerMoveItemFromStorageVault(struct FFortItemEntry& NewlyCollectedItem);
	void ServerLeaveOutpostAsParty();
	void ServerFabricateItem(class UFortWorldItemDefinition* ItemDef);
	void ServerDisintegrateItem(const struct FGuid& ItemGuid, int32 Count);
	void ServerDepositPOSTResource(const struct FGuid& ItemGuid, int32 Count);
	void ServerDeactivateCraftingTable();
	void ServerActivateCraftingTable();
	void ServerAbortDisintegration();
	void OnRep_QuantumGooIncoming();
	void OnRep_QuantumGooCompleted();
	void OnRep_PostDepositedResources();
	void OnRep_DisintegrationStartTime();
	bool IsOutpostOwner();
	bool IsFabricationPending();
	class UFortWorldItemDefinition* GetPendingItemToFabricate();
	float GetPendingFabricationProgress();
	int32 GetOutpostCoreLevel();
	void GetBuildingUpgradeCostFromDefinition(class UFortOutpostItemDefinition* OutpostBuilding, TArray<struct FFortItemQuantityPair>* OutWorldItems, TArray<struct FFortItemQuantityPair>* OutAccountItems);
	void GetBuildingUpgradeCost(enum class EOutpostBuildings OutpostBuilding, TArray<struct FFortItemQuantityPair>* OutWorldItems, TArray<struct FFortItemQuantityPair>* OutAccountItems);
	int32 GetBuildingMaxLevelFromDefinition(class UFortOutpostItemDefinition* OutpostBuilding);
	int32 GetBuildingMaxLevel(enum class EOutpostBuildings OutpostBuilding);
	int32 GetBuildingLevelFromDefinition(class UFortOutpostItemDefinition* OutpostBuilding);
	int32 GetBuildingLevel(enum class EOutpostBuildings OutpostBuilding);
	void DumpInventory();
	void ClientOnOutpostRefundOccurred();
	void ClientOnBuildingLevelChanged(class UFortOutpostItemDefinition* UpgradedBuilding, int32 InLevelBeforeUpgrade);
	bool CanUpgradeBuildingFromDefinition(class UFortOutpostItemDefinition* OutpostBuilding, bool bLog);
	bool CanUpgradeBuilding(enum class EOutpostBuildings OutpostBuilding, bool bLog);
};

// 0x0 (0x2250 - 0x2250)
// Class FortniteGame.FortPlayerControllerPvPBaseDestruction
class AFortPlayerControllerPvPBaseDestruction : public AFortPlayerControllerPvP
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortPlayerControllerPvPBaseDestruction");
		return Clss;
	}

};

// 0x0 (0x28 - 0x28)
// Class FortniteGame.FortPlayerCustomizable
class UFortPlayerCustomizable : public UInterface
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortPlayerCustomizable");
		return Clss;
	}

};

// 0x388 (0x730 - 0x3A8)
// Class FortniteGame.FortPlayerInput
class UFortPlayerInput : public UPlayerInput
{
public:
	class FString                                CampaignDefaultKBMPresetName;                      // 0x3A8(0x10)(ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                AthenaDefaultKBMPresetName;                        // 0x3B8(0x10)(ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FString>                        CampaignKBMResetToDefaultPresetNames;              // 0x3C8(0x10)(Edit, ZeroConstructor, Config, NativeAccessSpecifierPublic)
	TArray<class FString>                        AthenaKBMResetToDefaultPresetNames;                // 0x3D8(0x10)(Edit, ZeroConstructor, Config, NativeAccessSpecifierPublic)
	class FString                                DefaultGamepadPresetName;                          // 0x3E8(0x10)(ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                DefaultGamepadPresetNameAthena;                    // 0x3F8(0x10)(ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                DefaultGamepadPresetNameAthenaMobile;              // 0x408(0x10)(ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                CustomGamepadPresetNameAthena;                     // 0x418(0x10)(ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FString>                        FortPlayerInputSettingsNames;                      // 0x428(0x10)(Edit, ZeroConstructor, Config, NativeAccessSpecifierPublic)
	uint8                                        Pad_1FF6[0x2F];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	enum class EFortMotionYawAxis                MotionYawAxis;                                     // 0x467(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1FF7[0x118];                                   // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bApplyGamepadDownsightsLookScale;                  // 0x580(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1FF8[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        TargetingMultiplier;                               // 0x584(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ScopedMultiplier;                                  // 0x588(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        GamepadTargetingMultiplier;                        // 0x58C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        GamepadScopedMultiplier;                           // 0x590(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        GamepadBuildingMultiplier;                         // 0x594(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bInvertedPitchForMotion;                           // 0x598(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bInvertedYawMobile;                                // 0x599(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1FF9[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        MotionTargetingMultiplier;                         // 0x59C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MotionScopedMultiplier;                            // 0x5A0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MotionHarvestingToolMultiplier;                    // 0x5A4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1FFA[0x130];                                   // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UFortPlayerInputSettings*>      AllPlayerInputSettings;                            // 0x6D8(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	class UFortPlayerInputSettings*              DesiredKBMPlayerInputSettings;                     // 0x6E8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UFortPlayerInputSettings*              DesiredGamepadPlayerInputSettings;                 // 0x6F0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1FFB[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class FText>                          InputActionTypeFriendlyNames;                      // 0x708(0x10)(ZeroConstructor, Config, NativeAccessSpecifierPrivate)
	TArray<struct FFortInputActionGroupContext>  InputActionGroupContexts;                          // 0x718(0x10)(ZeroConstructor, Config, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1FFC[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortPlayerInput");
		return Clss;
	}

};

// 0x40 (0x770 - 0x730)
// Class FortniteGame.FortPlayerInputAthena
class UFortPlayerInputAthena : public UFortPlayerInput
{
public:
	class UFortGamepadSettings*                  GamepadSettings;                                   // 0x730(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1FFD[0x28];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bReduceAimAssistWhileScoped;                       // 0x760(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1FFE[0xF];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortPlayerInputAthena");
		return Clss;
	}

};

// 0x98 (0xC0 - 0x28)
// Class FortniteGame.FortPlayerInputSettings
class UFortPlayerInputSettings : public UObject
{
public:
	class FText                                  FriendlyName;                                      // 0x28(0x18)(Config, NativeAccessSpecifierPublic)
	class FText                                  Description;                                       // 0x40(0x18)(Config, NativeAccessSpecifierPublic)
	class FText                                  SubDescription;                                    // 0x58(0x18)(Config, NativeAccessSpecifierPublic)
	TArray<struct FInputActionKeyMapping>        ActionMappings;                                    // 0x70(0x10)(ZeroConstructor, Config, NativeAccessSpecifierPublic)
	TArray<struct FFortInputActionKeyAlias>      ActionKeyAliases;                                  // 0x80(0x10)(ZeroConstructor, Config, NativeAccessSpecifierPublic)
	TArray<struct FFortInputActionThatShouldAlwaysBeBound> ActionsThatShouldAlwaysBeBound;                    // 0x90(0x10)(ZeroConstructor, Config, NativeAccessSpecifierPublic)
	float                                        HoldInputTime;                                     // 0xA0(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HoldCraftAmmoTime;                                 // 0xA4(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HoldHudChatTime;                                   // 0xA8(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HoldVoteDialogTime;                                // 0xAC(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bBuildingPickerOnlyChoosesCategories;              // 0xB0(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bWeaponPickerShowOnlySlottedItems;                 // 0xB1(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bTrapPickerUsesRadial;                             // 0xB2(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bRadialClosesOnRelease;                            // 0xB3(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        NumActiveTrapSlots;                                // 0xB4(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bWeaponSlotsAreSharedWhenUsingGamepad;             // 0xB8(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEditModeUsableFromCombatMode;                     // 0xB9(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bOnlyShowNextPrevBuildingSlotKeybinds;             // 0xBA(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnabledForCampaign;                               // 0xBB(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnabledForAthena;                                 // 0xBC(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1FFF[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortPlayerInputSettings");
		return Clss;
	}

};

// 0x1B0 (0x568 - 0x3B8)
// Class FortniteGame.FortPlayerMannequin
class AFortPlayerMannequin : public ASkeletalMeshActor
{
public:
	uint8                                        Pad_2004[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UFortHeroType*                         FortHeroType;                                      // 0x3C0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAthenaCharacterItemDefinition*        AthenaCharacter;                                   // 0x3C8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAthenaBackpackItemDefinition*         AthenaBackBling;                                   // 0x3D0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCustomCharacterPart*                  CharacterParts;                                    // 0x3D8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2005[0x30];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FLightingChannels                     MannequinLightingChannels;                         // 0x410(0x1)(Edit, NoDestructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_2006[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        MannequinBoundsScale;                              // 0x414(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bIsMannequinVisible;                               // 0x418(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bMannequinCastsHiddenShadow;                       // 0x419(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2007[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UCustomCharacterPart*                  CharacterPartList;                                 // 0x420(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2008[0x28];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FMcpVariantChannelInfo>        OverrideVariants;                                  // 0x450(0x10)(Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	class UCustomColorSwatch*                    CharacterPartColorSwatches;                        // 0x460(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2009[0x30];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UCustomColorSwatch*                    ColorSwatchesForCharacterParts;                    // 0x498(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_200A[0x28];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UCustomColorComponent*                 AccessoryColorSwatchHandler;                       // 0x4C8(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_200B[0x28];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UCustomColorSwatch*                    ColorSwatches;                                     // 0x4F8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_200C[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class USkeletalMesh*                         WeaponSkeletalMesh;                                // 0x508(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  WeaponAttachSocket;                                // 0x510(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_200D[0x38];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FMorphValuePair>               MorphTargets;                                      // 0x550(0x10)(Edit, BlueprintVisible, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	bool                                         bInitialized;                                      // 0x560(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_200E[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortPlayerMannequin");
		return Clss;
	}

	void UpdateMorphTargets();
	void ToggleGenderBP();
	bool SetWeaponSkeletalMesh(class USkeletalMesh* SkeletalMesh);
	void SetSkeletalMesh(class USkeletalMesh* SkeletalMesh);
	bool SetPart(enum class EFortCustomPartType Part, class UCustomCharacterPart* PartAsset);
	void SetHeroType(class UFortHeroType* NewHeroType);
	void SetAthenaCharacterDefAndVariants(class UAthenaCharacterItemDefinition* NewAthenaCharacter, TArray<struct FMcpVariantChannelInfo>& InOverrideVariants);
	bool RemovePart(enum class EFortCustomPartType Part);
	class USkeletalMeshComponent* GetPartSkeletalMeshComponent(enum class EFortCustomPartType Part);
	enum class EFortCustomGender GetGender();
	void GetAllPartSkeletalMeshComponents(TArray<class USkeletalMeshComponent*>* SkeletalMeshComponents);
	bool CyclePartBP(enum class EFortCustomPartType Part, bool bNextPart);
};

// 0x68 (0x398 - 0x330)
// Class FortniteGame.FortPlayerMarkerBase
class AFortPlayerMarkerBase : public AActor
{
public:
	float                                        MinimumHeight;                                     // 0x330(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        HeightOffset;                                      // 0x334(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAthenaMapMarkerItemDefinition*        CustomMarkerItemDefinition;                        // 0x338(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USoundBase*                            OnPlaceSound;                                      // 0x340(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        PlaceSoundCooldownTime;                            // 0x348(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        PlaceSoundCountMax;                                // 0x34C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaticMeshComponent*                  StaticMeshComponent;                               // 0x350(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FPlayerMarkerData                     Data;                                              // 0x358(0x20)(NoDestructor, NativeAccessSpecifierPrivate)
	struct FVector                               MarkerPosition2D;                                  // 0x378(0xC)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_200F[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTimerHandle                          PlaceSoundCooldownTimer;                           // 0x388(0x8)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        PlaceSoundCount;                                   // 0x390(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2010[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortPlayerMarkerBase");
		return Clss;
	}

	void ResetPlaceSoundCooldownTimer();
	void OnSetupMarker(struct FPlayerMarkerData& MarkerData);
	void OnMarkerPlaced();
	void OnMarkerHidden();
};

// 0x90 (0x3C0 - 0x330)
// Class FortniteGame.FortPlayerParachute
class AFortPlayerParachute : public AActor
{
public:
	uint8                                        Pad_2012[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class USoundBase*                            CurrentGliderOpenSound;                            // 0x340(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class UAudioComponent>        CurrentGliderOpenAudioComponent;                   // 0x348(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundBase*                            CurrentGliderCloseSound;                           // 0x350(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class UAudioComponent>        CurrentGliderCloseAudioComponent;                  // 0x358(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2013[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class AFortPlayerPawn*                       PlayerPawn;                                        // 0x370(0x8)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAthenaGliderItemDefinition*           ParachuteItemDef;                                  // 0x378(0x8)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ParachuteHiddenAnimFinishTime;                     // 0x380(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bGliderFullyDeployed : 1;                          // Mask : 0x1 0x384(0x1)(NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bChuteOpened : 1;                                  // Mask : 0x2 0x384(0x1)(BlueprintVisible, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bIsFrontEndPreview : 1;                            // Mask : 0x4 0x384(0x1)(BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bParachuteVisible;                                 // 0x385(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bActivateTrailOnRationalMovement;                  // 0x386(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2014[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FRotator                              LastRotationalMovement;                            // 0x388(0xC)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	class FName                                  ParachuteTrailParameterName;                       // 0x394(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         IsCosmeticPreview;                                 // 0x39C(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2015[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class USkeletalMeshComponentBudgeted*        ParachuteMesh;                                     // 0x3A0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UParticleSystemComponent*              TrailParticles;                                    // 0x3A8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2016[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortPlayerParachute");
		return Clss;
	}

	void SetChuteMeshVisibility(bool bParachuteVisiblity);
	void OnRep_PlayerPawn();
	void OnRep_ParachuteItemDef();
	void OnPlayerPawnSet();
	void OnParachuteTrailUpdated(float MovementLengthSquared, float ForwardDot, float RightDot, float RotationalMovementAcceleration);
	void OnGliderFullyDeployed();
	bool IsGliderFullyDeployedAccordingToAnim();
	void InitalizeFromItemDef(class UAthenaGliderItemDefinition* InParachuteItemDef, bool bSynchronousLoad);
	class USkeletalMeshComponent* GetParachuteRootMesh();
	class AFortPlayerPawn* GetFortPlayerPawn();
	void DisableTrailParticles();
};

// 0x700 (0x28A0 - 0x21A0)
// Class FortniteGame.FortPlayerPawnAthena
class AFortPlayerPawnAthena : public AFortPlayerPawn
{
public:
	UMulticastDelegateProperty_                  OnInteractionFailedCallback;                       // 0x21A0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class AActor*                                ItemInteractionActor;                              // 0x21B0(0x8)(BlueprintVisible, Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2018[0x2C];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        CurrentPawnSpeed;                                  // 0x21E4(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CurrentPawnSpeedXY;                                // 0x21E8(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                              CurrentPawnVelXYRot;                               // 0x21EC(0xC)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FVector                               PreviousVelocityXY;                                // 0x21F8(0xC)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2019[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class USoundBase*                            OnReviveSound;                                     // 0x2208(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ReviveFromDBNOTime;                                // 0x2210(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DBNOStartTime;                                     // 0x2214(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DBNOInvulnerableTime;                              // 0x2218(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        DBNORevivalStacking;                               // 0x221C(0x1)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_201A[0xB];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bWasCrouchedBeforeDBNO;                            // 0x2228(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_201B[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UCurveFloat*                           DirectionalSpeedMultiplierCurve;                   // 0x2230(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  ItemSpecialActorID;                                // 0x2238(0x8)(Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          ItemSpecialActorCategoryTag;                       // 0x2240(0x8)(Net, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_201C[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        BecameSpecialActorTime;                            // 0x224C(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                           ParachuteDirectionalSpeedMultiplierCurve;          // 0x2250(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                           SkydivingDirectionalSpeedMultiplierCurve;          // 0x2258(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                           BallooningDirectionalSpeedMultiplierCurve;         // 0x2260(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnUIGameplayCue;                                   // 0x2268(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnDBNOStateChanged;                                // 0x2278(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	bool                                         bPlaytestWithNoMouse;                              // 0x2288(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_201D[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bNetMovementPrioritized;                           // 0x2290(0x1)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_201E[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        CapsuleRadiusAthena;                               // 0x2294(0x4)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CapsuleHalfHeightAthena;                           // 0x2298(0x4)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MeshHeightAdjustAthena;                            // 0x229C(0x4)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFortPlayerAthenaAttributeReplicationProxy AttributeReplicationProxy;                         // 0x22A0(0x18)(Net, RepNotify, NoDestructor, NativeAccessSpecifierPublic)
	struct FGameplayAbilityRepAnimMontage        RepAnimMontageInfo;                                // 0x22B8(0x30)(Net, RepNotify, NoDestructor, NativeAccessSpecifierPublic)
	int32                                        RepAnimMontageStartSection;                        // 0x22E8(0x4)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_201F[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGameplayAbilityRepAnimMontage        ReplayRepAnimMontageInfo;                          // 0x22F0(0x30)(Net, RepNotify, NoDestructor, NativeAccessSpecifierPublic)
	struct FMinimalGameplayCueReplicationProxy   SimulatedProxyGameplayCues;                        // 0x2320(0x1C0)(Net, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FReplicatedMontagePair                LandingMontagePair;                                // 0x24E0(0x28)(Net, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_2020[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UTexture2D*                            CurrentQuickChatIcon;                              // 0x2510(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2021[0x85];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bADSWhileNotOnGround;                              // 0x259D(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2022[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class USoundBase*                            DefaultCrouchedFootstepSound;                      // 0x25A0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundBase*                            DefaultCrouchSprintFootstepSound;                  // 0x25A8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinimumTimeBetweenSteps;                           // 0x25B0(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LastStepTime;                                      // 0x25B4(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnFootstepEvent;                                   // 0x25B8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnFortPlayerDied;                                  // 0x25C8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnPlayerStartDBNO;                                 // 0x25D8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class APawn*                                 KillerForSpectatorRotation;                        // 0x25E8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsInWaterVolume;                                  // 0x25F0(0x1)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2023[0xF];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FFortEffectDistanceQuality            DamageFXSignificance;                              // 0x2600(0x18)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_2024[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bIsPlayerPawnReady;                                // 0x2620(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2025[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FFortAthenaLoadout                    CustomizationLoadout;                              // 0x2628(0xD8)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_2026[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               LastFiredLocation;                                 // 0x2704(0xC)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               LastFiredDirection;                                // 0x2710(0xC)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        LastFiredTime;                                     // 0x271C(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2027[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UDataTable*                            PrototypeShootingModel;                            // 0x2728(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AController*                           FallInstigator;                                    // 0x2730(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                 FallDamageTags;                                    // 0x2738(0x20)(Transient, NativeAccessSpecifierPublic)
	class ABuildingSMActor*                      LastFloorBeforeFalling;                            // 0x2758(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LastFallDistance;                                  // 0x2760(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MeleeCombatSlowSpeedMultiplier;                    // 0x2764(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MeleeCombatSlowDuration;                           // 0x2768(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2028[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FAthenaPawnReplayData                 EncryptedPawnReplayData;                           // 0x2770(0x30)(Net, Transient, NativeAccessSpecifierPublic)
	class UAudioComponent*                       InAirAudioComp;                                    // 0x27A0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystemComponent*              PSC_PlayerWalkLand;                                // 0x27A8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystemComponent*              PSC_PlayerRunLand;                                 // 0x27B0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystemComponent*              PSC_PlayerSlideLand;                               // 0x27B8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystemComponent*              PSC_PlayerInWater;                                 // 0x27C0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAudioComponent*                       SlidingAudioComp;                                  // 0x27C8(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UFortMobileInteractionComponent*> MobileInteractionComponents;                       // 0x27D0(0x10)(ExportObject, ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	struct FLinearColor                          MinimapIconColorFiftyFiftyPlayer;                  // 0x27E0(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MaxIndicatorVisibilityDistForReplays;              // 0x27F0(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2029[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UAudioComponent*                       ConsumableUseAudio;                                // 0x27F8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        InAirAudioScalar;                                  // 0x2800(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        InAirAudioInterpSpeed;                             // 0x2804(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        InAirAudioPawnSpeedMin;                            // 0x2808(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        InAirAudioPawnSpeedMax;                            // 0x280C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_202A[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bFXIsInGhostMode;                                  // 0x2811(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_202B[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        WalkDustActivateSpeed;                             // 0x2814(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        WalkDustResetSpeed;                                // 0x2818(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        RunParticleActivateSpeed;                          // 0x281C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_202C[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class USoundBase*                            SlidingIntensitySound3P;                           // 0x2830(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USoundBase*                            SlidingIntensitySound1P;                           // 0x2838(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SlideAudioIntensity;                               // 0x2840(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        LastHealthPostProcessWeight;                       // 0x2844(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        HealthPostProcessStartTime;                        // 0x2848(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        HealthPostProcessMuteTime;                         // 0x284C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_202D[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UFortSignificanceManager*              FortSignificanceManager;                           // 0x2860(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_202E[0x38];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortPlayerPawnAthena");
		return Clss;
	}

	void TeleportToSkyDive(float HeightAboveGround);
	void StopConsumableUseAudio();
	void StartConsumableUseAudio(class USoundBase* Sound);
	void SetMeshHeightAdjustAthena(float HeightAdjust);
	void SetFallInstigator(class AController* NewFallInstigator, const struct FGameplayTagContainer& NewFallingDamageTags);
	void SetCapsuleRadiusAthena(float Radius);
	void SetCapsuleHalfHeightAthena(float HalfHeight);
	void SetBushEnabled(bool bEnableBush);
	void ServerSetInteractingItem(class AActor* InteractingItem, bool bClearInteraction);
	void OnSignificantTick(float Significance);
	void OnResInDuringWarmup();
	void OnRep_ReplicatedAnimMontage();
	void OnRep_ReplayRepAnimMontageInfo();
	void OnRep_RepAnimMontageStartSection();
	void OnRep_NetMovementPrioritized();
	void OnRep_MeshHeightAdjustAthena();
	void OnRep_IsInWaterVolume();
	void OnRep_CustomizationLoadout();
	void OnRep_CapsuleRadiusAthena();
	void OnRep_CapsuleHalfHeightAthena();
	void OnRep_AttributeProxy();
	void OnReceivedStormSurgeDamage();
	void OnPawnLODChanged(int32 NewLOD);
	void OnOutsideSafeZonePhaseChanged(int32 SafeZonePhase);
	void OnLeftReplayRelevancy();
	void OnExitedWaterVolume();
	void OnEnteredWaterVolume();
	void OnEnteredReplayRelevancy();
	void MeleeCombatBlocked();
	void MeleeCombatActivated();
	bool LocalIsTryingToEnterVehicle();
	void LandscapeCheck();
	bool IsPlayingMinigame();
	bool IsBackpackEquipped(enum class EBackpackType BackpackType);
	float GetDefaultReviveFromDBNOTime();
	void ForceReviveFromDBNO();
	void FastSharedReplication(struct FSharedRepMovement& SharedRepMovement);
	void CancelMeleeCombatSlow();
	void BushStateChanged(bool bNewBushState);
};

// 0x60 (0x390 - 0x330)
// Class FortniteGame.FortPlayerPet
class AFortPlayerPet : public AActor
{
public:
	class UAthenaPetItemDefinition*              PetItemDef;                                        // 0x330(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAudioComponent*                       PetAudioComponent;                                 // 0x338(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_202F[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	uint8                                        bIsFrontEndPreview : 1;                            // Mask : 0x1 0x348(0x1)(BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2030[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class USkeletalMeshComponentBudgeted*        PetMesh;                                           // 0x350(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class UMaterialInterface*>            SavedMaterials;                                    // 0x358(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2031[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UFortTaggedSoundBank*                  SoundBank;                                         // 0x388(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortPlayerPet");
		return Clss;
	}

	void ResetPetMaterials();
	void OnRequestedCustomizationComplete(class AFortPlayerPawn* Pawn);
	class AFortPlayerPawn* GetFortPlayerPawn();
};

// 0x30 (0x360 - 0x330)
// Class FortniteGame.FortPlayerPetRepState
class AFortPlayerPetRepState : public AActor
{
public:
	class AActor*                                LookAtTarget;                                      // 0x330(0x8)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAthenaPetItemDefinition*              PetItemDef;                                        // 0x338(0x8)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FPetStimuliRepData                    StimuliTag;                                        // 0x340(0xC)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NoDestructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_2032[0x14];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortPlayerPetRepState");
		return Clss;
	}

	void OnRep_StimuliTag();
	void OnRep_PetItemDef();
	void OnRep_LookAtTarget();
	class AFortPlayerPawn* GetFortPlayerPawn();
};

// 0x20 (0xCA8 - 0xC88)
// Class FortniteGame.FortPlayerSpawnPad
class AFortPlayerSpawnPad : public ABuildingSMActor
{
public:
	TArray<class UStaticMeshComponent*>          Chests;                                            // 0xC88(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	uint8                                        Pad_2033[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortPlayerSpawnPad");
		return Clss;
	}

	void PrestreamChestTextures();
	void InitializeChestProgression();
	int32 GetRewardedChestIndex();
	void GetPossessedPlayerPawnsByID(TArray<class AFortPlayerPawn*>* SortedPlayerPawns);
	void ChestProgressionUpdate(const struct FVector& PrimaryChestOffset, const struct FVector& ChestOffset);
};

// 0x8 (0x368 - 0x360)
// Class FortniteGame.FortPlayerStart
class AFortPlayerStart : public APlayerStart
{
public:
	class UParticleSystemComponent*              StartParticleComponent;                            // 0x360(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortPlayerStart");
		return Clss;
	}

};

// 0x48 (0x3A8 - 0x360)
// Class FortniteGame.FortPlayerStartCreative
class AFortPlayerStartCreative : public APlayerStart
{
public:
	struct FGameplayTagContainer                 PlayerStartTags;                                   // 0x360(0x20)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	int32                                        PortalIndex;                                       // 0x380(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortTeam                         ApplicableTeam;                                    // 0x384(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bUseAsIslandStart;                                 // 0x385(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2034[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        PriorityGroup;                                     // 0x388(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2035[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UFortCreativeVolumeLinkComponent*      CreativeLinkComponent;                             // 0x390(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2036[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortPlayerStartCreative");
		return Clss;
	}

};

// 0x78 (0x3A8 - 0x330)
// Class FortniteGame.FortPlayerStartupController
class AFortPlayerStartupController : public AActor
{
public:
	bool                                         UseIndividualHoldingAreas;                         // 0x330(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2037[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        DelayAfterFirstInTime;                             // 0x334(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ContainmentTimer;                                  // 0x338(0x4)(Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AllInCountdownTime;                                // 0x33C(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ErodeShieldTime;                                   // 0x340(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2038[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        StopJoinabilityTime;                               // 0x34C(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2039[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         DestroyImmediately;                                // 0x351(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_203A[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	UMulticastDelegateProperty_                  OnPlayerStartupControllerCreated;                  // 0x358(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnPlayerStartupControllerRegistered;               // 0x368(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnAllInCountdownInitiated;                         // 0x378(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnPlayerStartupControllerDestroyed;                // 0x388(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnResetContainmentTimer;                           // 0x398(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortPlayerStartupController");
		return Clss;
	}

	void OnPlayerLoadedIn_BP(class AFortPlayerControllerZone* NewPlayerPC);
	void OnAllPlayersLoadedIn_BP();
	void HandlePlayerStartupControllerReset();
	void HandlePlayerStartupControllerRegistered();
	void HandlePlayerStartupControllerDestroyed();
	void HandlePlayerStartupControllerCreated();
	void HandleAllInCountdownInitiated();
	int32 GetNumPlayersStillWaitingFor();
	int32 GetNumPlayersExpected();
	int32 GetNumPlayersCurrentlyReady();
	float GetContainmentTimeRemaining();
};

// 0x8 (0x368 - 0x360)
// Class FortniteGame.FortPlayerStartWarmup
class AFortPlayerStartWarmup : public APlayerStart
{
public:
	uint8                                        Pad_203B[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortPlayerStartWarmup");
		return Clss;
	}

};

// 0x598 (0x9F0 - 0x458)
// Class FortniteGame.FortPlayerState
class AFortPlayerState : public APlayerState
{
public:
	uint8                                        Pad_203D[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	uint8                                        bIsWorldDataOwner : 1;                             // Mask : 0x1 0x470(0x1)(Net, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsGameSessionOwner : 1;                           // Mask : 0x2 0x470(0x1)(Net, Transient, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_203E[0x37];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	uint8                                        bIsGameSessionAdmin : 1;                           // Mask : 0x1 0x4A8(0x1)(Net, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsReadyToContinue : 1;                            // Mask : 0x2 0x4A8(0x1)(Net, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bHasFinishedLoading : 1;                           // Mask : 0x4 0x4A8(0x1)(Net, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bHasStartedPlaying : 1;                            // Mask : 0x8 0x4A8(0x1)(Net, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bShowHeroBackpack : 1;                             // Mask : 0x10 0x4A8(0x1)(Net, Transient, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bShowHeroHeadAccessories : 1;                      // Mask : 0x20 0x4A8(0x1)(Net, Transient, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bRepFlag1 : 1;                                     // Mask : 0x40 0x4A8(0x1)(Net, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_203F[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	enum class EFortPlayerRole                   PlayerRole;                                        // 0x4AC(0x4)(Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FUniqueNetIdRepl                      PartyOwnerUniqueId;                                // 0x4B0(0x28)(Net, RepNotify, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        WorldPlayerId;                                     // 0x4D8(0x4)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2040[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                HeroId;                                            // 0x4E0(0x10)(Net, ZeroConstructor, RepNotify, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFortHeroType*                         HeroType;                                          // 0x4F0(0x8)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  HeroSquadId;                                       // 0x4F8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2041[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        CurrentCharXP;                                     // 0x518(0x4)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2042[0x4C];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TWeakObjectPtr<class AFortPickup>            MyBackpackPickup;                                  // 0x568(0x8)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        InitialExperienceLevel;                            // 0x570(0x4)(Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        InitialExperienceAmount;                           // 0x574(0x4)(Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FFortExperienceDelta>          ExperienceDeltas;                                  // 0x578(0x10)(Net, ZeroConstructor, Transient, RepNotify, NativeAccessSpecifierPublic)
	TArray<class UFortAwardItemDefinition*>      Awards;                                            // 0x588(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	uint8                                        Pad_2043[0x28];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                Platform;                                          // 0x5C0(0x10)(Net, ZeroConstructor, RepNotify, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2044[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	enum class EFortCustomGender                 CharacterGender;                                   // 0x5E8(0x1)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EFortCustomBodyType               CharacterBodyType;                                 // 0x5E9(0x1)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2045[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FCustomCharacterParts                 CharacterParts;                                    // 0x5F0(0x40)(Net, RepNotify, NoDestructor, Protected, NativeAccessSpecifierProtected)
	class UCustomColorSwatch*                    CharacterColorSwatches;                            // 0x630(0x8)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2046[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	enum class EFortCustomGender                 LocalCharacterGender;                              // 0x640(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EFortCustomBodyType               LocalCharacterBodyType;                            // 0x641(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2047[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UCustomCharacterPart*                  LocalCharacterParts;                               // 0x648(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2048[0x28];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UCustomColorSwatch*                    LocalCharacterColorSwatches;                       // 0x678(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2049[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UCustomPlayerComponent*                CustomPRIComponent;                                // 0x688(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCustomColorSwatch*                    CharacterPartColorSwatches;                        // 0x690(0x8)(Edit, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_204A[0x28];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UCustomColorSwatch*                    LocalCharacterPartColorSwatches;                   // 0x6C0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_204B[0x28];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class AFortTeamInfo*                         PlayerTeam;                                        // 0x6F0(0x8)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AFortTeamPrivateInfo*                  PlayerTeamPrivate;                                 // 0x6F8(0x8)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bSkipReplicatedStats;                              // 0x700(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_204C[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FReplicatedStatValues                 ReplicatedStats_Campaign;                          // 0x704(0x8)(Net, Transient, RepNotify, NoDestructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_204D[0x108];                                   // Fixing Size After Last Property  [ Dumper-7 ]
	struct FReplicatedStatValues                 ReplicatedStats_Zone;                              // 0x814(0x8)(Net, Transient, RepNotify, NoDestructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_204E[0x10C];                                   // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bAreZoneStatsFinalized;                            // 0x928(0x1)(Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EReadyCheckState                  ReadyCheckState;                                   // 0x929(0x1)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_204F[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AActor*                                HomeActor;                                         // 0x930(0x8)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FFortPlayerAttributeSets              AttributeSets;                                     // 0x938(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	class UFortAbilitySystemComponent*           AbilitySystemComponent;                            // 0x988(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  PlayerOSSName;                                     // 0x990(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class ETrustedPlatformType              TrustedPlatformType;                               // 0x998(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2050[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FUniqueNetIdRepl                      PlatformUniqueNetId;                               // 0x9A0(0x28)(Net, RepNotify, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2051[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bInvitedToConsoleSession;                          // 0x9D8(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bInitializedPlayerCustomizationOptionsFromClientSettings; // 0x9D9(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2052[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               PawnDeathLocation;                                 // 0x9DC(0xC)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        CachedPreviousWorldPlayerId;                       // 0x9E8(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2053[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortPlayerState");
		return Clss;
	}

	void UpdateScoreStatChanged();
	void ServerSetShowHeroHeadAccessories(bool bShow);
	void ServerSetShowHeroBackpack(bool bShow);
	void OnRep_ShowHeroHeadAccessories();
	void OnRep_ShowHeroBackpack();
	void OnRep_SessionOwner();
	void OnRep_ScoreStatChanged();
	void OnRep_PlayerTeam();
	void OnRep_PlatformUniqueNetId();
	void OnRep_Platform();
	void OnRep_PartyOwner();
	void OnRep_HomeActor(class AActor* OldHomeActor);
	void OnRep_HeroType();
	void OnRep_HeroId();
	void OnRep_CurrentCharXP();
	void OnRep_CharacterParts();
	void OnRep_CharacterGender();
	void OnRep_CharacterColorSwatches();
	void OnRep_CharacterBodyType();
	void OnRep_bHasStartedPlaying();
	void OnRep_AccessoryColorSwatches();
	bool IsConsolePlayer();
	struct FUniqueNetIdRepl GetUniqueID();
	class FName GetPlayerOSSName();
	struct FUniqueNetIdRepl GetPlatformUniqueNetId();
	class FString GetPlatform();
	class AFortPlayerPawn* GetCurrentPawn();
	void ClientNotifyAwardGranted(class UFortAwardItemDefinition* AwardDefinition);
	bool AreUniqueIDsIdentical(struct FUniqueNetIdRepl& A, struct FUniqueNetIdRepl& B);
};

// 0x2D8 (0xCC8 - 0x9F0)
// Class FortniteGame.FortPlayerStateZone
class AFortPlayerStateZone : public AFortPlayerState
{
public:
	UMulticastDelegateProperty_                  OnCurrentPawnChanged;                              // 0x9F0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_2055[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class AFortPlayerStateZone*                  SpectatingTarget;                                  // 0xA18(0x8)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFortSpectatorZoneArray               Spectators;                                        // 0xA20(0xC8)(Net, NativeAccessSpecifierPublic)
	uint8                                        Pad_2056[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	UMulticastDelegateProperty_                  OnSpectatorsRemovedEvent;                          // 0xAF8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnSpectatorCountChangedEvent;                      // 0xB08(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnSpectatingTargetChangedEvent;                    // 0xB18(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_2057[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	enum class EFortKickReason                   KickedFromSessionReason;                           // 0xB30(0x1)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2058[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FReplicatedStatValues                 RS_Zone_Old;                                       // 0xB34(0x8)(Transient, NoDestructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_2059[0x10C];                                   // Fixing Size After Last Property  [ Dumper-7 ]
	class AFortCarriedObject*                    CarriedObject;                                     // 0xC48(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        NumRejoins;                                        // 0xC50(0x4)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        OldTotalScoreStat;                                 // 0xC54(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_205A[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bInvincibleDueToUI;                                // 0xC70(0x1)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_205B[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        CurrentHealth;                                     // 0xC74(0x4)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxHealth;                                         // 0xC78(0x4)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CurrentShield;                                     // 0xC7C(0x4)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxShield;                                         // 0xC80(0x4)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_205C[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FAccumulatedItemEntry>         AccumulatedItems;                                  // 0xC88(0x10)(Net, ZeroConstructor, RepNotify, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnAccumulatedItemsChanged;                         // 0xC98(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TArray<struct FSimulatedAttributeEntry>      SimulatedAttributes;                               // 0xCA8(0x10)(Net, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	class UFortGadgetItemDefinition*             PendingDestroyedGadgetItemDefinition;              // 0xCB8(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bHasEverSkydivedFromBus;                           // 0xCC0(0x1)(Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_205D[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortPlayerStateZone");
		return Clss;
	}

	void OnRep_SpectatingTarget();
	void OnRep_NumRejoins();
	void OnRep_AccumulatedItems();
	void MulticastTriggerOnGadgetTrackedAttributeDestroyedFX(class UFortGadgetItemDefinition* GadgetItemDefinition);
	bool IsPlayerDead();
	int32 GetSpectatorCount();
	float GetSimulatedAttributeValue(struct FGameplayAttribute& Attribute, float DefaultValue);
	class FString GetPlayerNameForStreaming();
	class FText GetOverrideRespawnStatusText();
	int32 GetNumOfAccumulatedItem(class UFortWorldItemDefinition* ItemDefinition);
	int32 GetNumOfAccumulatedBluGlo();
};

// 0x20 (0xCE8 - 0xCC8)
// Class FortniteGame.FortPlayerStatePvP
class AFortPlayerStatePvP : public AFortPlayerStateZone
{
public:
	uint8                                        Pad_205E[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        TotalQuantum;                                      // 0xCE0(0x4)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_205F[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortPlayerStatePvP");
		return Clss;
	}

	void OnRep_TotalQuantum(int32 PrevTotalQuantum);
};

// 0x438 (0x1120 - 0xCE8)
// Class FortniteGame.FortPlayerStateAthena
class AFortPlayerStateAthena : public AFortPlayerStatePvP
{
public:
	uint8                                        Pad_2062[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FFortRespawnData                      RespawnData;                                       // 0xCEC(0x20)(NoDestructor, Protected, NativeAccessSpecifierProtected)
	enum class ETeamMemberState                  ReplicatedTeamMemberState;                         // 0xD0C(0x1)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class ETeamMemberState                  TeamMemberState;                                   // 0xD0D(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2063[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        TeamMemberStateRepTime;                            // 0xD10(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2064[0x3C];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bHasWonAGame;                                      // 0xD50(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2065[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        TeamKillScore;                                     // 0xD54(0x4)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<class UAthenaGadgetItemDefinition*, int32> KillsWhileAthenaGadgetEquippedMap;                 // 0xD58(0x50)(ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	enum class EFortTeam                         TeamIndex;                                         // 0xDA8(0x1)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2066[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        TeamScorePlacement;                                // 0xDAC(0x4)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        TeamScore;                                         // 0xDB0(0x4)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Place;                                             // 0xDB4(0x4)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        DownScore;                                         // 0xDB8(0x4)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        KillScore;                                         // 0xDBC(0x4)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2067[0xC];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        AIKillCount;                                       // 0xDCC(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2068[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        NumChestsOpened;                                   // 0xDD4(0x4)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2069[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        NumAmmoCansOpened;                                 // 0xDDC(0x4)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_206A[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        NumSupplyDropsOpened;                              // 0xDE4(0x4)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_206B[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        NumLlamasOpened;                                   // 0xDEC(0x4)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_206C[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        NumForagedItemsConsumed;                           // 0xDF4(0x4)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_206D[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        NumMinutesAlive;                                   // 0xDFC(0x4)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_206E[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        NumBronzeCoinsCollected;                           // 0xE04(0x4)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_206F[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        NumSilverCoinsCollected;                           // 0xE0C(0x4)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2070[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        NumGoldCoinsCollected;                             // 0xE14(0x4)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2071[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        TotalPlayerScore;                                  // 0xE1C(0x4)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  PointsAddedToScore;                                // 0xE20(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  TeamScoreChanged;                                  // 0xE30(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  TeamPlacementChanged;                              // 0xE40(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  PlaceChanged;                                      // 0xE50(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  TeamAverageDamageChanged;                          // 0xE60(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TArray<class AFortPlayerStateAthena*>        FriendsInSquad;                                    // 0xE70(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	TArray<class AFortPlayerStateAthena*>        FriendsInSquadAtPartnerCafe;                       // 0xE80(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	TArray<class AFortPlayerStateAthena*>        SquadPlayerStates;                                 // 0xE90(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	int32                                        SquadListUpdateValue;                              // 0xEA0(0x4)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2072[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSet<class AFortPlayerStateAthena*>          HostilePlayersDamaged;                             // 0xEA8(0x50)(ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	uint8                                        StormSurgeEffectCount;                             // 0xEF8(0x1)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2073[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        TeamAverageDamageDealt;                            // 0xEFC(0x4)(Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        SquadId;                                           // 0xF00(0x1)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2074[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FPlayerBannerInfo                     Banner;                                            // 0xF08(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	uint8                                        bThankedBusDriver : 1;                             // Mask : 0x1 0xF30(0x1)(Net, Transient, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bInAircraft : 1;                                   // Mask : 0x2 0xF30(0x1)(Net, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bUsingAnonymousMode : 1;                           // Mask : 0x4 0xF30(0x1)(Net, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2075[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  StreamerModeName;                                  // 0xF38(0x18)(Net, Transient, NativeAccessSpecifierPublic)
	class AFortPlayerMarkerBase*                 LocalWorldMapMarker;                               // 0xF50(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MapIndicatorServerTime;                            // 0xF58(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsTalking;                                        // 0xF5C(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsMuted;                                          // 0xF5D(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2076[0x16A];                                   // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector2D                             MapIndicatorPos;                                   // 0x10C8(0x8)(Net, ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        SecondsAlive;                                      // 0x10D0(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bIsDisconnected;                                   // 0x10D4(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2077[0x1B];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UTexture2D*                            GameModeIcon;                                      // 0x10F0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FDeathInfo                            DeathInfo;                                         // 0x10F8(0x28)(Net, RepNotify, NoDestructor, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortPlayerStateAthena");
		return Clss;
	}

	enum class EDeathCause ToDeathCause(struct FGameplayTagContainer& InTags, bool bWasDBNO);
	void SetMapIndicatorPos(const struct FVector2D& Position);
	void ServerSetInAircraft(bool bNewInAircraft);
	void Server_SetCanEditCreativeIsland(bool bCanEdit, TArray<class FString>& WhiteList);
	void OnRep_ThankedBusDriver();
	void OnRep_TeamScorePlacement();
	void OnRep_TeamScore();
	void OnRep_TeamKillScore();
	void OnRep_TeamIndex(enum class EFortTeam OldVal);
	void OnRep_TeamAverageDamageDealt();
	void OnRep_StormSurgeEffectCount();
	void OnRep_SquadListUpdateValue();
	void OnRep_SquadId();
	void OnRep_ReplicatedTeamMemberState();
	void OnRep_Place();
	void OnRep_NumSupplyDropsOpened();
	void OnRep_NumSilverCoinsCollected();
	void OnRep_NumMinutesAlive();
	void OnRep_NumLlamasOpened();
	void OnRep_NumGoldCoinsCollected();
	void OnRep_NumForagedItemsConsumed();
	void OnRep_NumChestsOpened();
	void OnRep_NumBronzeCoinsCollected();
	void OnRep_NumAmmoCansOpened();
	void OnRep_MapIndicatorPos();
	void OnRep_Kills();
	void OnRep_Downs();
	void OnRep_DeathInfo();
	void OnRep_BannerInfo();
	void OnRep_AIKills();
	bool IsSquadDead();
	bool IsDisconnected();
	struct FLinearColor GetPinColor();
	struct FVector2D GetMapIndicatorPos();
	struct FDeathInfo& GetDeathInfo();
	void ClientReportTeamKill(int32 TeamKills);
	void ClientReportKill(class AFortPlayerStateAthena* Player);
	void ClientReportDBNO(class AFortPlayerStateAthena* Player);
	void ClientNotifyTournamentStatsFinal(const class FString& EventTournamentId, const class FString& EventWindowId);
	bool CanEditCreativeIsland();
};

// 0x0 (0xCC8 - 0xCC8)
// Class FortniteGame.FortPlayerStateDeployableBase
class AFortPlayerStateDeployableBase : public AFortPlayerStateZone
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortPlayerStateDeployableBase");
		return Clss;
	}

};

// 0x0 (0xCC8 - 0xCC8)
// Class FortniteGame.FortPlayerStateFOB
class AFortPlayerStateFOB : public AFortPlayerStateZone
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortPlayerStateFOB");
		return Clss;
	}

};

// 0x0 (0x9F0 - 0x9F0)
// Class FortniteGame.FortPlayerStateFrontEnd
class AFortPlayerStateFrontEnd : public AFortPlayerState
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortPlayerStateFrontEnd");
		return Clss;
	}

};

// 0x0 (0xCC8 - 0xCC8)
// Class FortniteGame.FortPlayerStateKeep
class AFortPlayerStateKeep : public AFortPlayerStateZone
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortPlayerStateKeep");
		return Clss;
	}

};

// 0x0 (0xCC8 - 0xCC8)
// Class FortniteGame.FortPlayerStateManor
class AFortPlayerStateManor : public AFortPlayerStateZone
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortPlayerStateManor");
		return Clss;
	}

};

// 0x8 (0xCD0 - 0xCC8)
// Class FortniteGame.FortPlayerStateOutpost
class AFortPlayerStateOutpost : public AFortPlayerStateZone
{
public:
	bool                                         bCanEditOutpost;                                   // 0xCC8(0x1)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_207A[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        CraftingTableItemsRemaing;                         // 0xCCC(0x4)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortPlayerStateOutpost");
		return Clss;
	}

	void SetCanEditOutpost(class AFortPlayerStateOutpost* InPlayer, bool bCanEdit);
	void ServerSetCanEditOutpost(class AFortPlayerStateOutpost* InPlayer, bool bCanEdit);
	void OnRep_CraftingTableItemsRemaing();
	void OnRep_CanEditOutpost();
	bool IsOutpostOwner();
	bool CanEditOutpost();
};

// 0x240 (0x270 - 0x30)
// Class FortniteGame.FortPlaylist
class UFortPlaylist : public UPrimaryDataAsset
{
public:
	int32                                        PlaylistId;                                        // 0x30(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  PlaylistName;                                      // 0x34(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MinPlayers;                                        // 0x3C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaxPlayers;                                        // 0x40(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaxTeamCount;                                      // 0x44(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaxTeamSize;                                       // 0x48(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaxSocialPartySize;                                // 0x4C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaxSquadSize;                                      // 0x50(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaxSquads;                                         // 0x54(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         EnforceSquadFill;                                  // 0x58(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bAllowSquadFillOption;                             // 0x59(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bAllowJoinInProgress;                              // 0x5A(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_207B[0x5];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UPlaylistUserOptions*                  UserOptions;                                       // 0x60(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<TSoftObjectPtr<class UWorld>>         AdditionalLevels;                                  // 0x68(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, NativeAccessSpecifierPublic)
	enum class EFortTeam                         DefaultFirstTeam;                                  // 0x78(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortTeam                         DefaultLastTeam;                                   // 0x79(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_207C[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGameplayTagContainer                 GameplayTagContainer;                              // 0x80(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	enum class EFriendlyFireType                 FriendlyFireType;                                  // 0xA0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bUseFriendlyFireAimAssist;                         // 0xA1(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_207D[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        LootLevel;                                         // 0xA4(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTagQuery                     LootTagQuery;                                      // 0xA8(0x48)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	int32                                        BuildingLevelOverride;                             // 0xF0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EDBNOType                         DBNOType;                                          // 0xF4(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_207E[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<TSoftObjectPtr<class UFortGameplayModifierItemDefinition>> ModifierList;                                      // 0xF8(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, NativeAccessSpecifierPublic)
	TSoftClassPtr<class AFortTimeOfDayManager>   TimeOfDayManager;                                  // 0x108(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UFortWorldItemDefinition*>      ItemsToFullyLoad;                                  // 0x130(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	bool                                         bIsDefaultPlaylist;                                // 0x140(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_207F[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  UIDisplayName;                                     // 0x148(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FText                                  UIDescription;                                     // 0x160(0x18)(Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                 HUDElementsToHide;                                 // 0x178(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UDataTable>             LootTierData;                                      // 0x198(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UDataTable>             LootPackages;                                      // 0x1C0(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UDataTable>             RangedWeapons;                                     // 0x1E8(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UCurveTable>            GameData;                                          // 0x210(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UCurveTable>            ResourceRates;                                     // 0x238(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        GarbageCollectionFrequency;                        // 0x260(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ServerPerformanceEventFrequency;                   // 0x264(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ServerMetricsEventFrequency;                       // 0x268(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2080[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortPlaylist");
		return Clss;
	}

};

// 0x410 (0x680 - 0x270)
// Class FortniteGame.FortPlaylistAthena
class UFortPlaylistAthena : public UFortPlaylist
{
public:
	bool                                         bRewardsTrackPlacement;                            // 0x270(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bRewardsAllowXPProgression;                        // 0x271(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bRewardForRevivingTeammates;                       // 0x272(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ERewardPlacementBonusType         RewardPlacementBonusType;                          // 0x273(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        RewardsPlacementThreshold;                         // 0x274(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ERewardTimePlayedType             RewardTimePlayedType;                              // 0x278(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2081[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        RewardTimePlayedXPPerMinute;                       // 0x27C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        RewardTimePlayedXPFlatValue;                       // 0x280(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bAllowSinglePartyMatches;                          // 0x284(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bRequeueAfterFailedSessionAssignment;              // 0x285(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsTournament;                                     // 0x286(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnableAdvancedLogic;                              // 0x287(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bUpdateMMR;                                        // 0x288(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2082[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                RatingType;                                        // 0x290(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                Strategy;                                          // 0x2A0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                SessionAssignmentChannel;                          // 0x2B0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaxBucketCapacity;                                 // 0x2C0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaxPendingMatches;                                 // 0x2C4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FRatingExpansion>              PriorityRatingExpansion;                           // 0x2C8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	bool                                         bUseInputRules;                                    // 0x2D8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EAthenaWinCondition               WinConditionType;                                  // 0x2D9(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EAthenaVictoryUIType              VictoryUIType;                                     // 0x2DA(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2083[0x5];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  VictoryText;                                       // 0x2E0(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FScalableFloat                        TimedWinConditionTime;                             // 0x2F8(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FScalableFloat                        FinalWinConditionTime;                             // 0x318(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FWinConditionScoreData                ScoringData;                                       // 0x338(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FScalableFloat                        TimedSafeZonePhaseTime;                            // 0x388(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	int32                                        WinConditionPlayersRemaining;                      // 0x3A8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bSupportsStormCapSystem;                           // 0x3AC(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2084[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        StormCapDataColumn;                                // 0x3B0(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsLargeTeamGame;                                  // 0x3B4(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShouldSpreadTeams;                                // 0x3B5(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIgnoreDefaultQuests;                              // 0x3B6(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDisallowMultipleWeaponsOfType;                    // 0x3B7(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bAllowEditingEnemyWalls;                           // 0x3B8(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2085[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        LootDropRounds;                                    // 0x3BC(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ForceKickAfterDeathTime;                           // 0x3C0(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EForceKickAfterDeathMode          ForceKickAfterDeathMode;                           // 0x3C4(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2086[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FItemAndCount>                 InventoryItemsToGrant;                             // 0x3C8(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	bool                                         bForceCameraFadeOnRespawn;                         // 0x3D8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2087[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        MinTimeBeforeRespawnCameraFade;                    // 0x3DC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EAthenaRespawnType                RespawnType;                                       // 0x3E0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2088[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FScalableFloat                        RespawnHeight;                                     // 0x3E8(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FScalableFloat                        MaxRespawnHeight;                                  // 0x408(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FScalableFloat                        RespawnTime;                                       // 0x428(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	bool                                         bRespawnInAir;                                     // 0x448(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2089[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FScalableFloat                        RespawnLevelStreamDistanceToForceSceenFade;        // 0x450(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	enum class EAirCraftBehavior                 AirCraftBehavior;                                  // 0x470(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bUseCustomAircraftPathSelection;                   // 0x471(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bUseSameDirectionForOpposingAircraft;              // 0x472(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_208A[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        AircraftPathOffsetFromMapCenterMin;                // 0x474(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AircraftPathOffsetFromMapCenterMax;                // 0x478(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AircraftPathMidpointSelectionRadiusMin;            // 0x47C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AircraftPathMidpointSelectionRadiusMax;            // 0x480(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_208B[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class UFortMissionGenerator>     PlaylistMissionGen;                                // 0x488(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bForceLTMLoadingScreenBackground;                  // 0x490(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_208C[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftClassPtr<class UUserWidget>             LoadingScreenWidget;                               // 0x498(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FPlaylistUIExtension>          UIExtensions;                                      // 0x4C0(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TSubclassOf<class UFortGameUIExtenderAthena> UIExtenderClass;                                   // 0x4D0(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                            MissionIcon;                                       // 0x4D8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                  UIDisplaySubName;                                  // 0x4E0(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FScalableFloat                        OnlyRespectsGlobalSettingForReplayRecording;       // 0x4F8(0x20)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	bool                                         bLimitedTimeMode;                                  // 0x518(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDisplayScoreInHUD;                                // 0x519(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDisplayRespawnWidget;                             // 0x51A(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnforceFullSquadInUI;                             // 0x51B(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_208D[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FSlateBrush                           MapImageOverride;                                  // 0x520(0x88)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	float                                        MapScaleOverride;                                  // 0x5A8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDrawCreativeDynamicIslands;                       // 0x5AC(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ESafeZoneStartUp                  SafeZoneStartUp;                                   // 0x5AD(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bWarmUpInStorm;                                    // 0x5AE(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_208E[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        StormEffectDelay;                                  // 0x5B0(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDisplayFinalStormPosition;                        // 0x5B4(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDrawLineToStormCircleIfOutside;                   // 0x5B5(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_208F[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        LastSafeZoneIndex;                                 // 0x5B8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bUseDefaultSupplyDrops;                            // 0x5BC(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2090[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FSupplyDropModifierData>       SupplyDropModifierList;                            // 0x5C0(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<TSoftObjectPtr<class UFortSupplyDropInfo>> SupplyDropInfoList;                                // 0x5D0(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<TSoftObjectPtr<class UDataTable>>     QueryNameToLootChanceScaleTables;                  // 0x5E0(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<TSoftObjectPtr<class UDataTable>>     QueryNameToLootCountScaleTables;                   // 0x5F0(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UFortAthenaExitCraftInfo> ExitCraftInfo;                                     // 0x600(0x28)(Edit, BlueprintVisible, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bPlaylistUsesCustomCharacterParts;                 // 0x628(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2091[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<TSoftObjectPtr<class UFortSpawnActorInfo>> SpawnActorInfoList;                                // 0x630(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, NativeAccessSpecifierPublic)
	uint8                                        bEnableCreativeMode : 1;                           // Mask : 0x1 0x640(0x1)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bAllowTeamSwitching : 1;                           // Mask : 0x2 0x640(0x1)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bAllowLayoutRequirementsFeature : 1;               // Mask : 0x4 0x640(0x1)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bUsesAnimationSharing;                             // 0x641(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2092[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftObjectPtr<class UAnimationSharingSetup> AnimationSharingSetup;                             // 0x648(0x28)(Edit, BlueprintVisible, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        PlaylistStatId;                                    // 0x670(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AssetRegistrySearchable, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bAccumulateToProfileStats;                         // 0x674(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AssetRegistrySearchable, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bSaveToRecentGameList;                             // 0x675(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AssetRegistrySearchable, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bEnableStatsV2Stats;                               // 0x676(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AssetRegistrySearchable, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2093[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UAthenaAISettings*                     AISettings;                                        // 0x678(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortPlaylistAthena");
		return Clss;
	}

	void CreateCalendarPayload_RegionalOverride();
	void CreateCalendarPayload_Enabling();
};

// 0x10 (0x38 - 0x28)
// Class FortniteGame.FortPlaylistManager
class UFortPlaylistManager : public UObject
{
public:
	TArray<class UFortPlaylistAthena*>           AthenaPlaylists;                                   // 0x28(0x10)(BlueprintVisible, ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortPlaylistManager");
		return Clss;
	}

};

// 0x70 (0xA0 - 0x30)
// Class FortniteGame.PlaylistUserOptionBase
class UPlaylistUserOptionBase : public UDataAsset
{
public:
	TSoftClassPtr<class UObject>                 OptionScope;                                       // 0x30(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                OptionKey;                                         // 0x58(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FText                                  OptionDisplayName;                                 // 0x68(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FText                                  OptionDescription;                                 // 0x80(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class UMaterial*                             OptionMaterial;                                    // 0x98(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("PlaylistUserOptionBase");
		return Clss;
	}

	class FString GetOptionKey(bool bWithScoping);
};

// 0x18 (0xB8 - 0xA0)
// Class FortniteGame.PlaylistUserOptionEnum
class UPlaylistUserOptionEnum : public UPlaylistUserOptionBase
{
public:
	TArray<struct FPlaylistOptionValue>          OptionValues;                                      // 0xA0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	int32                                        DefaultValueIndex;                                 // 0xB0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2095[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("PlaylistUserOptionEnum");
		return Clss;
	}

};

// 0x18 (0xB8 - 0xA0)
// Class FortniteGame.PlaylistUserOptionIntEnum
class UPlaylistUserOptionIntEnum : public UPlaylistUserOptionBase
{
public:
	TArray<struct FPlaylistOptionIntValue>       OptionValues;                                      // 0xA0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	int32                                        DefaultValueIndex;                                 // 0xB0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2096[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("PlaylistUserOptionIntEnum");
		return Clss;
	}

};

// 0x18 (0xB8 - 0xA0)
// Class FortniteGame.PlaylistUserOptionFloatEnum
class UPlaylistUserOptionFloatEnum : public UPlaylistUserOptionBase
{
public:
	TArray<struct FPlaylistOptionFloatValue>     OptionValues;                                      // 0xA0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	int32                                        DefaultValueIndex;                                 // 0xB0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2097[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("PlaylistUserOptionFloatEnum");
		return Clss;
	}

};

// 0x28 (0xC8 - 0xA0)
// Class FortniteGame.PlaylistUserOptionFloatRange
class UPlaylistUserOptionFloatRange : public UPlaylistUserOptionBase
{
public:
	float                                        Min;                                               // 0xA0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Max;                                               // 0xA4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DefaultValue;                                      // 0xA8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        IncrementValue;                                    // 0xAC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                  UnitName;                                          // 0xB0(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("PlaylistUserOptionFloatRange");
		return Clss;
	}

};

// 0x10 (0xB0 - 0xA0)
// Class FortniteGame.PlaylistUserOptionIntRange
class UPlaylistUserOptionIntRange : public UPlaylistUserOptionBase
{
public:
	int32                                        Min;                                               // 0xA0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Max;                                               // 0xA4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        DefaultValue;                                      // 0xA8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2098[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("PlaylistUserOptionIntRange");
		return Clss;
	}

};

// 0x8 (0xA8 - 0xA0)
// Class FortniteGame.PlaylistUserOptionBool
class UPlaylistUserOptionBool : public UPlaylistUserOptionBase
{
public:
	bool                                         bDefaultValue;                                     // 0xA0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2099[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("PlaylistUserOptionBool");
		return Clss;
	}

};

// 0x10 (0x40 - 0x30)
// Class FortniteGame.PlaylistUserOptions
class UPlaylistUserOptions : public UDataAsset
{
public:
	TArray<class UPlaylistUserOptionBase*>       Options;                                           // 0x30(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("PlaylistUserOptions");
		return Clss;
	}

};

// 0x0 (0x28 - 0x28)
// Class FortniteGame.FortPlayMontageForGameplayTagQueryInterface
class UFortPlayMontageForGameplayTagQueryInterface : public UInterface
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortPlayMontageForGameplayTagQueryInterface");
		return Clss;
	}

};

// 0x0 (0xE0 - 0xE0)
// Class FortniteGame.FortPlaysetItem
class UFortPlaysetItem : public UFortAccountItem
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortPlaysetItem");
		return Clss;
	}

};

// 0x120 (0x480 - 0x360)
// Class FortniteGame.FortPlaysetItemDefinition
class UFortPlaysetItemDefinition : public UFortAccountItemDefinition
{
public:
	TSoftObjectPtr<class UWorld>                 PlaysetToSpawn;                                    // 0x360(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UFortWorldItemDefinition> SpawnItem;                                         // 0x388(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                OptionFullSavePath;                                // 0x3B0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        SizeX;                                             // 0x3C0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        SizeY;                                             // 0x3C4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        SizeZ;                                             // 0x3C8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ZSnapTolerance;                                    // 0x3CC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EPlaysetOffsetType                OffsetType;                                        // 0x3D0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_209D[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               LocationOffset;                                    // 0x3D4(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                              DefaultRotation;                                   // 0x3E0(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_209E[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  UIDisplayName;                                     // 0x3F0(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TSubclassOf<class AFortMinigame>             MinigameClass;                                     // 0x408(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bAdjustForWorldCollision : 1;                      // Mask : 0x1 0x410(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_209F[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class ULevelSaveRecord*                      LevelSaveRecord;                                   // 0x418(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TMap<struct FCreativeActorId, struct FCreativeActorMetaData> CreativeActorMetaData;                             // 0x420(0x50)(Edit, ZeroConstructor, EditConst, NativeAccessSpecifierPrivate)
	int32                                        TotalCreativeActorSize;                            // 0x470(0x4)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        TotalCreativeActorInstanceSize;                    // 0x474(0x4)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  PlaysetName;                                       // 0x478(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortPlaysetItemDefinition");
		return Clss;
	}

	class ULevelStreamingDynamic* SpawnPlaysetFromStruct(class AActor* WorldContextObject, struct FFortPlaysetStreamingData& LevelData);
	class ULevelStreamingDynamic* SpawnPlayset(class AActor* WorldContextObject, class UFortPlaysetItemDefinition* Playset, const struct FVector& Location, const struct FRotator& Rotation, struct FFortPlaysetStreamingData* OutLevelData);
	void SpawnActorsInPlayset(class AActor* WorldContextObject, class UFortPlaysetItemDefinition* Playset);
	class FName GetPlaysetName();
	struct FVector AdjustToFinalLocation(class UObject* WorldContextObject, class UFortPlaysetItemDefinition* Playset, const struct FVector& BaseLocation, const struct FRotator& Rotation);
};

// 0x58 (0x88 - 0x30)
// Class FortniteGame.FortPOIAmbientAudioBank
class UFortPOIAmbientAudioBank : public UDataAsset
{
public:
	struct FGameplayTag                          LocationTag;                                       // 0x30(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFortPOIAmbientAudioLoop              Loops;                                             // 0x38(0x10)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_20A0[0x30];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FFortPOIAmbientAudioOneShot>   OneShots;                                          // 0x78(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortPOIAmbientAudioBank");
		return Clss;
	}

};

// 0x150 (0x6C0 - 0x570)
// Class FortniteGame.FortPoiCollisionComponent
class UFortPoiCollisionComponent : public UPrimitiveComponent
{
public:
	struct FBodyInstance                         PoiBodyInstance;                                   // 0x570(0x150)(NativeAccessSpecifierPrivate)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortPoiCollisionComponent");
		return Clss;
	}

};

// 0xC8 (0x3F8 - 0x330)
// Class FortniteGame.FortPoiManager
class AFortPoiManager : public AActor
{
public:
	struct FFortPoiGridInfo                      FortPoiGridInfo;                                   // 0x330(0x28)(Net, RepNotify, NoDestructor, NativeAccessSpecifierPublic)
	TArray<int16>                                FortPoiGridCellsTagContainerTableIds;              // 0x358(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FFortPoiVolumeGridCell>        FortPoiGridCellsLargeVolume;                       // 0x368(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class AFortPoiVolume*>                SmallTickUpdatedPoi;                               // 0x378(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<class AFortPoiVolume*>                LargePoiVolumes;                                   // 0x388(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<class AFortPoiVolume*>                AllPoiVolumes;                                     // 0x398(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	int32                                        TestPlayerIndex;                                   // 0x3A8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        MaxNumTestsPerFrame;                               // 0x3AC(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FGameplayTagContainer>         PoiTagContainerTable;                              // 0x3B0(0x10)(Net, ZeroConstructor, RepNotify, NativeAccessSpecifierPrivate)
	int32                                        PoiTagContainerTableSize;                          // 0x3C0(0x4)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        PoiGridPrevSizeForDebugDisplay;                    // 0x3C4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<int16>                                PoiGridForDebugDisplay;                            // 0x3C8(0x10)(Net, ZeroConstructor, RepNotify, NativeAccessSpecifierPrivate)
	uint8                                        Pad_20A1[0x20];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortPoiManager");
		return Clss;
	}

	void OnRep_PoiTagContainerTable();
	void OnRep_PoiGridForDebugDisplay();
	void OnRep_FortPoiGridInfo();
};

// 0x38 (0x3A0 - 0x368)
// Class FortniteGame.FortPoiVolume
class AFortPoiVolume : public AVolume
{
public:
	float                                        LargeGameVolume;                                   // 0x368(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_20A4[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGameplayTagContainer                 LocationTags;                                      // 0x370(0x20)(Edit, Protected, NativeAccessSpecifierProtected)
	class UFortPOIAmbientAudioBank*              AudioBank;                                         // 0x390(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFortPoiCollisionComponent*            PoiCollisionComp;                                  // 0x398(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortPoiVolume");
		return Clss;
	}

	bool DoesShapeComponentOverlap(class UShapeComponent* Shape);
	bool ContainsLocationTag(struct FGameplayTag& Tag);
};

// 0x50 (0xC10 - 0xBC0)
// Class FortniteGame.FortPooledSkelMeshComponent
class UFortPooledSkelMeshComponent : public USkeletalMeshComponent
{
public:
	uint8                                        Pad_20A5[0x30];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UMaterialInterface*>            SavedMaterials;                                    // 0xBF0(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	uint8                                        Pad_20A6[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortPooledSkelMeshComponent");
		return Clss;
	}

};

// 0x30 (0x110 - 0xE0)
// Class FortniteGame.FortPrerollDataItem
class UFortPrerollDataItem : public UFortAccountItem
{
public:
	class FString                                OfferId;                                           // 0xE0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FDateTime                             Expiration;                                        // 0xF0(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FMcpLootEntry>                 Items;                                             // 0xF8(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	int32                                        Highest_Rarity;                                    // 0x108(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_20A7[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortPrerollDataItem");
		return Clss;
	}

};

// 0x10 (0x370 - 0x360)
// Class FortniteGame.FortPrerollDataItemDefinition
class UFortPrerollDataItemDefinition : public UFortAccountItemDefinition
{
public:
	float                                        StreakbreakerRefundMultiplier;                     // 0x360(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_20A8[0xC];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortPrerollDataItemDefinition");
		return Clss;
	}

};

// 0x0 (0x120 - 0x120)
// Class FortniteGame.FortProceduralFoliageComponent
class UFortProceduralFoliageComponent : public UProceduralFoliageComponent
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortProceduralFoliageComponent");
		return Clss;
	}

};

// 0x580 (0x5A8 - 0x28)
// Class FortniteGame.FortProfileGo
class UFortProfileGo : public UObject
{
public:
	uint8                                        Pad_20A9[0xF0];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FProfileGoScenario>            ProfileGoScenarios;                                // 0x118(0x10)(ZeroConstructor, Config, Protected, NativeAccessSpecifierProtected)
	TArray<struct FProfileGoCollection>          ProfileGoCollections;                              // 0x128(0x10)(ZeroConstructor, Config, Protected, NativeAccessSpecifierProtected)
	TArray<struct FProfileGoCommand>             AllCommands;                                       // 0x138(0x10)(ZeroConstructor, Config, Protected, NativeAccessSpecifierProtected)
	float                                        DefaultSettleTime;                                 // 0x148(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_20AA[0x45C];                                   // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortProfileGo");
		return Clss;
	}

};

// 0x10 (0x798 - 0x788)
// Class FortniteGame.FortProjectile_MOBATurret
class AFortProjectile_MOBATurret : public AFortProjectileBase
{
public:
	TArray<struct FHitResult>                    ForcedHitResults;                                  // 0x788(0x10)(ZeroConstructor, Transient, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortProjectile_MOBATurret");
		return Clss;
	}

	void OnHomingTargetDied(class AActor* DamagedActor, float Damage, class AController* InstigatedBy, class AActor* DamageCauser, const struct FVector& HitLocation, class UPrimitiveComponent* FHitComponent, class FName BoneName, const struct FVector& Momentum);
};

// 0xA8 (0x830 - 0x788)
// Class FortniteGame.FortProjectileAthena
class AFortProjectileAthena : public AFortProjectileBase
{
public:
	struct FVector_NetQuantize                   FireStartLoc;                                      // 0x788(0xC)(Net, RepNotify, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_20AE[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FHitResult                            PawnHitResult;                                     // 0x7A4(0x88)(Net, IsPlainOldData, RepNotify, NoDestructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_20AF[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortProjectileAthena");
		return Clss;
	}

	void ServerNotifyPawnHit(const struct FHitResult& Hit);
	void OnRep_PawnHitResult();
	void OnRep_FireStart();
	void KillAfterNoPawnHit();
};

// 0x8 (0x790 - 0x788)
// Class FortniteGame.FortProjectileFallingTrap
class AFortProjectileFallingTrap : public AFortProjectileBase
{
public:
	class UStaticMeshComponent*                  MeshComponent;                                     // 0x788(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortProjectileFallingTrap");
		return Clss;
	}

};

// 0x0 (0x330 - 0x330)
// Class FortniteGame.FortProjectileTrajectory
class AFortProjectileTrajectory : public AActor
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortProjectileTrajectory");
		return Clss;
	}

	void SetTrajectoryFromNative(TArray<struct FVector>& SplinePoints, TArray<struct FVector>& SplineTangents);
};

// 0x0 (0x330 - 0x330)
// Class FortniteGame.FortProtoActorBase
class AFortProtoActorBase : public AActor
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortProtoActorBase");
		return Clss;
	}

	void SetStreamingPriority(float Value);
};

// 0x48 (0x70 - 0x28)
// Class FortniteGame.FortPrototypingContext
class UFortPrototypingContext : public UBlueprintContextBase
{
public:
	UMulticastDelegateProperty_                  OnPrototypingStatusChangedEvent;                   // 0x28(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_20B0[0x38];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortPrototypingContext");
		return Clss;
	}

	void OnPrototypingStatusChanged__DelegateSignature();
	void HandleMcpProfilesInitialized();
	enum class EFortPrototypingStatus GetPrototypingStatus();
};

// 0x8 (0x30 - 0x28)
// Class FortniteGame.FortPushNotificationManager
class UFortPushNotificationManager : public UObject
{
public:
	uint8                                        Pad_20B1[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortPushNotificationManager");
		return Clss;
	}

};

// 0x138 (0x8C8 - 0x790)
// Class FortniteGame.StrategicBuildingActor
class AStrategicBuildingActor : public ABuildingGameplayActor
{
public:
	float                                        HealthBarVisibilityDistance;                       // 0x790(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        HealthBarVisibilityDistanceSquared;                // 0x794(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBoxComponent*                         TouchBoxComponent;                                 // 0x798(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EFortStrategicBuildingCategory    StrategicBuildingCategory;                         // 0x7A0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_20B4[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UFortAbilitySet*>               PermanentInherentAbilitySets;                      // 0x7A8(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TArray<struct FStrategicBuildingLevelInformation> LevelInfo;                                         // 0x7B8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	float                                        ProximityPulseInterval;                            // 0x7C8(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_20B5[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class UFortGameplayAbility>      DeathPenaltyAbility;                               // 0x7D0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UParticleSystem*                       DeathParticles;                                    // 0x7D8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USoundBase*                            DeathSound;                                        // 0x7E0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFortGadgetItemDefinition*             SpawnedFromItemDefinition;                         // 0x7E8(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FTeamStrategicBuildingHandle          SBAHandle;                                         // 0x7F0(0x4)(Transient, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FStrategicBuildingActiveConstructionInfo ConstructionProgress;                              // 0x7F4(0x10)(Net, Transient, RepNotify, NoDestructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_20B6[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FStrategicBuildingLevelActiveCriteriaProgress> LevelProgress;                                     // 0x808(0x10)(Net, ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	TArray<struct FFortAbilitySetHandle>         StrategicBuildingAbilitySets;                      // 0x818(0x10)(ZeroConstructor, Transient, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	TArray<struct FFortAbilitySetHandle>         PersistentlyAppliedAbilitySets;                    // 0x828(0x10)(ZeroConstructor, Transient, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	TArray<class AActor*>                        DeferredTouchActorsToProcess;                      // 0x838(0x10)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_20B7[0x58];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	uint8                                        bIsActive : 1;                                     // Mask : 0x1 0x8A0(0x1)(Net, Transient, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bHasGEsToApplyOnTouch : 1;                         // Mask : 0x2 0x8A0(0x1)(Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bHasGEsToApplyOnPulseTimer : 1;                    // Mask : 0x4 0x8A0(0x1)(Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_20B8[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UFortVisibilityComponent*              VisibilityComponent;                               // 0x8A8(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTexture2D*                            MiniMapIcon;                                       // 0x8B0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_20B9[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("StrategicBuildingActor");
		return Clss;
	}

	void SetupVisibilityComponent();
	void SetupIndicators();
	void ProcessDeferredTouchActors();
	void OnRep_ConstructionProgress();
	void OnRep_bIsActive();
	void OnConstructionTickPlayEffects(float DeltaTime, float ElapsedPct, int32 ConstructionLvl);
	void OnConstructionStartedPlayEffects(float ServerStartTime, float ServerEndTime, float CurrentServerTime, float ElapsedPct, int32 ConstructionLvl);
	void OnConstructionEndedPlayEffects(int32 ConstructionLevel);
	void OnActiveStatusChanged(bool bNewActiveStatus);
	bool IsActive();
	void GiveItemFromStrategicBuildingToPlayer(class AFortPlayerController* PlayerController, class UFortWorldItemDefinition* ItemDefinition, int32 NumberToGive);
	float GetMaxLevelUnlockProgress(int32 InLevel);
	struct FVector GetDeathEffectsScale();
	struct FRotator GetDeathEffectsRotation();
	struct FVector GetDeathEffectsLocation();
	float GetCurrentLevelUnlockProgress(int32 InLevel);
	bool AttemptIncrementLevelUnlockProgress(int32 InLevel, float InProgressDelta);
	void ApplyProximityPulseEffects();
};

// 0x30 (0x8F8 - 0x8C8)
// Class FortniteGame.FortPvPBaseCornerstone
class AFortPvPBaseCornerstone : public AStrategicBuildingActor
{
public:
	uint8                                        bInvincible : 1;                                   // Mask : 0x1 0x8C8(0x1)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_20BA[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	UMulticastDelegateProperty_                  OnCornerstoneDamaged;                              // 0x8D0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	UMulticastDelegateProperty_                  OnCornerstoneOutOfHealth;                          // 0x8E0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_20BB[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortPvPBaseCornerstone");
		return Clss;
	}

	void SetInvincibility(bool bInInvincible);
	void OnRep_bInvincible();
	void OnInvincibilityChanged(bool bIsInvincible);
};

// 0x0 (0x28 - 0x28)
// Class FortniteGame.FortPvPFunctionLibrary
class UFortPvPFunctionLibrary : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortPvPFunctionLibrary");
		return Clss;
	}

	void SetMatchLevel(class UObject* WorldContextObject, int32 MatchLevel);
	class AStrategicBuildingActor* GetTeamStrategicBuildingActor(class UObject* WorldContextObject, enum class EFortTeam Team, struct FTeamStrategicBuildingHandle& SBAHandle);
	class AFortPvPBaseCornerstone* GetTeamCornerstone(class UObject* WorldContextObject, enum class EFortTeam Team);
	int32 GetRoundTimeAccumulated(class UObject* WorldContextObject);
	int32 GetMatchLevel(class UObject* WorldContextObject);
	void GetDifficultyRowNamesFromPvPRating(TArray<class FName>* OutDifficultyRows, float InPvPRating);
	class AFortTeamInfoPvPBaseDestruction* GetBaseDestructionTeamInfo(class UObject* WorldContextObject, enum class EFortTeam Team);
	int32 GetBaseBuildingCost(class ABuildingActor* BuildingActor);
	void FirePvPVictoryMissionEvent(class UObject* WorldContextObject, enum class EFortTeam InWinningTeam);
	void DestroyAllFortPickupsWithItem(class UObject* WorldContextObject, class UFortWorldItemDefinition* ItemDefinitionToCheck);
};

// 0x10 (0x6F0 - 0x6E0)
// Class FortniteGame.FortPvPMission
class AFortPvPMission : public AFortMission
{
public:
	class AFortPlayerStatePvP*                   WinningPlayerState;                                // 0x6E0(0x8)(Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AFortTeamInfo*                         WinningTeam;                                       // 0x6E8(0x8)(Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortPvPMission");
		return Clss;
	}

};

// 0x28 (0x718 - 0x6F0)
// Class FortniteGame.FortPvPMission_3PtDomination
class AFortPvPMission_3PtDomination : public AFortPvPMission
{
public:
	TArray<class ABuildingCapturePointActor*>    CapturePoints;                                     // 0x6F0(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	TArray<int32>                                TeamScores;                                        // 0x700(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, Protected, NativeAccessSpecifierProtected)
	int32                                        ScoreToWin;                                        // 0x710(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_20C5[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortPvPMission_3PtDomination");
		return Clss;
	}

	void CapturePointSetterHackTimer();
};

// 0x18 (0x708 - 0x6F0)
// Class FortniteGame.FortPvPMission_CTF
class AFortPvPMission_CTF : public AFortPvPMission
{
public:
	TArray<int32>                                TeamCaptureTotals;                                 // 0x6F0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, Protected, NativeAccessSpecifierProtected)
	int32                                        TotalCapturesToWin;                                // 0x700(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_20C6[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortPvPMission_CTF");
		return Clss;
	}

};

// 0x0 (0x6F0 - 0x6F0)
// Class FortniteGame.FortPvPMission_EnemyBaseDestruction
class AFortPvPMission_EnemyBaseDestruction : public AFortPvPMission
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortPvPMission_EnemyBaseDestruction");
		return Clss;
	}

	class AFortPvPBaseCornerstone* GetCornerstoneForTeam(enum class EFortTeam InTeam);
};

// 0x0 (0x530 - 0x530)
// Class FortniteGame.FortPvPMissionManager
class AFortPvPMissionManager : public AFortMissionManager
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortPvPMissionManager");
		return Clss;
	}

};

// 0x8 (0x408 - 0x400)
// Class FortniteGame.FortPvPObjective
class AFortPvPObjective : public AFortObjectiveBase
{
public:
	enum class EFortTeam                         Team;                                              // 0x400(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_20C8[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortPvPObjective");
		return Clss;
	}

};

// 0x0 (0x408 - 0x408)
// Class FortniteGame.FortPvPObjective_3PtDomination
class AFortPvPObjective_3PtDomination : public AFortPvPObjective
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortPvPObjective_3PtDomination");
		return Clss;
	}

};

// 0x0 (0x408 - 0x408)
// Class FortniteGame.FortPvPObjective_CTF
class AFortPvPObjective_CTF : public AFortPvPObjective
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortPvPObjective_CTF");
		return Clss;
	}

};

// 0x0 (0x408 - 0x408)
// Class FortniteGame.FortPvPObjective_EnemyBaseDestruction
class AFortPvPObjective_EnemyBaseDestruction : public AFortPvPObjective
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortPvPObjective_EnemyBaseDestruction");
		return Clss;
	}

};

// 0x10 (0x370 - 0x360)
// Class FortniteGame.FortPvPPlayerStart
class AFortPvPPlayerStart : public APlayerStart
{
public:
	uint8                                        Pad_20C9[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	enum class EFortTeam                         Team;                                              // 0x368(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_20CA[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	uint8                                        bDynamicStartLocation : 1;                         // Mask : 0x1 0x36C(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_20CB[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortPvPPlayerStart");
		return Clss;
	}

};

// 0x0 (0x28 - 0x28)
// Class FortniteGame.FortQueryContext_AllEnemies
class UFortQueryContext_AllEnemies : public UEnvQueryContext
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortQueryContext_AllEnemies");
		return Clss;
	}

};

// 0x0 (0x28 - 0x28)
// Class FortniteGame.FortQueryContext_AllGoals
class UFortQueryContext_AllGoals : public UEnvQueryContext
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortQueryContext_AllGoals");
		return Clss;
	}

};

// 0x0 (0x28 - 0x28)
// Class FortniteGame.FortQueryContext_AllPlayers
class UFortQueryContext_AllPlayers : public UEnvQueryContext
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortQueryContext_AllPlayers");
		return Clss;
	}

};

// 0x0 (0x28 - 0x28)
// Class FortniteGame.FortQueryContext_AthenaCurrentSafeZoneCenter
class UFortQueryContext_AthenaCurrentSafeZoneCenter : public UEnvQueryContext
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortQueryContext_AthenaCurrentSafeZoneCenter");
		return Clss;
	}

};

// 0x0 (0x28 - 0x28)
// Class FortniteGame.FortQueryContext_BuildingRifts
class UFortQueryContext_BuildingRifts : public UEnvQueryContext
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortQueryContext_BuildingRifts");
		return Clss;
	}

};

// 0x0 (0x28 - 0x28)
// Class FortniteGame.FortQueryContext_EncounterFallbackTarget
class UFortQueryContext_EncounterFallbackTarget : public UEnvQueryContext
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortQueryContext_EncounterFallbackTarget");
		return Clss;
	}

};

// 0x0 (0x28 - 0x28)
// Class FortniteGame.FortQueryContext_EncounterGoalsCenterLocation
class UFortQueryContext_EncounterGoalsCenterLocation : public UEnvQueryContext
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortQueryContext_EncounterGoalsCenterLocation");
		return Clss;
	}

};

// 0x0 (0x28 - 0x28)
// Class FortniteGame.FortQueryContext_EncounterGoalsOnGround
class UFortQueryContext_EncounterGoalsOnGround : public UEnvQueryContext
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortQueryContext_EncounterGoalsOnGround");
		return Clss;
	}

};

// 0x0 (0x28 - 0x28)
// Class FortniteGame.FortQueryContext_EncounterPrimaryAssignmentGoals
class UFortQueryContext_EncounterPrimaryAssignmentGoals : public UEnvQueryContext
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortQueryContext_EncounterPrimaryAssignmentGoals");
		return Clss;
	}

};

// 0x0 (0x28 - 0x28)
// Class FortniteGame.FortQueryContext_EncounterQueryActor
class UFortQueryContext_EncounterQueryActor : public UEnvQueryContext
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortQueryContext_EncounterQueryActor");
		return Clss;
	}

};

// 0x0 (0x28 - 0x28)
// Class FortniteGame.FortQueryContext_EncounterRandomDirection
class UFortQueryContext_EncounterRandomDirection : public UEnvQueryContext
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortQueryContext_EncounterRandomDirection");
		return Clss;
	}

};

// 0x0 (0x28 - 0x28)
// Class FortniteGame.FortQueryContext_EncounterTargetObjective
class UFortQueryContext_EncounterTargetObjective : public UEnvQueryContext
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortQueryContext_EncounterTargetObjective");
		return Clss;
	}

};

// 0x0 (0x28 - 0x28)
// Class FortniteGame.FortQueryContext_Goal
class UFortQueryContext_Goal : public UEnvQueryContext
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortQueryContext_Goal");
		return Clss;
	}

};

// 0x0 (0x28 - 0x28)
// Class FortniteGame.FortQueryContext_GoalProviderRootAssignmentGoals
class UFortQueryContext_GoalProviderRootAssignmentGoals : public UEnvQueryContext
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortQueryContext_GoalProviderRootAssignmentGoals");
		return Clss;
	}

};

// 0x0 (0x28 - 0x28)
// Class FortniteGame.FortQueryContext_NearbyFriends
class UFortQueryContext_NearbyFriends : public UEnvQueryContext
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortQueryContext_NearbyFriends");
		return Clss;
	}

};

// 0x0 (0x28 - 0x28)
// Class FortniteGame.FortQueryContext_StWStormShield
class UFortQueryContext_StWStormShield : public UEnvQueryContext
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortQueryContext_StWStormShield");
		return Clss;
	}

};

// 0x0 (0x28 - 0x28)
// Class FortniteGame.FortQueryContext_TwoPointSolverPointA
class UFortQueryContext_TwoPointSolverPointA : public UEnvQueryContext
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortQueryContext_TwoPointSolverPointA");
		return Clss;
	}

};

// 0x0 (0x28 - 0x28)
// Class FortniteGame.FortQueryContext_TwoPointSolverRotationA
class UFortQueryContext_TwoPointSolverRotationA : public UEnvQueryContext
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortQueryContext_TwoPointSolverRotationA");
		return Clss;
	}

};

// 0x70 (0xA0 - 0x30)
// Class FortniteGame.FortQueryData_CurvesAroundLine
class UFortQueryData_CurvesAroundLine : public UDataAsset
{
public:
	struct FFortPointsOnCurve                    PointsOnSideA;                                     // 0x30(0x38)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FFortPointsOnCurve                    PointsOnSideB;                                     // 0x68(0x38)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortQueryData_CurvesAroundLine");
		return Clss;
	}

};

// 0x0 (0xC0 - 0xC0)
// Class FortniteGame.FortQueryGenerator_ActorsAround
class UFortQueryGenerator_ActorsAround : public UEnvQueryGenerator_ActorsOfClass
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortQueryGenerator_ActorsAround");
		return Clss;
	}

};

// 0x0 (0x50 - 0x50)
// Class FortniteGame.FortQueryGenerator_AssignmentGoal
class UFortQueryGenerator_AssignmentGoal : public UEnvQueryGenerator
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortQueryGenerator_AssignmentGoal");
		return Clss;
	}

};

// 0x0 (0x50 - 0x50)
// Class FortniteGame.FortQueryGenerator_BuildingRifts
class UFortQueryGenerator_BuildingRifts : public UEnvQueryGenerator
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortQueryGenerator_BuildingRifts");
		return Clss;
	}

};

// 0x158 (0x1A8 - 0x50)
// Class FortniteGame.FortQueryGenerator_Buildings
class UFortQueryGenerator_Buildings : public UEnvQueryGenerator
{
public:
	TSubclassOf<class UEnvQueryContext>          BuildingGridVolumeCenter;                          // 0x50(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FAIDataProviderIntValue               HorizontalBuildingCellRadius;                      // 0x58(0x30)(Edit, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	struct FAIDataProviderIntValue               BuildingCellsAbove;                                // 0x88(0x30)(Edit, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	struct FAIDataProviderIntValue               BuildingCellsBelow;                                // 0xB8(0x30)(Edit, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	struct FAIDataProviderBoolValue              bIncludeWalls;                                     // 0xE8(0x30)(Edit, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	struct FAIDataProviderBoolValue              bIncludeFloors;                                    // 0x118(0x30)(Edit, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	struct FAIDataProviderBoolValue              bIncludeCenterCell;                                // 0x148(0x30)(Edit, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	struct FAIDataProviderIntValue               MaxBuildingActorsPerVolumeCenterToCollect;         // 0x178(0x30)(Edit, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortQueryGenerator_Buildings");
		return Clss;
	}

};

// 0x98 (0xE8 - 0x50)
// Class FortniteGame.FortQueryGenerator_BuildingsOnCachedPath
class UFortQueryGenerator_BuildingsOnCachedPath : public UEnvQueryGenerator
{
public:
	TSubclassOf<class UEnvQueryContext>          CachedPathSource;                                  // 0x50(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FAIDataProviderBoolValue              bIncludeWalls;                                     // 0x58(0x30)(Edit, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	struct FAIDataProviderBoolValue              bIncludeFloors;                                    // 0x88(0x30)(Edit, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	struct FAIDataProviderBoolValue              bIncludeCenterCell;                                // 0xB8(0x30)(Edit, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortQueryGenerator_BuildingsOnCachedPath");
		return Clss;
	}

};

// 0x0 (0x50 - 0x50)
// Class FortniteGame.FortQueryGenerator_EncounterTargets
class UFortQueryGenerator_EncounterTargets : public UEnvQueryGenerator
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortQueryGenerator_EncounterTargets");
		return Clss;
	}

};

// 0x38 (0x88 - 0x50)
// Class FortniteGame.FortQueryGenerator_Enemies
class UFortQueryGenerator_Enemies : public UEnvQueryGenerator
{
public:
	bool                                         bPerceivedEnemiesOnly;                             // 0x50(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bSleepCapableAIUsePerceivedEnemiesOnly;            // 0x51(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bIgnoreSleepingAIs;                                // 0x52(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_20CC[0x5];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FAIDataProviderFloatValue             MaxTimeSincePerceived;                             // 0x58(0x30)(Edit, ContainsInstancedReference, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortQueryGenerator_Enemies");
		return Clss;
	}

};

// 0x8 (0x1F0 - 0x1E8)
// Class FortniteGame.FortQueryGenerator_GoalOnCircle
class UFortQueryGenerator_GoalOnCircle : public UEnvQueryGenerator_OnCircle
{
public:
	bool                                         bIncludeCenterActorInGeneratedGoals;               // 0x1E8(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_20CD[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortQueryGenerator_GoalOnCircle");
		return Clss;
	}

};

// 0x48 (0x98 - 0x50)
// Class FortniteGame.FortQueryGenerator_HotspotSlots
class UFortQueryGenerator_HotspotSlots : public UEnvQueryGenerator
{
public:
	TSubclassOf<class UEnvQueryContext>          GenerateAround;                                    // 0x50(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAIDataProviderFloatValue             Radius;                                            // 0x58(0x30)(Edit, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	uint8                                        bUseTetherZone : 1;                                // Mask : 0x1 0x88(0x1)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_20CE[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class AFortAIHotSpot>            HotspotClass;                                      // 0x90(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortQueryGenerator_HotspotSlots");
		return Clss;
	}

};

// 0x40 (0xC0 - 0x80)
// Class FortniteGame.FortQueryGenerator_InfluenceMapPoints
class UFortQueryGenerator_InfluenceMapPoints : public UEnvQueryGenerator_ProjectedPoints
{
public:
	struct FAIDataProviderIntValue               Density;                                           // 0x80(0x30)(Edit, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	uint8                                        bOnlyFlatSurface : 1;                              // Mask : 0x1 0xB0(0x1)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_20CF[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class UEnvQueryContext>          GenerateAround;                                    // 0xB8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortQueryGenerator_InfluenceMapPoints");
		return Clss;
	}

};

// 0x48 (0x98 - 0x50)
// Class FortniteGame.FortQueryGenerator_MissionPlacementActors
class UFortQueryGenerator_MissionPlacementActors : public UEnvQueryGenerator
{
public:
	struct FGameplayTagQuery                     MissionPlacementActorTagQuery;                     // 0x50(0x48)(Edit, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortQueryGenerator_MissionPlacementActors");
		return Clss;
	}

};

// 0x0 (0x50 - 0x50)
// Class FortniteGame.FortQueryGenerator_MutatorBaseQueryResults
class UFortQueryGenerator_MutatorBaseQueryResults : public UEnvQueryGenerator
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortQueryGenerator_MutatorBaseQueryResults");
		return Clss;
	}

};

// 0x90 (0x110 - 0x80)
// Class FortniteGame.FortQueryGenerator_PointsAroundLine
class UFortQueryGenerator_PointsAroundLine : public UEnvQueryGenerator_ProjectedPoints
{
public:
	TSubclassOf<class UEnvQueryContext>          GenerateAround;                                    // 0x80(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FAIDataProviderIntValue               MaxPointsPerClusterLocation;                       // 0x88(0x30)(Edit, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	struct FAIDataProviderFloatValue             ClusterRadius;                                     // 0xB8(0x30)(Edit, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UFortQueryData_CurvesAroundLine> CurvesAroundLineAsset;                             // 0xE8(0x28)(Edit, DisableEditOnInstance, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortQueryGenerator_PointsAroundLine");
		return Clss;
	}

};

// 0x128 (0x1A8 - 0x80)
// Class FortniteGame.FortQueryGenerator_PointsFromNavGraph
class UFortQueryGenerator_PointsFromNavGraph : public UEnvQueryGenerator_ProjectedPoints
{
public:
	struct FAIDataProviderFloatValue             MinPathDistance;                                   // 0x80(0x30)(Edit, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FAIDataProviderFloatValue             MaxPathDistance;                                   // 0xB0(0x30)(Edit, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FAIDataProviderIntValue               Density;                                           // 0xE0(0x30)(Edit, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FAIDataProviderFloatValue             ExploreDirectionYaw;                               // 0x110(0x30)(Edit, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FEnvDirection                         ExploreDirection;                                  // 0x140(0x20)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	float                                        ExploreAngleDot;                                   // 0x160(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_20D0[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FAIDataProviderFloatValue             ExploreInnerRadius;                                // 0x168(0x30)(Edit, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	uint8                                        bLimitExplorationDirection : 1;                    // Mask : 0x1 0x198(0x1)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bOnlyFlatSurface : 1;                              // Mask : 0x2 0x198(0x1)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bUseParameterizedDirection : 1;                    // Mask : 0x4 0x198(0x1)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bFilterAllowTerrain : 1;                           // Mask : 0x8 0x198(0x1)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bFilterAllowBuildings : 1;                         // Mask : 0x10 0x198(0x1)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bFilterAllowDropdown : 1;                          // Mask : 0x20 0x198(0x1)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bFilterAllowClimbup : 1;                           // Mask : 0x40 0x198(0x1)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bFilterAllowSmash : 1;                             // Mask : 0x80 0x198(0x1)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_20D1[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	enum class EFortPointsFromNavGraphGoalPathDistanceFilterOperator PathDistanceFilterOperator;                        // 0x19C(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_20D2[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class UEnvQueryContext>          GenerateAround;                                    // 0x1A0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortQueryGenerator_PointsFromNavGraph");
		return Clss;
	}

};

// 0x40 (0x90 - 0x50)
// Class FortniteGame.FortQueryGenerator_PointsInVolume
class UFortQueryGenerator_PointsInVolume : public UEnvQueryGenerator
{
public:
	struct FAIDataProviderIntValue               NumberOfPoints;                                    // 0x50(0x30)(Edit, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	enum class EFortNamedNavmesh                 NavMeshToUse;                                      // 0x80(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_20D3[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class UEnvQueryContext>          GenerateIn;                                        // 0x88(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortQueryGenerator_PointsInVolume");
		return Clss;
	}

};

// 0x70 (0xF0 - 0x80)
// Class FortniteGame.FortQueryGenerator_PointsOnBuildingGrid
class UFortQueryGenerator_PointsOnBuildingGrid : public UEnvQueryGenerator_ProjectedPoints
{
public:
	struct FAIDataProviderIntValue               HorizontalGridSize;                                // 0x80(0x30)(Edit, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FAIDataProviderIntValue               VerticalGridSize;                                  // 0xB0(0x30)(Edit, ContainsInstancedReference, NativeAccessSpecifierPublic)
	bool                                         bStartGridFromBottom;                              // 0xE0(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bUsePointInVerticalCenterOfCell;                   // 0xE1(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_20D4[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class UEnvQueryContext>          GenerateAround;                                    // 0xE8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortQueryGenerator_PointsOnBuildingGrid");
		return Clss;
	}

};

// 0x40 (0x90 - 0x50)
// Class FortniteGame.FortQueryGenerator_SpecificAssignmentGoals
class UFortQueryGenerator_SpecificAssignmentGoals : public UEnvQueryGenerator
{
public:
	struct FFortAIAssignmentIdentifier           AssignmentIdentifier;                              // 0x50(0x30)(Edit, Protected, NativeAccessSpecifierProtected)
	class UFortAIAssignmentSettings*             AssignmentSettings;                                // 0x80(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UFortAIGoalProvider>       GoalProvider;                                      // 0x88(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortQueryGenerator_SpecificAssignmentGoals");
		return Clss;
	}

};

// 0xD0 (0x120 - 0x50)
// Class FortniteGame.FortQueryGenerator_TerrainDonut
class UFortQueryGenerator_TerrainDonut : public UEnvQueryGenerator
{
public:
	TSubclassOf<class UEnvQueryContext>          Center;                                            // 0x50(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAIDataProviderFloatValue             Radius;                                            // 0x58(0x30)(Edit, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FAIDataProviderFloatValue             RadiusWidth;                                       // 0x88(0x30)(Edit, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FAIDataProviderFloatValue             SpacingArc;                                        // 0xB8(0x30)(Edit, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FAIDataProviderIntValue               NumRings;                                          // 0xE8(0x30)(Edit, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	uint8                                        bFilterAllowTerrain : 1;                           // Mask : 0x1 0x118(0x1)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bFilterAllowBuildings : 1;                         // Mask : 0x2 0x118(0x1)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_20D5[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortQueryGenerator_TerrainDonut");
		return Clss;
	}

};

// 0x30 (0x80 - 0x50)
// Class FortniteGame.FortQueryGenerator_ValidSpawnRiftActors
class UFortQueryGenerator_ValidSpawnRiftActors : public UEnvQueryGenerator
{
public:
	struct FAIDataProviderIntValue               NumAIForGroup;                                     // 0x50(0x30)(Edit, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortQueryGenerator_ValidSpawnRiftActors");
		return Clss;
	}

};

// 0x0 (0x30 - 0x30)
// Class FortniteGame.FortQueryItemType_Goal
class UFortQueryItemType_Goal : public UEnvQueryItemType_ActorBase
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortQueryItemType_Goal");
		return Clss;
	}

};

// 0x0 (0x30 - 0x30)
// Class FortniteGame.FortQueryItemType_PointOrSlot
class UFortQueryItemType_PointOrSlot : public UEnvQueryItemType_Point
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortQueryItemType_PointOrSlot");
		return Clss;
	}

};

// 0x18 (0x1D8 - 0x1C0)
// Class FortniteGame.FortQueryTest_GoalBase
class UFortQueryTest_GoalBase : public UEnvQueryTest
{
public:
	uint8                                        bScoreEnemies : 1;                                 // Mask : 0x1 0x1C0(0x1)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bScoreEncounterGoals : 1;                          // Mask : 0x2 0x1C0(0x1)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bScoreWorldGoals : 1;                              // Mask : 0x4 0x1C0(0x1)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bScoreSpecificAssignments : 1;                     // Mask : 0x8 0x1C0(0x1)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_20D6[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FFortAIAssignmentIdentifier>   AssignmentIDs;                                     // 0x1C8(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortQueryTest_GoalBase");
		return Clss;
	}

};

// 0x180 (0x358 - 0x1D8)
// Class FortniteGame.FortQueryTest_AssignmentTypeInterest
class UFortQueryTest_AssignmentTypeInterest : public UFortQueryTest_GoalBase
{
public:
	struct FAIDataProviderFloatValue             InvalidTypeStartInterest;                          // 0x1D8(0x30)(Edit, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	struct FAIDataProviderFloatValue             InvalidTypeEndInterest;                            // 0x208(0x30)(Edit, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	struct FAIDataProviderFloatValue             InvalidTypeTimeBeforeLerp;                         // 0x238(0x30)(Edit, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	struct FAIDataProviderFloatValue             InvalidTypeLerpDuration;                           // 0x268(0x30)(Edit, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	struct FAIDataProviderFloatValue             ValidTypeStartInterest;                            // 0x298(0x30)(Edit, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	struct FAIDataProviderFloatValue             ValidTypeEndInterest;                              // 0x2C8(0x30)(Edit, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	struct FAIDataProviderFloatValue             ValidTypeTimeBeforeLerp;                           // 0x2F8(0x30)(Edit, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	struct FAIDataProviderFloatValue             ValidTypeLerpDuration;                             // 0x328(0x30)(Edit, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortQueryTest_AssignmentTypeInterest");
		return Clss;
	}

};

// 0x300 (0x4D8 - 0x1D8)
// Class FortniteGame.FortQueryTest_BuildingCriteria
class UFortQueryTest_BuildingCriteria : public UFortQueryTest_GoalBase
{
public:
	struct FAIDataProviderFloatValue             ScoreForGroundSupportedFloor;                      // 0x1D8(0x30)(Edit, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	struct FAIDataProviderFloatValue             ScoreForBeingGroundSupported;                      // 0x208(0x30)(Edit, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	struct FAIDataProviderFloatValue             ScoreForTraps;                                     // 0x238(0x30)(Edit, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	struct FAIDataProviderFloatValue             ScoreForWalls;                                     // 0x268(0x30)(Edit, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	struct FAIDataProviderFloatValue             ScoreForNavigableOpening;                          // 0x298(0x30)(Edit, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	struct FFortAIAssignmentIdentifier           RootAssignmentID;                                  // 0x2C8(0x30)(Edit, NativeAccessSpecifierPrivate)
	struct FAIDataProviderBoolValue              bPreferCloserToRootAssignment;                     // 0x2F8(0x30)(Edit, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	struct FAIDataProviderFloatValue             ScoreForDistanceFromClosestRootAssignmentGoal;     // 0x328(0x30)(Edit, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	struct FAIDataProviderFloatValue             MinDistanceForDistanceScoring;                     // 0x358(0x30)(Edit, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	struct FAIDataProviderFloatValue             MaxDistanceForDistanceScoring;                     // 0x388(0x30)(Edit, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	struct FAIDataProviderFloatValue             MaxHealthScore;                                    // 0x3B8(0x30)(Edit, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	struct FAIDataProviderBoolValue              bPreferHigherHealth;                               // 0x3E8(0x30)(Edit, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	struct FAIDataProviderFloatValue             ClampMaxHealthValue;                               // 0x418(0x30)(Edit, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	struct FAIDataProviderFloatValue             ClampMinHealthValue;                               // 0x448(0x30)(Edit, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	struct FAIDataProviderBoolValue              bPreferHigherHealthPercentage;                     // 0x478(0x30)(Edit, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	struct FAIDataProviderFloatValue             MaxHealthPercentageScore;                          // 0x4A8(0x30)(Edit, ContainsInstancedReference, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortQueryTest_BuildingCriteria");
		return Clss;
	}

};

// 0x0 (0x1D8 - 0x1D8)
// Class FortniteGame.FortQueryTest_CanAttackTarget
class UFortQueryTest_CanAttackTarget : public UFortQueryTest_GoalBase
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortQueryTest_CanAttackTarget");
		return Clss;
	}

};

// 0x0 (0x1D8 - 0x1D8)
// Class FortniteGame.FortQueryTest_CanBeDamaged
class UFortQueryTest_CanBeDamaged : public UFortQueryTest_GoalBase
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortQueryTest_CanBeDamaged");
		return Clss;
	}

};

// 0x30 (0x1F0 - 0x1C0)
// Class FortniteGame.FortQueryTest_CanHitWithGameplayAbility
class UFortQueryTest_CanHitWithGameplayAbility : public UEnvQueryTest
{
public:
	TSubclassOf<class UEnvQueryContext>          AIsUsingAbility;                                   // 0x1C0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UEnvQueryContext>          AbilityTargets;                                    // 0x1C8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                 GameplayAbilityTag;                                // 0x1D0(0x20)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortQueryTest_CanHitWithGameplayAbility");
		return Clss;
	}

};

// 0x8 (0x1C8 - 0x1C0)
// Class FortniteGame.FortQueryTest_DecoyDistance
class UFortQueryTest_DecoyDistance : public UEnvQueryTest
{
public:
	TSubclassOf<class UEnvQueryContext>          DistanceTo;                                        // 0x1C0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortQueryTest_DecoyDistance");
		return Clss;
	}

};

// 0x10 (0x1D0 - 0x1C0)
// Class FortniteGame.FortQueryTest_GameplayTagsPerDifficulty
class UFortQueryTest_GameplayTagsPerDifficulty : public UEnvQueryTest
{
public:
	TArray<struct FFortGameplayTagQueryPerDifficulty> TagQueriesPerDifficulty;                           // 0x1C0(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortQueryTest_GameplayTagsPerDifficulty");
		return Clss;
	}

};

// 0x18 (0x1F0 - 0x1D8)
// Class FortniteGame.FortQueryTest_GoalActorDot
class UFortQueryTest_GoalActorDot : public UFortQueryTest_GoalBase
{
public:
	TSubclassOf<class UEnvQueryContext>          LineATo;                                           // 0x1D8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UEnvQueryContext>          LineBTo;                                           // 0x1E0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EFortTestGoalActorDot             TestMode;                                          // 0x1E8(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bAbsoluteValue;                                    // 0x1E9(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_20D7[0x6];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortQueryTest_GoalActorDot");
		return Clss;
	}

};

// 0x30 (0x208 - 0x1D8)
// Class FortniteGame.FortQueryTest_GoalDiscouragement
class UFortQueryTest_GoalDiscouragement : public UFortQueryTest_GoalBase
{
public:
	struct FAIDataProviderBoolValue              DisableDiscouragementWhenUndermining;              // 0x1D8(0x30)(Edit, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortQueryTest_GoalDiscouragement");
		return Clss;
	}

};

// 0x18 (0x1F0 - 0x1D8)
// Class FortniteGame.FortQueryTest_GoalDistance
class UFortQueryTest_GoalDistance : public UFortQueryTest_GoalBase
{
public:
	enum class EDistanceMode                     DistanceMode;                                      // 0x1D8(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_20D8[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class UEnvQueryContext>          DistanceTo;                                        // 0x1E0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EEnvTestDistance                  TestMode;                                          // 0x1E8(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_20D9[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortQueryTest_GoalDistance");
		return Clss;
	}

};

// 0x28 (0x200 - 0x1D8)
// Class FortniteGame.FortQueryTest_GoalDistanceRanges
class UFortQueryTest_GoalDistanceRanges : public UFortQueryTest_GoalBase
{
public:
	enum class EDistanceMode                     DistanceMode;                                      // 0x1D8(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_20DA[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class UEnvQueryContext>          DistanceTo;                                        // 0x1E0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EEnvTestDistance                  ScreeningTestMode;                                 // 0x1E8(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EEnvTestDistance                  TestMode;                                          // 0x1E9(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_20DB[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FGoalDistanceData>             GoalDistanceDataRanges;                            // 0x1F0(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortQueryTest_GoalDistanceRanges");
		return Clss;
	}

};

// 0x0 (0x1D8 - 0x1D8)
// Class FortniteGame.FortQueryTest_GoalFrustrationDiscouragement
class UFortQueryTest_GoalFrustrationDiscouragement : public UFortQueryTest_GoalBase
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortQueryTest_GoalFrustrationDiscouragement");
		return Clss;
	}

};

// 0x0 (0x1D8 - 0x1D8)
// Class FortniteGame.FortQueryTest_GoalMarkedByPlayer
class UFortQueryTest_GoalMarkedByPlayer : public UFortQueryTest_GoalBase
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortQueryTest_GoalMarkedByPlayer");
		return Clss;
	}

};

// 0x8 (0x1E0 - 0x1D8)
// Class FortniteGame.FortQueryTest_GoalNumberOfAIAssigned
class UFortQueryTest_GoalNumberOfAIAssigned : public UFortQueryTest_GoalBase
{
public:
	enum class ECountAIAssignedToType            TypeOfMatchToCount;                                // 0x1D8(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_20DC[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortQueryTest_GoalNumberOfAIAssigned");
		return Clss;
	}

};

// 0x0 (0x1D8 - 0x1D8)
// Class FortniteGame.FortQueryTest_GoalOverallDamageCaused
class UFortQueryTest_GoalOverallDamageCaused : public UFortQueryTest_GoalBase
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortQueryTest_GoalOverallDamageCaused");
		return Clss;
	}

};

// 0xF0 (0x2C8 - 0x1D8)
// Class FortniteGame.FortQueryTest_GoalStickiness
class UFortQueryTest_GoalStickiness : public UFortQueryTest_GoalBase
{
public:
	struct FAIDataProviderFloatValue             StartValueForGoal;                                 // 0x1D8(0x30)(Edit, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	struct FAIDataProviderFloatValue             EndValueForGoal;                                   // 0x208(0x30)(Edit, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	struct FAIDataProviderFloatValue             TimeBeforeValueLerp;                               // 0x238(0x30)(Edit, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	struct FAIDataProviderFloatValue             ValueLerpDuration;                                 // 0x268(0x30)(Edit, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	struct FAIDataProviderBoolValue              ApplyStickinessToAllGoalsWithSameActor;            // 0x298(0x30)(Edit, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortQueryTest_GoalStickiness");
		return Clss;
	}

};

// 0x0 (0x1D8 - 0x1D8)
// Class FortniteGame.FortQueryTest_GoalType
class UFortQueryTest_GoalType : public UFortQueryTest_GoalBase
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortQueryTest_GoalType");
		return Clss;
	}

};

// 0x0 (0x1D8 - 0x1D8)
// Class FortniteGame.FortQueryTest_GoalWithinTetheredBounds
class UFortQueryTest_GoalWithinTetheredBounds : public UFortQueryTest_GoalBase
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortQueryTest_GoalWithinTetheredBounds");
		return Clss;
	}

};

// 0x10 (0x1D0 - 0x1C0)
// Class FortniteGame.FortQueryTest_HasNearbyBuildings
class UFortQueryTest_HasNearbyBuildings : public UEnvQueryTest
{
public:
	uint8                                        bIncludeCenter : 1;                                // Mask : 0x1 0x1C0(0x1)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIncludeFloors : 1;                                // Mask : 0x2 0x1C0(0x1)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIncludeFloorsAbove : 1;                           // Mask : 0x4 0x1C0(0x1)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIncludeWalls : 1;                                 // Mask : 0x8 0x1C0(0x1)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_20DD[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        ExtentXY;                                          // 0x1C4(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        ExtentZ;                                           // 0x1C8(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_20DE[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortQueryTest_HasNearbyBuildings");
		return Clss;
	}

};

// 0x38 (0x1F8 - 0x1C0)
// Class FortniteGame.FortQueryTest_HasNearbyEncounterGoals
class UFortQueryTest_HasNearbyEncounterGoals : public UEnvQueryTest
{
public:
	uint8                                        bOnlyActiveEncounters : 1;                         // Mask : 0x1 0x1C0(0x1)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_20DF[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FAIDataProviderFloatValue             TestDistance;                                      // 0x1C8(0x30)(Edit, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortQueryTest_HasNearbyEncounterGoals");
		return Clss;
	}

};

// 0x38 (0x1F8 - 0x1C0)
// Class FortniteGame.FortQueryTest_HotspotSlotOrientation
class UFortQueryTest_HotspotSlotOrientation : public UEnvQueryTest
{
public:
	TSubclassOf<class UEnvQueryContext>          FaceToward;                                        // 0x1C0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAIDataProviderFloatValue             DotThreshold;                                      // 0x1C8(0x30)(Edit, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortQueryTest_HotspotSlotOrientation");
		return Clss;
	}

};

// 0x8 (0x1C8 - 0x1C0)
// Class FortniteGame.FortQueryTest_HotspotSlotState
class UFortQueryTest_HotspotSlotState : public UEnvQueryTest
{
public:
	enum class EAIHotSpotSlot                    SlotState;                                         // 0x1C0(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_20E0[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortQueryTest_HotspotSlotState");
		return Clss;
	}

};

// 0x0 (0x1C0 - 0x1C0)
// Class FortniteGame.FortQueryTest_InfluenceScore
class UFortQueryTest_InfluenceScore : public UEnvQueryTest
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortQueryTest_InfluenceScore");
		return Clss;
	}

};

// 0x30 (0x1F0 - 0x1C0)
// Class FortniteGame.FortQueryTest_InsideAthenaSafeZone
class UFortQueryTest_InsideAthenaSafeZone : public UEnvQueryTest
{
public:
	struct FAIDataProviderIntValue               SafeZoneIndex;                                     // 0x1C0(0x30)(Edit, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortQueryTest_InsideAthenaSafeZone");
		return Clss;
	}

};

// 0x0 (0x1C0 - 0x1C0)
// Class FortniteGame.FortQueryTest_InsideBuilding
class UFortQueryTest_InsideBuilding : public UEnvQueryTest
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortQueryTest_InsideBuilding");
		return Clss;
	}

};

// 0x8 (0x1C8 - 0x1C0)
// Class FortniteGame.FortQueryTest_InsideWater
class UFortQueryTest_InsideWater : public UEnvQueryTest
{
public:
	float                                        TestRadius;                                        // 0x1C0(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_20E1[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortQueryTest_InsideWater");
		return Clss;
	}

};

// 0x40 (0x200 - 0x1C0)
// Class FortniteGame.FortQueryTest_IsCloseToHotspotSlot
class UFortQueryTest_IsCloseToHotspotSlot : public UEnvQueryTest
{
public:
	TSubclassOf<class AFortAIHotSpot>            HotspotClass;                                      // 0x1C0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAIDataProviderFloatValue             Radius;                                            // 0x1C8(0x30)(Edit, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	bool                                         bIgnoreItemsWithSlotData;                          // 0x1F8(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_20E2[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortQueryTest_IsCloseToHotspotSlot");
		return Clss;
	}

};

// 0x8 (0x1C8 - 0x1C0)
// Class FortniteGame.FortQueryTest_IsCloseToPatrolWard
class UFortQueryTest_IsCloseToPatrolWard : public UEnvQueryTest
{
public:
	enum class EWardAffectType                   WardEffectTypeFilter;                              // 0x1C0(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_20E3[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortQueryTest_IsCloseToPatrolWard");
		return Clss;
	}

};

// 0x38 (0x1F8 - 0x1C0)
// Class FortniteGame.FortQueryTest_IsGoalForAssignment
class UFortQueryTest_IsGoalForAssignment : public UEnvQueryTest
{
public:
	bool                                         bRetrieveRootAssignmentFromOwner;                  // 0x1C0(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_20E4[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FFortAIAssignmentIdentifier           RootAssignmentID;                                  // 0x1C8(0x30)(Edit, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortQueryTest_IsGoalForAssignment");
		return Clss;
	}

};

// 0x68 (0x228 - 0x1C0)
// Class FortniteGame.FortQueryTest_MissionGameplayTagMatch
class UFortQueryTest_MissionGameplayTagMatch : public UEnvQueryTest
{
public:
	struct FGameplayTagQuery                     MissionPlacementActorTagQuery;                     // 0x1C0(0x48)(Edit, NativeAccessSpecifierPrivate)
	struct FGameplayTagContainer                 GameplayTagsToMatch;                               // 0x208(0x20)(Edit, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortQueryTest_MissionGameplayTagMatch");
		return Clss;
	}

};

// 0x48 (0x208 - 0x1C0)
// Class FortniteGame.FortQueryTest_MissionSameMap
class UFortQueryTest_MissionSameMap : public UEnvQueryTest
{
public:
	struct FGameplayTagQuery                     MissionPlacementActorTagQuery;                     // 0x1C0(0x48)(Edit, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortQueryTest_MissionSameMap");
		return Clss;
	}

};

// 0x8 (0x1C8 - 0x1C0)
// Class FortniteGame.FortQueryTest_NavGraphDistance
class UFortQueryTest_NavGraphDistance : public UEnvQueryTest
{
public:
	TSubclassOf<class UEnvQueryContext>          DistanceTo;                                        // 0x1C0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortQueryTest_NavGraphDistance");
		return Clss;
	}

};

// 0x10 (0x1D0 - 0x1C0)
// Class FortniteGame.FortQueryTest_OnFlatSurface
class UFortQueryTest_OnFlatSurface : public UEnvQueryTest
{
public:
	float                                        Radius;                                            // 0x1C0(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ToleranceZ;                                        // 0x1C4(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TraceOffsetUp;                                     // 0x1C8(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TraceOffsetDown;                                   // 0x1CC(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortQueryTest_OnFlatSurface");
		return Clss;
	}

};

// 0x10 (0x1D0 - 0x1C0)
// Class FortniteGame.FortQueryTest_PerceptionAge
class UFortQueryTest_PerceptionAge : public UEnvQueryTest
{
public:
	enum class ECorePerceptionTypes              Sense;                                             // 0x1C0(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_20E5[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class UAISense>                  SenseClass;                                        // 0x1C8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortQueryTest_PerceptionAge");
		return Clss;
	}

};

// 0x180 (0x358 - 0x1D8)
// Class FortniteGame.FortQueryTest_PerceptionAll
class UFortQueryTest_PerceptionAll : public UFortQueryTest_GoalBase
{
public:
	struct FAIDataProviderFloatValue             SenseScores;                                       // 0x1D8(0x30)(Edit, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	uint8                                        Pad_20E6[0xF0];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FAIDataProviderFloatValue             MinSenseAge;                                       // 0x2F8(0x30)(Edit, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	struct FAIDataProviderFloatValue             MaxSenseAge;                                       // 0x328(0x30)(Edit, ContainsInstancedReference, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortQueryTest_PerceptionAll");
		return Clss;
	}

};

// 0x10 (0x1D0 - 0x1C0)
// Class FortniteGame.FortQueryTest_PerceptionExists
class UFortQueryTest_PerceptionExists : public UEnvQueryTest
{
public:
	enum class ECorePerceptionTypes              Sense;                                             // 0x1C0(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_20E7[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class UAISense>                  SenseClass;                                        // 0x1C8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortQueryTest_PerceptionExists");
		return Clss;
	}

};

// 0xF8 (0x2D0 - 0x1D8)
// Class FortniteGame.FortQueryTest_PrimaryAssignment
class UFortQueryTest_PrimaryAssignment : public UFortQueryTest_GoalBase
{
public:
	bool                                         bUseItemActorLocation;                             // 0x1D8(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_20E8[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FAIDataProviderFloatValue             DistanceClose;                                     // 0x1E0(0x30)(Edit, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	struct FAIDataProviderFloatValue             DistanceFar;                                       // 0x210(0x30)(Edit, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	struct FAIDataProviderFloatValue             PercentValueClose;                                 // 0x240(0x30)(Edit, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	struct FAIDataProviderFloatValue             PercentValueRegular;                               // 0x270(0x30)(Edit, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	struct FAIDataProviderFloatValue             PercentValueFar;                                   // 0x2A0(0x30)(Edit, ContainsInstancedReference, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortQueryTest_PrimaryAssignment");
		return Clss;
	}

};

// 0x8 (0x1C8 - 0x1C0)
// Class FortniteGame.FortQueryTest_Random
class UFortQueryTest_Random : public UEnvQueryTest
{
public:
	uint8                                        bUseRandomSeedForAI : 1;                           // Mask : 0x1 0x1C0(0x1)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bUseRandomSeedForOthers : 1;                       // Mask : 0x2 0x1C0(0x1)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_20E9[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortQueryTest_Random");
		return Clss;
	}

};

// 0x50 (0x210 - 0x1C0)
// Class FortniteGame.FortQueryTest_TowardNextAthenaSafeZone
class UFortQueryTest_TowardNextAthenaSafeZone : public UEnvQueryTest
{
public:
	struct FAIDataProviderIntValue               SafeZoneIndex;                                     // 0x1C0(0x30)(Edit, DisableEditOnInstance, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	bool                                         bCheckAcceptanceAngleTowardNextCenter;             // 0x1F0(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_20EA[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        AcceptanceAngleTowardNextCenter;                   // 0x1F4(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<int32>                                ExclusionSafeZoneIndex;                            // 0x1F8(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_20EB[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortQueryTest_TowardNextAthenaSafeZone");
		return Clss;
	}

};

// 0xC8 (0xF0 - 0x28)
// Class FortniteGame.FortQueryTwoPointSolver
class UFortQueryTwoPointSolver : public UObject
{
public:
	class UEnvQuery*                             QueryPointA;                                       // 0x28(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UEnvQuery*                             QueryPointB;                                       // 0x30(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FEnvNamedValue>                QueryParamsA;                                      // 0x38(0x10)(Edit, BlueprintVisible, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<struct FEnvNamedValue>                QueryParamsB;                                      // 0x48(0x10)(Edit, BlueprintVisible, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	UMulticastDelegateProperty_                  OnFinished;                                        // 0x58(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	UMulticastDelegateProperty_                  OnFailed;                                          // 0x68(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	enum class ETwoPointSolverRotationA          RotationMode;                                      // 0x78(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_20EC[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FRotator                              MinRotationOffset;                                 // 0x7C(0xC)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FRotator                              MaxRotationOffset;                                 // 0x88(0xC)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        bUseNegativeAngleOffsets : 1;                      // Mask : 0x1 0x94(0x1)(Edit, NoDestructor, AdvancedDisplay, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bUsePositiveAngleOffsets : 1;                      // Mask : 0x2 0x94(0x1)(Edit, NoDestructor, AdvancedDisplay, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_20ED[0x4B];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UFortAISystem*                         AISys;                                             // 0xE0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UObject*                               CachedQuerier;                                     // 0xE8(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortQueryTwoPointSolver");
		return Clss;
	}

	void Start(class UObject* Querier);
	void SkipToNextPointA();
	void SetCustomRotationA(struct FRotator& Rotation);
	void OnCustomRotationMode(struct FVector& InPointA, const struct FVector& Querier);
	struct FRotator GetRandomRotationOffset();
	void AddNamedFloatParamB(class FName ParamName, float Value);
	void AddNamedFloatParamA(class FName ParamName, float Value);
};

// 0xC8 (0x1A8 - 0xE0)
// Class FortniteGame.FortQuestItem
class UFortQuestItem : public UFortAccountItem
{
public:
	TArray<class UFortQuestObjectiveInfo*>       Objectives;                                        // 0xE0(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	int32                                        LastNotifiedQuestCount;                            // 0xF0(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortQuestState                   Quest_state;                                       // 0xF4(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         Sent_new_notification;                             // 0xF5(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_20F5[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FDateTime                             Last_state_change_time;                            // 0xF8(0x8)(ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TMap<class FName, int32>                     CompletionCounts;                                  // 0x100(0x50)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	bool                                         bSentCompleteNotification;                         // 0x150(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bAllObjectivesComplete;                            // 0x151(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_20F6[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                Twitch_broadcaster_channel_id;                     // 0x158(0x10)(ZeroConstructor, Transient, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        CurrentStage;                                      // 0x168(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_20F7[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FDateTime                             Expiry_time;                                       // 0x170(0x8)(ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FFortMissionInstancedConfigData       InstancedConfigData;                               // 0x178(0x10)(Transient, Protected, NativeAccessSpecifierProtected)
	class FString                                Challenge_linked_quest_given;                      // 0x188(0x10)(ZeroConstructor, Transient, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                Challenge_linked_quest_parent;                     // 0x198(0x10)(ZeroConstructor, Transient, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortQuestItem");
		return Clss;
	}

	bool ShouldDisplayOverallQuestInformation();
	bool IsVisibleToUser(bool bAllowClaimedQuestsToBeVisible);
	bool IsQuestPinned();
	bool IsQuestInProgress();
	bool IsObjectiveWithNameInProgress(class FName BackendName);
	bool IsObjectiveInProgress(const struct FDataTableRowHandle& ObjectiveStatHandle);
	bool IsIncludedInCategories();
	bool HasVisibleRewards();
	bool HasQuestExpired(const struct FDateTime& UtcNow);
	bool HasCompletedQuest();
	bool HasCompletedObjectiveWithName(class FName BackendName);
	bool HasCompletedObjective(const struct FDataTableRowHandle& ObjectiveStatHandle);
	class FString GetTwitchBroadcasterChannelId();
	struct FFortRewardInfo GetRewardInfo();
	struct FTimespan GetRemainingExpirationDuration(const struct FDateTime& UtcNow);
	enum class EFortQuestState GetQuestState();
	class UFortQuestItemDefinition* GetQuestDefinitionBP();
	TArray<struct FFortItemInstanceQuantityPair> GetPreviewSelectableRewards(int32 RewardIndex);
	TArray<struct FFortItemInstanceQuantityPair> GetPreviewRewards();
	TArray<struct FFortItemInstanceQuantityPair> GetPreviewAllSelectableRewards();
	float GetPercentageComplete();
	class UFortQuestObjectiveInfo* GetObjectiveInfo(const struct FDataTableRowHandle& ObjectiveStatHandle);
	int32 GetNumObjectivesComplete();
	class UFortMissionConfigData* GetMissionConfigData(const struct FGameplayTag& InBucketTag);
	struct FFortRewardInfo GetChallengeChainRewardInfo(bool bGetCurrentChainQuestOnly);
	struct FDateTime GetBroadcasterGrantWindowEnd();
	void GetAchievedCount(int32* OutTotalAchievedCount, int32* OutTotalRequiredCount);
	bool DoesQuestExpire();
	bool CanPinQuest();
};

// 0x0 (0x90 - 0x90)
// Class FortniteGame.FortQuestItemDefinitionTooltip
class UFortQuestItemDefinitionTooltip : public UFortItemDefinitionTooltip
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortQuestItemDefinitionTooltip");
		return Clss;
	}

};

// 0x60 (0x88 - 0x28)
// Class FortniteGame.FortQuestCategory
class UFortQuestCategory : public UObject
{
public:
	class FText                                  Name;                                              // 0x28(0x18)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	TArray<class UFortQuestItem*>                CurrentQuests;                                     // 0x40(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                         bExpanded;                                         // 0x50(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_20F8[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FFortCategoryTableRow                 CategoryInfo;                                      // 0x58(0x28)(NativeAccessSpecifierPrivate)
	uint8                                        Pad_20F9[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortQuestCategory");
		return Clss;
	}

	bool HasUnseenQuests();
	int32 GetUnseenQuestCount();
};

// 0x700 (0x728 - 0x28)
// Class FortniteGame.FortQuestManager
class UFortQuestManager : public UObject
{
public:
	UMulticastDelegateProperty_                  OnQuestsUpdated;                                   // 0x28(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnQuestsCompleted;                                 // 0x38(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnQuestsGranted;                                   // 0x48(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnQuestRewardClaimed;                              // 0x58(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnQuestSeen;                                       // 0x68(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnNoQuestRewardsToClaim;                           // 0x78(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnPinnedQuestsChanged;                             // 0x88(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnDailyQuestRerolled;                              // 0x98(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnDisplayDynamicQuestUpdate;                       // 0xA8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TArray<class UFortQuestItem*>                CurrentQuests;                                     // 0xB8(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TMap<class FName, class UFortQuestCategory*> CurrentCategorizedQuestsMap;                       // 0xC8(0x50)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<struct FFortQuestObjectiveCompletion> PendingChanges;                                    // 0x118(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_210D[0x78];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TWeakObjectPtr<class UFortMcpProfileSubgame> BoundProfile;                                      // 0x1A0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_210E[0x540];                                   // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        DamageEventFlushDelaySeconds;                      // 0x6E8(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bDoQuestStateLogging;                              // 0x6EC(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bFlatCurrentQuestsSearch;                          // 0x6ED(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bBlockQuestCompletion;                             // 0x6EE(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bBlockAthenaQuestCompletion;                       // 0x6EF(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bBlockStWQuestCompletion;                          // 0x6F0(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_210F[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class FString>                        BackendObjectiveNamesToBlock;                      // 0x6F8(0x10)(ZeroConstructor, Config, NativeAccessSpecifierPrivate)
	TArray<class FString>                        QuestTemplatesToBlock;                             // 0x708(0x10)(ZeroConstructor, Config, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2110[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortQuestManager");
		return Clss;
	}

	bool SetQuestPinned(class UFortQuestItem* Quest, bool bEnabled);
	void SendCustomStatEvent(const struct FDataTableRowHandle& ObjectiveStat, int32 Count, bool bForceFlush);
	void SendComplexCustomStatEvent(class UObject* TargetObject, const struct FGameplayTagContainer& AdditionalSourceTags, const struct FGameplayTagContainer& TargetTags, bool* QuestActive, bool* QuestCompleted, int32 Count);
	void RerollDailyQuest(class UFortQuestItem* QuestToDiscard);
	class FString PopNextPendingFeatureUnlock();
	void MarkQuestsSeen(bool bOnlyMarkPendingSeenQuests);
	void MarkQuestSeen(class UFortQuestItem* Quest);
	bool IsQuestInProgress(class UFortQuestItemDefinition* Definition);
	bool IsPendingFeatureUnlockNotification();
	bool IsObjectiveWithNameInProgress(class UFortQuestItemDefinition* Definition, class FName BackendName);
	bool IsObjectiveInProgress(class UFortQuestItemDefinition* Definition, const struct FDataTableRowHandle& ObjectiveStatHandle);
	bool IsMainQuest(class UFortQuestItem* Quest);
	bool IsCurrentTutorialObjective(class FName TutorialObjectiveName);
	bool HasUnseenQuests();
	bool HasUnsavedPrimaryMissionProgress();
	bool HasQuestBeenSeenLocally(class UFortQuestItem* Quest);
	bool HasCompletedQuest(class UFortQuestItemDefinition* Definition);
	bool HasCompletedObjectiveWithName(class UFortQuestItemDefinition* Definition, class FName BackendName);
	bool HasCompletedObjective(class UFortQuestItemDefinition* Definition, const struct FDataTableRowHandle& ObjectiveStatHandle);
	void GrantFirstDailyQuest();
	int32 GetUnseenQuestCount();
	void GetSourceAndContextTags(struct FGameplayTagContainer* OutSourceTags, struct FGameplayTagContainer* OutContextTags);
	int32 GetRemainingDailyQuestRerolls();
	class UFortQuestItem* GetQuestWithDefinition(class UFortQuestItemDefinition* Definition);
	class UFortQuestCategory* GetQuestCategory(class UFortQuestItem* QuestItem);
	void GetPinnedQuests(TArray<class UFortQuestItem*>* OutPinnedQuestItems);
	int32 GetNumCompletedObjectives(class UFortQuestItemDefinition* Definition);
	class UFortQuestItem* GetNextUnseenQuest(enum class EFortQuestType QuestType);
	class UFortQuestItem* GetMainQuest();
	void GetCurrentQuestsCategories(TArray<class UFortQuestCategory*>* Categories);
	void GetCurrentQuests(TArray<class UFortQuestItem*>* OutCurrentQuests);
	int32 GetCurrentObjectiveCount(class UFortQuestItemDefinition* Definition, const struct FDataTableRowHandle& ObjectiveStatHandle);
	void GetCompletedQuests(TArray<class UFortQuestItem*>* OutCompletedQuests);
	class UFortQuestItem* GetBroadcasterQuestWithOpenWindow();
	void GetBattlePassQuestsInProgress(int32 MaxCount, class UFortItemDefinition* RequiredReward, TArray<class UFortQuestItem*>* OutQuests, bool* bAllQuestsComplete);
	void ForceTriggerQuestsUpdated();
	void EnableQuestStateLogging();
	void DisableQuestStateLogging();
	void ClaimSelectedQuestReward(class UFortQuestItem* Quest, int32 RewardIndex);
	void ClaimQuestReward(class UFortQuestItem* Quest);
	void ClaimNextCompletedQuestReward(enum class EFortQuestType QuestType);
	bool CanProgressQuestInCurrentZone(class UFortQuestItemDefinition* QuestItemDefinition);
	bool AreTutorialQuestsActive();
};

// 0x88 (0xB0 - 0x28)
// Class FortniteGame.FortQuestObjectiveInfo
class UFortQuestObjectiveInfo : public UObject
{
public:
	class FName                                  BackendName;                                       // 0x28(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortQuestObjectiveStatEvent      StatEvent;                                         // 0x30(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortQuestObjectiveItemEvent      ItemEvent;                                         // 0x31(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2111[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftObjectPtr<class UFortItemDefinition>    ItemReference;                                     // 0x38(0x28)(BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                  Description;                                       // 0x60(0x18)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class FText                                  HudShortDescription;                               // 0x78(0x18)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class UTexture2D*                            HudIcon;                                           // 0x90(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        AchievedCount;                                     // 0x98(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        RequiredCount;                                     // 0x9C(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        LastNotifiedCount;                                 // 0xA0(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bVisible;                                          // 0xA4(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bActive;                                           // 0xA5(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2112[0xA];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortQuestObjectiveInfo");
		return Clss;
	}

	bool IsVisibleToUser();
	bool IsInProgress();
	bool IsActive();
	bool HasCompleted();
	class UFortQuestItem* GetOwningQuest();
	void DisplayDynamicQuestUpdate();
};

// 0x0 (0x90 - 0x90)
// Class FortniteGame.FortQuestObjectiveTooltip
class UFortQuestObjectiveTooltip : public UFortTooltip
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortQuestObjectiveTooltip");
		return Clss;
	}

};

// 0x2F0 (0x620 - 0x330)
// Class FortniteGame.FortQuickBars
class AFortQuickBars : public AActor
{
public:
	struct FQuickBar                             PrimaryQuickBar;                                   // 0x330(0x90)(Net, RepNotify, Protected, NativeAccessSpecifierProtected)
	struct FQuickBar                             PrimaryQuickBar_Previous;                          // 0x3C0(0x90)(Transient, Protected, NativeAccessSpecifierProtected)
	struct FQuickBar                             SecondaryQuickBar;                                 // 0x450(0x90)(Net, RepNotify, Protected, NativeAccessSpecifierProtected)
	struct FQuickBar                             SecondaryQuickBar_Previous;                        // 0x4E0(0x90)(Transient, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_211C[0x68];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UFortWorldItem*>                AllCachedTraps;                                    // 0x5D8(0x10)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	TArray<class UFortWorldItem*>                CachedFloorTraps;                                  // 0x5E8(0x10)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	TArray<class UFortWorldItem*>                CachedWallTraps;                                   // 0x5F8(0x10)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	TArray<class UFortWorldItem*>                CachedCeilingTraps;                                // 0x608(0x10)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_211D[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortQuickBars");
		return Clss;
	}

	void ServerSwapItemsInternal(enum class EFortQuickBars QuickBarA, int32 SlotIndexA, enum class EFortQuickBars QuickBarB, int32 SlotIndexB);
	void ServerRemoveItemInternal(const struct FGuid& Item, bool bFindReplacement, bool bForce);
	void ServerEnableSlot(enum class EFortQuickBars InQuickBar, int32 SlotIndex);
	void ServerDisableSlot(enum class EFortQuickBars InQuickBar, int32 SlotIndex);
	void ServerAddItemInternal(const struct FGuid& Item, enum class EFortQuickBars InQuickBar, int32 Slot);
	void ServerActivateSlotInternal(enum class EFortQuickBars InQuickBar, int32 Slot, float ActivateDelay, bool bUpdatePreviousFocusedSlot, bool bForceExecution);
	void OnRep_SecondaryQuickBar();
	void OnRep_PrimaryQuickBar();
	void EmptySlot(enum class EFortQuickBars InQuickBar, int32 SlotIndex);
};

// 0x0 (0x620 - 0x620)
// Class FortniteGame.FortQuickBarsAthena
class AFortQuickBarsAthena : public AFortQuickBars
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortQuickBarsAthena");
		return Clss;
	}

};

// 0x30 (0x110 - 0xE0)
// Class FortniteGame.FortQuotaItem
class UFortQuotaItem : public UFortAccountItem
{
public:
	float                                        Current_value;                                     // 0xE0(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_211E[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                Last_mod_time;                                     // 0xE8(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Units_per_minute_recharge;                         // 0xF8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Max_quota;                                         // 0xFC(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Recharge_delay_minutes;                            // 0x100(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_211F[0xC];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortQuotaItem");
		return Clss;
	}

	int32 GetCurrentQuotaAmount();
};

// 0x10 (0x370 - 0x360)
// Class FortniteGame.FortQuotaItemDefinition
class UFortQuotaItemDefinition : public UFortAccountItemDefinition
{
public:
	float                                        StartingValue;                                     // 0x360(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaximumValue;                                      // 0x364(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        UnitsPerMinuteRechargeRate;                        // 0x368(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        RechargeDelayMinutes;                              // 0x36C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortQuotaItemDefinition");
		return Clss;
	}

};

// 0x500 (0x530 - 0x30)
// Class FortniteGame.FortRarityData
class UFortRarityData : public UDataAsset
{
public:
	struct FFortRarityItemData                   RarityCollection;                                  // 0x30(0x80)(Edit, NativeAccessSpecifierPublic)
	uint8                                        Pad_2121[0x480];                                   // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortRarityData");
		return Clss;
	}

	struct FFortRarityItemData BPGetRarityData(enum class EFortRarity Rarity);
};

// 0x0 (0x28 - 0x28)
// Class FortniteGame.FortHealthRegenInterface
class UFortHealthRegenInterface : public UInterface
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortHealthRegenInterface");
		return Clss;
	}

	TSubclassOf<class UGameplayEffect> GetShieldRegenGameplayEffectClass();
	class UGameplayEffect* GetShieldRegenGameplayEffect();
	class UGameplayEffect* GetShieldRegenDelayGameplayEffect();
	TSubclassOf<class UGameplayEffect> GetHealthRegenGameplayEffectClass();
	class UGameplayEffect* GetHealthRegenGameplayEffect();
	class UGameplayEffect* GetHealthRegenDelayGameplayEffect();
};

// 0x108 (0x448 - 0x340)
// Class FortniteGame.FortRegenHealthSet
class UFortRegenHealthSet : public UFortHealthSet
{
public:
	uint8                                        Pad_2122[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FFortGameplayAttributeData            HealthRegenRate;                                   // 0x348(0x28)(BlueprintVisible, Net, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            HealthRegenDelay;                                  // 0x370(0x28)(BlueprintVisible, Net, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            HealthRegenThreshold;                              // 0x398(0x28)(BlueprintVisible, Net, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            ShieldRegenRate;                                   // 0x3C0(0x28)(BlueprintVisible, Net, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            ShieldRegenDelay;                                  // 0x3E8(0x28)(BlueprintVisible, Net, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            ShieldRegenThreshold;                              // 0x410(0x28)(BlueprintVisible, Net, NativeAccessSpecifierPublic)
	uint8                                        Pad_2123[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortRegenHealthSet");
		return Clss;
	}

};

// 0xF8 (0x128 - 0x30)
// Class FortniteGame.FortRegionInfo
class UFortRegionInfo : public UDataAsset
{
public:
	class FText                                  RegionName;                                        // 0x30(0x18)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                 RegionTags;                                        // 0x48(0x20)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FFortRequirementsInfo                 Requirements;                                      // 0x68(0x58)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<struct FFortMissionAlertRequirementsInfo> MissionAlertRequirements;                          // 0xC0(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FFortTheaterMapMissionData            MissionData;                                       // 0xD0(0x30)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class USlateBrushAsset>       RegionThemeIcon;                                   // 0x100(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortRegionInfo");
		return Clss;
	}

};

// 0x358 (0x380 - 0x28)
// Class FortniteGame.FortRegisteredPlayerInfo
class UFortRegisteredPlayerInfo : public UObject
{
public:
	UMulticastDelegateProperty_                  OnAbilitySystemActorChangedChangedDelegate;        // 0x28(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FUniqueNetIdRepl                      PlayerID;                                          // 0x38(0x28)(HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FString                                PlayerName;                                        // 0x60(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FUniqueNetIdRepl                      PartyLeaderId;                                     // 0x70(0x28)(HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FString                                Platform;                                          // 0x98(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	enum class EFortTeam                         TeamAssignment;                                    // 0xA8(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2124[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        PlayerIndex;                                       // 0xAC(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bIsInitialPlayer;                                  // 0xB0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bShouldLockProfile;                                // 0xB1(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bFailedToLockProfile;                              // 0xB2(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2125[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGuid                                 UnregistrationSaveGUID;                            // 0xB4(0x10)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	enum class ERegisteredPlayerUnregistrationStatus UnregistrationStatus;                              // 0xC4(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2126[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTimerHandle                          UnregisterFailsafeTimerHandle;                     // 0xC8(0x8)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FTimerHandle                          PollForDedicatedServerReadyToShutdownTimerHandle;  // 0xD0(0x8)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UFortMcpProfileCommonPublic*           CommonPublicProfile;                               // 0xD8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UFortMcpProfileCommonCore*             CommonCoreProfile;                                 // 0xE0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UFortMcpProfileCampaign*               AccountProfile;                                    // 0xE8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UFortMcpProfileWorld*                  WorldProfile;                                      // 0xF0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UFortMcpProfileWorld*                  OutpostProfile;                                    // 0xF8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UFortMcpProfileMetadata*               MetadataProfile;                                   // 0x100(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UFortMcpProfileCreative*               CreativeModeProfile;                               // 0x108(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UFortMcpProfileAthena*                 AthenaProfile;                                     // 0x110(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TMap<enum class ESubGame, class UFortQuestManager*> QuestManagers;                                     // 0x118(0x50)(ZeroConstructor, NativeAccessSpecifierPrivate)
	TMap<enum class ESubGame, class UFortAwardManager*> AwardManagers;                                     // 0x168(0x50)(ZeroConstructor, NativeAccessSpecifierPrivate)
	TMap<enum class ESubGame, class UFortMinigameManager*> MinigameManagers;                                  // 0x1B8(0x50)(ZeroConstructor, NativeAccessSpecifierPrivate)
	class UFortCollectionBookManager*            CollectionBookManager;                             // 0x208(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UFortExpeditionManager*                ExpeditionManager;                                 // 0x210(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UFortLinkedAccountManager*             LinkedAccountManager;                              // 0x218(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2127[0xC0];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UFortHero*                             AthenaMenuHeroDef;                                 // 0x2E0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FDisplayManagerVariantData            CharacterCosmeticVariantData;                      // 0x2E8(0x18)(Transient, NativeAccessSpecifierPrivate)
	bool                                         bAthenaMenuHeroDirty;                              // 0x300(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2128[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UFortCustomizationAssetLoader*         CustomizationAssetLoader;                          // 0x308(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FEndZoneScoreAndAwards                EndZoneScoreAndAwards;                             // 0x310(0x70)(Transient, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortRegisteredPlayerInfo");
		return Clss;
	}

	class FString GetPlayerName();
	class UAbilitySystemComponent* GetAbilitySystemComponent();
};

// 0x0 (0x90 - 0x90)
// Class FortniteGame.FortRegisteredPlayerInfoTooltip
class UFortRegisteredPlayerInfoTooltip : public UFortTooltip
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortRegisteredPlayerInfoTooltip");
		return Clss;
	}

};

// 0x30 (0x150 - 0x120)
// Class FortniteGame.FortRejoinCheck
class UFortRejoinCheck : public URejoinCheck
{
public:
	bool                                         bAbandonAfterCheck;                                // 0x120(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bAttemptingAbandon;                                // 0x121(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2129[0x2E];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortRejoinCheck");
		return Clss;
	}

};

// 0x0 (0x28 - 0x28)
// Class FortniteGame.FortReleaseVersionManager
class UFortReleaseVersionManager : public UObject
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortReleaseVersionManager");
		return Clss;
	}

};

// 0x160 (0x490 - 0x330)
// Class FortniteGame.FortRelevancyZoneIndicator
class AFortRelevancyZoneIndicator : public AActor
{
public:
	class UStaticMeshComponent*                  RelevancyZoneMesh;                                 // 0x330(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaticMeshComponent*                  CustomDepthMesh;                                   // 0x338(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        RelevancyZoneToWorldScale;                         // 0x340(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_212A[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UMaterialInterface*                    MiniMapNetRelevancyOverlayMaterial;                // 0x348(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInterface*                    MiniMapNetRelevancyCircleMaterial;                 // 0x350(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInstanceDynamic*              MinimapNetRelevancyOverlayMID;                     // 0x358(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FSlateBrush                           MinimapNetRelevancyOverlayBrush;                   // 0x360(0x88)(Transient, NativeAccessSpecifierPrivate)
	class UMaterialInstanceDynamic*              MinimapNetRelevancyCircleMID;                      // 0x3E8(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FSlateBrush                           MinimapNetRelevancyCircleBrush;                    // 0x3F0(0x88)(Transient, NativeAccessSpecifierPrivate)
	uint8                                        Pad_212B[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortRelevancyZoneIndicator");
		return Clss;
	}

};

// 0x80 (0x2920 - 0x28A0)
// Class FortniteGame.FortRemoteControlledPawnAthena
class AFortRemoteControlledPawnAthena : public AFortPlayerPawnAthena
{
public:
	//bool                                       bCurrentlyDelayingLaunch;                          // 0x2898(0x1)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	//float                                      ServerFuseStartTime;                               // 0x289C(0x4)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EFortTeam                         RCTeam;                                            // 0x28A0(0x1)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_212F[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TWeakObjectPtr<class AFortPlayerPawnAthena>  ControllingPlayerPawn;                             // 0x28A4(0x8)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class AFortPlayerPawnAthena>  SpectateReturnPlayerPawn;                          // 0x28AC(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2130[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UFortAbilitySystemComponent*           OverrideAbilitySystemComponent;                    // 0x28B8(0x8)(ExportObject, Net, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        TriggeredHealthThreshold;                          // 0x28C0(0x4)(Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2131[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FFortGameplayEffectContainerSpec> EffectContainerSpecToApplyOnKills;                 // 0x28C8(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	class UFortRemoteControlPawnSet*             RemoteControlPawnSet;                              // 0x28D8(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bTriggeredForDestroy;                              // 0x28E0(0x1)(Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2132[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FFortAttributeInitializationKey       AttributeInitKey;                                  // 0x28E4(0x10)(Edit, DisableEditOnInstance, NoDestructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_2133[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class UFortCameraMode>           RemoteControlledPawnDefaultCameraClass;            // 0x28F8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UFortCameraMode>           RemoteControlledPawnTriggeredCameraClass;          // 0x2900(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UGameplayEffect>           ControllingPlayerEffect;                           // 0x2908(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FActiveGameplayEffectHandle           ControllingPlayerEffectHandle;                     // 0x2910(0x8)(Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bIsKeyboardTurnPressed;                            // 0x2918(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bIsKeyboardLookPressed;                            // 0x2919(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2134[0x6];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortRemoteControlledPawnAthena");
		return Clss;
	}

	void TriggerDestroyRemoteControlPawn();
	void SetupRemoteControlPawn(class AFortPlayerControllerAthena* InFortPC, class AFortPlayerPawnAthena* InControllingPawn, enum class EFortCustomMovement CustomMovementType, TArray<struct FFortGameplayEffectContainerSpec>& EffectContainerSpecOnKill);
	void OnTriggeredHealthThreshold(float PreviousTriggeredHealthThreshold, float CurrentTriggeredHealthThreshold);
	void OnRep_TriggeredHealthThreshold(float PreviousTriggeredHealthThreshold);
	void OnRep_TriggeredForDestroy();
	void OnRep_OverrideAbilitySystemComponent();
	void OnRep_ControllingPlayerPawn();
	void OnDoKill();
	void OnClientSetupRemoteControlPawn();
	void OnCapsuleTouch(class UPrimitiveComponent* HitComp, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, struct FHitResult& Hit);
	bool IsCurrentlyDelayingLaunch();
	void HandleControllingPlayerOutOfHealth();
	float GetOutOfHealthExplodeDelay();
	float GetLaunchDelay();
	float GetFuseLength();
	void BeginCapsuleOverlap(class UPrimitiveComponent* OverlappedComp, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult);
};

// 0x258 (0x288 - 0x30)
// Class FortniteGame.FortRemoteControlPawnSet
class UFortRemoteControlPawnSet : public UFortAttributeSet
{
public:
	struct FFortGameplayAttributeData            FuseLength;                                        // 0x30(0x28)(BlueprintVisible, BlueprintReadOnly, Net, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            MouseTurnCap;                                      // 0x58(0x28)(BlueprintVisible, BlueprintReadOnly, Net, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            MouseTurnRate;                                     // 0x80(0x28)(BlueprintVisible, BlueprintReadOnly, Net, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            MouseTurnRateMax;                                  // 0xA8(0x28)(BlueprintVisible, BlueprintReadOnly, Net, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            GyroTurnRateMax;                                   // 0xD0(0x28)(BlueprintVisible, BlueprintReadOnly, Net, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            KeyboardTurnRate;                                  // 0xF8(0x28)(BlueprintVisible, BlueprintReadOnly, Net, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            ControllerTurnRate;                                // 0x120(0x28)(BlueprintVisible, BlueprintReadOnly, Net, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            TouchTurnRate;                                     // 0x148(0x28)(BlueprintVisible, BlueprintReadOnly, Net, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            MaxSpeed;                                          // 0x170(0x28)(BlueprintVisible, BlueprintReadOnly, Net, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            MaxAcceleration;                                   // 0x198(0x28)(BlueprintVisible, BlueprintReadOnly, Net, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            UseLaunchDelay;                                    // 0x1C0(0x28)(BlueprintVisible, BlueprintReadOnly, Net, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            LaunchDelay;                                       // 0x1E8(0x28)(BlueprintVisible, BlueprintReadOnly, Net, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            LaunchSpeed;                                       // 0x210(0x28)(BlueprintVisible, BlueprintReadOnly, Net, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            OutOfHealthExplodeDelay;                           // 0x238(0x28)(BlueprintVisible, BlueprintReadOnly, Net, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            PlayerCanDetonate;                                 // 0x260(0x28)(BlueprintVisible, BlueprintReadOnly, Net, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortRemoteControlPawnSet");
		return Clss;
	}

};

// 0x268 (0x290 - 0x28)
// Class FortniteGame.FortReplayContext
class UFortReplayContext : public UBlueprintContextBase
{
public:
	struct FFortReplayPlaybackState              PlaybackState;                                     // 0x28(0x18)(BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	struct FFortReplayFXState                    EffectsState;                                      // 0x40(0x14)(BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_2137[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	UMulticastDelegateProperty_                  OnReplayFXStateChange;                             // 0x58(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	float                                        TimeBeforeEvent;                                   // 0x68(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2138[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	UMulticastDelegateProperty_                  OnPauseStateChanged;                               // 0x70(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnReplayTimeChanged;                               // 0x80(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnReplayTimelineChanged;                           // 0x90(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnReplayPlaybackMultiplierChanged;                 // 0xA0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnReplayHudVisibilityChanged;                      // 0xB0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnToggleReplayViewSettings;                        // 0xC0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnToggleReplayPlayerList;                          // 0xD0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnReplayLevelStreamingChanged;                     // 0xE0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnReplayTimelineFocusChanged;                      // 0xF0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnReplayTimelineMarkerAdded;                       // 0x100(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnReplayTimelineMarkersCleared;                    // 0x110(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnReplayScrubComplete;                             // 0x120(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnToggleSequencer;                                 // 0x130(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnSequenceFinished;                                // 0x140(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnSequenceShotChanged;                             // 0x150(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_2139[0xD0];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UFortSpectateClickableMapIcon*> InteractiveMapIcons;                               // 0x230(0x10)(ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	TMap<class UClass*, bool>                    UniqueMapIconVisibility;                           // 0x240(0x50)(ZeroConstructor, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortReplayContext");
		return Clss;
	}

	void ToggleViewSettingsVisibility();
	void TogglePlayPause();
	void TogglePlayerListVisibility();
	bool ToggleIconVisibility(class UClass* ToToggle);
	void ToggleHUDVisibility();
	void TakeScreenshot();
	void SkipForward(float TimeInSeconds);
	void SkipBack(float TimeInSeconds);
	void SetTimelineInputFocus(bool bShouldHaveFocus);
	void SetHighQualityFXFlag(bool bEnabled);
	void ReplayHUDCleanup();
	void JumpToPreviousEvent();
	void JumpToNextEvent();
	void JumpToEvent(int32 EventIndex);
	void JumpReplayToTimelinePosition(float TimeRatio);
	bool IsDepthOfFieldActive();
	void IncreasePlaybackMultiplier();
	float GetMaxMapZoomLevel();
	class FText GetCameraNameFromType(enum class ESpectatorCameraType CamType);
	void EnableTransportNavigation();
	void DisableTransportNavigation();
	void DecreasePlaybackMultiplier();
};

// 0x20 (0x118 - 0xF8)
// Class FortniteGame.FortReplaySequenceComponent
class UFortReplaySequenceComponent : public UActorComponent
{
public:
	struct FSavedSpectatorCameras                SequenceShots;                                     // 0xF8(0x10)(Protected, NativeAccessSpecifierProtected)
	int32                                        CurrentShotIdx;                                    // 0x108(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_213A[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UFortReplayContext*                    ReplayContext;                                     // 0x110(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortReplaySequenceComponent");
		return Clss;
	}

	void RestartSequence();
	void PreviousShot();
	void OnPlaybackTimeChanged(float NowTime);
	void NextShot();
	int32 GetNumberOfShotsInSequence();
	int32 GetCurrentShotIndex();
};

// 0x2B0 (0x2670 - 0x23C0)
// Class FortniteGame.FortReplaySpectator
class AFortReplaySpectator : public AFortPlayerControllerSpectating
{
public:
	//TArray<float>                              PlaybackSpeedLUT;                                  // 0x23B8(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_213D[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UFortReplaySequenceComponent*          SequencerComponent;                                // 0x23C8(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_213E[0x268];                                   // Fixing Size After Last Property  [ Dumper-7 ]
	class AFortTimeOfDayManager*                 OverriddenTODManager;                              // 0x2638(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_213F[0x30];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortReplaySpectator");
		return Clss;
	}

	bool SetOverrideTimeOfDay(bool bOverride, float Time, bool bImmediate);
	void SetCloudAltitudes(float NewCloudAltitude);
	void SetCanStreamBuildingFoundationsIn(bool bCanStream);
	void SetAllowTimeDilation(bool bAllow);
	void OnZoomOutEnd();
	void OnZoomOutBegin();
	void OnZoomInEnd();
	void OnZoomInBegin();
	void OnShotStartGotoTimeComplete(bool bWasSuccessful);
	void OnScrubComplete(bool bWasSuccessful);
	void OnPawnForReplayRelevancyChanged(class AFortPawn* NewRelevancyPawn);
	void OnPauseStateChanged(bool bNewPauseState);
	void OnNotifyNewPlaybackMultiplier(float NewMultiplier);
	void OnDemoScrubComplete(bool bWasSuccessful);
	class UFortReplaySequenceComponent* GetSequencerComponent();
};

// 0x10 (0x2680 - 0x2670)
// Class FortniteGame.FortReplaySpectatorAthena
class AFortReplaySpectatorAthena : public AFortReplaySpectator
{
public:
	uint8                                        Pad_2140[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortReplaySpectatorAthena");
		return Clss;
	}

};

// 0x1D0 (0x630 - 0x460)
// Class FortniteGame.FortReplicationGraph
class UFortReplicationGraph : public UReplicationGraph
{
public:
	//TArray<class UClass*>                      AlwaysRelevantClasses;                             // 0x458(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_2141[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UReplicationGraphNode_GridSpatialization2D* GridNode;                                          // 0x468(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UReplicationGraphNode_ActorList*       AlwaysRelevantNode;                                // 0x470(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFortReplicationGraphNode_BroadcastSpectator* BroadcastSpectatorRelevancyNode;                   // 0x478(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2142[0x50];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class AFortPlayerPawn*>               PlayerPawnsToVerify;                               // 0x4D0(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2143[0x150];                                   // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortReplicationGraph");
		return Clss;
	}

	void OnVehicleDestroyed(class AActor* DestroyedVehicle);
	void OnHighFrequencyPawnDestroyed(class AActor* Pawn);
};

// 0x238 (0x288 - 0x50)
// Class FortniteGame.FortReplicationGraphNode_AlwaysRelevant_ForConnection
class UFortReplicationGraphNode_AlwaysRelevant_ForConnection : public UReplicationGraphNode
{
public:
	uint8                                        Pad_2144[0x228];                                   // Fixing Size After Last Property  [ Dumper-7 ]
	class AActor*                                LastPawn;                                          // 0x278(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2145[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortReplicationGraphNode_AlwaysRelevant_ForConnection");
		return Clss;
	}

};

// 0x30 (0x80 - 0x50)
// Class FortniteGame.FortReplicationGraphNode_PlayerStateFrequencyLimiter
class UFortReplicationGraphNode_PlayerStateFrequencyLimiter : public UReplicationGraphNode
{
public:
	uint8                                        Pad_2146[0x30];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortReplicationGraphNode_PlayerStateFrequencyLimiter");
		return Clss;
	}

};

// 0x20 (0x70 - 0x50)
// Class FortniteGame.FortReplicationGraphNode_AlwaysRelevantForTeam
class UFortReplicationGraphNode_AlwaysRelevantForTeam : public UReplicationGraphNode
{
public:
	class AFortTeamPrivateInfo*                  FortTeamPrivateInfo;                               // 0x50(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2147[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortReplicationGraphNode_AlwaysRelevantForTeam");
		return Clss;
	}

};

// 0x38 (0x88 - 0x50)
// Class FortniteGame.FortReplicationGraphNode_AlwaysRelevantForSquad
class UFortReplicationGraphNode_AlwaysRelevantForSquad : public UReplicationGraphNode
{
public:
	uint8                                        Pad_2148[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class AFortPlayerStateAthena*>        PlayerStates;                                      // 0x58(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_2149[0x20];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortReplicationGraphNode_AlwaysRelevantForSquad");
		return Clss;
	}

};

// 0xC8 (0x1F0 - 0x128)
// Class FortniteGame.FortReplicationGraphNode_BroadcastSpectator
class UFortReplicationGraphNode_BroadcastSpectator : public UReplicationGraphNode_DynamicSpatialFrequency
{
public:
	uint8                                        Pad_214A[0xC8];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortReplicationGraphNode_BroadcastSpectator");
		return Clss;
	}

};

// 0x8 (0x130 - 0x128)
// Class FortniteGame.FortReplicationGraphNode_DynamicSpatialFrequency
class UFortReplicationGraphNode_DynamicSpatialFrequency : public UReplicationGraphNode_DynamicSpatialFrequency
{
public:
	class UReplicationGraphNode_DynamicSpatialFrequency* NonAINode;                                         // 0x128(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortReplicationGraphNode_DynamicSpatialFrequency");
		return Clss;
	}

};

// 0x0 (0x870 - 0x870)
// Class FortniteGame.FortResourceItemDefinition
class UFortResourceItemDefinition : public UFortWorldItemDefinition
{
public:
	//enum class EFortResourceType               ResourceType;                                      // 0x868(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortResourceItemDefinition");
		return Clss;
	}

};

// 0x8 (0x38 - 0x30)
// Class FortniteGame.FortRespawnDataTable
class UFortRespawnDataTable : public UDataAsset
{
public:
	class UDataTable*                            RespawnData;                                       // 0x30(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortRespawnDataTable");
		return Clss;
	}

};

// 0x0 (0x5A0 - 0x5A0)
// Class FortniteGame.FortRiftBlockerComponent
class UFortRiftBlockerComponent : public UBoxComponent
{
public:
	uint8                                        bStartActive : 1;                                  // Mask : 0x1 0x598(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_214B[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortRiftBlockerComponent");
		return Clss;
	}

};

// 0x5E8 (0x610 - 0x28)
// Class FortniteGame.FortRuntimeOptions
class UFortRuntimeOptions : public UObject
{
public:
	bool                                         bEnableSpectatorUpdates;                           // 0x28(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsTournamentMode;                                 // 0x29(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_214D[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  TournamentPlaylistName;                            // 0x2C(0x8)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        TournamentPlaylistPriorityBase;                    // 0x34(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MinimumAccountLevelForTournamentPlay;              // 0x38(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnableManualBroadcasterStart;                     // 0x3C(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bAutoloadRestrictedPlots;                          // 0x3D(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnableInventorySharingForBroadcast;               // 0x3E(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnableBuildPreviewForBroadcast;                   // 0x3F(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnableTeamPrivateInfoRelevancyForBroadcast;       // 0x40(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnableRemoteAimSnapshotManagerForBroadcast;       // 0x41(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShowSquadOnSpectatorPlayerStatusWidget;           // 0x42(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_214E[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        EsportsAnalyticsHeartbeatRate;                     // 0x44(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bUseBroadcastKillFeed;                             // 0x48(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_214F[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        CurrentSocialImportVersion;                        // 0x4C(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        CurrentVKImportVersion;                            // 0x50(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         CurrentMultiFactorModalVersion;                    // 0x54(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnableMassFriendImport;                           // 0x55(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2150[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        NumDaysBeforeFailedImportReattempt;                // 0x58(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnableSocialImport;                               // 0x5C(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnableStartupSocialImport;                        // 0x5D(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnableStartupErebusFriendImport;                  // 0x5E(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnableVKImport;                                   // 0x5F(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnableSteamImport;                                // 0x60(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2151[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                SocialImportURI;                                   // 0x68(0x10)(ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        DaysBetweenSocialImportPrompts;                    // 0x78(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        DaysBetweenVKImportPrompt;                         // 0x7C(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        SocialImportPromptsBeforeOptOut;                   // 0x80(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        FriendImportCaptionSelection;                      // 0x84(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnableSplitWalletTextNotice;                      // 0x88(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShowAthenaStoreToast;                             // 0x89(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShowAthenaStoreToastForFeatured;                  // 0x8A(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShowAthenaStoreToastForDaily;                     // 0x8B(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShowAthenaStoreToastForRolloverAlone;             // 0x8C(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShowAthenaStarsInStoreNotification;               // 0x8D(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2152[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class FName>                          AthenaStarterGameMode;                             // 0x90(0x10)(ZeroConstructor, Config, NativeAccessSpecifierPublic)
	TArray<class FName>                          AthenaStarterGameModeB;                            // 0xA0(0x10)(ZeroConstructor, Config, NativeAccessSpecifierPublic)
	bool                                         AthenaStarterFill;                                 // 0xB0(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2153[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        PartyRichPresenceUpdateTime;                       // 0xB4(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PartySuggestionUpdateTimer;                        // 0xB8(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaxPartySuggestionsToConsider;                     // 0xBC(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bAllowPartySuggestions;                            // 0xC0(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bAllowLFG;                                         // 0xC1(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnableSocialPanelAddEpicFriendsBang;              // 0xC2(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bAllowPartyPresenceUpdates;                        // 0xC3(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnableInteractiveConsumables;                     // 0xC4(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnableContextHelpMenu;                            // 0xC5(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShowAthenaItemShop;                               // 0xC6(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnableShowdown;                                   // 0xC7(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnableTournamentMatchCaps;                        // 0xC8(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnableEventLeaderboards;                          // 0xC9(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2154[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        NumCachedLeaderboardPages;                         // 0xCC(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        EventLeaderboardLiveRefreshTimeSeconds;            // 0xD0(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        EventLeaderboardLivePostEventRefreshWindowMinutes; // 0xD4(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  CreativePlaylistName;                              // 0xD8(0x8)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnableCreativeServerImportFriendsOption;          // 0xE0(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2155[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        MaxPlayersInCreativeServer;                        // 0xE4(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaxPlayersInCreativeWhitelist;                     // 0xE8(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShowSupportACreatorOnIslandLinkScreen;            // 0xEC(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bHideServersWithZeroPlayers;                       // 0xED(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnableIslandCodeEntryOnPlayerPortal;              // 0xEE(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnableIslandCodeEntryOnCuratedPortal;             // 0xEF(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnableIslandCodeEntryInFrontend;                  // 0xF0(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2156[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        RefreshFavoriteIslandsWaitTime;                    // 0xF4(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        IslandCodeLength;                                  // 0xF8(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bApplyCodeFormatting;                              // 0xFC(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnableJoinInProgress;                             // 0xFD(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnableBattlePass;                                 // 0xFE(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnableBattlePassPurchase;                         // 0xFF(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnableBattlePassFAQ;                              // 0x100(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnableAthenaFavoriting;                           // 0x101(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnableAthenaCustomPreviewActionForCosmetics;      // 0x102(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnableAthenaItemRandomization;                    // 0x103(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnableProfileStatTracking;                        // 0x104(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnableProfileStatUI;                              // 0x105(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnableTrickUI;                                    // 0x106(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnableMultiplayerTricks;                          // 0x107(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShowAthenaChallengesTabWhenOutOfSeason;           // 0x108(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bLoginXBLDisabled;                                 // 0x109(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bLoginPSNDisabled;                                 // 0x10A(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bLoginErebusDisabled;                              // 0x10B(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bSkipInternetCheck;                                // 0x10C(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnableClientSettingsSaveToCloud;                  // 0x10D(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnableClientSettingsSaveToDisk;                   // 0x10E(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnableShowdownXmppNotify;                         // 0x10F(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        ShowdownTournamentCacheExpirationHours;            // 0x110(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        ShowdownTournamentJsonRevision;                    // 0x114(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FString>                        CancelledEvents;                                   // 0x118(0x10)(ZeroConstructor, Config, NativeAccessSpecifierPublic)
	double                                       CloudSaveIntervalConfig;                           // 0x128(0x8)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bSaveToCloudOnMapLoad;                             // 0x130(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2157[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	double                                       GiftNotificationRefreshTimer;                      // 0x138(0x8)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnableReplayBrowser;                              // 0x140(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2158[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<bool>                                 bShowFeaturedReplays;                              // 0x148(0x10)(ZeroConstructor, Config, NativeAccessSpecifierPublic)
	TArray<uint32>                               WhitelistedReplayCLs;                              // 0x158(0x10)(ZeroConstructor, Config, NativeAccessSpecifierPublic)
	bool                                         bEnableReplayRecording;                            // 0x168(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnableLargeTeamReplayRecording;                   // 0x169(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnableCreativeModeReplayRecording;                // 0x16A(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bUsingEsportCameras;                               // 0x16B(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnableHearingAccessibility;                       // 0x16C(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDisableGiftXMPPMessageSend;                       // 0x16D(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDisableReceiveGiftXMPPMessages;                   // 0x16E(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDisableGifting;                                   // 0x16F(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bForceRestrictChat;                                // 0x170(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDisableReceiveGiftOption;                         // 0x171(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bLimitGiftingToEligiblePlatforms;                  // 0x172(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bCanGiftYourself;                                  // 0x173(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        GiftLimitAmount;                                   // 0x174(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        DaysOfFriendshipBeforeCanGift;                     // 0x178(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        EndBattleRoyalUpdateDelay;                         // 0x17C(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LightswitchDownLoginDelay;                         // 0x180(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShowStatusButtonOnWaitingRoomScreen;              // 0x184(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bAthenaShowMapMarkersInWorld;                      // 0x185(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bInvertMotionOnUnattachedSwitchControllers;        // 0x186(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDisableTouchLookVelocityScaling;                  // 0x187(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDisablePurchaseHistoryScreen;                     // 0x188(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2159[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        TouchAimAssistStrengthScalar;                      // 0x18C(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDisableTouchAimAssistAutoTracking;                // 0x190(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bProcessGamepadInputOnMobile;                      // 0x191(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_215A[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        GamepadShortThrowLookScale;                        // 0x194(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bUseNativeQuickbar;                                // 0x198(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bUseNewLookAccel;                                  // 0x199(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bSoundIndicatorsEnabledForTeammates;               // 0x19A(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEquipFirstWeaponOnMobile;                         // 0x19B(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ShowEliminationDistanceOver;                       // 0x19C(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FadeOutTeamIndicatorsAfter;                        // 0x1A0(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MapIndicatorTouchClearDistance;                    // 0x1A4(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             MapIndicatorOffset;                                // 0x1A8(0x8)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AthenaMapZoomMax;                                  // 0x1B0(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BacchusMapIndicatorSizeMultiplier;                 // 0x1B4(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AthenaMapPanSpeedMultiplier;                       // 0x1B8(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AthenaMapZoomSpeedMultiplier;                      // 0x1BC(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        WaitTimeBeforeShowingNewModeViolator;              // 0x1C0(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_215B[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FRuntimeOptionLocalizableString       FriendCodeShareWarningMessage;                     // 0x1C8(0x10)(Config, NativeAccessSpecifierPublic)
	struct FRuntimeOptionLocalizableString       PlatformPlayAllowedErrorMessage;                   // 0x1D8(0x10)(Config, NativeAccessSpecifierPublic)
	bool                                         bOnlyShareURLWithNoMessage;                        // 0x1E8(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bExcludeURLInShareMessage;                         // 0x1E9(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDisableBacchusFriendCodeSharing;                  // 0x1EA(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShowCreateAccountOnRedirect;                      // 0x1EB(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_215C[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                AthenaCodeOfConductURL;                            // 0x1F0(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                BacchusFriendCodeShareURL;                         // 0x200(0x10)(ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                CreateAccountUrl;                                  // 0x210(0x10)(ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                LinkAccountURL;                                    // 0x220(0x10)(ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                AccountMergeMoreInfoURL;                           // 0x230(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                SupportURL;                                        // 0x240(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                WaitingListURL;                                    // 0x250(0x10)(ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                CheckStatusURL;                                    // 0x260(0x10)(ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                IOSAppStoreURL;                                    // 0x270(0x10)(ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                TurnOnMfaURL;                                      // 0x280(0x10)(ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                ListOfCreatorsURL;                                 // 0x290(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bAllowCodeRedemptionInSubgameSelect;               // 0x2A0(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_215D[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                STWUpdatesURL;                                     // 0x2A8(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                GiftingInfoURL;                                    // 0x2B8(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaxNumItemsInCreativeChests;                       // 0x2C8(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaxStreamerMatchmakingDelay;                       // 0x2CC(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnableHiddenMatchmakingDelay;                     // 0x2D0(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_215E[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                TencentStoreDetailsURL;                            // 0x2D8(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        PSALoadingScreenPercentChance;                     // 0x2E8(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bUseEventsService;                                 // 0x2EC(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_215F[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                StwDownloadLauncherOption;                         // 0x2F0(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRuntimeOptionLocalizableString       OverrideDefaultBonusXpEventTitleString;            // 0x300(0x10)(Config, NativeAccessSpecifierPublic)
	struct FRuntimeOptionLocalizableString       XBLDisableText;                                    // 0x310(0x10)(Config, NativeAccessSpecifierPublic)
	struct FRuntimeOptionLocalizableString       XBLPartyFinderPlatformHeaderText;                  // 0x320(0x10)(Config, NativeAccessSpecifierPublic)
	struct FRuntimeOptionLocalizableString       XBLPartyFinderMcpHeaderText;                       // 0x330(0x10)(Config, NativeAccessSpecifierPublic)
	struct FRuntimeOptionLocalizableString       PSNDisableText;                                    // 0x340(0x10)(Config, NativeAccessSpecifierPublic)
	struct FRuntimeOptionLocalizableString       PSNPartyFinderPlatformHeaderText;                  // 0x350(0x10)(Config, NativeAccessSpecifierPublic)
	struct FRuntimeOptionLocalizableString       PSNPartyFinderMcpHeaderText;                       // 0x360(0x10)(Config, NativeAccessSpecifierPublic)
	struct FRuntimeOptionLocalizableString       SwitchDisableText;                                 // 0x370(0x10)(Config, NativeAccessSpecifierPublic)
	struct FRuntimeOptionReviewPromptCriteria    ReviewPromptCriteria;                              // 0x380(0x14)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_2160[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FRuntimeOptionLocalizableString       AffiliateDescriptionText;                          // 0x398(0x10)(Config, NativeAccessSpecifierPublic)
	struct FRuntimeOptionLocalizableString       AffiliateErrorText;                                // 0x3A8(0x10)(Config, NativeAccessSpecifierPublic)
	bool                                         bDisableAllKnobs;                                  // 0x3B8(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDisableMatchmakingKnobs;                          // 0x3B9(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDisableMinigameKnobs;                             // 0x3BA(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDisableGameOptionKnobs;                           // 0x3BB(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDisableAffiliateFeature;                          // 0x3BC(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bUseHotfixedAffiliateNamesArray;                   // 0x3BD(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnablePrerollLlamas;                              // 0x3BE(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2161[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FRuntimeOptionTabStateInfo>    DisabledFrontendNavigationTabs;                    // 0x3C0(0x10)(ZeroConstructor, Config, NativeAccessSpecifierPrivate)
	TArray<struct FRuntimeOptionTabStateInfo>    TournamentDisabledFrontendNavigationTabs;          // 0x3D0(0x10)(ZeroConstructor, Config, NativeAccessSpecifierPrivate)
	TArray<class FString>                        DisabledMatchmakingKnobs;                          // 0x3E0(0x10)(ZeroConstructor, Config, NativeAccessSpecifierPrivate)
	TArray<class FString>                        AffiliateNames;                                    // 0x3F0(0x10)(ZeroConstructor, Config, NativeAccessSpecifierPrivate)
	float                                        PickingInteractDistance;                           // 0x400(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PickingInteractHighlightDistanceScaler;            // 0x404(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PickingHighlightMovementUpdateDist;                // 0x408(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PickingHighlightUpdateTime;                        // 0x40C(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PickingTime;                                       // 0x410(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AutoOpenDoorInputMagnitude;                        // 0x414(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AutoOpenDoorTraceDistance;                         // 0x418(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bAutofireEnabled;                                  // 0x41C(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bAutofireUsesAutoaimTarget;                        // 0x41D(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bHoldToFireOnAutofireTarget;                       // 0x41E(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2162[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        DefaultAutofireRange;                              // 0x420(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bServerNetDriverAnalytics;                         // 0x424(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDisableReplicationGraph;                          // 0x425(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2163[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        BRServerMaxTickRate;                               // 0x428(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DoubleTapOnEndTouchTime;                           // 0x42C(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DoubleTapOnStartTouchTime;                         // 0x430(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DoubleTapDistance;                                 // 0x434(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TouchMoveStickRadius;                              // 0x438(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TouchMoveStickRadiusTargeting;                     // 0x43C(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TouchMoveStickRadiusScoped;                        // 0x440(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TouchMoveStickRadiusDriving;                       // 0x444(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AutorunLockZoneOffset;                             // 0x448(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AutorunLockZoneDelay;                              // 0x44C(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MoveOriginResetTime;                               // 0x450(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MoveOriginResetDistance;                           // 0x454(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MoveOriginFollowDistance;                          // 0x458(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDisableTouchLookInertia;                          // 0x45C(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2164[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        RotateInertiaMultiplier;                           // 0x460(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RotateInertiaMinTime;                              // 0x464(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RotateInertiaMinLength;                            // 0x468(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RotateInertiaMinMagnitude;                         // 0x46C(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        RotateInertiaNumAveragedTouches;                   // 0x470(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnableHUDLayoutTool;                              // 0x474(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnableHUDLayoutToolPanZoom;                       // 0x475(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2165[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        EnablePlayButtonTime;                              // 0x478(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AthenaExternalRichPresenceDelayTimeSeconds;        // 0x47C(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnableExternalPresenceAthenaPlayersRemain;        // 0x480(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2166[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        MinimumTimeBetweenConsolePresenceUpdates;          // 0x484(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinimumTimeBetweenMCPPresenceUpdates;              // 0x488(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        EnablePlayButtonTimePostError;                     // 0x48C(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bInviteUIDisabled;                                 // 0x490(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDisableBacchusLogin;                              // 0x491(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnableFriendSuggestions;                          // 0x492(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnableFriendsListButton;                          // 0x493(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bPrioritizeMcpInviteOverConsoleInvite;             // 0x494(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bForceDisableCrossplatformSquadFill;               // 0x495(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bRequireCrossplayOptIn;                            // 0x496(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bUseAccountCrossplayPermissions;                   // 0x497(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bSingleCrossplayOptInPrompt;                       // 0x498(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bImmediatelyDisplayCrossplayOptIn_STW;             // 0x499(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bImmediatelyDisplayCrossplayOptIn_BR;              // 0x49A(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShowIconForSamePlatformPlayers;                   // 0x49B(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnableChatWidget;                                 // 0x49C(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShowVoiceChatSettings;                            // 0x49D(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bLiveStreamVoiceEnabledServer;                     // 0x49E(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnableSupportCenter;                              // 0x49F(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bPartyInProgress;                                  // 0x4A0(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShouldAthenaQueryRecentPlayers;                   // 0x4A1(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnableOfflineFriendsList;                         // 0x4A2(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnableRecentPlayerList;                           // 0x4A3(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnableSuggestedFriendList;                        // 0x4A4(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnableBlockedList;                                // 0x4A5(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnableFriendListInGame;                           // 0x4A6(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bPushJIPInfoToPlatformPresence;                    // 0x4A7(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShowAccountBoosts;                                // 0x4A8(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShowCustomerSupport;                              // 0x4A9(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnableGlobalChat;                                 // 0x4AA(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnableAllTabInChat;                               // 0x4AB(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnableEULA;                                       // 0x4AC(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnableEndOfZoneCinematic;                         // 0x4AD(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnableOnboardingCinematics;                       // 0x4AE(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShowFounderBannerIcons;                           // 0x4AF(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShowCurrentRegionInLobby;                         // 0x4B0(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnableFoundersDailyRewards;                       // 0x4B1(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnableTwitchIntegration;                          // 0x4B2(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnableMatchmakingRegionSetting;                   // 0x4B3(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnableNaviationToChat;                            // 0x4B4(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnableLanguageSetting;                            // 0x4B5(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnableFriendCodeSetting;                          // 0x4B6(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnableEarlyAccessLoadingScreenBanner;             // 0x4B7(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        CampaignMatchEndRetryCount;                        // 0x4B8(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShopPurchaseConfirmation;                         // 0x4BC(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShopPurchaseConfirmationJapanPS4;                 // 0x4BD(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bToyMessagingEnabled;                              // 0x4BE(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnableAthenaHarvestingToolsInSTW;                 // 0x4BF(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnableAthenaDancesInSTW;                          // 0x4C0(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnableCosmeticLockerInSTW;                        // 0x4C1(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnableCosmeticItemShopInSTW;                      // 0x4C2(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnableSTWLootDrops;                               // 0x4C3(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnableSTWContainerItemCacheDrops;                 // 0x4C4(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnableSTWEnemyItemCacheDrops;                     // 0x4C5(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnableHoldToPickupUI;                             // 0x4C6(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bSkipTrailerMovie;                                 // 0x4C7(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bAlwaysPlayTrailerMovie;                           // 0x4C8(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bHideUnaffordableMtxPurchases;                     // 0x4C9(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bHidePlusOnVbucksButton;                           // 0x4CA(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bAllowXboxStwAccessDuringLiveStoreOutage;          // 0x4CB(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShowReplayTrailerButton_Athena;                   // 0x4CC(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnableAlterationModification;                     // 0x4CD(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnableSchematicRarityUpgrade;                     // 0x4CE(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnableMissionActivationVote;                      // 0x4CF(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnableLtmRetrieveTheData;                         // 0x4D0(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnableUpgradesVideos;                             // 0x4D1(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnableExternalRichPresence;                       // 0x4D2(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShowEnableMFAModalAtStartupAthena;                // 0x4D3(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShowEnableMFAModalAtStartupSTW;                   // 0x4D4(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnableAIBuildingHitFX;                            // 0x4D5(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2167[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        LevelToStartShowingMFAModal;                       // 0x4D8(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        DaysBetweenEnableMFAModalPrompts;                  // 0x4DC(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DelayGiftButtonWhenMFANotEnabledSeconds;           // 0x4E0(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        LevelToAutoOpenBattlePassOnNewSeason;              // 0x4E4(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bForceBattlePassUpsell;                            // 0x4E8(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bCanShowSTWUpsellInBR;                             // 0x4E9(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShowLeaderboardPrivacySettings;                   // 0x4EA(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnableServerScoreboardLog;                        // 0x4EB(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnableInputBasedMatchmaking;                      // 0x4EC(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bNotifyBlockedInput;                               // 0x4ED(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDisableVideoOptions;                              // 0x4EE(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnablePlayerReportingFlow;                        // 0x4EF(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bForceGamepadPlaytest;                             // 0x4F0(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bForceGamepadXboxOne;                              // 0x4F1(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnableNewFireModeSelection;                       // 0x4F2(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnableAddFriendWhileSpectating;                   // 0x4F3(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnableFriendLink;                                 // 0x4F4(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2168[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                FriendLinkURL;                                     // 0x4F8(0x10)(ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                MFAEnableURL;                                      // 0x508(0x10)(ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bAllowForceTouchFire;                              // 0x518(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2169[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        VehicleSessionMinTimeUsed;                         // 0x51C(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BalloonSessionMinTimeUsed;                         // 0x520(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        UpdateBalloonDistanceEveryXSeconds;                // 0x524(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ZiplineSessionMinTimeUsed;                         // 0x528(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        UpdateZiplineDistanceEveryXSeconds;                // 0x52C(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bUseHordeStormShield;                              // 0x530(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_216A[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        HordeStormShieldStartingRadiusOverride;            // 0x534(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HordeStormShieldEndingRadiusOverride;              // 0x538(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HordeStormShieldBreatherRadiusOverride;            // 0x53C(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bUseHordeRespawnAtLastPawnLocation;                // 0x540(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bAllowHordePlayerTriggeredRespawn;                 // 0x541(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_216B[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        MaxQuickScopeAimAssistPulls;                       // 0x544(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        QuickScopeAimAssistPullWatchTime;                  // 0x548(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShouldDisablePickaxeFXFrontendPreview;            // 0x54C(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bRegisterPawnsWithSignificanceManagerInFrontEnd;   // 0x54D(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bHideExclusiveCosmeticsFromOtherPlatformsOnPS4;    // 0x54E(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bHideExclusiveCosmeticsFromOtherPlatformsOnXB1;    // 0x54F(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bHideExclusiveCosmeticsFromOtherPlatformsOnSwitch; // 0x550(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bHideExclusiveCosmeticsFromOtherPlatformsOnPS4_STWOnly; // 0x551(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bHideExclusiveCosmeticsFromOtherPlatformsOnXB1_STWOnly; // 0x552(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bHideExclusiveCosmeticsFromOtherPlatformsOnSwitch_STWOnly; // 0x553(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bSimpleHeistVanEntrance;                           // 0x554(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_216C[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                LobbyGenericLinkButtonURL;                         // 0x558(0x10)(ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnableLobbyGenericLinkButton;                     // 0x568(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_216D[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FRuntimeOptionLocalizableString       LobbyGenericLinkButtonText;                        // 0x570(0x10)(Config, NativeAccessSpecifierPublic)
	TArray<class FString>                        PlaylistOptionWhitelist;                           // 0x580(0x10)(ZeroConstructor, Config, NativeAccessSpecifierPublic)
	int32                                        HighlightClipRewindTimeInSeconds;                  // 0x590(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnableAntiTaxi;                                   // 0x594(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bClientUsesStatsV2;                                // 0x595(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_216E[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        StopFlyingParachuteCooldownTime;                   // 0x598(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FlushLoadingScreenRefreshSeconds;                  // 0x59C(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnableJackalInStw;                                // 0x5A0(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnableDownTierCraftingInStw;                      // 0x5A1(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShowBugReportsButton;                             // 0x5A2(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShowCommentReportsButton;                         // 0x5A3(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShowPlayerReportsButton;                          // 0x5A4(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShowContentReportsButton;                         // 0x5A5(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnableItemRefundingInStw;                         // 0x5A6(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bAllowPartialBackgroundAudio;                      // 0x5A7(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        HotfixVersionId;                                   // 0x5A8(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxBuildingIntoTerrainIntersectionPercentage;      // 0x5AC(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bUsingBuildingExtraPiece;                          // 0x5B0(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_216F[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        AnalyticsBuildingWallTooLowLocations;              // 0x5B4(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         PublishingEnabledForWhitelistedAccounts;           // 0x5B8(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2170[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                IslandCodeLinkMnemonicExampleText;                 // 0x5C0(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                IslandCodeLinkURLText;                             // 0x5D0(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                CreativePublishCodeURLPrefix;                      // 0x5E0(0x10)(ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FString>                        CuratedLinkCodes;                                  // 0x5F0(0x10)(ZeroConstructor, Config, NativeAccessSpecifierPublic)
	bool                                         bEnableIslandCheckpoints;                          // 0x600(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnableIslandLoadNetSafeGuards;                    // 0x601(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2171[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        DeimosSpawningRiftDifficulty;                      // 0x604(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsUserChoiceAllowedForForcedAndroidStore;         // 0x608(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2172[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortRuntimeOptions");
		return Clss;
	}

	bool ShouldShowLeaderboardPrivacySettings();
	bool ShouldDisableReceiveGiftOption();
	void SetEnableMainMenuSocialButton(bool NewValue);
	void OnHotfixApplied__DelegateSignature();
	bool IsPartyInProgressEnabled();
	bool IsMatchmakingKnobEnabled(const class FString& KnobName);
	bool IsInviteUIDisabled();
	bool IsGiftingDisabled();
	TArray<class FString>& GetValidAffiliateNames();
	bool GetShowReplayTrailerButton_Athena();
	class UFortRuntimeOptions* GetRuntimeOptions();
	class FText GetOverrideBonusEventXpTitleText();
	class FText GetOverrideAffiliateErrorText();
	class FText GetOverrideAffiliateDescriptionText();
	class FString GetLobbyGenericLinkButtonURL();
	class FText GetLobbyGenericLinkButtonOverrideText();
	bool GetIsPlayerReportingFlowEnabled();
	bool GetIsFriendLinkEnabled();
	class FString GetGameVersion();
	bool GetEnableSplitWalletTextNotice();
	bool GetEnableSocialPanelAddEpicFriendsBang();
	bool GetEnableMainMenuSocialButton();
	bool GetEnableLobbyGenericLinkButton();
	bool GetEnableLFG();
	bool GetDisablePurchaseHistoryScreen();
	TArray<struct FRuntimeOptionTabStateInfo>& GetDisabledFrontendNavigationTabs();
	float GetDelayGiftButtonWhenMFANotEnabledSeconds();
};

// 0x208 (0x538 - 0x330)
// Class FortniteGame.FortSafeZoneIndicator
class AFortSafeZoneIndicator : public AActor
{
public:
	class UFortMiniMapComponent*                 MinimapComp;                                       // 0x330(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LastRadius;                                        // 0x338(0x4)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        NextRadius;                                        // 0x33C(0x4)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        NextNextRadius;                                    // 0x340(0x4)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector_NetQuantize100                LastCenter;                                        // 0x344(0xC)(BlueprintVisible, BlueprintReadOnly, Net, NoDestructor, NativeAccessSpecifierPublic)
	struct FVector_NetQuantize100                NextCenter;                                        // 0x350(0xC)(BlueprintVisible, BlueprintReadOnly, Net, NoDestructor, NativeAccessSpecifierPublic)
	struct FVector_NetQuantize100                NextNextCenter;                                    // 0x35C(0xC)(BlueprintVisible, BlueprintReadOnly, Net, NoDestructor, NativeAccessSpecifierPublic)
	float                                        SafeZoneStartShrinkTime;                           // 0x368(0x4)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SafeZoneFinishShrinkTime;                          // 0x36C(0x4)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bSafezoneEventDriven;                              // 0x370(0x1)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bPaused;                                           // 0x371(0x1)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bPausedForPreview;                                 // 0x372(0x1)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bPausedForPreview_Previous;                        // 0x373(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          MegaStormGameplayCueTag;                           // 0x374(0x8)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        NextNextMegaStormGridCellThickness;                // 0x37C(0x4)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        NextMegaStormGridCellThickness;                    // 0x380(0x4)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MegaStormDelayTimeBeforeDestruction;               // 0x384(0x4)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        NumActiveMegaStormCircles;                         // 0x388(0x4)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        ActiveMegaStormCircleGridCellCountFromEdge;        // 0x38C(0x4)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2173[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FSlateBrush                           MiniMapIconBrush;                                  // 0x3A0(0x88)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FSlateBrush                           FarOffMiniMapIconBrush;                            // 0x428(0x88)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	uint8                                        Pad_2174[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        Radius;                                            // 0x4B4(0x4)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaticMeshComponent*                  SafeZoneMesh;                                      // 0x4B8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCurveFloat*                           MovementAudioCrossfadeCurve;                       // 0x4C0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCurveFloat*                           MovementAudioPitchModCurve;                        // 0x4C8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCurveFloat*                           ClockTickingAudioVolumeCurve;                      // 0x4D0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCurveFloat*                           ClockTickingAudioPitchCurve;                       // 0x4D8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialParameterCollection*          MaterialCollection;                                // 0x4E0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  SafeZoneLocName;                                   // 0x4E8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  SafeZoneScaleName;                                 // 0x4F0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SafeZoneWorldScale;                                // 0x4F8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               ViewTargetLocation;                                // 0x4FC(0xC)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bIsViewTargetPawnOutside;                          // 0x508(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2175[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  SuperStormActiveName;                              // 0x50C(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MegaStormFXAlphaFactor;                            // 0x514(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MegaStormFXFadeInTime;                             // 0x518(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MegaStormFXFadeOutTime;                            // 0x51C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bMegaStormGameplayCueStarted;                      // 0x520(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bMegaStormStopPending;                             // 0x521(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bCleanupFXWithAlphaFactor;                         // 0x522(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2176[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        MegaStormOneOverFXFadeInTime;                      // 0x524(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MegaStormOneOverFXFadeOutTime;                     // 0x528(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2177[0xC];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortSafeZoneIndicator");
		return Clss;
	}

	void SetSafeZoneRadiusAndCenter(float InRadius, const struct FVector& InLocation);
	void OnSafeZoneStateChange(enum class EFortSafeZoneState NewState, bool bInitial);
	void OnRep_NumActiveMegaStormCircles(int32 PrevNumActiveMegaStormCircles);
	void OnBeginStartingStateEffectsEvent();
	void OnBeginStartingStateEffects();
	void MegaStormMinTimerExpired();
	float GetTimeSinceSafeZonesStart();
	float GetSafeZoneShrinkSpeed();
	float GetSafeZoneRadius();
	struct FVector GetSafeZoneCenter();
	void GetMovementAudioCurveValues(float Time, float* CrossfadeValue, float* PitchModValue);
	void GetClockTickingAudioCurveValues(float Time, float* VolumeModValue, float* PitchModValue);
};

// 0x0 (0x28 - 0x28)
// Class FortniteGame.FortScalableFloatUtils
class UFortScalableFloatUtils : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortScalableFloatUtils");
		return Clss;
	}

	class FString ToSimpleString(struct FScalableFloat& Input);
	void SetValue(struct FScalableFloat& Input, float NewValue);
	void SetScalingValue(struct FScalableFloat& Input, float InCoeffecient, class FName InRowName, class UCurveTable* InTable);
	bool IsStatic(struct FScalableFloat& Input);
	float GetValueAtLevel(struct FScalableFloat& Input, float Level);
	float GetValue(struct FScalableFloat& Input);
};

// 0x28 (0x128 - 0x100)
// Class FortniteGame.FortSchematicItem
class UFortSchematicItem : public UFortAlterableItem
{
public:
	bool                                         Refundable;                                        // 0x100(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         Refund_legacy_item;                                // 0x101(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_217C[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class FString>                        Alteration_base_rarities;                          // 0x108(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                         bGrantedByAbility;                                 // 0x118(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_217D[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        RequiredTeamLevel;                                 // 0x11C(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_217E[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortSchematicItem");
		return Clss;
	}

	bool IsBulkCraftable();
	struct FRecipe GetSchematicRecipe();
	int32 GetSchematicQuantityProduced();
	int32 GetRequiredTeamLevelToCraft();
};

// 0x60 (0x3C0 - 0x360)
// Class FortniteGame.FortSchematicItemDefinition
class UFortSchematicItemDefinition : public UFortAlterableItemDefinition
{
public:
	struct FDataTableRowHandle                   CraftingRecipe;                                    // 0x360(0x10)(Edit, NoDestructor, AssetRegistrySearchable, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class USoundBase>             CraftingSuccessSound;                              // 0x370(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FDataTableCategoryHandle              LootLevelData;                                     // 0x398(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	class FName                                  CraftingTimeRowName;                               // 0x3B0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bUseSchematicDisplayName;                          // 0x3B8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2181[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortSchematicItemDefinition");
		return Clss;
	}

	class UFortWorldItemDefinition* GetResultWorldItemDefinition();
	struct FRecipe GetRecipe();
	int32 GetQuantityProduced();
	float GetCraftingTimeForCharacter(int32 Level, class AFortPlayerPawn* FortPawn);
	float GetCraftingTime(int32 Level);
	class USoundBase* GetCraftingSuccessSound();
};

// 0x0 (0x90 - 0x90)
// Class FortniteGame.FortSchematicTooltip
class UFortSchematicTooltip : public UFortAccountItemTooltip
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortSchematicTooltip");
		return Clss;
	}

};

// 0x1410 (0x1440 - 0x30)
// Class FortniteGame.FortScoreStylingData
class UFortScoreStylingData : public UDataAsset
{
public:
	struct FFortScoreStylingInfo                 ScoreStyles;                                       // 0x30(0x358)(Edit, NativeAccessSpecifierPublic)
	uint8                                        Pad_2184[0x10B8];                                  // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortScoreStylingData");
		return Clss;
	}

	bool GetScoreStylingData(enum class EFortUIScoreType Rarity, struct FFortScoreStylingInfo* ScoreStylingInfo);
};

// 0x60 (0x390 - 0x330)
// Class FortniteGame.FortScriptedAction
class AFortScriptedAction : public AActor
{
public:
	uint8                                        Pad_2186[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	enum class EFortScriptedActionEnvironment    ActionEnvironment;                                 // 0x338(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2187[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FFortClientEventName                  ClientEventTrigger;                                // 0x33C(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	int32                                        ActionPriority;                                    // 0x34C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bAllowOtherActionsWhenActive;                      // 0x350(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2188[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FFortScriptedActionParams             CachedParams;                                      // 0x358(0x30)(Transient, NoDestructor, Protected, NativeAccessSpecifierProtected)
	bool                                         bIsActive;                                         // 0x388(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2189[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortScriptedAction");
		return Clss;
	}

	void GetParams(struct FFortScriptedActionParams* Params);
	void Execute(struct FFortScriptedActionParams& Params);
	void CompleteAction(bool bRegisterActionAgain);
	bool CanExecute(struct FFortScriptedActionParams& Params);
	void CancelAction(bool bRegisterActionAgain);
};

// 0x50 (0x380 - 0x330)
// Class FortniteGame.FortScriptedActionManager
class AFortScriptedActionManager : public AActor
{
public:
	uint8                                        Pad_218A[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class AFortScriptedAction*>           ActiveScriptedActions;                             // 0x338(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<struct FFortAvailableScriptedAction>  AvailableScriptedActions;                          // 0x348(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<struct FFortAvailableScriptedAction>  PendingAvailableScriptedActions;                   // 0x358(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<struct FFortClientEventName>          PendingClientEvents;                               // 0x368(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	bool                                         bIsProcessingClientEvent;                          // 0x378(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_218B[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortScriptedActionManager");
		return Clss;
	}

	void HandleClientEvent_Undefined(class UObject* EventSource, class UObject* EventFocus, struct FFortClientEvent& ClientEvent);
};

// 0x100 (0x128 - 0x28)
// Class FortniteGame.FortSearchPass
class UFortSearchPass : public UObject
{
public:
	uint8                                        Pad_218C[0x50];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UFortSessionHelper*                    SessionHelper;                                     // 0x78(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_218D[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FFortSearchPassParams                 CurrentSearchParams;                               // 0x90(0x28)(Transient, Protected, NativeAccessSpecifierProtected)
	struct FFortSearchPassState                  CurrentSearchPassState;                            // 0xB8(0x18)(Transient, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_218E[0x58];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortSearchPass");
		return Clss;
	}

};

// 0xC0 (0xE8 - 0x28)
// Class FortniteGame.FortSeasonalEventManager
class UFortSeasonalEventManager : public UObject
{
public:
	uint8                                        Pad_2191[0x48];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	UMulticastDelegateProperty_                  OnActiveEventFlagsChanged;                         // 0x70(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_2192[0x68];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortSeasonalEventManager");
		return Clss;
	}

	bool IsEventFlagActive(const class FString& QueriedEventFlagName);
	bool GetCalendarOffsetString(class FString* OutString);
	int32 GetBRXPBonusPoints();
};

// 0x0 (0x28 - 0x28)
// Class FortniteGame.FortServerOnlyObject
class UFortServerOnlyObject : public UObject
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortServerOnlyObject");
		return Clss;
	}

};

// 0x128 (0x150 - 0x28)
// Class FortniteGame.FortSessionHelper
class UFortSessionHelper : public UObject
{
public:
	class UClass*                                BeaconClientClass;                                 // 0x28(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AFortPartyBeaconClient*                PartyBeaconClient;                                 // 0x30(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2193[0xD8];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  CurrentSessionName;                                // 0x110(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	enum class EPartyReservationResult           LastBeaconResponse;                                // 0x118(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	enum class EFortSessionHelperJoinState       CurrentJoinState;                                  // 0x119(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	enum class EFortSessionHelperJoinResult      CurrentJoinResult;                                 // 0x11A(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2194[0x35];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortSessionHelper");
		return Clss;
	}

};

// 0x10 (0x40 - 0x30)
// Class FortniteGame.FortNonPrimaryMissionList
class UFortNonPrimaryMissionList : public UPrimaryDataAsset
{
public:
	TArray<struct FFortNonPrimaryMission>        NonPrimaryMissionList;                             // 0x30(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortNonPrimaryMissionList");
		return Clss;
	}

};

// 0x180 (0x1A8 - 0x28)
// Class FortniteGame.FortSharedMissionLists
class UFortSharedMissionLists : public UObject
{
public:
	TArray<struct FFortNonPrimaryMission>        CombinedNonPrimaryMissionList;                     // 0x28(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	TArray<struct FFortNonPrimaryMission>        NonPrimaryMissionList;                             // 0x38(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<TSoftObjectPtr<class UFortNonPrimaryMissionList>> NonPrimaryMissionLists;                            // 0x48(0x10)(Edit, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPrivate)
	TArray<struct FFortMissionDistributionCategory> NonPrimaryMissionDistributionCategories;           // 0x58(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<TSoftObjectPtr<class UFortMissionGenerationList>> WorldSetupMissionGenerationLists;                  // 0x68(0x10)(Edit, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPrivate)
	struct FGameplayTagQuery                     PrimaryMissionTagQuery;                            // 0x78(0x48)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FGameplayTagQuery                     TheaterTagQuery;                                   // 0xC0(0x48)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FGameplayTagQuery                     RegionTagQuery;                                    // 0x108(0x48)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	TArray<struct FFortGlobalMission>            SharedMissionList;                                 // 0x150(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<struct FQuestDrivenMissionSubList>    QuestDrivenMissionLists;                           // 0x160(0x10)(Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<struct FFortQuestDrivenMission>       AvailableQuestDrivenMissionList;                   // 0x170(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	TArray<class AFortPlayerController*>         PendingPIEPlayers;                                 // 0x180(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2195[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortSharedMissionLists");
		return Clss;
	}

	void UpdatePIEPlayers();
};

// 0x38 (0x178 - 0x140)
// Class FortniteGame.FortSignificanceManager
class UFortSignificanceManager : public USignificanceManager
{
public:
	uint8                                        Pad_2196[0x38];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortSignificanceManager");
		return Clss;
	}

};

// 0x120 (0x228 - 0x108)
// Class FortniteGame.FortSimpleMiniMapIndicator
class UFortSimpleMiniMapIndicator : public UFortMiniMapIndicator
{
public:
	struct FSlateBrush                           NormalBrush;                                       // 0x108(0x88)(Transient, Protected, NativeAccessSpecifierProtected)
	struct FSlateBrush                           AboveBelowBrush;                                   // 0x190(0x88)(Transient, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_2197[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortSimpleMiniMapIndicator");
		return Clss;
	}

};

// 0x28 (0x340 - 0x318)
// Class FortniteGame.FortSKFlyingVehicleConfigs
class UFortSKFlyingVehicleConfigs : public UFortVehicleConfigs
{
public:
	float                                        WheelRotationRange;                                // 0x318(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        VehicleFrontLowLateralFrictionMultiplier;          // 0x31C(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        VehicleRearLowLateralFrictionMultiplier;           // 0x320(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        VehicleFrontHighLateralFrictionMultiplier;         // 0x324(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        VehicleRearHighLateralFrictionMultiplier;          // 0x328(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LowToHighFrictionDuration;                         // 0x32C(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        UphillIncline;                                     // 0x330(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ReverseToForwardFrontFriction;                     // 0x334(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ReverseToForwardRearFriction;                      // 0x338(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ReverseToForwardMaxSpeed;                          // 0x33C(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortSKFlyingVehicleConfigs");
		return Clss;
	}

};

// 0x50 (0x368 - 0x318)
// Class FortniteGame.FortSKPushVehicleConfigs
class UFortSKPushVehicleConfigs : public UFortVehicleConfigs
{
public:
	float                                        PedalForceMultiplier;                              // 0x318(0x4)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PedalTopSpeedMultiplier;                           // 0x31C(0x4)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PedalForceDuration;                                // 0x320(0x4)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CoastBrakingMinDelta;                              // 0x324(0x4)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CoastBrakingMaxDelta;                              // 0x328(0x4)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PedalMinDuration;                                  // 0x32C(0x4)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MountDuration;                                     // 0x330(0x4)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DismountDuration;                                  // 0x334(0x4)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinPreDismountCooldown;                            // 0x338(0x4)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PreDismountCooldown;                               // 0x33C(0x4)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PedalCooldown;                                     // 0x340(0x4)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CoastBrakingStrength;                              // 0x344(0x4)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ShoppingMinPedalCoastSpeed;                        // 0x348(0x4)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        VehicleDebugStrafeCoastMultiplier;                 // 0x34C(0x4)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CanCoastCooldown;                                  // 0x350(0x4)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxAutoDismountForwardSpeed;                       // 0x354(0x4)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PedalMinForwardVelocity;                           // 0x358(0x4)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FastDismountIncline;                               // 0x35C(0x4)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FastDismountDuration;                              // 0x360(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CanCoastAfterFastDismountCooldown;                 // 0x364(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortSKPushVehicleConfigs");
		return Clss;
	}

};

// 0x10 (0x340 - 0x330)
// Class FortniteGame.FortSkyDiveContrailPreviewActor
class AFortSkyDiveContrailPreviewActor : public AActor
{
public:
	uint8                                        Pad_2198[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortSkyDiveContrailPreviewActor");
		return Clss;
	}

	void PreviewContrail(class UAthenaSkyDiveContrailItemDefinition* Contrail);
};

// 0x18 (0x348 - 0x330)
// Class FortniteGame.FortSkydivingShadowProxy
class AFortSkydivingShadowProxy : public AActor
{
public:
	float                                        SkydivingHeightThreshold;                          // 0x330(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SkydivingHeightCheckInterval;                      // 0x334(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AFortPlayerController*                 ViewingPlayerController;                           // 0x338(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2199[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortSkydivingShadowProxy");
		return Clss;
	}

	void ShowShadowProxy();
	void HideShadowProxy();
	void CheckHeight();
};

// 0xB0 (0x278 - 0x1C8)
// Class FortniteGame.FortSocialToolkit
class UFortSocialToolkit : public USocialToolkit
{
public:
	uint8                                        Pad_219A[0xB0];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortSocialToolkit");
		return Clss;
	}

};

// 0x50 (0x188 - 0x138)
// Class FortniteGame.FortSocialUser
class UFortSocialUser : public USocialUser
{
public:
	uint8                                        Pad_219B[0x50];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortSocialUser");
		return Clss;
	}

};

// 0x30 (0x450 - 0x420)
// Class FortniteGame.FortSoundCameraLensEffect
class AFortSoundCameraLensEffect : public AFortEmitterCameraLensEffectDirectional
{
public:
	//enum class EFortSoundIndicatorTypes        IndicatorType;                                     // 0x418(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	//int32                                      SnapToSections;                                    // 0x41C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxAudibleDistanceOnSpawn;                         // 0x420(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DistanceToSoundOnSpawn;                            // 0x424(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                InstigatingActor;                                  // 0x428(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture*                              IconOverride;                                      // 0x430(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLinearColor                          TintOverride;                                      // 0x438(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_219C[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortSoundCameraLensEffect");
		return Clss;
	}

	void SetType(enum class EFortSoundIndicatorTypes NewType);
	void SetTintOverride(const struct FLinearColor& Color);
	void SetStrengthCurve(struct FRuntimeFloatCurve& Curve);
	void SetInstigatingActor(class AActor* NewInstigator);
	void SetIconOverride(class UTexture* NewIcon);
	void SetIcon(class UTexture* NewIcon);
	void OnEffectTypeChanged();
	void OnEffectDeactivated();
	void OnEffectActivated();
};

// 0x0 (0x28 - 0x28)
// Class FortniteGame.FortSpawnableByPlacementSystemInterface
class UFortSpawnableByPlacementSystemInterface : public UInterface
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortSpawnableByPlacementSystemInterface");
		return Clss;
	}

	struct FGuid GetMissionGuid();
	class AFortMission* GetMission();
};

// 0x100 (0x130 - 0x30)
// Class FortniteGame.FortSpawnActorInfo
class UFortSpawnActorInfo : public UPrimaryDataAsset
{
public:
	class FName                                  SpawnActorID;                                      // 0x30(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class AFortLevelSpawnActor>      SpawnActorClass;                                   // 0x38(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FCollisionProfileName                 CollisionProfile;                                  // 0x40(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	enum class EFortSpawnActorTime               SpawnTiming;                                       // 0x48(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_219D[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FScalableFloat                        SafeZoneIndex;                                     // 0x50(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FScalableFloat                        SpawnAtSafeZoneIndex;                              // 0x70(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FScalableFloat                        DelayBetweenSpawns;                                // 0x90(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FScalableFloat                        MinActorsToSpawn;                                  // 0xB0(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FScalableFloat                        MaxActorsToSpawn;                                  // 0xD0(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FScalableFloat                        MinSpawnHeight;                                    // 0xF0(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FScalableFloat                        MaxSpawnHeight;                                    // 0x110(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortSpawnActorInfo");
		return Clss;
	}

};

// 0x0 (0x28 - 0x28)
// Class FortniteGame.FortSpawnContextObjectInterface
class UFortSpawnContextObjectInterface : public UInterface
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortSpawnContextObjectInterface");
		return Clss;
	}

};

// 0x20 (0x400 - 0x3E0)
// Class FortniteGame.FortSpawnedScoreActor
class AFortSpawnedScoreActor : public AFortLevelSpawnActor
{
public:
	struct FGameplayTagContainer                 GameplayTags;                                      // 0x3E0(0x20)(Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortSpawnedScoreActor");
		return Clss;
	}

	void OnScoreActorCollected(class APlayerState* PlayerState);
};

// 0x18 (0x48 - 0x30)
// Class FortniteGame.FortSpawnPointsPercentageCurveSequence
class UFortSpawnPointsPercentageCurveSequence : public UDataAsset
{
public:
	TArray<struct FDataTableRowHandle>           SpawnPointsPercentageCurves;                       // 0x30(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	enum class EFortIntensityCurveSequenceType   SequenceType;                                      // 0x40(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_219E[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortSpawnPointsPercentageCurveSequence");
		return Clss;
	}

};

// 0xD0 (0x400 - 0x330)
// Class FortniteGame.FortSpecialActorReplicationInfo
class AFortSpecialActorReplicationInfo : public AInfo
{
public:
	struct FSpecialActorRepDataArray             SpecialActorRepList;                               // 0x330(0xC0)(Net, NativeAccessSpecifierPublic)
	TArray<struct FSpecialActorStatData>         SpecialActorStats;                                 // 0x3F0(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortSpecialActorReplicationInfo");
		return Clss;
	}

};

// 0x88 (0x180 - 0xF8)
// Class FortniteGame.FortSpectateClickableMapIcon
class UFortSpectateClickableMapIcon : public UActorComponent
{
public:
	struct FSlateBrush                           SpectatorMapIndicatorBrush;                        // 0xF8(0x88)(Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortSpectateClickableMapIcon");
		return Clss;
	}

};

// 0x150 (0xA90 - 0x940)
// Class FortniteGame.FortSpectatorCamComp_ThirdPerson
class UFortSpectatorCamComp_ThirdPerson : public UFortSpectatorCameraComponent
{
public:
	struct FFortChaseCameraHelper                ChaseImplementation;                               // 0x940(0x150)(Edit, BlueprintVisible, NoDestructor, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortSpectatorCamComp_ThirdPerson");
		return Clss;
	}

	void UseCustomRotation(bool bUseCustomRotation);
	void SetNormalizedDistance(float NormalizedDist, bool bImmediate);
	void SetLazyAutoFollow(bool bNewLazyAutoFollow);
	void SetAutoFollow(bool bNewAutoFollow);
	float GetNormalizedDistance();
};

// 0x40 (0x68 - 0x28)
// Class FortniteGame.FortSpline
class UFortSpline : public UObject
{
public:
	bool                                         bConstantVelocity;                                 // 0x28(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_21A3[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FFortCatmullRomSpline                 Spline;                                            // 0x30(0x20)(NativeAccessSpecifierPrivate)
	struct FInterpCurveFloat                     SplineLookupTable;                                 // 0x50(0x18)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortSpline");
		return Clss;
	}

	void SetupSpline(const TArray<struct FVector>& ControlPoints, float InDuration);
	void SetDuration(float InDuration);
	bool IsValid();
	float GetVelocityCorrectedTime(float Time);
	struct FVector GetTangentFromTime(float Time);
	struct FVector GetStartPoint();
	float GetSplineLengthAtTime(float Time, float StepSize);
	float GetSplineLength(float StepSize);
	struct FVector GetPositionFromTime(float Time);
	struct FVector GetNormalFromTime(float Time);
	struct FVector GetEndPoint();
	float GetDuration();
	struct FVector GetBinormalFromTime(float Time);
	void EnableConstantVelocity(bool ConstVelEnabled);
	void DrawDebugSpline(class UObject* WorldContextObject, int32 Steps, float LifeTime, float Thickness, bool bPersistent, bool bJustDrawSpline, float BasisLength);
	void ClearSpline();
	void AddControlPoint(struct FVector& Point, int32 Index);
};

// 0xA0 (0x3D0 - 0x330)
// Class FortniteGame.FortSplineAudioActor
class AFortSplineAudioActor : public AActor
{
public:
	uint8                                        Pad_21A4[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        UpdateFrequencyInaudible;                          // 0x338(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        UpdateFrequencyAudible;                            // 0x33C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxAudibleRange;                                   // 0x340(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_21A5[0x1C];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        NumSamplePoints;                                   // 0x360(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_21A6[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FVector>                       SamplePoints;                                      // 0x368(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_21A7[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class USoundBase*                            ClosestPointSound;                                 // 0x398(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundBase*                            NextClosestPointSound;                             // 0x3A0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundBase*                            MidPointSound;                                     // 0x3A8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USplineComponent*                      AudioSpline;                                       // 0x3B0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAudioComponent*                       AudioAtClosestPoint;                               // 0x3B8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAudioComponent*                       AudioAtNextClosestPoint;                           // 0x3C0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAudioComponent*                       AudioAtMidPoint;                                   // 0x3C8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortSplineAudioActor");
		return Clss;
	}

};

// 0x0 (0x28 - 0x28)
// Class FortniteGame.FortSpottableActorInterface
class UFortSpottableActorInterface : public UInterface
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortSpottableActorInterface");
		return Clss;
	}

};

// 0x8 (0x90 - 0x88)
// Class FortniteGame.FortSpottedActorIndicator
class UFortSpottedActorIndicator : public UFortSlateHUDIndicator
{
public:
	class AFortPlayerController*                 OwnerPC;                                           // 0x88(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortSpottedActorIndicator");
		return Clss;
	}

};

// 0x38 (0xCC0 - 0xC88)
// Class FortniteGame.FortSprayDecalInstance
class AFortSprayDecalInstance : public ABuildingSMActor
{
public:
	struct FFortSprayDecalRepPayload             SprayInfo;                                         // 0xC88(0x20)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NoDestructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        bDestroyOnNearbyDestruction : 1;                   // Mask : 0x1 0xCA8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bDestroyOnNearbyDamageTaken : 1;                   // Mask : 0x2 0xCA8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bDestroyOnNearbyBounce : 1;                        // Mask : 0x4 0xCA8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_21A8[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UMaterialInstanceDynamic*>      SprayMIDsThatCanBounce;                            // 0xCB0(0x10)(BlueprintVisible, ZeroConstructor, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortSprayDecalInstance");
		return Clss;
	}

	void StartSprayFadeOutDueToNewPlacement();
	void SetSprayParameters(class AFortPlayerController* SpawningPC, class UAthenaSprayItemDefinition* InSprayAsset);
	void OnSprayInfoReady();
	void OnRep_SprayInfo();
	void OnBounceOccurs();
};

// 0x10 (0x340 - 0x330)
// Class FortniteGame.FortSprayPreviewActor
class AFortSprayPreviewActor : public AActor
{
public:
	uint8                                        Pad_21A9[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortSprayPreviewActor");
		return Clss;
	}

	void PreviewSpray(class UAthenaSprayItemDefinition* Spray);
};

// 0x0 (0xE0 - 0xE0)
// Class FortniteGame.FortStampItem
class UFortStampItem : public UFortAccountItem
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortStampItem");
		return Clss;
	}

};

// 0x0 (0x360 - 0x360)
// Class FortniteGame.FortStampItemDefinition
class UFortStampItemDefinition : public UFortAccountItemDefinition
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortStampItemDefinition");
		return Clss;
	}

};

// 0x60 (0x88 - 0x28)
// Class FortniteGame.FortStatEventManager
class UFortStatEventManager : public UObject
{
public:
	class AFortPlayerController*                 FPC;                                               // 0x28(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FFortStatEvent>                StatEvents;                                        // 0x30(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FFortStatEventSequence>        StatEventSequences;                                // 0x40(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	class FName                                  PinnedSchematicNotification;                       // 0x50(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FName>                          PinnedCanCraftStats;                               // 0x58(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class FName>                          PinnedCanNotCraftStats;                            // 0x68(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FFortStatEventSequence>        PinnedSchematicSequences;                          // 0x78(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortStatEventManager");
		return Clss;
	}

};

// 0x20 (0x148 - 0x128)
// Class FortniteGame.FortStaticMeshLinkComponent
class UFortStaticMeshLinkComponent : public UNavRelevantComponent
{
public:
	uint8                                        Pad_21AA[0x20];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortStaticMeshLinkComponent");
		return Clss;
	}

};

// 0x10 (0x38 - 0x28)
// Class FortniteGame.FortStaticMeshUserData
class UFortStaticMeshUserData : public UAssetUserData
{
public:
	TArray<struct FTransformableNavLinkClass>    NavLinks;                                          // 0x28(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortStaticMeshUserData");
		return Clss;
	}

};

// 0x0 (0x330 - 0x330)
// Class FortniteGame.FortAlwaysRelevantReplicatedActor
class AFortAlwaysRelevantReplicatedActor : public AActor
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAlwaysRelevantReplicatedActor");
		return Clss;
	}

};

// 0x0 (0xE0 - 0xE0)
// Class FortniteGame.FortStatItem
class UFortStatItem : public UFortAccountItem
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortStatItem");
		return Clss;
	}

};

// 0x30 (0x390 - 0x360)
// Class FortniteGame.FortStatItemDefinition
class UFortStatItemDefinition : public UFortAccountItemDefinition
{
public:
	enum class EFortStatType                     Stat;                                              // 0x360(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_21AB[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGameplayAttribute                    StatAttribute;                                     // 0x368(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_21AC[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortStatItemDefinition");
		return Clss;
	}

};

// 0x20 (0x270 - 0x250)
// Class FortniteGame.FortStormShieldComponent
class UFortStormShieldComponent : public USceneComponent
{
public:
	//UMulticastDelegateProperty_                OnStormShieldStatusChanged;                        // 0x248(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_21AD[0x9];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bDisabled;                                         // 0x259(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_21AE[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        DistanceFromEdgeOfStormShield;                     // 0x25C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_21AF[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortStormShieldComponent");
		return Clss;
	}

	void StormShieldCreated(class AFortMissionStormShield* Shield);
	void OwnerDestroyed(class AActor* InOwner);
};

// 0x20 (0x7A8 - 0x788)
// Class FortniteGame.FortSuperTowerGrenadeProjectile
class AFortSuperTowerGrenadeProjectile : public AFortProjectileBase
{
public:
	TArray<class AActor*>                        BuildingActorsToDestroy;                           // 0x788(0x10)(BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class AActor*>                        BuildingActorsToIgnore;                            // 0x798(0x10)(BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortSuperTowerGrenadeProjectile");
		return Clss;
	}

	void DestroyActorsInGridCellLocation(class UBuildingStructuralSupportSystem* BuildingStructuralSupportSystem, struct FVector& CellLocation, bool bDestroyFloorsQuickly);
	void ClearGridCells(TArray<struct FVector>& GridCellsToClear, bool bDestroyFloorsQuickly, struct FVector& BaseDestination, float AngleDeg);
};

// 0x2A8 (0x2D8 - 0x30)
// Class FortniteGame.FortSupplyDropInfo
class UFortSupplyDropInfo : public UDataAsset
{
public:
	class FName                                  SupplyDropID;                                      // 0x30(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class AFortAthenaSupplyDrop>     SupplyDropClass;                                   // 0x38(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ESupplyDropSpawnType              SpawnType;                                         // 0x40(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIgnoreBlueprintOverrides;                         // 0x41(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_21B3[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FFortSupplyDropGamePhaseData>  GamePhaseData;                                     // 0x48(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	enum class ESupplyDropItemTrackType          ItemTrackType;                                     // 0x58(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EAthenaGamePhase                  GamePhaseToSpawn;                                  // 0x59(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_21B4[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        SafeZoneIndexToSpawn;                              // 0x5C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                 SupplyDropTrackingTags;                            // 0x60(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FGameplayTag                          SpecialActorBaseTag;                               // 0x80(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          SpecialActorTag;                                   // 0x88(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSlateBrush                           SpecialActorMinimapIconBrush;                      // 0x90(0x88)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FVector2D                             SpecialActorMinimapIconScale;                      // 0x118(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSlateBrush                           SpecialActorCompassIconBrush;                      // 0x120(0x88)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FVector2D                             SpecialActorCompassIconScale;                      // 0x1A8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShouldMaintainItemCount;                          // 0x1B0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_21B5[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FScalableFloat                        NumDeliveryItemsToSpawn;                           // 0x1B8(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FScalableFloat                        MinInitialDeliveryDelayTime;                       // 0x1D8(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FScalableFloat                        MaxInitialDeliveryDelayTime;                       // 0x1F8(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FScalableFloat                        MinTimeBetweenDrops;                               // 0x218(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FScalableFloat                        MaxTimeBetweenDrops;                               // 0x238(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FScalableFloat                        MinRespawnTime;                                    // 0x258(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FScalableFloat                        MaxRespawnTime;                                    // 0x278(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FScalableFloat                        MinTraceHeight;                                    // 0x298(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FScalableFloat                        MaxTraceHeight;                                    // 0x2B8(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortSupplyDropInfo");
		return Clss;
	}

};

// 0x10 (0x40 - 0x30)
// Class FortniteGame.FortSurfaceTypeToSurfaceTypeTagMapping
class UFortSurfaceTypeToSurfaceTypeTagMapping : public UDataAsset
{
public:
	TArray<struct FFortSurfaceTypeToSurfaceTypeTag> TypeToTagMapping;                                  // 0x30(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortSurfaceTypeToSurfaceTypeTagMapping");
		return Clss;
	}

};

// 0x68 (0x98 - 0x30)
// Class FortniteGame.FortSurvivorData
class UFortSurvivorData : public UDataAsset
{
public:
	class UDataTable*                            SurvivorFemaleFirstNameData;                       // 0x30(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UDataTable*                            SurvivorMaleFirstNameData;                         // 0x38(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UDataTable*                            SurvivorFemaleLastNameData;                        // 0x40(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UDataTable*                            SurvivorMaleLastNameData;                          // 0x48(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_21B6[0x48];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortSurvivorData");
		return Clss;
	}

};

// 0x60 (0x90 - 0x30)
// Class FortniteGame.FortTagUIDataLookupTable
class UFortTagUIDataLookupTable : public UDataAsset
{
public:
	TArray<struct FFortTagUIData>                TagUIDataList;                                     // 0x30(0x10)(Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_21B7[0x50];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortTagUIDataLookupTable");
		return Clss;
	}

};

// 0x3A8 (0x3D0 - 0x28)
// Class FortniteGame.FortTaggedActorsManager
class UFortTaggedActorsManager : public UObject
{
public:
	uint8                                        Pad_21B8[0x3A8];                                   // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortTaggedActorsManager");
		return Clss;
	}

};

// 0x50 (0x80 - 0x30)
// Class FortniteGame.FortTaggedSoundBank
class UFortTaggedSoundBank : public UDataAsset
{
public:
	TMap<struct FGameplayTag, struct FTaggedSoundBankResponseList> FlattenedResponseMap;                              // 0x30(0x50)(ZeroConstructor, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortTaggedSoundBank");
		return Clss;
	}

};

// 0x30 (0x868 - 0x838)
// Class FortniteGame.FortTakerRift
class AFortTakerRift : public ABuildingRift
{
public:
	TSoftObjectPtr<class UParticleSystem>        TakerRiftParticle;                                 // 0x838(0x28)(Transient, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UParticleSystemComponent*              TakerRiftParticleComponent;                        // 0x860(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortTakerRift");
		return Clss;
	}

};

// 0x0 (0x28 - 0x28)
// Class FortniteGame.FortTargetSelectionInterface
class UFortTargetSelectionInterface : public UInterface
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortTargetSelectionInterface");
		return Clss;
	}

	struct FTransform GetTargetingTransform(enum class EFortAbilityTargetingSource Source, class UFortGameplayAbility* SourceAbility);
};

// 0x0 (0x28 - 0x28)
// Class FortniteGame.FortTeamActorInterface
class UFortTeamActorInterface : public UGenericTeamAgentInterface
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortTeamActorInterface");
		return Clss;
	}

	enum class EFortTeam GetTeam();
};

// 0x10 (0x38 - 0x28)
// Class FortniteGame.FortTeamIdentification
class UFortTeamIdentification : public UObject
{
public:
	struct FColor                                HUDColor;                                          // 0x28(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_21BA[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UCustomAccessoryColorSwatch*           CharacterAccessoryColorSwatch;                     // 0x30(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortTeamIdentification");
		return Clss;
	}

};

// 0x100 (0x430 - 0x330)
// Class FortniteGame.FortTeamInfo
class AFortTeamInfo : public AInfo
{
public:
	uint8                                        Pad_21BE[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class AController*>                   TeamMembers;                                       // 0x338(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	enum class EFortTeam                         Team;                                              // 0x348(0x1)(Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_21BF[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                ChatRoomId;                                        // 0x350(0x10)(Net, ZeroConstructor, Transient, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FTeamSpottedActorInfoArray            TeamSpottedActors;                                 // 0x360(0xC8)(Net, Protected, NativeAccessSpecifierProtected)
	class AFortTeamPrivateInfo*                  PrivateInfo;                                       // 0x428(0x8)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortTeamInfo");
		return Clss;
	}

	void OnSpottedActorDied(class AActor* DamagedActor, float Damage, class AController* InstigatedBy, class AActor* DamageCauser, const struct FVector& HitLocation, class UPrimitiveComponent* FHitComponent, class FName BoneName, const struct FVector& Momentum);
	int32 GetTeamLevel();
	int32 GetTeamExperience();
};

// 0x18 (0x448 - 0x430)
// Class FortniteGame.FortTeamInfoAthena
class AFortTeamInfoAthena : public AFortTeamInfo
{
public:
	uint8                                        Pad_21C0[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortTeamInfoAthena");
		return Clss;
	}

};

// 0x1F8 (0x628 - 0x430)
// Class FortniteGame.FortTeamInfoPvPBaseDestruction
class AFortTeamInfoPvPBaseDestruction : public AFortTeamInfo
{
public:
	class AFortPvPBaseCornerstone*               TeamCornerstone;                                   // 0x430(0x8)(Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FTeamStrategicBuildingEntryArray      TeamStrategicBuildingActors;                       // 0x438(0xC0)(Net, Transient, Protected, NativeAccessSpecifierProtected)
	struct FTeamFOBCoreBuildingEntryArray        TeamFOBCoreBuildingActors;                         // 0x4F8(0xC0)(Net, Transient, RepNotify, Protected, NativeAccessSpecifierProtected)
	uint8                                        bAllFOBCoresLoaded : 1;                            // Mask : 0x1 0x5B8(0x1)(Net, Transient, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_21C2[0x1F];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        StrategicBuildingHandleGenerator;                  // 0x5D8(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        TeamLevel;                                         // 0x5DC(0x4)(Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	UMulticastDelegateProperty_                  OnHandleTeamLevelChanged;                          // 0x5E0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	int32                                        TeamExperience;                                    // 0x5F0(0x4)(Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_21C3[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	UMulticastDelegateProperty_                  OnHandleTeamXPChanged;                             // 0x5F8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	UMulticastDelegateProperty_                  OnFOBCoresLoaded;                                  // 0x608(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	UMulticastDelegateProperty_                  OnFOBCoresDestroyed;                               // 0x618(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortTeamInfoPvPBaseDestruction");
		return Clss;
	}

	void OnRep_TeamLevel();
	void OnRep_TeamFOBCoreBuildingActors();
	void OnRep_TeamExperience();
	void OnRep_AllFOBCoresLoaded();
	void GetTeamFOBCoresAndSpawnTags(TArray<class ABuildingFOBCoreActor*>* OutFOBCores, TArray<struct FGameplayTagContainer>* OutFOBSpawnTags);
	void GetTeamFOBCores(TArray<class ABuildingFOBCoreActor*>* OutFOBCores);
	class AFortPvPBaseCornerstone* GetTeamCornerstone();
	class AStrategicBuildingActor* GetStrategicBuildingActor(struct FTeamStrategicBuildingHandle& Handle);
};

// 0x98 (0xC0 - 0x28)
// Class FortniteGame.FortTeamMember
class UFortTeamMember : public UObject
{
public:
	class USocialUser*                           SocialUser;                                        // 0x28(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_21C4[0x90];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortTeamMember");
		return Clss;
	}

};

// 0x1F0 (0x520 - 0x330)
// Class FortniteGame.FortTeamPrivateInfo
class AFortTeamPrivateInfo : public AInfo
{
public:
	class AFortTeamInfo*                         TeamInfo;                                          // 0x330(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FPrivateTeamDataArray                 RepData;                                           // 0x338(0x118)(Net, Protected, NativeAccessSpecifierProtected)
	struct FLatentRepTeamDataArray               LatentTeamRepData;                                 // 0x450(0xC8)(Net, Protected, NativeAccessSpecifierProtected)
	float                                        AverageDamageDealt;                                // 0x518(0x4)(Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_21C5[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortTeamPrivateInfo");
		return Clss;
	}

};

// 0x28 (0x58 - 0x30)
// Class FortniteGame.FortTestControllerBase
class UFortTestControllerBase : public UGauntletTestController
{
public:
	uint8                                        Pad_21C6[0x28];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortTestControllerBase");
		return Clss;
	}

};

// 0x8 (0x60 - 0x58)
// Class FortniteGame.FortTestControllerAthenaNoMcpTest
class UFortTestControllerAthenaNoMcpTest : public UFortTestControllerBase
{
public:
	uint8                                        Pad_21C7[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortTestControllerAthenaNoMcpTest");
		return Clss;
	}

};

// 0x78 (0xD0 - 0x58)
// Class FortniteGame.FortTestControllerAutoTest
class UFortTestControllerAutoTest : public UFortTestControllerBase
{
public:
	uint8                                        Pad_21C8[0x70];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	enum class EFortAutoTestState                CurrentState;                                      // 0xC8(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_21C9[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortTestControllerAutoTest");
		return Clss;
	}

};

// 0x0 (0x30 - 0x30)
// Class FortniteGame.FortTestControllerBootTest
class UFortTestControllerBootTest : public UGauntletTestControllerBootTest
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortTestControllerBootTest");
		return Clss;
	}

};

// 0x8 (0x60 - 0x58)
// Class FortniteGame.FortTestControllerCosmeticAudit
class UFortTestControllerCosmeticAudit : public UFortTestControllerBase
{
public:
	uint8                                        Pad_21CA[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortTestControllerCosmeticAudit");
		return Clss;
	}

};

// 0xD0 (0x128 - 0x58)
// Class FortniteGame.FortTestControllerCosmeticMemory
class UFortTestControllerCosmeticMemory : public UFortTestControllerBase
{
public:
	uint8                                        Pad_21CB[0xD0];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortTestControllerCosmeticMemory");
		return Clss;
	}

};

// 0x0 (0x58 - 0x58)
// Class FortniteGame.FortTestControllerForceOOM
class UFortTestControllerForceOOM : public UFortTestControllerBase
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortTestControllerForceOOM");
		return Clss;
	}

};

// 0x88 (0xE0 - 0x58)
// Class FortniteGame.FortTestControllerMemoryReport
class UFortTestControllerMemoryReport : public UFortTestControllerBase
{
public:
	uint8                                        Pad_21CC[0x88];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortTestControllerMemoryReport");
		return Clss;
	}

};

// 0x28 (0x58 - 0x30)
// Class FortniteGame.FortTestControllerPerfReplayTest
class UFortTestControllerPerfReplayTest : public UGauntletTestController
{
public:
	uint8                                        Pad_21CD[0x28];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortTestControllerPerfReplayTest");
		return Clss;
	}

};

// 0x78 (0xD0 - 0x58)
// Class FortniteGame.FortTestControllerProfileGo
class UFortTestControllerProfileGo : public UFortTestControllerBase
{
public:
	uint8                                        Pad_21CE[0x78];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortTestControllerProfileGo");
		return Clss;
	}

};

// 0x188 (0x1E0 - 0x58)
// Class FortniteGame.FortTestControllerReplaySmoke
class UFortTestControllerReplaySmoke : public UFortTestControllerBase
{
public:
	uint8                                        Pad_21CF[0x188];                                   // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortTestControllerReplaySmoke");
		return Clss;
	}

};

// 0x10 (0x48 - 0x38)
// Class FortniteGame.FortTextHotfixConfig
class UFortTextHotfixConfig : public UDeveloperSettings
{
public:
	TArray<struct FPolyglotTextData>             TextReplacements;                                  // 0x38(0x10)(Edit, ZeroConstructor, Config, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortTextHotfixConfig");
		return Clss;
	}

};

// 0x0 (0x880 - 0x880)
// Class FortniteGame.FortTheaterCamera
class AFortTheaterCamera : public AFortCameraBase
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortTheaterCamera");
		return Clss;
	}

	void SetTileFocus(class AFortTheaterMapTile* TargetTile);
	struct FVector LimitToTheater(struct FVector& DesiredPosition);
};

// 0x6C0 (0x6F0 - 0x30)
// Class FortniteGame.FortTheaterInfo
class UFortTheaterInfo : public UDataAsset
{
public:
	class FString                                UniqueId;                                          // 0x30(0x10)(ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        SaveVersion;                                       // 0x40(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_21D0[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FFortTheaterMapData                   TheaterData;                                       // 0x48(0x560)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FFortTheaterMapMissionData            Missions;                                          // 0x5A8(0x30)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FFortTheaterMapMissionAlertData       MissionAlerts;                                     // 0x5D8(0x20)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	bool                                         bForceIncludeInCookIfReferenced;                   // 0x5F8(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_21D1[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class UFortZoneTheme>            SelectedZoneTheme;                                 // 0x600(0x8)(Edit, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFortRegionInfo*                       SelectedZoneRegion;                                // 0x608(0x8)(Edit, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EFortTheaterMapTileType           SelectedTileType;                                  // 0x610(0x1)(Edit, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_21D2[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGameplayTagContainer                 SelectedTileTags;                                  // 0x618(0x20)(Edit, Transient, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FFortRequirementsInfo                 SelectedTileRequirements;                          // 0x638(0x58)(Edit, Transient, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TArray<struct FFortLinkedQuest>              SelectedLinkedQuests;                              // 0x690(0x10)(Edit, ZeroConstructor, Transient, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TArray<struct FFortTheaterMissionWeight>     SelectedMissionWeightOverrides;                    // 0x6A0(0x10)(Edit, ZeroConstructor, Transient, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TArray<struct FFortTheaterDifficultyWeight>  SelectedDifficultyWeightOverrides;                 // 0x6B0(0x10)(Edit, ZeroConstructor, Transient, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	bool                                         bCanSelectedTileHaveMissionAlert;                  // 0x6C0(0x1)(Edit, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_21D3[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FFortEditorTheaterMapRegionColor> RegionColors;                                      // 0x6C8(0x10)(Edit, ZeroConstructor, EditConst, Protected, NativeAccessSpecifierProtected)
	TArray<struct FFortTheaterTileEditorData>    EditorTiles;                                       // 0x6D8(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	int32                                        TheaterWidth;                                      // 0x6E8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        TheaterHeight;                                     // 0x6EC(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortTheaterInfo");
		return Clss;
	}

};

// 0x10 (0x40 - 0x30)
// Class FortniteGame.FortTheaterList
class UFortTheaterList : public UPrimaryDataAsset
{
public:
	TArray<TSoftObjectPtr<class UFortTheaterInfo>> ActiveTheatersList;                                // 0x30(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortTheaterList");
		return Clss;
	}

};

// 0x290 (0x5C8 - 0x338)
// Class FortniteGame.FortTheaterMapTile
class AFortTheaterMapTile : public AFortClientOnlyActor
{
public:
	bool                                         bFocused;                                          // 0x338(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bHostSelected;                                     // 0x339(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bGoToPromptEnabled;                                // 0x33A(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_21D5[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FFortHexMapCoord                      MapCoord;                                          // 0x33C(0xC)(NoDestructor, NativeAccessSpecifierPublic)
	bool                                         bHasFinishedLoading;                               // 0x348(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_21D6[0xF];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	enum class EFortTheaterMapTileType           TileType;                                          // 0x358(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_21D7[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class UFortZoneTheme>            ZoneThemeClass;                                    // 0x360(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        TileIndex;                                         // 0x368(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        RegionIndex;                                       // 0x36C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               SelectionOffset;                                   // 0x370(0xC)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               FocusOffset;                                       // 0x37C(0xC)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SelectionInterpSpeed;                              // 0x388(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        NormalBrightness;                                  // 0x38C(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        LockedBrightness;                                  // 0x390(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        FocusedBrightness;                                 // 0x394(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SelectedBrightnessRange;                           // 0x398(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SelectedPulseSpeed;                                // 0x39C(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bEnableBrightnessCode;                             // 0x3A0(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_21D8[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        StaticMeshMaterialID;                              // 0x3A4(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               InitialLocation;                                   // 0x3A8(0xC)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_21D9[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FFortAvailableMissionData             MissionData;                                       // 0x3B8(0xA8)(Protected, NativeAccessSpecifierProtected)
	struct FFortAvailableMissionData             LastValidMissionData;                              // 0x460(0xA8)(Protected, NativeAccessSpecifierProtected)
	struct FDataTableRowHandle                   ZoneDifficultyInfo;                                // 0x508(0x10)(NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FFortAvailableMissionAlertData        MissionAlertData;                                  // 0x518(0x98)(Protected, NativeAccessSpecifierProtected)
	class UStaticMeshComponent*                  StaticMeshComponent;                               // 0x5B0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class UMaterialInstanceDynamic*>      AdjacencyMIDs;                                     // 0x5B8(0x10)(BlueprintVisible, ZeroConstructor, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortTheaterMapTile");
		return Clss;
	}

	void RefreshTile();
	void OnTileClicked(class AActor* ClickedActor, const struct FKey& ButtonReleased);
	void OnSelectWrapper(bool bIsGameSessionOwner);
	void OnMouseOverEnd(class AActor* MousedOverActor);
	void OnMouseOverBegin(class AActor* MousedOverActor);
	void OnMissionDataUpdated();
	void OnMarkedQuestChanged();
	void OnInitializeTile();
	void OnHostSelect();
	void OnHostDeselect();
	void OnFocus();
	void OnEnableGoToPrompt();
	void OnDisableGoToPrompt();
	void OnDeselectWrapper(bool bIsGameSessionOwner);
	void OnDefocus();
	void OnClientSelect();
	void OnClientDeselect();
	bool IsTileValidForMarkedQuest(class UFortQuestItem** OutMarkedQuest);
	bool IsTileSelectable();
	bool IsTileQuestRecommended();
	bool IsTilePlayable();
	bool IsTileLocked();
	bool IsTileHidden();
	bool IsTeamRatingDataValid();
	bool IsMissionAlertTile();
	bool HasValidMissionData();
	struct FGameDifficultyInfo GetZoneDifficulty();
	struct FGameplayTagContainer GetMissionAlertVisualTags();
	class FName GetMissionAlertCategoryName();
	bool DoesTileAllowQuickplay();
};

// 0x150 (0x480 - 0x330)
// Class FortniteGame.FortTheaterMapViewer
class AFortTheaterMapViewer : public AActor
{
public:
	uint8                                        Pad_21DA[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FFortAvailableTheaterMissions> MissionAvailabilityList;                           // 0x338(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FFortAvailableMissionAlerts>   MissionAlertAvailabilityList;                      // 0x348(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	struct FBox                                  HexMapSize;                                        // 0x358(0x1C)(ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	float                                        HexTileWidth;                                      // 0x374(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HexTileHeight;                                     // 0x378(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_21DB[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class AFortTheaterMapTile*>           HexMap;                                            // 0x380(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	class FString                                CurrentTheaterId;                                  // 0x390(0x10)(ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<bool>                                 LeaderTileAccessStates;                            // 0x3A0(0x10)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	class AFortTheaterMapTile*                   CurrentSelectedTile;                               // 0x3B0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AFortTheaterMapTile*                   CurrentFocusedTile;                                // 0x3B8(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FFortTheaterMapData>           TheaterList;                                       // 0x3C0(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	int32                                        NumValidHexMapTiles;                               // 0x3D0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_21DC[0xAC];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortTheaterMapViewer");
		return Clss;
	}

	void HandleMarkedQuestsChanged();
};

// 0x10 (0x340 - 0x330)
// Class FortniteGame.FortThreatParticleActor
class AFortThreatParticleActor : public AActor
{
public:
	uint8                                        Pad_21DD[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortThreatParticleActor");
		return Clss;
	}

	void OnWorldReady();
	void OnThreatOverrideChanged(bool bForceThreatOn);
	void OnThreatCloudsChanged(TArray<struct FThreatLocationInfo>& ThreatLocationInfo);
	TArray<struct FThreatLocationInfo> GetThreatClouds();
};

// 0x208 (0x538 - 0x330)
// Class FortniteGame.FortThreatVisualsManager
class AFortThreatVisualsManager : public AActor
{
public:
	uint8                                        Pad_21E0[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class AThreatCloud>              CloudBlueprint;                                    // 0x338(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        CloudRadius;                                       // 0x340(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        ThreatBoxVolumeTopPadding;                         // 0x344(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        ThreatBoxVolumeBottomPadding;                      // 0x348(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bUseLocalPlayersOnlyForCloudMinimumHeight;         // 0x34C(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bHideClouds;                                       // 0x34D(0x1)(Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_21E1[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        CloudMinimumHeightAbovePlayers;                    // 0x350(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        CloudMinimumHeightAboveGround;                     // 0x354(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        CloudMinimumAltitude;                              // 0x358(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        CloudMaxVerticalDelta;                             // 0x35C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        CloudMinSpeed;                                     // 0x360(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        CloudMaxSpeed;                                     // 0x364(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        StormWindCloudRadius;                              // 0x368(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        StormWindGoalRadius;                               // 0x36C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        StormWindFalloffRadius;                            // 0x370(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        StormWindInactiveMagnitude;                        // 0x374(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        StormWindActiveMagnitude;                          // 0x378(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        StormWindDesiredDeltaBlendTime;                    // 0x37C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        StormWindDirectionAdditionalAngle;                 // 0x380(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_21E2[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FThreatLocationArray                  ThreatLocations;                                   // 0x388(0xC0)(Net, Transient, RepNotify, NativeAccessSpecifierPrivate)
	struct FStormWindArray                       StormWindArray;                                    // 0x448(0xC0)(Net, Transient, RepNotify, NativeAccessSpecifierPrivate)
	TArray<struct FVector>                       GoalActorLocations;                                // 0x508(0x10)(Net, ZeroConstructor, Transient, RepNotify, NativeAccessSpecifierPrivate)
	uint8                                        Pad_21E3[0x20];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortThreatVisualsManager");
		return Clss;
	}

	bool StormsExist();
	void SetMinimumCloudAltitude(float NewMinimumAltitude);
	void SetCloudsAreHidden(bool bHide);
	void ResetMinimumCloudAltitude();
	void OnWorldReady();
	void OnThreatCloudsChanged(TArray<struct FThreatLocationInfo>& ThreatLocationInfo);
	void OnRep_ThreatLocations();
	void OnRep_StormWinds();
	void OnRep_HideClouds();
	void OnRep_GoalActorLocations();
	void OnBeginThreatVisualsPrecursor(class AActor* SourceActor, struct FVector& EndLocation);
	TArray<struct FThreatLocationInfo> GetThreatClouds();
	class AThreatCloud* GetThreatCloud(struct FThreatLocationInfo& ThreatLocInfo);
	bool GetCloudsAreHidden();
	void BeginThreatVisualsPrecursor(class AActor* SourceActor, const struct FVector& ThreatLocation);
};

// 0xE8 (0x118 - 0x30)
// Class FortniteGame.FortTieredCollectionLayout
class UFortTieredCollectionLayout : public UDataAsset
{
public:
	uint8                                        bUseTierAsRandomSeed : 1;                          // Mask : 0x1 0x30(0x1)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bFiniteTiers : 1;                                  // Mask : 0x2 0x30(0x1)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_21E4[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        MaxNumberOfTiersAllowed;                           // 0x34(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        InitialTierUnlocked;                               // 0x38(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_21E5[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTieredNamedCollectionProgressionData SpawnWaveProgressions;                             // 0x40(0x18)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FDifficultyCollectionProgressionData  DifficultyProgressions;                            // 0x58(0x18)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FTieredNamedCollectionProgressionData ModifierProgressions;                              // 0x70(0x18)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FRewardBadgesCollectionProgressionData RewardBadgesProgression;                           // 0x88(0x18)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FCollectionLootSetData                LootSetProgression;                                // 0xA0(0x18)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	class FText                                  CollectionLayoutDisplayName;                       // 0xB8(0x18)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UFortTieredCollectionLayout> PrerequisiteLayout;                                // 0xD0(0x28)(Edit, DisableEditOnInstance, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FCurveTableRowHandle                  TierToMissionPointLookupTable;                     // 0xF8(0x10)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGuid                                 LayoutGUID;                                        // 0x108(0x10)(Edit, ZeroConstructor, EditConst, DuplicateTransient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortTieredCollectionLayout");
		return Clss;
	}

	bool ShouldUseTierAsRandomSeed();
	int32 GetMissionPointsForTier(int32 Tier);
	class FText GetCollectionLayoutDisplayName();
};

// 0x10 (0x40 - 0x30)
// Class FortniteGame.FortTimeOfDayCollection
class UFortTimeOfDayCollection : public UDataAsset
{
public:
	TArray<TSoftClassPtr<class AFortTimeOfDayManager>> TimeOfDayManagers;                                 // 0x30(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, UObjectWrapper, NativeAccessSpecifierProtected)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortTimeOfDayCollection");
		return Clss;
	}

};

// 0x10 (0x40 - 0x30)
// Class FortniteGame.FortTimeOfDayData
class UFortTimeOfDayData : public UPrimaryDataAsset
{
public:
	TArray<struct FWorldAmbientPropertiesMatchingGameContext> WorldAmbientPropertiesList;                        // 0x30(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortTimeOfDayData");
		return Clss;
	}

};

// 0x8E0 (0xC10 - 0x330)
// Class FortniteGame.FortTimeOfDayManager
class AFortTimeOfDayManager : public AInfo
{
public:
	uint8                                        Pad_21E9[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        TimeOfDay;                                         // 0x338(0x4)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        TimeOfDayReplicated;                               // 0x33C(0x4)(Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EFortDayPhase                     CurrentDayNightPhase;                              // 0x340(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EFortDayPhase                     TransitionFromPhase;                               // 0x341(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EFortDayPhase                     TransitionToPhase;                                 // 0x342(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_21EA[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        TransitionBlendPercent;                            // 0x344(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DefaultTimeOfDaySpeed;                             // 0x348(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        StartTimeOfDayInGame;                              // 0x34C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        TimeOfDaySpeed;                                    // 0x350(0x4)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MaxTimeOfDayAccumulationFactor;                    // 0x354(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        TimeOfDayAccumulator;                              // 0x358(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_21EB[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UMaterialInterface*                    BasePostProcessMaterial;                           // 0x360(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bBasePostProcessMaterialDisabledInBROnly : 1;      // Mask : 0x1 0x368(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_21EC[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UMaterialInstanceDynamic*              PostProcessMaterialMID;                            // 0x370(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint32                                       bHasClonedPPVs;                                    // 0x378(0x4)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bSkipNight : 1;                                    // Mask : 0x1 0x37C(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bTimeStarted : 1;                                  // Mask : 0x2 0x37C(0x1)(Net, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bHeightFogEnabled : 1;                             // Mask : 0x4 0x37C(0x1)(Net, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bBaseHeightFogOnAltitude : 1;                      // Mask : 0x8 0x37C(0x1)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_21ED[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        HeightFogZOffset;                                  // 0x380(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_21EE[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FCameraAltitudeAdjustments>    AltitudeAdjustments;                               // 0x388(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FRotator                              SunriseDirectionalLightRotation;                   // 0x398(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FRotator                              SunsetDirectionalLightRotation;                    // 0x3A4(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FQuat                                 DirectionalLightQuat;                              // 0x3B0(0x10)(BlueprintVisible, BlueprintReadOnly, Transient, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_21EF[0x14];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FRotator                              SunriseSunObjectRotation;                          // 0x3D4(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FRotator                              SunsetSunObjectRotation;                           // 0x3E0(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	float                                        SunObjectDivergencePower;                          // 0x3EC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DistanceToSunOrMoon;                               // 0x3F0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_21F0[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UDirectionalLightComponent*            DirectionalLightComponent;                         // 0x3F8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UExponentialHeightFogComponent*        ActiveHeightFogComponent;                          // 0x400(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UFortDayPhaseChangeParams*             DayPhaseChangeEventParams;                         // 0x408(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FDayPhaseInfo                         LightAndFogPhaseSettings;                          // 0x410(0x178)(Edit, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_21F1[0x468];                                   // Fixing Size After Last Property  [ Dumper-7 ]
	class UFortDayPhaseInfoOverride*             LightAndFogPhaseSettingOverrides;                  // 0x9F0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_21F2[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bBlendingInLightAndFogOverrides;                   // 0xA10(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bBlendingOutLightAndFogOverrides;                  // 0xA11(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_21F3[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        CurrentLightAndFogBlendValue;                      // 0xA14(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPostProcessComponent*                 MorningPostProcessComponent;                       // 0xA18(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPostProcessComponent*                 DayPostProcessComponent;                           // 0xA20(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPostProcessComponent*                 EveningPostProcessComponent;                       // 0xA28(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPostProcessComponent*                 NightPostProcessComponent;                         // 0xA30(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPostProcessComponent*                 DayPhasePostProcessComponent;                      // 0xA38(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, DuplicateTransient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_21F4[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FExponentialHeightFogValues           CurrentTimeOfDayFogValues;                         // 0xA58(0x50)(BlueprintVisible, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FLinearColor                          CurrentTimeOfDayDirectionalLightColor;             // 0xAA8(0x10)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialParameterCollection*          MaterialParameterCollection;                       // 0xAB8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               RainParticleSystemRelativeOffset;                  // 0xAC0(0xC)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_21F5[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UStaticMesh*                           SunMesh;                                           // 0xAD0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaticMesh*                           MoonMesh;                                          // 0xAD8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UMaterialInterface*>            SunMaterialOverrides;                              // 0xAE0(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TArray<class UMaterialInterface*>            MoonMaterialOverrides;                             // 0xAF0(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	float                                        SunScale;                                          // 0xB00(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MoonScale;                                         // 0xB04(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInterface*                    SkyDomeMaterial;                                   // 0xB08(0x8)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInterface*                    StarMapMaterial;                                   // 0xB10(0x8)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTexture2D*                            CloudMaskTexture;                                  // 0xB18(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bUseStormValues;                                   // 0xB20(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_21F6[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FLinearColor                          StormLightColor;                                   // 0xB24(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_21F7[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UMaterialInstance*                     StormMaterialInst;                                 // 0xB38(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FExponentialHeightFogValues           StormFogValues;                                    // 0xB40(0x50)(Edit, DisableEditOnInstance, NoDestructor, Protected, NativeAccessSpecifierProtected)
	UMulticastDelegateProperty_                  OnDayPhaseChangeEvent;                             // 0xB90(0x10)(ZeroConstructor, Transient, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	class USkyLightComponent*                    SkyLightComp;                                      // 0xBA0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UParticleSystemComponent*              RainParticleSystemComp;                            // 0xBA8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UStaticMeshComponent*                  SunOrMoonMeshComp;                                 // 0xBB0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UStaticMeshComponent*                  SkyDomeMeshComp;                                   // 0xBB8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UStaticMeshComponent*                  StarMapMeshComp;                                   // 0xBC0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UMaterialInstanceDynamic*              ActiveSkyBoxMat;                                   // 0xBC8(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UMaterialInstanceDynamic*              StarMapMID;                                        // 0xBD0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        StormStrength;                                     // 0xBD8(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_21F8[0x34];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortTimeOfDayManager");
		return Clss;
	}

	void ToggleSkipNight();
	void ToggleDebugForceStormEffects();
	void SetUseSpecificTimeOfDayEditing(bool bShouldUseSpecificTimeOfDay);
	void SetTimeOfDaySpeedFloat(float InTimeOfDaySpeed);
	void SetTimeOfDaySpeed(float TimeOfDaySpeedFactor);
	void SetTimeOfDayManagerVisibility(bool bVisible);
	void SetTimeOfDayInHours(float TimeOfDayInHours);
	void SetTimeOfDayFloat(float TimeOfDayInHours);
	void SetTimeOfDayAbsoluteSpeed(float NewTimeOfDaySpeed);
	void SetTimeOfDay(const class FString& NewTimeOfDay);
	void SetStormStrength(float NewStormStrength);
	void SetSpecificTimeOfDayInEditor(float NewTimeOfDayInEditor);
	void SetFogDirectionalInscatteringMultiplier(float NewFogDirectionalInscatteringMultiplier);
	void SetDirectionalLightColorMultiplier(float NewDirectionalLightColorMultiplier);
	void SetDayPhase(const class FString& DayPhase);
	void RemoveLightAndFogPhaseSettingOverride(enum class EFortDayPhase DayPhase, float BlendOutLength);
	void OnUpdateDirectionalLightForTimeOfDay(struct FLinearColor& AboutToApplyDirectionalLightColor);
	void OnStormStart();
	void OnStormEnd();
	void OnRep_TimeOfDayInit();
	void OnRep_TimeOfDay();
	void OnRep_HeightFogEnabled();
	void OnDayPhaseChange();
	struct FExponentialHeightFogValues MakeExponentialHeightFogValues(float FogDensity, float FogHeightFalloff, float FogMaxOpacity, float StartDistance, float DirectionalInscatteringExponent, float DirectionalInscatteringStartDistance, const struct FLinearColor& DirectionalInscatteringColor, const struct FLinearColor& FogInscatteringColor, float VolumetricFogScatteringDistribution, float VolumetricFogExtinctionScale, float VolumetricFogDistance);
	class AFortTimeOfDayManager* GetTimeOfDayManagerFromContext(class UObject* WorldContextObject);
	TArray<struct FThreatLocationInfo> GetThreatClouds();
	float GetStormStrength();
	enum class EFortDayPhase GetPreviousDayPhase();
	void FFToTimeOfDay(float FastForwardTime, float FastForwardSpeed);
	void FastForwardToTime_ByDuration(float FastForwardTimeOfDay, float FastForwardDuration, float RestoreSpeed);
	void FastForwardToTime(float FastForwardTimeOfDay, float FastForwardSpeed, float RestoreSpeed);
	void EndBlendLightAndFogPhaseSettingOverride();
	void BreakExponentialHeightFogValues(const struct FExponentialHeightFogValues& HeightFogValues, float* FogDensity, float* FogHeightFalloff, float* FogMaxOpacity, float* StartDistance, float* DirectionalInscatteringExponent, float* DirectionalInscatteringStartDistance, struct FLinearColor* DirectionalInscatteringColor, struct FLinearColor* FogInscatteringColor, float* VolumetricFogScatteringDistribution, float* VolumetricFogExtinctionScale, float* VolumetricFogDistance);
	void BlendLightAndFogPhaseSettingOverride(float Alpha);
	void AddLightAndFogPhaseSettingOverride(enum class EFortDayPhase DayPhase, TSubclassOf<class UFortDayPhaseInfoOverride> DayPhaseInfoOverride, float BlendInLength);
};

// 0x18 (0x48 - 0x30)
// Class FortniteGame.FortTips
class UFortTips : public UDataAsset
{
public:
	TArray<class FText>                          Tips;                                              // 0x30(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                         DisplayOnPlatformPC;                               // 0x40(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         DisplayOnPlatformXbox;                             // 0x41(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         DisplayOnPlatformPS4;                              // 0x42(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         DisplayOnPlatformSwitch;                           // 0x43(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         DisplayOnPlatformMobile;                           // 0x44(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_21F9[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortTips");
		return Clss;
	}

};

// 0x60 (0x90 - 0x30)
// Class FortniteGame.FortTokenToTextTable
class UFortTokenToTextTable : public UDataAsset
{
public:
	TArray<struct FFortTooltipTokenInfo>         TokenInfoList;                                     // 0x30(0x10)(Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_21FA[0x50];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortTokenToTextTable");
		return Clss;
	}

};

// 0x10 (0x40 - 0x30)
// Class FortniteGame.FortTooltipDisplayStatsList
class UFortTooltipDisplayStatsList : public UDataAsset
{
public:
	TArray<struct FFortTooltipDisplayStatsCategory> TooltipCategories;                                 // 0x30(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortTooltipDisplayStatsList");
		return Clss;
	}

};

// 0x60 (0x90 - 0x30)
// Class FortniteGame.FortTooltipDisplayStatsLookupTable
class UFortTooltipDisplayStatsLookupTable : public UDataAsset
{
public:
	TArray<struct FFortTooltipDisplayInfo>       TooltipDisplayStats;                               // 0x30(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_21FB[0x50];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortTooltipDisplayStatsLookupTable");
		return Clss;
	}

};

// 0x0 (0x28 - 0x28)
// Class FortniteGame.FortTooltipLibrary
class UFortTooltipLibrary : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortTooltipLibrary");
		return Clss;
	}

	class FText FormatAttributeBuffs(struct FFortAttributeInfo& AttributeInfo, float AdditiveBuff, float MultiplicativeBuff);
};

// 0x0 (0x28 - 0x28)
// Class FortniteGame.FortTooltipInterface
class UFortTooltipInterface : public UInterface
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortTooltipInterface");
		return Clss;
	}

	TSubclassOf<class UFortTooltip> GetTooltip();
	class UFortTooltipDisplayStatsList* GetDisplayStats();
};

// 0x60 (0x90 - 0x30)
// Class FortniteGame.FortTooltipMap
class UFortTooltipMap : public UDataAsset
{
public:
	uint8                                        Pad_21FC[0x50];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FFortTooltipMapEntry>          Mapping;                                           // 0x80(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortTooltipMap");
		return Clss;
	}

};

// 0x60 (0x90 - 0x30)
// Class FortniteGame.FortTouchInputSettings
class UFortTouchInputSettings : public UDataAsset
{
public:
	class UCurveFloat*                           LookSensitivityCurve;                              // 0x30(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                           LookVelocityScaleCurve;                            // 0x38(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                           MovementCurve;                                     // 0x40(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFortTouchAimAssistSettings           TouchAimAssist;                                    // 0x48(0x48)(Edit, NoDestructor, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortTouchInputSettings");
		return Clss;
	}

};

// 0xE8 (0x110 - 0x28)
// Class FortniteGame.FortTournamentManager
class UFortTournamentManager : public UObject
{
public:
	uint8                                        Pad_21FD[0xE8];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortTournamentManager");
		return Clss;
	}

};

// 0x0 (0x1CF0 - 0x1CF0)
// Class FortniteGame.FortTournamentPlayerControllerFrontEnd
class AFortTournamentPlayerControllerFrontEnd : public AFortPlayerControllerFrontEnd
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortTournamentPlayerControllerFrontEnd");
		return Clss;
	}

};

// 0x0 (0x28 - 0x28)
// Class FortniteGame.FortToyAbilityInterface
class UFortToyAbilityInterface : public UInterface
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortToyAbilityInterface");
		return Clss;
	}

	class AActor* NotifyAbilityToSpawnToy(struct FTransform& DesiredLocation);
	void NotifyAbilityToReleaseToy();
};

// 0x0 (0x28 - 0x28)
// Class FortniteGame.FortToyContext
class UFortToyContext : public UBlueprintContextBase
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortToyContext");
		return Clss;
	}

	void PrintToMessageFeed(class FText& MESSAGE);
	class FText PickToyOwnerNameStyle(class AFortPlayerState* Instigator);
	class FString GetFilteredPlayerName(class AFortPlayerState* Instigator);
	class FText FormatPlayerNameForDisplay(class AFortPlayerState* Subject, enum class EMessageFeedSubject SubjectType);
	bool ConditionalPrintToMessageFeed(class AFortPlayerState* Instigator, const struct FVector& MessageLocation, enum class EMessageFeedRelationshipFilter RelationshipFilter, class FText& MESSAGE);
};

// 0x0 (0x28 - 0x28)
// Class FortniteGame.FortToyInterface
class UFortToyInterface : public UInterface
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortToyInterface");
		return Clss;
	}

	void StartToyFadeOutDueToNewPlacement();
	void NotifyToyInstanceOfReuse();
	void InitializeToyPreviewInFrontend();
	void InitializeToyInstance(class AFortPlayerController* OwningPC, int32 NumTimesSummoned);
};

// 0x10 (0x340 - 0x330)
// Class FortniteGame.FortToyPreviewActor
class AFortToyPreviewActor : public AActor
{
public:
	uint8                                        Pad_2203[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortToyPreviewActor");
		return Clss;
	}

	void PreviewToy(class UAthenaToyItemDefinition* Toy);
};

// 0xB0 (0x3E8 - 0x338)
// Class FortniteGame.FortTracerBase
class AFortTracerBase : public AFortClientOnlyActor
{
public:
	class UMovementComp_Tracer*                  TracerMovementComponent;                           // 0x338(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UStaticMeshComponent*                  TracerMesh;                                        // 0x340(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UBulletWhipTrackerComponentBase*       BulletWhipTrackerComponent;                        // 0x348(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FCurveTableRowHandle                  Speed;                                             // 0x350(0x10)(Edit, BlueprintVisible, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SpeedScaleMinRange;                                // 0x360(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SpeedScaleMaxRange;                                // 0x364(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SpeedScaleMinMultiplier;                           // 0x368(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SpeedScaleMaxMultiplier;                           // 0x36C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               MeshScaleMult;                                     // 0x370(0xC)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MeshScaleTime;                                     // 0x37C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftClassPtr<class UBulletWhipTrackerComponentBase> BulletWhipTrackerComponentClass;                   // 0x380(0x28)(Edit, BlueprintVisible, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bScaleOnDeath : 1;                                 // Mask : 0x1 0x3A8(0x1)(Edit, BlueprintVisible, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bScaleSpeed : 1;                                   // Mask : 0x2 0x3A8(0x1)(Edit, BlueprintVisible, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bScaledUp : 1;                                     // Mask : 0x4 0x3A8(0x1)(Edit, DisableEditOnTemplate, Transient, EditConst, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bDead : 1;                                         // Mask : 0x8 0x3A8(0x1)(Edit, DisableEditOnTemplate, Transient, EditConst, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bOwnedByPool : 1;                                  // Mask : 0x10 0x3A8(0x1)(Edit, DisableEditOnTemplate, Transient, EditConst, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2204[0x33];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        CurrentScale;                                      // 0x3DC(0x4)(Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2205[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortTracerBase");
		return Clss;
	}

	void Init(struct FVector& Start, struct FVector& End);
};

// 0x190 (0xE68 - 0xCD8)
// Class FortniteGame.FortTrack
class AFortTrack : public ABuildingProp
{
public:
	UMulticastDelegateProperty_                  OnTrackGraphChanged;                               // 0xCD8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class FText                                  ToggleSwitchText;                                  // 0xCE8(0x18)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	float                                        ToggleInteractTime;                                // 0xD00(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_220D[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UStaticMesh*                           TrackPieceMeshesByType;                            // 0xD08(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_220E[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bUseFloorMesh;                                     // 0xD30(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_220F[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UStaticMesh*                           TrackFloorMeshesByVerticality;                     // 0xD38(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2210[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FTrackConnectorMeshConfig>     ConnectorMeshConfigs;                              // 0xD50(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class AFortTrack*                            NeighborsByDirection;                              // 0xD60(0x8)(Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2211[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        SwitchState;                                       // 0xD80(0x4)(Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        ConfigurationIdx;                                  // 0xD84(0x4)(Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FCollisionResponseContainer           FloorCollisionResponseContainer;                   // 0xD88(0x20)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	class UStaticMeshComponent*                  TrackMeshComp;                                     // 0xDA8(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaticMeshComponent*                  TrackFloorMeshComp;                                // 0xDB0(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaticMeshComponent*                  ConnectorMeshCompsByDirection;                     // 0xDB8(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2212[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UBoxComponent*                         PlacementCollision1;                               // 0xDD8(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBoxComponent*                         PlacementCollision2;                               // 0xDE0(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USplineComponent*                      SplineComp1;                                       // 0xDE8(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USplineComponent*                      SplineComp2;                                       // 0xDF0(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USceneComponent*                       SwitchCompBase;                                    // 0xDF8(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPrimitiveComponent*                   SwitchComp;                                        // 0xE00(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2213[0x60];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortTrack");
		return Clss;
	}

	void OnSwitchStateChanged(int32 NewSwitchState, int32 OldSwitchState, int32 NumSwitchStates);
	void OnRep_SwitchState();
	void OnRep_NeighborsByDirection();
	void OnRep_ConfigurationIdx();
	void OnConfigurationChanged(int32 NewConfigurationIdx, int32 OldConfigurationIdx);
	bool IsConnectedToTrackList(TArray<class AFortTrack*>& TargetTracks);
	bool IsConnectedToTrack(class AFortTrack* TargetTrack);
	void InitializeTrack(class UPrimitiveComponent* InSwitchComp);
	void GetSplineFromPositionAndOrientation(struct FVector& InLocation, struct FRotator& InRotation, class USplineComponent** OutSpline, float* OutDistanceAlongSpline, bool* OutReverseDirection);
	void GetSplineFromIncomingNeighbor(class AFortTrack* InNeighbor, class USplineComponent** OutSpline, bool* OutReverseDirection);
	float GetPathDistanceToTrack(class AFortTrack* TargetTrack, class USplineComponent* InCurrentSpline, float CurrentDistanceAlongSpline, bool InReverseDirection);
	void GetOutgoingNeighborFromSpline(class USplineComponent* InSpline, bool InReverseDirection, class AFortTrack** OutNeighbor);
};

// 0x8 (0xE70 - 0xE68)
// Class FortniteGame.FortTrack_CustomSpline
class AFortTrack_CustomSpline : public AFortTrack
{
public:
	class USplineComponent*                      CustomSplineComp;                                  // 0xE68(0x8)(Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortTrack_CustomSpline");
		return Clss;
	}

};

// 0xA0 (0x1D8 - 0x138)
// Class FortniteGame.FortTrackMovementComponent
class UFortTrackMovementComponent : public UMovementComponent
{
public:
	class AFortTrack*                            OptionalEditorPlacedTrack;                         // 0x138(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               TrackSnapExtent;                                   // 0x140(0xC)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               TurnSpeed;                                         // 0x14C(0xC)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SplineLocationOffsetZ;                             // 0x158(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DiscoverSplineFrequency;                           // 0x15C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TrackVelocity;                                     // 0x160(0x4)(Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bReverseYawWhenReversedOnSpline;                   // 0x164(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2214[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	UMulticastDelegateProperty_                  OnOutOfTrack;                                      // 0x168(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnLostTrack;                                       // 0x178(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FTrackMovement                        TrackMovement;                                     // 0x188(0x10)(Transient, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FRepTrackMovement                     ReplicatedTrackMovement;                           // 0x198(0x18)(Net, RepNotify, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	uint8                                        Pad_2215[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        ClientPredictionSpeedModifier;                     // 0x1C0(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2216[0x14];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortTrackMovementComponent");
		return Clss;
	}

	void OnRep_ReplicatedTrackMovement();
	bool IsReverseDirection();
	class AFortTrack* GetTrack();
	class USplineComponent* GetSpline();
	float GetDistanceAlongSpline();
	void FlipDirection();
};

// 0x38 (0x4C8 - 0x490)
// Class FortniteGame.FortTrackPreview
class AFortTrackPreview : public AFortDecoPreview
{
public:
	class UStaticMesh*                           TrackPieceMeshesByType;                            // 0x490(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2217[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        CellSize;                                          // 0x4B8(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2218[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UStaticMeshComponent*                  TrackMeshComp;                                     // 0x4C0(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortTrackPreview");
		return Clss;
	}

	void InitializeTrackPreview(class UStaticMeshComponent* InTrackMeshComp);
};

// 0x0 (0x28 - 0x28)
// Class FortniteGame.FortTrajectoryAbilityInterface
class UFortTrajectoryAbilityInterface : public UInterface
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortTrajectoryAbilityInterface");
		return Clss;
	}

	void UpdateTrajectory();
	class AFortProjectileTrajectory* SpawnTrajectoryIndicator(bool bSpawnOnEquip);
	void InitTrajectoryVariables();
	void GetProjectileTrajectoryPoints(TArray<struct FVector>* OutSplinePoints, TArray<struct FVector>* OutSplineTangents, struct FHitResult* OutHitResult);
	TSubclassOf<class AFortProjectileTrajectory> GetProjectileTrajectoryActor();
	void CleanupTrajectoryIndicatorOnUnequip();
};

// 0x10 (0x38 - 0x28)
// Class FortniteGame.FortTransactionalAnalyticsManager
class UFortTransactionalAnalyticsManager : public UObject
{
public:
	uint8                                        Pad_221A[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortTransactionalAnalyticsManager");
		return Clss;
	}

};

// 0x0 (0x90 - 0x90)
// Class FortniteGame.FortWeaponItemDefinitionTooltip
class UFortWeaponItemDefinitionTooltip : public UFortWorldItemDefinitionTooltip
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortWeaponItemDefinitionTooltip");
		return Clss;
	}

};

// 0x0 (0x90 - 0x90)
// Class FortniteGame.FortTrapItemDefinitionTooltip
class UFortTrapItemDefinitionTooltip : public UFortWeaponItemDefinitionTooltip
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortTrapItemDefinitionTooltip");
		return Clss;
	}

};

// 0x90 (0x120 - 0x90)
// Class FortniteGame.FortTrapTooltip
class UFortTrapTooltip : public UFortWorldItemTooltip
{
public:
	uint8                                        Pad_221B[0x90];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortTrapTooltip");
		return Clss;
	}

};

// 0x1E0 (0x210 - 0x30)
// Class FortniteGame.FortTwitchAccount
class UFortTwitchAccount : public UFortLinkedAccount
{
public:
	uint8                                        Pad_221C[0x1E0];                                   // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortTwitchAccount");
		return Clss;
	}

	void HandleQuestsUpdated();
};

// 0x0 (0x28 - 0x28)
// Class FortniteGame.FortInventorySortFunctionLibrary
class UFortInventorySortFunctionLibrary : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortInventorySortFunctionLibrary");
		return Clss;
	}

	class FText GetCriterionDisplayNameOfSortType(enum class EInventoryContentSortType SortType);
};

// 0x0 (0x28 - 0x28)
// Class FortniteGame.FortBrushSizeFunctionLibrary
class UFortBrushSizeFunctionLibrary : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortBrushSizeFunctionLibrary");
		return Clss;
	}

	enum class EFortBrushSize ShrinkBrushSize(enum class EFortBrushSize OriginalBrushSize, int32 Steps);
	enum class EFortBrushSize GrowBrushSize(enum class EFortBrushSize OriginalBrushSize, int32 Steps);
};

// 0x330 (0x360 - 0x30)
// Class FortniteGame.FortMultiSizeBrushAsset
class UFortMultiSizeBrushAsset : public UDataAsset
{
public:
	struct FFortMultiSizeBrush                   Brush;                                             // 0x30(0x330)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortMultiSizeBrushAsset");
		return Clss;
	}

};

// 0x68 (0x488 - 0x420)
// Class FortniteGame.FortUIBaseClass
class AFortUIBaseClass : public AHUD
{
public:
	uint8                                        Pad_2222[0x68];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortUIBaseClass");
		return Clss;
	}

};

// 0xA8 (0xD8 - 0x30)
// Class FortniteGame.FortUIFeedbackBank
class UFortUIFeedbackBank : public UDataAsset
{
public:
	TMap<class FName, struct FFortUIFeedback>    FeedbackEvents;                                    // 0x30(0x50)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	bool                                         bIsAthenaData;                                     // 0x80(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2223[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<class FName, struct FFortUIFeedbackBlueprintOnly> BankDefinedFeedbackEvents;                         // 0x88(0x50)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortUIFeedbackBank");
		return Clss;
	}

};

// 0x38 (0xD8 - 0xA0)
// Class FortniteGame.FortUIFriendNotification
class UFortUIFriendNotification : public UFortUINotification
{
public:
	enum class EFortUIFriendNotificationType     FriendActionType;                                  // 0xA0(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2224[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FUniqueNetIdRepl                      FriendUniqueId;                                    // 0xA8(0x28)(BlueprintVisible, BlueprintReadOnly, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2225[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortUIFriendNotification");
		return Clss;
	}

};

// 0x0 (0x28 - 0x28)
// Class FortniteGame.FortUIManagerInterface
class UFortUIManagerInterface : public UInterface
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortUIManagerInterface");
		return Clss;
	}

	void KillConfirmation();
};

// 0x98 (0x3C8 - 0x330)
// Class FortniteGame.FortUIProxyActor
class AFortUIProxyActor : public AActor
{
public:
	uint8                                        Pad_2226[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UAttributeSet*>                 AttributeSets;                                     // 0x340(0x10)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	class UFortAbilitySystemComponent*           AbilitySystemComponent;                            // 0x350(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFortItemDefinition*                   ItemDef;                                           // 0x358(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FFortAttributeInitializationKey       InitializerKey;                                    // 0x360(0x10)(NoDestructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_2227[0x58];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortUIProxyActor");
		return Clss;
	}

};

// 0x338 (0x7C0 - 0x488)
// Class FortniteGame.FortUIZone
class AFortUIZone : public AFortUIBaseClass
{
public:
	struct FFontRenderInfo                       TextRenderInfo;                                    // 0x488(0x28)(NoDestructor, NativeAccessSpecifierPublic)
	class UReporterGraph*                        CombatGraph;                                       // 0x4B0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UReporterGraph*                        FactorGraph;                                       // 0x4B8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UReporterGraph*                        IntensityGraph;                                    // 0x4C0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UReporterGraph*                        PIDValuesGraph;                                    // 0x4C8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UReporterGraph*                        PIDContributionsGraph;                             // 0x4D0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UReporterGraph*                        UtilitiesGraph;                                    // 0x4D8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2228[0x28];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	enum class EFortContextualReticleTypes       CurrentContextualReticleIconType;                  // 0x508(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2229[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FColor                                CurrentContextualReticleColor;                     // 0x50C(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UTexture2D>             ContextualReticleIcons;                            // 0x510(0x28)(Transient, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_222A[0x118];                                   // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftObjectPtr<class USlateBrushAsset>       ActorCanvasArrowBrush;                             // 0x650(0x28)(Transient, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_222B[0x130];                                   // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UFortSpottedActorIndicator*>    SpottedActorIndicators;                            // 0x7A8(0x10)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_222C[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortUIZone");
		return Clss;
	}

	void ToggleTargetInfoSensing();
	void ToggleTargetInfoPaths();
	void ToggleTargetInfoLock(bool bTraceComplex);
	void ToggleTargetInfoAI();
	void ToggleTargetInfo();
	class FName GetCurrentCursorModeAction();
};

// 0x8 (0x7C8 - 0x7C0)
// Class FortniteGame.FortUIPvP
class AFortUIPvP : public AFortUIZone
{
public:
	uint8                                        Pad_222D[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortUIPvP");
		return Clss;
	}

};

// 0x0 (0x7C8 - 0x7C8)
// Class FortniteGame.FortUIPvPBaseDestruction
class AFortUIPvPBaseDestruction : public AFortUIPvP
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortUIPvPBaseDestruction");
		return Clss;
	}

};

// 0x1E8 (0x210 - 0x28)
// Class FortniteGame.FortUITeamInfo
class UFortUITeamInfo : public UObject
{
public:
	uint8                                        Pad_222F[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	UMulticastDelegateProperty_                  OnTeamMemberFinishedSynchronizing;                 // 0x30(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnTeamMemberAdded;                                 // 0x40(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnTeamMemberRemoved;                               // 0x50(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnTeamMemberStateChanged;                          // 0x60(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnTeamMemberPromoted;                              // 0x70(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnTeamHitPointFractionsChanged;                    // 0x80(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_2230[0xA0];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UFortPartyContext*                     TeamContext;                                       // 0x130(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	enum class EFortTeam                         TeamAssignment;                                    // 0x138(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2231[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UEnum*                                 FortTeamUEnum;                                     // 0x140(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        TotalFilledSlots;                                  // 0x148(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        PreviousFilledSlots;                               // 0x14C(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2232[0xC0];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortUITeamInfo");
		return Clss;
	}

	void OnTeamMemberStateChangedDelegate__DelegateSignature(const struct FFortTeamMemberInfo& TeamMemberInfo);
	void OnTeamMemberSimpleDelegate__DelegateSignature();
	void OnTeamMemberRemovedDelegate__DelegateSignature(int32 PlayerIndex);
	void OnTeamMemberFinishedSynchronizingDelegate__DelegateSignature(const struct FUniqueNetIdRepl& NewTeamMemberId);
	void OnTeamMemberAddedDelegate__DelegateSignature(const struct FFortTeamMemberInfo& NewTeamMemberInfo);
	void OnTeamHitPointFractionsChanged__DelegateSignature(TArray<float>& HealthFractions, TArray<float>& ShieldFractions);
	bool IsTeamMemberSynchronizing(struct FUniqueNetIdRepl& PlayerID);
	void GetTeamMembers(TArray<struct FFortTeamMemberInfo>* TeamMembers);
	void GetTeamMemberIDs(TArray<struct FUniqueNetIdRepl>* TeamMemberIDs);
	void GetTeamHitPointFractions(TArray<float>* HealthFractions, TArray<float>* ShieldFractions);
};

// 0x8 (0x120 - 0x118)
// Class FortniteGame.FortUpdateManager
class UFortUpdateManager : public UUpdateManager
{
public:
	uint8                                        Pad_2233[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortUpdateManager");
		return Clss;
	}

};

// 0x38 (0x68 - 0x30)
// Class FortniteGame.FortAsyncAction_CheckForUpdate
class UFortAsyncAction_CheckForUpdate : public UBlueprintAsyncActionBase
{
public:
	UMulticastDelegateProperty_                  OnUpToDate;                                        // 0x30(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnUpdateRequired;                                  // 0x40(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UObject*                               WorldContextObject;                                // 0x50(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bShowDialogOnFailure;                              // 0x58(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2235[0xF];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAsyncAction_CheckForUpdate");
		return Clss;
	}

	class UFortAsyncAction_CheckForUpdate* CheckForUpdate(class UObject* InWorldContextObject, bool InShowDialogOnFailure);
};

// 0x670 (0x9A0 - 0x330)
// Class FortniteGame.FortWorldManager
class AFortWorldManager : public AInfo
{
public:
	uint8                                        Pad_2236[0x60];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FFortLevelStreamingInfo>       StreamedLevels;                                    // 0x390(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<struct FFortPlacementLocationTagHandler> PlacementLocationTagHandlers;                      // 0x3A0(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	uint8                                        bSavingEnabled : 1;                                // Mask : 0x1 0x3B0(0x1)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2237[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	uint32                                       SaveFrequency_Seconds;                             // 0x3B4(0x4)(ZeroConstructor, Transient, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        bStreamInBuildings : 1;                            // Mask : 0x1 0x3B8(0x1)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        bConstructTileWorld : 1;                           // Mask : 0x2 0x3B8(0x1)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        bUseSimMaps : 1;                                   // Mask : 0x4 0x3B8(0x1)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2238[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        NumNonAutoconstructedTiles;                        // 0x3BC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FDataTableRowHandle                   GameDifficultyRowPIEOverride;                      // 0x3C0(0x10)(Edit, NoDestructor, NativeAccessSpecifierPrivate)
	TSubclassOf<class UFortZoneTheme>            ZoneThemeForPIE;                                   // 0x3D0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FFortWindIntensityAndDirection        InitialGlobalWind;                                 // 0x3D8(0x8)(Net, Transient, RepNotify, NoDestructor, NativeAccessSpecifierPrivate)
	enum class EFortWorldManagerState            WorldManagerState;                                 // 0x3E0(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2239[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UWorldTileManager*                     TileManager;                                       // 0x3E8(0x8)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        X_Size;                                            // 0x3F0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        Y_Size;                                            // 0x3F4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        Z_StructuralGrid_Size;                             // 0x3F8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        VerticalCellNumOffsetFromOrigin;                   // 0x3FC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        TileEdgeSize;                                      // 0x400(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_223A[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UWorldTheme*                           Theme;                                             // 0x408(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  DefaultLootQuotaCategory;                          // 0x410(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FFortTileLootData                     LootData;                                          // 0x418(0x318)(NativeAccessSpecifierPrivate)
	int32                                        MaxTiles;                                          // 0x730(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bUseFixedSeed;                                     // 0x734(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_223B[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        FixedSeed;                                         // 0x738(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_223C[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FWorldTileSubArray>            Y;                                                 // 0x740(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	struct FVector                               FriendlyPlayerSpawnExtent;                         // 0x750(0xC)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FVector                               PadPlayerSpawnExtent;                              // 0x75C(0xC)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        DangerPlayerSpawnExclusionRadius;                  // 0x768(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        ObjectivePlayerSpawnExclusionRadius;               // 0x76C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGameplayTagContainer                 OverrideInitialPlayerSpawnTags;                    // 0x770(0x20)(Edit, NativeAccessSpecifierPrivate)
	struct FGameplayTagContainer                 OverrideBackupPlayerSpawnTags;                     // 0x790(0x20)(Edit, NativeAccessSpecifierPrivate)
	struct FFortStartingMissionInfo              StartingMissionInfo;                               // 0x7B0(0x18)(Edit, NativeAccessSpecifierPrivate)
	class UFortWorldRecord*                      CurrentWorldRecord;                                // 0x7C8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UFortZoneRecord*                       CurrentZoneRecord;                                 // 0x7D0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_223D[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UFortUserCloudHelperComponent*         CloudHelper;                                       // 0x7F8(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        CurrentZoneIndex;                                  // 0x800(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bHasCreatedMissions;                               // 0x804(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bHasCreatedPrimaryAdditionalFoundations;           // 0x805(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bHasSpawnedActorsForMissions;                      // 0x806(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bZoneCompleted;                                    // 0x807(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bZoneFinished;                                     // 0x808(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bCreatedMissionRecord;                             // 0x809(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_223E[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FFortMissionManagerRecord             MissionManagerRecord;                              // 0x810(0x38)(Transient, NativeAccessSpecifierPrivate)
	TArray<struct FFortMissionEntry>             ReactiveMissionsToAdd;                             // 0x848(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	TArray<struct FFortDeferredNewActorData>     DeferredActors;                                    // 0x858(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	uint8                                        Pad_223F[0x110];                                   // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        FinalNumChosenBuildingFoundations;                 // 0x978(0x4)(Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2240[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class ABuildingFoundation*>           ChosenBuildingFoundations;                         // 0x980(0x10)(Net, ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	TArray<struct FFortPlayerEarnedItemCaches>   UnsavedPlayerEarnedItemCaches;                     // 0x990(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortWorldManager");
		return Clss;
	}

	void OnRep_InitialGlobalWind();
};

// 0x80 (0x178 - 0xF8)
// Class FortniteGame.FortUserCloudHelperComponent
class UFortUserCloudHelperComponent : public UActorComponent
{
public:
	uint64                                       LastIssuedRequestHandle;                           // 0xF8(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2241[0x78];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortUserCloudHelperComponent");
		return Clss;
	}

};

// 0x0 (0x28 - 0x28)
// Class FortniteGame.FortValidationInterface
class UFortValidationInterface : public UInterface
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortValidationInterface");
		return Clss;
	}

};

// 0x30 (0x390 - 0x360)
// Class FortniteGame.FortVariantTokenType
class UFortVariantTokenType : public UFortAccountItemDefinition
{
public:
	enum class EItemProfileType                  ProfileType;                                       // 0x360(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2242[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UFortItemDefinition*                   Cosmetic_item;                                     // 0x368(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTag                          VariantChanelTag;                                  // 0x370(0x8)(Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTag                          VariantNameTag;                                    // 0x378(0x8)(Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bAutoEquipVariant;                                 // 0x380(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bMarkItemUnseen;                                   // 0x381(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bCreateGiftbox;                                    // 0x382(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2243[0xD];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortVariantTokenType");
		return Clss;
	}

	struct FGameplayTag GetVariantNameTag();
	struct FGameplayTag GetVariantChannelTag();
	class UFortItemDefinition* GetCosmeticItem();
};

// 0x40 (0x440 - 0x400)
// Class FortniteGame.FortVehicleAnimInstance_Jackal
class UFortVehicleAnimInstance_Jackal : public UFortVehicleAnimInstance
{
public:
	//class AFortAthenaJackalVehicle*            JackalVehicle;                                     // 0x3F8(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsSprinting;                                      // 0x400(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortCardinalDirection            LocomotionCardinalDirection;                       // 0x401(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2244[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        RunForwardAlpha;                                   // 0x404(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LeanYaw;                                           // 0x408(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CombatLeanYaw;                                     // 0x40C(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bPlayJumpTrickVertical;                            // 0x410(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bPlayJumpTrick;                                    // 0x411(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsMoving;                                         // 0x412(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bInAir;                                            // 0x413(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsVehicleJumping;                                 // 0x414(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsBoosting;                                       // 0x415(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsOnSlope;                                        // 0x416(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bPlayMovingFast;                                   // 0x417(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bPlayDriveSouth;                                   // 0x418(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bPlayAdditiveLeans;                                // 0x419(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIdleToMovementStartTransition;                    // 0x41A(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bMovementLoopToMovementStopTransition;             // 0x41B(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bLocomotionPoseToJumpTransition;                   // 0x41C(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bJumpToLocomotionPoseTransition;                   // 0x41D(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIdleToMovementLoopTransition;                     // 0x41E(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bMovementLoopToPivotTransition;                    // 0x41F(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bMovementLoopToIdleTransition;                     // 0x420(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDefaultToJumpCombatStartTransition;               // 0x421(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bJumpApexToJumpFallTransition;                     // 0x422(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDefaultToJumpStartTransition;                     // 0x423(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bCombatModeToSprintModeTransition;                 // 0x424(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bSprintModeToCombatModeTransition;                 // 0x425(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsPlayingEmoteOnHoverboard;                       // 0x426(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShouldApplyAdditive;                              // 0x427(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsBothLegFK;                                      // 0x428(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2245[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        InPlaceLeansBlendSpaceAlpha;                       // 0x42C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CombatLeanYawMultiplier;                           // 0x430(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SlopeCheckPitchThresholdDegrees;                   // 0x434(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SlopeCheckYawThresholdDegrees;                     // 0x438(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AdditiveLeansSpeedThreshold;                       // 0x43C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortVehicleAnimInstance_Jackal");
		return Clss;
	}

};

// 0xA0 (0x790 - 0x6F0)
// Class FortniteGame.FortVehicleAudioVoice
class UFortVehicleAudioVoice : public UAudioComponent
{
public:
	//class USoundBase*                          LoopingSound;                                      // 0x6E8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bFadeWhenOwnerDestroyed;                           // 0x6F0(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2246[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        FadeTimeWhenOwnerDestroyed;                        // 0x6F4(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FFortVehicleAudioOneshotGate>  OneshotGates;                                      // 0x6F8(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	float                                        OneShotGateInterpSpeed;                            // 0x708(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2247[0x14];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FFortVehicleAudioParam                VolumeParam;                                       // 0x720(0x20)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FFortVehicleAudioParam                PitchParam;                                        // 0x740(0x20)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	TArray<struct FFortVehicleAudioFloatParam>   FloatParams;                                       // 0x760(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<struct FFortVehicleAudioFloatParam>   ExplicitFloatParams;                               // 0x770(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FVector2D                             ParamRange;                                        // 0x780(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2248[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortVehicleAudioVoice");
		return Clss;
	}

	void StopAllAudio();
	void SetParamRange(float Min, float Max);
	void SetParamExplicit(class FName Name, float Param);
	void SetParam(float Param);
};

// 0x20 (0x290 - 0x270)
// Class FortniteGame.FortVehicleDynAnimInstance
class UFortVehicleDynAnimInstance : public UAnimInstance
{
public:
	//class AFortAthenaSKVehicle*                Vehicle;                                           // 0x268(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AFortAthenaAntelopeVehicle*            Quad;                                              // 0x270(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                              CurrentDriveJiggle;                                // 0x278(0xC)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	float                                        Speed;                                             // 0x284(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SpeedABS;                                          // 0x288(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsBoosting;                                       // 0x28C(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2249[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortVehicleDynAnimInstance");
		return Clss;
	}

};

// 0x50 (0x2E0 - 0x290)
// Class FortniteGame.FortVehicleDynAnimInstance_Ferret
class UFortVehicleDynAnimInstance_Ferret : public UFortVehicleDynAnimInstance
{
public:
	class AFortAthenaFerretVehicle*              FerretVehicle;                                     // 0x290(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                              BobbleHeadJiggle;                                  // 0x298(0xC)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FRotator                              PaperJiggle;                                       // 0x2A4(0xC)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FRotator                              CurrentDriveJiggleRandom;                          // 0x2B0(0xC)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FRotator                              CurrentDriveJiggleRandom2;                         // 0x2BC(0xC)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FRotator                              WingRotations;                                     // 0x2C8(0xC)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	float                                        WingJiggleAlpha;                                   // 0x2D4(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_224A[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortVehicleDynAnimInstance_Ferret");
		return Clss;
	}

};

// 0x20 (0x350 - 0x330)
// Class FortniteGame.FortVehicleManager
class AFortVehicleManager : public AActor
{
public:
	uint8                                        Pad_224B[0x20];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortVehicleManager");
		return Clss;
	}

};

// 0xF0 (0x120 - 0x30)
// Class FortniteGame.FortVehicleMovementSet
class UFortVehicleMovementSet : public UFortAttributeSet
{
public:
	struct FFortGameplayAttributeData            FrontLateralFrictionScale;                         // 0x30(0x28)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            RearLateralFrictionScale;                          // 0x58(0x28)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            BrakeForceTractionScale;                           // 0x80(0x28)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            ForwardForceTractionScale;                         // 0xA8(0x28)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            SlopeAntigravityScale;                             // 0xD0(0x28)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            TopSpeedScale;                                     // 0xF8(0x28)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortVehicleMovementSet");
		return Clss;
	}

};

// 0x10 (0xC00 - 0xBF0)
// Class FortniteGame.FortVehicleSkelMeshComponent
class UFortVehicleSkelMeshComponent : public USkeletalMeshComponentBudgeted
{
public:
	uint8                                        Pad_224C[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortVehicleSkelMeshComponent");
		return Clss;
	}

};

// 0x0 (0x28 - 0x28)
// Class FortniteGame.VehicleTeleportPortal
class UVehicleTeleportPortal : public UInterface
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("VehicleTeleportPortal");
		return Clss;
	}

	void NotifyTeleportedVehicle(class AFortAthenaVehicle* Vehicle);
};

// 0x70 (0xA0 - 0x30)
// Class FortniteGame.FortVehicleTrickSet
class UFortVehicleTrickSet : public UPrimaryDataAsset
{
public:
	struct FDataTableRowHandle                   Basics;                                            // 0x30(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	TArray<struct FFortVehicleIncrementTrick>    RollTricks;                                        // 0x40(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<struct FFortVehicleIncrementTrick>    ReverseRollTricks;                                 // 0x50(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<struct FFortVehicleIncrementTrick>    YawTricks;                                         // 0x60(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<struct FFortVehicleIncrementTrick>    ReverseYawTricks;                                  // 0x70(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<struct FFortVehicleIncrementTrick>    PitchTricks;                                       // 0x80(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<struct FFortVehicleIncrementTrick>    ReversePitchTricks;                                // 0x90(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortVehicleTrickSet");
		return Clss;
	}

};

// 0xD8 (0x408 - 0x330)
// Class FortniteGame.FortVisibilityManager
class AFortVisibilityManager : public AActor
{
public:
	uint8                                        Pad_224D[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVisibiltyInfoArray                   VisibilityInfoArray;                               // 0x340(0xC0)(Net, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_224E[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortVisibilityManager");
		return Clss;
	}

};

// 0x338 (0xAC8 - 0x790)
// Class FortniteGame.FortVolume
class AFortVolume : public ABuildingGameplayActor
{
public:
	class UStaticMeshComponent*                  BoundsMesh;                                        // 0x790(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        VolumeDefaultExitingTimeDelay;                     // 0x798(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        ExitingTimeDelay;                                  // 0x79C(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFortPlaysetItemDefinition*            OverridePlayset;                                   // 0x7A0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bNeverAllowSaving : 1;                             // Mask : 0x1 0x7A8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bDestroyingActors : 1;                             // Mask : 0x2 0x7A8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2252[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	UMulticastDelegateProperty_                  OnFinishVolumeClear;                               // 0x7B0(0x10)(ZeroConstructor, Transient, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnActorEnterVolume;                                // 0x7C0(0x10)(ZeroConstructor, Transient, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnActorExitVolume;                                 // 0x7D0(0x10)(ZeroConstructor, Transient, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UFortPlaysetItemDefinition*            CurrentPlayset;                                    // 0x7E0(0x8)(Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2253[0x50];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVolumeActorStats                     ActorStats;                                        // 0x838(0x50)(Transient, NativeAccessSpecifierPrivate)
	UMulticastDelegateProperty_                  OnVolumePerformanceMetricsUpdatedEvent;            // 0x888(0x10)(ZeroConstructor, Transient, InstancedReference, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2254[0x40];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class AFortAthenaCreativePortal*>     LinkedPortals;                                     // 0x8D8(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2255[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	UMulticastDelegateProperty_                  OnFinishedWaitingForFiveSeconds;                   // 0x8F0(0x10)(ZeroConstructor, Transient, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2256[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class AActor*>                        DeferredDestroyActors;                             // 0x908(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2257[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	enum class EVolumeState                      VolumeState;                                       // 0x930(0x1)(Edit, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2258[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UAsyncTaskQueue*                       TaskQueue;                                         // 0x938(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2259[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FFortCreativeBudgetTracker            BudgetTracker;                                     // 0x958(0xF8)(Net, RepNotify, Protected, NativeAccessSpecifierProtected)
	struct FFortCreativeClassInstanceTracker     TransientTracker;                                  // 0xA50(0x70)(Net, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_225A[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortVolume");
		return Clss;
	}

	void UpdateSize(struct FVector& NewScale);
	void SetCurrentPlayset(class UFortPlaysetItemDefinition* NewPlayset);
	void ServerClearVolume();
	void PushAllPlayersOutsideVolume();
	void OnRep_VolumeState();
	void OnRep_CurrentPlayset();
	void OnRep_BudgetTracker();
	bool IsReady();
	bool IsReadOnly();
	bool IsPlayerAllowedInVolume(class AFortPlayerController* NewUser);
	int32 GetNumPlayersInVolume();
	class UFortPlaysetItemDefinition* GetCurrentPlayset();
	void DestroyVolume();
	void DeferredDestroy_Helper();
	void BroadcastWaitedForFiveSeconds();
	void BroadcastOnFinishClear_Internal();
	void BoundsMeshLeft(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void BoundsMeshEntered(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult);
};

// 0x1F0 (0x520 - 0x330)
// Class FortniteGame.FortVolumeManager
class AFortVolumeManager : public AInfo
{
public:
	UMulticastDelegateProperty_                  OnClientEnterVolume;                               // 0x330(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnClientExitVolume;                                // 0x340(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  PreActorEnterVolume;                               // 0x350(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  PostActorEnterVolume;                              // 0x360(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  PreActorExitVolume;                                // 0x370(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  PostActorExitVolume;                               // 0x380(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnVolumeStateChanged;                              // 0x390(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_2268[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class AFortVolume*>                   VolumeObjects;                                     // 0x3B0(0x10)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	struct FFortVolumeActiveUsers                VolumeActivePlayers;                               // 0x3C0(0xC8)(Net, NativeAccessSpecifierPrivate)
	struct FFortCreativeBudgetClientData         ClientBudgetData;                                  // 0x488(0x20)(Net, RepNotify, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2269[0x38];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UDataTable*                            BlackListClassesTable;                             // 0x4E0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UDataTable*                            BlackListObjectsTable;                             // 0x4E8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<TSoftClassPtr<class UObject>>         BlackListClasses;                                  // 0x4F0(0x10)(ZeroConstructor, Transient, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	TArray<TSoftObjectPtr<class UObject>>        BlackListObjects;                                  // 0x500(0x10)(ZeroConstructor, Transient, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	uint8                                        bInSpawningStartup : 1;                            // Mask : 0x1 0x510(0x1)(Net, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_226A[0xF];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortVolumeManager");
		return Clss;
	}

	bool WillVolumeDeleteAfterActorSpawn(class AFortVolume* Volume);
	bool VolumeContainsUser(class APlayerState* PlayerState, class AFortVolume* Volume);
	void UpdateVolumeLevelStreams();
	void TryActivateQueuedVolumes(enum class EAthenaGamePhase GamePhase);
	class AFortVolume* SpawnVolume(TSubclassOf<class AFortVolume> VolumeActor, class UFortPlaysetItemDefinition* Playset, const struct FVector& Location, const struct FRotator& Rotation);
	bool ShouldSpawnActor(class UWorld* WorldContext, TSubclassOf<class AActor> ActorClass, struct FVector& Location, struct FRotator& Rotation);
	void ResetVolumeAndLevelRecord(class AFortVolume* Volume, class AFortPlayerController* RequestingFortPC);
	void ResaveActorWithVolume(class AActor* Actor, class AFortVolume* Volume);
	void ResaveActor(class AActor* Actor);
	void OnRep_ClientBudgetData();
	void MinigameExitReadOnlyForVolume(class AFortVolume* Volume);
	void IncrementUserIslandLoading();
	void HandleVolumeStateChanged(enum class EVolumeState NewState, class AFortVolume* Volume);
	void HandleVolumeReset(class AFortVolume* VolumeResetting);
	void HandleOnActorSpawned_Internal(class AActor* Actor);
	void HandleOnActorSpawned(class AActor* Actor);
	void HandleActorHealthChanged(class AActor* Actor, float NewHealth);
	void HandleActorExitedVolume(class AActor* Actor, class AFortVolume* Volume);
	void HandleActorEnteredVolume(class AActor* Actor, class AFortVolume* Volume);
	void HandleActorEndPlay(class AActor* Actor, enum class EEndPlayReason EndPlayReason);
	bool GetVolumesForLocation(const struct FVector& Location, TArray<class AFortVolume*>* Volumes);
	bool GetVolumesForActor(class AActor* Actor, TArray<class AFortVolume*>* Volumes);
	void GetVolumeManager(class UObject* WorldContextObject, class AFortVolumeManager** OutVolumeManager, enum class EVolumeValidityResult* OutIsValid);
	class AFortVolume* GetVolumeForPlayerState(class APlayerState* PlayerState);
	class AFortVolume* GetVolumeForLocation(const struct FVector& Location);
	class AFortVolume* GetVolumeForActor(class AActor* Actor);
	class AFortMinigame* GetMinigameForVolume(class AFortVolume* Volume);
	TArray<class APlayerState*> GetAllPlayerStatesInVolume(class AFortVolume* Volume);
	TArray<class AController*> GetAllPlayersInVolume(class AFortVolume* Volume);
	void FinishedSpawningCurrentLevelRecord(struct FAsyncTaskResult& Result);
	void EnterReadOnlyForVolume(class AFortVolume* Volume);
	void DecrementUserIslandLoading();
	bool CheckForOverlappingVolumes(class UObject* WorldContextObject, struct FVector& StartLocation, struct FRotator& PlaysetRotation, class UFortPlaysetItemDefinition* NewPlayset);
	void ApplyLevelSaveToWorld(class ULevelSaveRecord* SaveToSpawnFrom, bool bComplexShouldSpawn);
};

// 0x138 (0x240 - 0x108)
// Class FortniteGame.FortVolumeMiniMapIndicator
class UFortVolumeMiniMapIndicator : public UFortMiniMapIndicator
{
public:
	struct FSlateBrush                           PerimeterBrush;                                    // 0x108(0x88)(Transient, NativeAccessSpecifierPrivate)
	struct FSlateBrush                           OnRadarBrush;                                      // 0x190(0x88)(Transient, NativeAccessSpecifierPrivate)
	uint8                                        Pad_226B[0x28];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortVolumeMiniMapIndicator");
		return Clss;
	}

};

// 0x38 (0x368 - 0x330)
// Class FortniteGame.FortWaypointInfo
class AFortWaypointInfo : public AInfo
{
public:
	TArray<class ABuildingTrapFloor_Waypoint*>   Waypoints;                                         // 0x330(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FVector>                       SplineLocations;                                   // 0x340(0x10)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, RepNotify, NativeAccessSpecifierPublic)
	TArray<struct FPlayerWaypointContext>        ContextArray;                                      // 0x350(0x10)(Net, ZeroConstructor, NativeAccessSpecifierPublic)
	class AFortProjectileTrajectory*             Spline;                                            // 0x360(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortWaypointInfo");
		return Clss;
	}

	void OnRep_SplineLocations();
	bool IsStartingWaypoint(class ABuildingTrapFloor_Waypoint* Waypoint);
	bool IsEndingWaypoint(class ABuildingTrapFloor_Waypoint* Waypoint);
};

// 0x10 (0x108 - 0xF8)
// Class FortniteGame.FortWaypointVolumeComponent
class UFortWaypointVolumeComponent : public UActorComponent
{
public:
	TArray<class AFortWaypointInfo*>             WaypointGroups;                                    // 0xF8(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortWaypointVolumeComponent");
		return Clss;
	}

	void OnClientExitVolume(class APlayerState* InPlayerState, class AFortVolume* InVolume);
	void OnClientEnterVolume(class APlayerState* InPlayerState, class AFortVolume* InVolume);
};

// 0x20 (0x9A0 - 0x980)
// Class FortniteGame.FortWeap_BuildingToolBase
class AFortWeap_BuildingToolBase : public AFortWeapon
{
public:
	class UStaticMeshComponent*                  PencilMeshComponent;                               // 0x980(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  BlueprintPaperSocket;                              // 0x988(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  BlueprintPencilSocket;                             // 0x990(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AFortPlayerController*                 InstigatorController;                              // 0x998(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortWeap_BuildingToolBase");
		return Clss;
	}

};

// 0x100 (0xAA0 - 0x9A0)
// Class FortniteGame.FortWeap_BuildingTool
class AFortWeap_BuildingTool : public AFortWeap_BuildingToolBase
{
public:
	class UMaterialInterface*                    BlueprintPaperMaterial;                            // 0x9A0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTexture2D*                            BlueprintDiffuseTextures;                          // 0x9A8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_226E[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UTexture2D*                            BlueprintEmissiveMaskTextures;                     // 0x9C8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_226F[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UCurveFloat*                           BlueprintPaperPulseCurve;                          // 0x9E8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBuildingEditModeMetadata*             DefaultMetadata;                                   // 0x9F0(0x8)(Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInstanceDynamic*              BlueprintPaperMID;                                 // 0x9F8(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FTimeline                             BlueprintPaperPulseTimeline;                       // 0xA00(0x98)(Transient, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	enum class EFortResourceType                 LastResourceType;                                  // 0xA98(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2270[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortWeap_BuildingTool");
		return Clss;
	}

	void OnRep_DefaultMetadata(class UBuildingEditModeMetadata* OldMetadata);
	void OnBlueprintPaperPulseUpdate(float InCurveVal);
};

// 0x10 (0x9B0 - 0x9A0)
// Class FortniteGame.FortWeap_EditingTool
class AFortWeap_EditingTool : public AFortWeap_BuildingToolBase
{
public:
	class ABuildingSMActor*                      EditActor;                                         // 0x9A0(0x8)(Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bEditConfirmed;                                    // 0x9A8(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2271[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortWeap_EditingTool");
		return Clss;
	}

	void OnRep_EditActor();
};

// 0x290 (0xC10 - 0x980)
// Class FortniteGame.FortWeaponRanged
class AFortWeaponRanged : public AFortWeapon
{
public:
	UMulticastDelegateProperty_                  OnProjectileSpawned;                               // 0x980(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	TSubclassOf<class AFortTracerBase>           TracerTemplate;                                    // 0x990(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bAllowAutomaticWeaponCatchup;                      // 0x998(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2272[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        CurrentNumBullets;                                 // 0x9A0(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               ScopeTargetingMuzzleOffset;                        // 0x9A4(0xC)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               CurrentMuzzleBlockedLocation;                      // 0x9B0(0xC)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EFortAbilityTargetingSource       CurrentDamageStart;                                // 0x9BC(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2273[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FRotator                              MaxTargetingAimAdjustment;                         // 0x9C0(0xC)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	float                                        ProjectilePitchOffset;                             // 0x9CC(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bShouldDisplayAmmoCounter : 1;                     // Mask : 0x1 0x9D0(0x1)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bShouldAimFromMuzzleAtCloseRange : 1;              // Mask : 0x2 0x9D0(0x1)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bMaintainAimLocationDuringTargeting : 1;           // Mask : 0x4 0x9D0(0x1)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bUseScopeTargeting : 1;                            // Mask : 0x8 0x9D0(0x1)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bUseFirstPersonTargeting : 1;                      // Mask : 0x10 0x9D0(0x1)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bUseReducedTargetingAimAssist : 1;                 // Mask : 0x20 0x9D0(0x1)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bPersistentFireFX : 1;                             // Mask : 0x40 0x9D0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bUseBeamParticles : 1;                             // Mask : 0x80 0x9D0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bUseImpactFXForProjectiles : 1;                    // Mask : 0x1 0x9D1(0x1)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bUseImpactFXForProjectileOverlaps : 1;             // Mask : 0x2 0x9D1(0x1)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bUseImpactDecals : 1;                              // Mask : 0x4 0x9D1(0x1)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bUsePersistentBeam : 1;                            // Mask : 0x8 0x9D1(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2274[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FFortEffectDistanceQuality            BeamSignificance;                                  // 0x9D4(0x18)(Edit, DisableEditOnInstance, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FFortEffectDistanceQuality            ImpactSignificance;                                // 0x9EC(0x18)(Edit, DisableEditOnInstance, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FFortEffectDistanceQuality            DecalSignificance;                                 // 0xA04(0x18)(Edit, DisableEditOnInstance, NoDestructor, Protected, NativeAccessSpecifierProtected)
	float                                        ScopeImpactEffectDistanceOffset;                   // 0xA1C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UParticleSystem*                       BeamParticleSystem;                                // 0xA20(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  BeamSourceSocketName;                              // 0xA28(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               DecalSizeMin;                                      // 0xA30(0xC)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               DecalSizeMax;                                      // 0xA3C(0xC)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DecalLifespanMin;                                  // 0xA48(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DecalLifespanMax;                                  // 0xA4C(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLinearColor                          DecalColorStart;                                   // 0xA50(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLinearColor                          DecalColorEnd;                                     // 0xA60(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInterface*                    DecalMaterial;                                     // 0xA70(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTexture2D*                            DecalTexture;                                      // 0xA78(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<enum class EPhysicalSurface>          SurfaceAcceptingDecals;                            // 0xA80(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_2275[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        ShellReloadCounter;                                // 0xA94(0x4)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2276[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FRotator                              TargetingRotAdjustmentTotal;                       // 0xA9C(0xC)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	float                                        LastTargetingRotAdjustmentWeight;                  // 0xAA8(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2277[0x4C];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FWeightedBlendable>            ScopePostProcessMaterial;                          // 0xAF8(0x10)(Edit, BlueprintVisible, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_2278[0x68];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	uint8                                        : 2;                                               // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        bUseAthenaRecoil : 1;                              // Mask : 0x4 0xB70(0x1)(Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        bUseAthenaPerfectADSAim : 1;                       // Mask : 0x8 0xB70(0x1)(Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        bFirstShotAccuracyCheckVehicleMovement : 1;        // Mask : 0x10 0xB70(0x1)(Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2279[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        FirstShotAccuracyMinWaitTime;                      // 0xB74(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_227A[0x38];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UAnimMontage*                          FireAnimation;                                     // 0xBB0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAnimMontage*                          FireDownsightsAnimation;                           // 0xBB8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAnimMontage*                          CockingAnimation;                                  // 0xBC0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAnimMontage*                          WeaponFireMontage;                                 // 0xBC8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAnimMontage*                          WeaponFireDownsightsMontage;                       // 0xBD0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAnimMontage*                          WeaponCockingMontage;                              // 0xBD8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UParticleSystemComponent*              BeamPSC;                                           // 0xBE0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EFortWeaponOverheatState          OverheatState;                                     // 0xBE8(0x1)(Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_227B[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UAnimMontage*                          OverheatedAnimation;                               // 0xBF0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAnimMontage*                          WeaponOverheatedAnimation;                         // 0xBF8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bCooldownWhileOverheated;                          // 0xC00(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_227C[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        OverheatValue;                                     // 0xC04(0x4)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        TimeHeatWasLastAdded;                              // 0xC08(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        TimeOverheatedBegan;                               // 0xC0C(0x4)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortWeaponRanged");
		return Clss;
	}

	bool UseScopeTargeting();
	bool UseReducedAimAssist();
	bool UseFirstPersonTargeting();
	void TempHack_PlayOverheatedAnimation();
	bool ShouldSpawnBulletShellFX();
	bool ShouldDisplayAmmoCounter();
	void OnStartOverheated();
	void OnStartHeating();
	void OnStartCooling();
	void OnSpawnProjectile(class AFortProjectileBase* SpawnProjectile);
	void OnRep_OverheatState(enum class EFortWeaponOverheatState PreviousOverheatState);
	void OnLocalFailedToFireWhenOverheated();
	void OnFinishedCooling();
	bool IsUsingScopeOrFirstPersonCamera();
	bool IsUsingScope();
	bool IsUsingFirstPersonCamera();
	bool IsCachedIsProjectileWeapon();
	void InitializeBeamFX(class UParticleSystemComponent* InBeamPSC);
	float GetTimeToNextFire();
	float GetOverheatingMaxValue();
	float GetCurrentOverheatValue();
	float GetADSTransitionOutTime();
	float GetADSTransitionInTime();
	void ForceScopeFX();
	void DeactivateBeamFX();
	void AbortScopeFX();
};

// 0x68 (0xC78 - 0xC10)
// Class FortniteGame.FortWeap_WannaGun
class AFortWeap_WannaGun : public AFortWeaponRanged
{
public:
	uint8                                        Pad_227D[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               LastHitActorScale;                                 // 0xC30(0xC)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FRotator                              LastHitActorRotation;                              // 0xC3C(0xC)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPrivate)
	class UClass*                                LastHitActorClass;                                 // 0xC48(0x8)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class UBuildingTextureData>   TransparentTextureData;                            // 0xC50(0x28)(Transient, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortWeap_WannaGun");
		return Clss;
	}

	void OnRep_LastHitActorClass();
};

// 0x190 (0x1C0 - 0x30)
// Class FortniteGame.FortWeaponAnimSet
class UFortWeaponAnimSet : public UDataAsset
{
public:
	struct FFortAnimInput_PlayerAnimAsset        MaleAnimAsset;                                     // 0x30(0xC8)(Edit, NoDestructor, NativeAccessSpecifierPrivate)
	struct FFortAnimInput_PlayerAnimAsset        FemaleAnimAsset;                                   // 0xF8(0xC8)(Edit, NoDestructor, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortWeaponAnimSet");
		return Clss;
	}

};

// 0x168 (0x198 - 0x30)
// Class FortniteGame.FortWeaponAttrSet
class UFortWeaponAttrSet : public UFortAttributeSet
{
public:
	struct FFortGameplayAttributeData            WeaponChanceToNotConsumeAmmo;                      // 0x30(0x28)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            AccumulatedWeaponChanceToNotConsumeAmmo;           // 0x58(0x28)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            WeaponRateOfFire;                                  // 0x80(0x28)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            WeaponHorizontalRecoil;                            // 0xA8(0x28)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            WeaponVerticalRecoil;                              // 0xD0(0x28)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            WeaponSpreadReduction;                             // 0xF8(0x28)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            WeaponReloadSpeed;                                 // 0x120(0x28)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            WeaponAmmoClipSize;                                // 0x148(0x28)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            CharacterItemDurabilityDecayModifier;              // 0x170(0x28)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortWeaponAttrSet");
		return Clss;
	}

	void OnRep_WeaponVerticalRecoil();
	void OnRep_WeaponSpreadReduction();
	void OnRep_WeaponReloadSpeed();
	void OnRep_WeaponRateOfFire();
	void OnRep_WeaponHorizontalRecoil();
	void OnRep_WeaponChanceToNotConsumeAmmo();
	void OnRep_WeaponAmmoClipSize();
	void OnRep_CharacterItemDurabilityDecayModifier();
	void OnRep_AccumulatedWeaponChanceToNotConsumeAmmo();
};

// 0x0 (0xBA0 - 0xBA0)
// Class FortniteGame.FortWeaponMeleeItemDefinition
class UFortWeaponMeleeItemDefinition : public UFortWeaponItemDefinition
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortWeaponMeleeItemDefinition");
		return Clss;
	}

};

// 0x0 (0x90 - 0x90)
// Class FortniteGame.FortWeaponMeleeItemDefinitionTooltip
class UFortWeaponMeleeItemDefinitionTooltip : public UFortWeaponItemDefinitionTooltip
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortWeaponMeleeItemDefinitionTooltip");
		return Clss;
	}

};

// 0x58 (0xC68 - 0xC10)
// Class FortniteGame.FortWeaponRangedDual
class AFortWeaponRangedDual : public AFortWeaponRanged
{
public:
	class USkeletalMeshComponentBudgeted*        LeftHandWeaponMesh;                                // 0xC10(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                          LeftHandFireAnimation;                             // 0xC18(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                          LeftCockingAnimation;                              // 0xC20(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                          LeftHandFireDownsightsAnimation;                   // 0xC28(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                          LeftWeaponFireMontage;                             // 0xC30(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                          LeftWeaponFireDownsightsMontage;                   // 0xC38(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                          LeftWeaponCockingMontage;                          // 0xC40(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                          LeftWeaponReloadMontage;                           // 0xC48(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnHandFired;                                       // 0xC50(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_227E[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortWeaponRangedDual");
		return Clss;
	}

	enum class EDualWeaponHand GetNextFireHand();
	enum class EDualWeaponHand GetLastFireHand();
};

// 0x68 (0xCD0 - 0xC68)
// Class FortniteGame.FortWeaponRangedDualForVehicle
class AFortWeaponRangedDualForVehicle : public AFortWeaponRangedDual
{
public:
	class AFortAthenaVehicle*                    HostVehicleCached;                                 // 0xC68(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class AActor*>                        TraceIgnoreActors;                                 // 0xC70(0x10)(BlueprintVisible, ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	int32                                        HostVehicleSeatIndexCached;                        // 0xC80(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ThirdPersonDistanceCorrection;                     // 0xC84(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ThirdPersonDistanceCorrectionPawn;                 // 0xC88(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_227F[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               LeftWeaponLoc;                                     // 0xC90(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FRotator                              LeftWeaponRot;                                     // 0xC9C(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FVector                               RightWeaponLoc;                                    // 0xCA8(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FRotator                              RightWeaponRot;                                    // 0xCB4(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	float                                        MinReticleAlphaForAimInterpolation;                // 0xCC0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MinAimAngleDiffForReticleAlpha;                    // 0xCC4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MaxAimAngleDiffForReticleAlpha;                    // 0xCC8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2280[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortWeaponRangedDualForVehicle");
		return Clss;
	}

	void OnHostVehicleSetup();
};

// 0x0 (0xCD0 - 0xCD0)
// Class FortniteGame.FortWeaponRangedDualFerret
class AFortWeaponRangedDualFerret : public AFortWeaponRangedDualForVehicle
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortWeaponRangedDualFerret");
		return Clss;
	}

	class AFortAthenaFerretVehicle* GetCachedFerretVehicle();
};

// 0x0 (0xCD0 - 0xCD0)
// Class FortniteGame.FortWeaponRangedDualMountedTurret
class AFortWeaponRangedDualMountedTurret : public AFortWeaponRangedDualForVehicle
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortWeaponRangedDualMountedTurret");
		return Clss;
	}

};

// 0x50 (0xBF0 - 0xBA0)
// Class FortniteGame.FortWeaponRangedItemDefinition
class UFortWeaponRangedItemDefinition : public UFortWeaponItemDefinition
{
public:
	//TSoftClassPtr<class AFortProjectileBase>   ProjectileTemplate;                                // 0xB98(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2281[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftObjectPtr<class UParticleSystem>        BulletShellFXTemplate;                             // 0xBC0(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        bUseNativeWeaponTrace : 1;                         // Mask : 0x1 0xBE8(0x1)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        bTraceThroughPawns : 1;                            // Mask : 0x2 0xBE8(0x1)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        bTraceThroughWorld : 1;                            // Mask : 0x4 0xBE8(0x1)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        bShouldSpawnBulletShellFX : 1;                     // Mask : 0x8 0xBE8(0x1)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        bShouldUsePerfectAimWhenTargetingMinSpread : 1;    // Mask : 0x10 0xBE8(0x1)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        bDoNotAllowDoublePump : 1;                         // Mask : 0x20 0xBE8(0x1)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        bUseOnTouch : 1;                                   // Mask : 0x40 0xBE8(0x1)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        bShowReticleHitNotifyAtImpactLocation : 1;         // Mask : 0x80 0xBE8(0x1)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        bForceProjectileTooltip : 1;                       // Mask : 0x1 0xBE9(0x1)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2282[0x6];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortWeaponRangedItemDefinition");
		return Clss;
	}

	bool UseOnTouch();
	bool ShouldUsePerfectAimWhenTargetingMinSpread();
	bool ShouldUseNativeWeaponTrace();
	bool ShouldTraceThroughWorld();
	bool ShouldTraceThroughPawns();
	bool ShouldSpawnBulletShellFX();
	bool ShouldShowReticleHitNotifyAtImpactLocation();
	TSubclassOf<class AFortProjectileBase> GetProjectileTemplate();
	class UParticleSystem* GetBulletShellFXTemplate();
	bool ForceProjectileTooltip();
	bool DoNotAllowDoublePump();
};

// 0x0 (0x90 - 0x90)
// Class FortniteGame.FortWeaponRangedItemDefinitionTooltip
class UFortWeaponRangedItemDefinitionTooltip : public UFortWeaponItemDefinitionTooltip
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortWeaponRangedItemDefinitionTooltip");
		return Clss;
	}

};

// 0x88 (0x118 - 0x90)
// Class FortniteGame.FortWeaponTooltip
class UFortWeaponTooltip : public UFortWorldItemTooltip
{
public:
	class UFortWorldItem*                        CachedWeapon;                                      // 0x90(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2283[0x80];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortWeaponTooltip");
		return Clss;
	}

};

// 0x0 (0x118 - 0x118)
// Class FortniteGame.FortWeaponRangedTooltip
class UFortWeaponRangedTooltip : public UFortWeaponTooltip
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortWeaponRangedTooltip");
		return Clss;
	}

};

// 0x20 (0x4B8 - 0x498)
// Class FortniteGame.FortWeatherAugment
class AFortWeatherAugment : public AFortCarriedObject
{
public:
	struct FGameplayTagContainer                 WeatherTags;                                       // 0x498(0x20)(Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortWeatherAugment");
		return Clss;
	}

	struct FGameplayTagContainer& GetWeatherTags();
};

// 0x240 (0x570 - 0x330)
// Class FortniteGame.FortWindManager
class AFortWindManager : public AActor
{
public:
	uint8                                        Pad_228A[0xC];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bAllowWindImpulses;                                // 0x33C(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bAllowResponderAudio;                              // 0x33D(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_228B[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        SectionWidth;                                      // 0x340(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        MinimumSectionBlendTime;                           // 0x344(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class UMaterialInterface>     MaterialDefiningParametersToInterpolate;           // 0x348(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  WindVectorParameterName;                           // 0x370(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class FName>                          WindOffsetMaterialParameterNames;                  // 0x378(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	TArray<class FName>                          WindSpeedMaterialParameterNames;                   // 0x388(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	TArray<class FName>                          WindMaterialScalarParameterNamesToInterpolate;     // 0x398(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	TArray<class FName>                          WindMaterialVectorParameterNamesToInterpolate;     // 0x3A8(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	TArray<struct FFortWindImpulseRadius>        WindImpulses;                                      // 0x3B8(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	TArray<struct FFortWindImpulseCylinderDelta> WindImpulseCylinderDeltas;                         // 0x3C8(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	TArray<struct FFortWindImpulseCylinder>      WindImpulseCylinders;                              // 0x3D8(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	TArray<struct FFortWindResponder>            WindResponders;                                    // 0x3E8(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	uint8                                        Pad_228C[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<int32>                                NearbyCacheIndicesForAudio;                        // 0x400(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	TArray<int32>                                NearbyCacheIndicesForUpdates;                      // 0x410(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	int32                                        NextNearbyIndexToUpdate;                           // 0x420(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_228D[0xC];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FFortWindResponder                    ActiveAudioWindResponder;                          // 0x430(0x90)(Transient, NativeAccessSpecifierPrivate)
	TMap<class ABuildingSMActor*, class UAudioComponent*> WindActorToWindResponderAudioMap;                  // 0x4C0(0x50)(ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	class FName                                  AudioWindSpeedParameterName;                       // 0x510(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        AudioWindInterpSpeed;                              // 0x518(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        AudioWindMaxResponderDistance;                     // 0x51C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        UpdateWindMaxResponderDistance;                    // 0x520(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        ViewerMovementDistanceForRefresh;                  // 0x524(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class UAudioComponent*>               WindAudioComponentPool;                            // 0x528(0x10)(ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	uint8                                        Pad_228E[0x38];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortWindManager");
		return Clss;
	}

	bool SetWindImpulseCylinderMagnitude(struct FFortWindImpulseHandle& ImpulseHandle, float NewMagnitude, float BlendTime);
	bool SetWindImpulse(struct FFortWindImpulseHandle& ImpulseHandle, struct FFortWindImpulseRadius& WindImpulse);
	void RemoveWindParticleSystemComponent(class UParticleSystemComponent* ParticleSystemComponent);
	void RemoveWindImpulse(struct FFortWindImpulseHandle& ImpulseHandle, float BlendTime);
	void OnWorldReady();
	void OnWindImpulseCylinderDeltaComplete(struct FFortWindImpulseCylinder& WindImpulseCylinder);
	void OnWindImpulseCylinderDeath(struct FFortWindImpulseCylinder& WindImpulseCylinder);
	void OnWindImpulseCylinderCreation(struct FFortWindImpulseCylinder& WindImpulseCylinder, struct FFortWindImpulseCylinderDelta& WindImpulseCylinderDelta);
	void OnWindAudioBecameInactive(class UAudioComponent* WindAudioComp);
	void OnWindAudioBecameActive(class UAudioComponent* WindAudioComp);
	struct FFortWindImpulseRadius MakeWindImpulseRadius(struct FVector& ImpulseLocation, float ImpulseRadius, float ImpulseMagnitude, float ImpulseBlendTime);
	struct FFortWindImpulseCylinder MakeWindImpulseCylinder(struct FVector& ImpulseLocation, float ImpulseInnerRadius, float ImpulseOuterRadius, float ImpulseMagnitude, struct FVector& ImpulseDirection);
	bool HasWindImpulse(struct FFortWindImpulseHandle& WindImpulseHandle);
	class AFortWindManager* GetWindManager(class UObject* WorldContextObject);
	void GetGlobalWindIntensityAndDirection(float* WindIntensity, struct FVector* WindDirection);
	bool GetCurrentWindImpulseCylinderDelta(struct FFortWindImpulseCylinder* WindImpulseCylinder, struct FFortWindImpulseCylinderDelta* WindImpulseCylinderDelta);
	void BreakWindImpulseRadius(struct FFortWindImpulseRadius& InWindImpulseRadius, struct FVector* ImpulseLocation, float* ImpulseRadius, float* ImpulseMagnitude, float* ImpulseBlendTime);
	void BreakWindImpulseCylinderDelta(struct FFortWindImpulseCylinderDelta& WindImpulseCylinderDelta, struct FVector* WindDeltaCenter, bool* bWindImpulseInitialized, bool* bWindRipplesOutward, float* WindDeltaSectionWidth, float* WindDeltaInnerSectionRadius, float* WindDeltaOuterSectionRadius, float* WindDeltaMaximumRadius, float* WindDeltaDesiredOverallBlendTime, float* WindDeltaSectionBlendTime, float* WindDeltaSectionCurrentBlendTime, float* WindDeltaPreviousMagnitude, float* WindDeltaSectionCurrentMagnitude, float* WindDeltaDesiredMagnitude, struct FBox* WindDeltaOuterWorldBounds, struct FBox* WindDeltaInnerWorldBounds, struct FBox* WindImpulseBounds, struct FFortWindImpulseHandle* WindImpulseHandleToModify);
	void BreakWindImpulseCylinderAdvanced(struct FFortWindImpulseCylinder& WindImpulseCylinder, struct FVector* WindLocation, float* WindInnerRadius, float* WindOuterRadius, struct FVector* WindWorldDirection, float* WindMagnitude, struct FBox* WindWorldBounds, bool* bIsWindChanging, bool* bIsWindChangePending);
	void BreakWindImpulseCylinder(struct FFortWindImpulseCylinder& InWindImpulseCylinder, struct FVector* ImpulseLocation, float* ImpulseInnerRadius, float* ImpulseOuterRadius, float* ImpulseMagnitude, struct FVector* ImpulseDirection);
	void AddWindParticleSystemComponent(class UParticleSystemComponent* ParticleSystemComponent);
	struct FFortWindImpulseHandle AddWindImpulseCylinder(struct FFortWindImpulseCylinder& WindImpulseCylinder, float BlendTime);
	struct FFortWindImpulseHandle AddWindImpulse(struct FFortWindImpulseRadius& WindImpulse);
};

// 0x0 (0xC0 - 0xC0)
// Class FortniteGame.FortWorkerTooltip
class UFortWorkerTooltip : public UFortCharacterTooltip
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortWorkerTooltip");
		return Clss;
	}

};

// 0x198 (0x220 - 0x88)
// Class FortniteGame.FortWorldItem
class UFortWorldItem : public UFortItem
{
public:
	uint8                                        Pad_228F[0x48];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bIsTemporaryItem;                                  // 0xD0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bNeedsPersistentUpdate;                            // 0xD1(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bPendingPersistentDelete;                          // 0xD2(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2290[0x5];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AFortInventory*                        OwnerInventory;                                    // 0xD8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FFortItemEntry                        ItemEntry;                                         // 0xE0(0x120)(Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_2291[0x20];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortWorldItem");
		return Clss;
	}

	bool SeenInFrontend();
	void MarkItemAsSeenInFrontend();
	void GetOwnedGameplayTags(struct FGameplayTagContainer* TagContainer);
};

// 0x168 (0x238 - 0xD0)
// Class FortniteGame.FortWorldRecord
class UFortWorldRecord : public UFortGenericRecord
{
public:
	struct FFortCloudSaveInfo                    CloudInfo;                                         // 0xD0(0x18)(Transient, NativeAccessSpecifierPublic)
	int32                                        CurrentZoneIndex;                                  // 0xE8(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2292[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FFortPlayerRecord>             SavedPlayers;                                      // 0xF0(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	struct FFortZoneInstanceDetails              ZoneInstanceInfo;                                  // 0x100(0x128)(Transient, NativeAccessSpecifierPublic)
	class FString                                WUID;                                              // 0x228(0x10)(ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortWorldRecord");
		return Clss;
	}

};

// 0x480 (0x908 - 0x488)
// Class FortniteGame.FortWorldSettings
class AFortWorldSettings : public AWorldSettings
{
public:
	TArray<class AActor*>                        ActorsNeedingWorldReady;                           // 0x488(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	TArray<int32>                                WorldCells;                                        // 0x498(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	struct FVector                               WorldCellsOrigin;                                  // 0x4A8(0xC)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        WorldCellsFlags;                                   // 0x4B4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bGenerateTestLevelSaves : 1;                       // Mask : 0x1 0x4B8(0x1)(Edit, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bDisableCullDistance : 1;                          // Mask : 0x2 0x4B8(0x1)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bUseWorldSpecificCullDistanceOverride : 1;         // Mask : 0x4 0x4B8(0x1)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bPvPUseWidgetRotation : 1;                         // Mask : 0x8 0x4B8(0x1)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bOverrideMainMapSettings : 1;                      // Mask : 0x10 0x4B8(0x1)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bValidateNavGraphConnectivity : 1;                 // Mask : 0x20 0x4B8(0x1)(Edit, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bLimitNavGraphSkyCells : 1;                        // Mask : 0x40 0x4B8(0x1)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bUseProceduralFoliage : 1;                         // Mask : 0x80 0x4B8(0x1)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bUseConditionalBuildingFoundations : 1;            // Mask : 0x1 0x4B9(0x1)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bAllowBuildingStreamingData : 1;                   // Mask : 0x2 0x4B9(0x1)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bShowTimeOfDayManager : 1;                         // Mask : 0x4 0x4B9(0x1)(Edit, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2293[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        MinCullObjectSize;                                 // 0x4BC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinCullDistance;                                   // 0x4C0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxCullObjectSize;                                 // 0x4C4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxCullDistance;                                   // 0x4C8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2294[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UTexture2D*                            TeamOnePvPMiniMapImage;                            // 0x4D0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                            TeamTwoPvPMiniMapImage;                            // 0x4D8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             PvPMapWorldCenter;                                 // 0x4E0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PvPMapWorldWidth;                                  // 0x4E8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PvPMapWorldHeight;                                 // 0x4EC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MapZOffset;                                        // 0x4F0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                              MapRotation;                                       // 0x4F4(0xC)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	class UTexture2D*                            MapInitialMask;                                    // 0x500(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSlateBrush                           AthenaMapImage;                                    // 0x508(0x88)(Edit, NativeAccessSpecifierPublic)
	TArray<struct FMapLocation>                  MapLocations;                                      // 0x590(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	float                                        MapWorldScale;                                     // 0x5A0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MiniMapZoom;                                       // 0x5A4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSlateBrush                           AircraftPathBrush;                                 // 0x5A8(0x88)(Edit, NativeAccessSpecifierPublic)
	struct FSlateBrush                           AircraftMidlinePathBrush;                          // 0x630(0x88)(Edit, NativeAccessSpecifierPublic)
	struct FSlateBrush                           AircraftPathTeamIndicatorBrush;                    // 0x6B8(0x88)(Edit, NativeAccessSpecifierPublic)
	struct FSlateBrush                           SafeZoneFinalPosBrush;                             // 0x740(0x88)(Edit, NativeAccessSpecifierPublic)
	TArray<struct FIntPoint>                     NavGraphSkyCells;                                  // 0x7C8(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	class UCurveTable*                           SearchSpeedOverride;                               // 0x7D8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveTable*                           ResourceRateOverride;                              // 0x7E0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class AFortTimeOfDayManager>   WorldTimeOfDayManager;                             // 0x7E8(0x28)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftClassPtr<class AFortMusicManager>       WorldMusicManager;                                 // 0x810(0x28)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFortMusicManagerBank*                 WorldMusicManagerBank;                             // 0x838(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftClassPtr<class AFortTimeOfDayManager>   DefaultWorldTimeOfDayManager;                      // 0x840(0x28)(Config, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftClassPtr<class AFortTimeOfDayManager>   ZoneThemeTimeOfDayManager;                         // 0x868(0x28)(Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftClassPtr<class AFortTimeOfDayManager>   MissionTimeOfDayManager;                           // 0x890(0x28)(Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftClassPtr<class AFortMusicManager>       ZoneThemeMusicManager;                             // 0x8B8(0x28)(Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFortMusicManagerBank*                 ZoneThemeMusicManagerBank;                         // 0x8E0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FBuildingFoundationStreamingData> BuildingFoundationStreamingData;                   // 0x8E8(0x10)(Edit, ZeroConstructor, EditConst, Protected, NativeAccessSpecifierProtected)
	class AFortTimeOfDayManager*                 TimeOfDayManager;                                  // 0x8F8(0x8)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AFortVehicleManager*                   VehicleManager;                                    // 0x900(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortWorldSettings");
		return Clss;
	}

};

// 0x10 (0x3C8 - 0x3B8)
// Class FortniteGame.FortWrapSkeletalMeshActor
class AFortWrapSkeletalMeshActor : public ASkeletalMeshActor
{
public:
	class UAthenaItemWrapDefinition*             WrapToApply;                                       // 0x3B8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	enum class EItemWrapMaterialType             WrapMaterialType;                                  // 0x3C0(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bHasSectionLimit;                                  // 0x3C1(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2296[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        LimitWrapToMaterialIndex;                          // 0x3C4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortWrapSkeletalMeshActor");
		return Clss;
	}

	void SetWrap(class UAthenaItemWrapDefinition* NewWrap, enum class EItemWrapMaterialType MaterialType);
};

// 0x1D0 (0x2A0 - 0xD0)
// Class FortniteGame.FortZoneRecord
class UFortZoneRecord : public UFortGenericRecord
{
public:
	int32                                        WorldSaveCount;                                    // 0xD0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        ZoneIndex;                                         // 0xD4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  PersistentLevelName;                               // 0xD8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FFortLevelRecord>              SavedLevels;                                       // 0xE0(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	int32                                        NumSavedLevels;                                    // 0xF0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        ZoneTileSeed;                                      // 0xF4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2297[0x190];                                   // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FStatManagerPeriodRecord>      PlayerMapStatManagerPeriods;                       // 0x288(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	int32                                        CloudSaveItemDefContentVersion;                    // 0x298(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bNeedsFullActorSave;                               // 0x29C(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2298[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortZoneRecord");
		return Clss;
	}

};

// 0x2C0 (0x2F0 - 0x30)
// Class FortniteGame.FortZoneTheme
class UFortZoneTheme : public UPrimaryDataAsset
{
public:
	TSoftClassPtr<class AFortTheaterMapTile>     TheaterMapTileClass;                               // 0x30(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UWorld>                 ZoneToUse;                                         // 0x58(0x28)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FText                                  ZoneName;                                          // 0x80(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FText                                  ZoneDescription;                                   // 0x98(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FText                                  AbundantResources;                                 // 0xB0(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	enum class EFortZoneType                     ZoneType;                                          // 0xC8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2299[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftClassPtr<class AFortGameMode>           ZoneGameMode;                                      // 0xD0(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                 ZoneTags;                                          // 0xF8(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TSoftClassPtr<class AFortLobbyBeaconHost>    LobbyBeaconHostClass;                              // 0x118(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UFortCloudSaveItemDefinition> CloudSaveItemDefinition;                           // 0x140(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        ZoneIndex;                                         // 0x168(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        PlaylistId;                                        // 0x16C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        TeamSize;                                          // 0x170(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        TeamCount;                                         // 0x174(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaxPartySize;                                      // 0x178(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaxPlayers;                                        // 0x17C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CriticalMissionEligibilityLength;                  // 0x180(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CriticalMissionEligibilityGracePeriodLength;       // 0x184(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDeployableBaseSupportSettings        DeployableBaseSettings;                            // 0x188(0x98)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	uint8                                        IgnoreGeneratedRewards : 1;                        // Mask : 0x1 0x220(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_229A[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftClassPtr<class ABuildingSMActor>        PlayerSpawnPadClass;                               // 0x228(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                 InitialPlayerSpawnTags;                            // 0x250(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                 BackupPlayerSpawnTags;                             // 0x270(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	bool                                         bOverrideConningText;                              // 0x290(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_229B[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  ConningOverrideText;                               // 0x298(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TSoftClassPtr<class AFortMusicManager>       MusicManagerClass;                                 // 0x2B0(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFortMusicManagerBank*                 MusicManagerBank;                                  // 0x2D8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FZoneThemeDifficultyProperties> DifficultyProperties;                              // 0x2E0(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortZoneTheme");
		return Clss;
	}

};

// 0x18 (0x58 - 0x40)
// Class FortniteGame.FromFortitudeModMagnitudeCalculation
class UFromFortitudeModMagnitudeCalculation : public UFortGameplayModMagnitudeCalculation
{
public:
	uint8                                        Pad_229C[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FromFortitudeModMagnitudeCalculation");
		return Clss;
	}

};

// 0x18 (0x58 - 0x40)
// Class FortniteGame.FromOffenseModMagnitudeCalculation
class UFromOffenseModMagnitudeCalculation : public UFortGameplayModMagnitudeCalculation
{
public:
	uint8                                        Pad_229D[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FromOffenseModMagnitudeCalculation");
		return Clss;
	}

};

// 0x18 (0x58 - 0x40)
// Class FortniteGame.FromResistanceModMagnitudeCalculation
class UFromResistanceModMagnitudeCalculation : public UFortGameplayModMagnitudeCalculation
{
public:
	uint8                                        Pad_229E[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FromResistanceModMagnitudeCalculation");
		return Clss;
	}

};

// 0x18 (0x58 - 0x40)
// Class FortniteGame.FromTeamFortitudeModMagnitudeCalculation
class UFromTeamFortitudeModMagnitudeCalculation : public UFortGameplayModMagnitudeCalculation
{
public:
	uint8                                        Pad_229F[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FromTeamFortitudeModMagnitudeCalculation");
		return Clss;
	}

};

// 0x18 (0x58 - 0x40)
// Class FortniteGame.FromTeamOffenseModMagnitudeCalculation
class UFromTeamOffenseModMagnitudeCalculation : public UFortGameplayModMagnitudeCalculation
{
public:
	uint8                                        Pad_22A0[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FromTeamOffenseModMagnitudeCalculation");
		return Clss;
	}

};

// 0x18 (0x58 - 0x40)
// Class FortniteGame.FromTeamResistanceModMagnitudeCalculation
class UFromTeamResistanceModMagnitudeCalculation : public UFortGameplayModMagnitudeCalculation
{
public:
	uint8                                        Pad_22A1[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FromTeamResistanceModMagnitudeCalculation");
		return Clss;
	}

};

// 0x18 (0x58 - 0x40)
// Class FortniteGame.FromTeamTechModMagnitudeCalculation
class UFromTeamTechModMagnitudeCalculation : public UFortGameplayModMagnitudeCalculation
{
public:
	uint8                                        Pad_22A2[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FromTeamTechModMagnitudeCalculation");
		return Clss;
	}

};

// 0x18 (0x58 - 0x40)
// Class FortniteGame.FromTechModMagnitudeCalculation
class UFromTechModMagnitudeCalculation : public UFortGameplayModMagnitudeCalculation
{
public:
	uint8                                        Pad_22A3[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FromTechModMagnitudeCalculation");
		return Clss;
	}

};

// 0x90 (0x300 - 0x270)
// Class FortniteGame.FrontendAnimInstance
class UFrontendAnimInstance : public UAnimInstance
{
public:
	bool                                         bIsSkydiving;                                      // 0x270(0x1)(Edit, BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_22A4[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  SubjectName;                                       // 0x274(0x8)(Edit, BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LiveLinkAlpha;                                     // 0x27C(0x4)(Edit, BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AFortPlayerPawn*                       FortPlayerPawn;                                    // 0x280(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EFortDisplayGender                Gender;                                            // 0x288(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_22A5[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UAnimMontage*                          IntroAnimation_Female;                             // 0x290(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAnimMontage*                          IntroAnimation_Male;                               // 0x298(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAnimMontage*                          OutroAnimation_Female;                             // 0x2A0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAnimMontage*                          OutroAnimation_Male;                               // 0x2A8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAnimMontage*                          SelectedAnimation_Female;                          // 0x2B0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAnimMontage*                          SelectedAnimation_Male;                            // 0x2B8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bCanPlayCustomAnimations : 1;                      // Mask : 0x1 0x2C0(0x1)(BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_22A6[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGameplayTagAnimations                GameplayTagAnimations;                             // 0x2C8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	struct FGameplayTagAnimations                FemaleGameplayTagAnimations;                       // 0x2D8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	struct FGameplayTagAnimations                MaleGameplayTagAnimations;                         // 0x2E8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_22A7[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FrontendAnimInstance");
		return Clss;
	}

	void PlaySelected();
	void PlayOutro();
	void PlayIntro();
	void OnPlayMontageFromGameplayTagQuery(struct FGameplayTagQuery& MatchingQuery, class UAnimMontage* MontagePlaying);
};

// 0x10 (0x340 - 0x330)
// Class FortniteGame.FrontEndSettings
class AFrontEndSettings : public AActor
{
public:
	TArray<struct FCameraPair>                   Cameras;                                           // 0x330(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FrontEndSettings");
		return Clss;
	}

};

// 0x60 (0x3D8 - 0x378)
// Class FortniteGame.GameplayEffectVolume
class AGameplayEffectVolume : public APhysicsVolume
{
public:
	TSubclassOf<class UGameplayEffect>           GameplayEffect;                                    // 0x378(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        GameplayEffectLevel;                               // 0x380(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_22A8[0x54];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("GameplayEffectVolume");
		return Clss;
	}

	void RemoveGameplayEffect(class AActor* Actor);
	void ApplyGameplayEffect(class AActor* Actor);
};

// 0x0 (0x28 - 0x28)
// Class FortniteGame.GameplayMutatorObserverInterface
class UGameplayMutatorObserverInterface : public UInterface
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("GameplayMutatorObserverInterface");
		return Clss;
	}

};

// 0x10 (0x3E0 - 0x3D0)
// Class FortniteGame.HeadPartAnimInstance
class UHeadPartAnimInstance : public UCustomCharacterPartAnimInstance
{
public:
	class FName                                  SubjectName;                                       // 0x3D0(0x8)(Edit, BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LiveLinkSourceExternalAlpha;                       // 0x3D8(0x4)(Edit, BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bUseLiveLinkSourceExternal : 1;                    // Mask : 0x1 0x3DC(0x1)(Edit, BlueprintVisible, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_22A9[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("HeadPartAnimInstance");
		return Clss;
	}

};

// 0x40 (0x68 - 0x28)
// Class FortniteGame.HeartbeatManager
class UHeartbeatManager : public UObject
{
public:
	uint8                                        Pad_22AA[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bShouldTrackLocation;                              // 0x40(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_22AB[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        TrackLocationFrequencySec;                         // 0x44(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bShouldSendPerMinuteResourceAndDamageEvents;       // 0x48(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_22AC[0x1F];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("HeartbeatManager");
		return Clss;
	}

};

// 0x120 (0x2C0 - 0x1A0)
// Class FortniteGame.HoverDroneMovementComponent
class UHoverDroneMovementComponent : public USpectatorPawnMovement
{
public:
	uint8                                        Pad_22AD[0x48];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        RotAcceleration;                                   // 0x1E8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        RotDeceleration;                                   // 0x1EC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MaxPitchRotSpeed;                                  // 0x1F0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MaxYawRotSpeed;                                    // 0x1F4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        TurboRotAcceleration;                              // 0x1F8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        TurboRotDeceleration;                              // 0x1FC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        TurboMaxPitchRotSpeed;                             // 0x200(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        TurboMaxYawRotSpeed;                               // 0x204(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector2D                             TurboAccelerationRange;                            // 0x208(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector2D                             TurboAccelerationAltitudeRange;                    // 0x210(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        TurboDeceleration;                                 // 0x218(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        TurboHoverThrustScale;                             // 0x21C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        FullAirFrictionVelocity;                           // 0x220(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               CreativeModeBoundsScale;                           // 0x224(0xC)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_22AE[0x90];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("HoverDroneMovementComponent");
		return Clss;
	}

	void OnFollowedPlayerChanged(class AFortPlayerControllerSpectating* SpectatorPC, class AFortPlayerState* NewFollowedPlayer);
};

// 0x50 (0xCD8 - 0xC88)
// Class FortniteGame.KeepHeartBase
class AKeepHeartBase : public ABuildingSMActor
{
public:
	TSoftClassPtr<class AFortSaveFileBuildingInstructionsHandler> BuildingInstructionsHandlerClass;                  // 0xC88(0x28)(Edit, BlueprintVisible, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_22B2[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class AFortSaveFileBuildingInstructionsHandler* SaveFileInstructionsHandler;                       // 0xCD0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("KeepHeartBase");
		return Clss;
	}

	void SetAllowLooting(bool bAllowed);
	bool SaveUserKeep(class AFortPlayerController* FortPC);
	bool ResetUserKeep(class AFortPlayerController* FortPC);
	void LoadUserKeep(class AFortPlayerController* FortPC);
	bool IsKeepOwner(class AFortPlayerController* FortPC);
	bool IsKeepLoaded();
};

// 0x28 (0xD00 - 0xCD8)
// Class FortniteGame.KeepHeart
class AKeepHeart : public AKeepHeartBase
{
public:
	class AActor*                                DecorationRoomPlacement;                           // 0xCD8(0x8)(Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UGameplayEffect>           PermaniteHealEffect;                               // 0xCE0(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PermaniteWallWeight;                               // 0xCE8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PermaniteFloorWeight;                              // 0xCEC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PermaniteStairWeight;                              // 0xCF0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PermaniteRoofWeight;                               // 0xCF4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EKeepDefenseState                 DefenseState;                                      // 0xCF8(0x1)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_22B6[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("KeepHeart");
		return Clss;
	}

	bool UpgradeAllPermaniteStructures(class AFortPlayerController* FortPC, bool bQuickUpgrade);
	void StreamOutWorld();
	void StreamInWorld();
	void StartVote(class FText VoteText, class FText YesText, class FText NoText, float PercentageToPass, bool bSkipIfOnePlayerOnly);
	void SetPermaniteAvailability(bool bAvailable);
	void RestoreKeepHealth();
	void RestoreContainers();
	void ResetContainers();
	void OnWorldStreamedIn();
	void OnVoteComplete(bool bResult);
	void OnDefenseLevelChanged();
	void NotifyEncounterStarted(class UFortAIEncounterInfo* StartedEncounter);
	void NotifyEncounterEnded(class UFortAIEncounterInfo* EndedEncounter);
	bool IsWorldStreamingIn();
	bool IsWorldStreamedIn();
	bool IsDefenseActive();
	void HandleVoteComplete(bool bResult);
	float GetWorldStreamingInProgress();
	int32 GetUpgradeAllPermaniteCost(class AFortPlayerController* FortPC, bool bQuickUpgrade);
	int32 GetDefenseLevel();
	float GetAveragePermaniteLevel();
	bool DestroyNonPermaniteStructures();
	void DelayedVoteSuccess();
};

// 0x78 (0xE60 - 0xDE8)
// Class FortniteGame.KeepItemContainer
class AKeepItemContainer : public ABuildingContainer
{
public:
	uint8                                        Pad_22B7[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        HostUpgradeLevel;                                  // 0xDEC(0x4)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<TWeakObjectPtr<class AFortPlayerState>> SearchedBy;                                        // 0xDF0(0x10)(Net, ZeroConstructor, RepNotify, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	enum class EKeepContainerType                ContainerType;                                     // 0xE00(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bUseDefaultLootLogic;                              // 0xE01(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bResetThisWhenKeepResets;                          // 0xE02(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_22B8[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  ContainerNameKey;                                  // 0xE04(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_22B9[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UDataTable*                            ContainerDataTable;                                // 0xE10(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bShowChoiceUI;                                     // 0xE18(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_22BA[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<enum class EFortItemType>             ItemsInChoiceUI;                                   // 0xE20(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_22BB[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	enum class EFortRarity                       BestAvailableRarity;                               // 0xE40(0x1)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_22BC[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        MaxItems;                                          // 0xE44(0x4)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_22BD[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("KeepItemContainer");
		return Clss;
	}

	void RestoreLoot();
	void ResetContainer(class AFortPlayerController* FortPC);
	void OnRep_SearchedBy();
	void OnRep_HostUpgradeLevel();
	void InitializeContainer(int32 InitUpgradeLevel);
	int32 GetLootTierOverride();
	class FName GetContainerNameAndLevelKey();
};

// 0x0 (0xE60 - 0xE60)
// Class FortniteGame.KeepItemCoreContainer
class AKeepItemCoreContainer : public AKeepItemContainer
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("KeepItemCoreContainer");
		return Clss;
	}

};

// 0x0 (0x28 - 0x28)
// Class FortniteGame.LevelSaveSpawnable
class ULevelSaveSpawnable : public UInterface
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("LevelSaveSpawnable");
		return Clss;
	}

	void PreSaveBaseActorRecord();
	void PreFinishSpawning(class AFortVolume* VolumeSpawnedWithin);
	void PostLevelSaveSpawnCleanup();
	void PostFinishSpawning();
};

// 0x3B8 (0x3E0 - 0x28)
// Class FortniteGame.LevelSaveRecord
class ULevelSaveRecord : public UObject
{
public:
	class FName                                  PackageName;                                       // 0x28(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int16                                        SaveVersion;                                       // 0x30(0x2)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bCompressed;                                       // 0x32(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_22BE[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               Center;                                            // 0x34(0xC)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               HalfBoundsExtent;                                  // 0x40(0xC)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                              Rotation;                                          // 0x4C(0xC)(ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint64                                       LastBaseID;                                        // 0x58(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint64                                       LastRecordID;                                      // 0x60(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<int32, struct FBaseActorRecord>         BaseActorRecords;                                  // 0x68(0x50)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FNewActorRecord>               NewActorRecords;                                   // 0xB8(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FDeleteActorRecord>            DeleteActorRecords;                                // 0xC8(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  FinishSpawningDelegate;                            // 0xD8(0x10)(ZeroConstructor, Transient, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnFinishedWrite;                                   // 0xE8(0x10)(ZeroConstructor, Transient, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnFinishedRead;                                    // 0xF8(0x10)(ZeroConstructor, Transient, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnFinishedRecordCollapse;                          // 0x108(0x10)(ZeroConstructor, Transient, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TArray<class AActor*>                        SpawnedActors;                                     // 0x118(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	uint8                                        Pad_22BF[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class AFortVolume*                           VolumeCurrentlySpawningWithin;                     // 0x148(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAsyncTaskQueue*                       TaskQueue;                                         // 0x150(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	UMulticastDelegateProperty_                  OnFinishedRemoveInvalidDeleteRecords;              // 0x158(0x10)(ZeroConstructor, Transient, InstancedReference, NativeAccessSpecifierPrivate)
	UMulticastDelegateProperty_                  OnFinishedRemoveInvalidNewActorRecords;            // 0x168(0x10)(ZeroConstructor, Transient, InstancedReference, NativeAccessSpecifierPrivate)
	UMulticastDelegateProperty_                  OnFinishedRemoveDuplicateNewActorRecords;          // 0x178(0x10)(ZeroConstructor, Transient, InstancedReference, NativeAccessSpecifierPrivate)
	UMulticastDelegateProperty_                  OnFinishedSpawningFromRecords;                     // 0x188(0x10)(ZeroConstructor, Transient, InstancedReference, NativeAccessSpecifierPrivate)
	UMulticastDelegateProperty_                  OnFinishedPostUpdate;                              // 0x198(0x10)(ZeroConstructor, Transient, InstancedReference, NativeAccessSpecifierPrivate)
	struct FRecordBucketMap                      RecordBucketMap;                                   // 0x1A8(0x60)(Transient, NativeAccessSpecifierPrivate)
	uint8                                        Pad_22C0[0x1B8];                                   // Fixing Size After Last Property  [ Dumper-7 ]
	UMulticastDelegateProperty_                  OnFinishedSeparateModifiedActors;                  // 0x3C0(0x10)(ZeroConstructor, Transient, InstancedReference, NativeAccessSpecifierPrivate)
	UMulticastDelegateProperty_                  OnFinishedDeleteActorsForRollback;                 // 0x3D0(0x10)(ZeroConstructor, Transient, InstancedReference, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("LevelSaveRecord");
		return Clss;
	}

	void RemoveInvalidNewActorRecordsHelper(int32 StartRecordIndex);
	void RemoveInvalidDeleteRecordsHelper(int32 StartRecordIndex);
	void PostUpdateSpawnedActorsHelper(int32 StartActorIndex);
	void NotifyFinishedSpawning();
	void FindAndRemoveDuplicateRecordsUsingBucketMap(int32 StartRecordIndex);
	void FailsafeTimerExpired();
	void BroadcastPostUpdateSpawnedCompleted();
};

// 0x0 (0x330 - 0x330)
// Class FortniteGame.LevelTestingActorBase
class ALevelTestingActorBase : public AActor
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("LevelTestingActorBase");
		return Clss;
	}

};

// 0x50 (0x3D0 - 0x380)
// Class FortniteGame.LobbyBackgroundTakeoverEvent
class ULobbyBackgroundTakeoverEvent : public UFortEventItemDefinitionBase
{
public:
	//TSoftObjectPtr<class UWorld>               StwLobbyBackgroundLevelName;                       // 0x378(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_22C1[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftObjectPtr<class UWorld>                 AthenaLobbyBackgroundLevelName;                    // 0x3A0(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_22C2[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("LobbyBackgroundTakeoverEvent");
		return Clss;
	}

};

// 0x28 (0x50 - 0x28)
// Class FortniteGame.LocalServiceMessageContext
class ULocalServiceMessageContext : public UBlueprintContextBase
{
public:
	uint8                                        Pad_22C3[0x28];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("LocalServiceMessageContext");
		return Clss;
	}

	void RemoveLocalServiceMessage(const class FString& Identifier);
	void AddLocalServiceMessage(const class FString& Identifier, class FText Title, class FText Body);
};

// 0x30 (0xD08 - 0xCD8)
// Class FortniteGame.ManorHeart
class AManorHeart : public AKeepHeartBase
{
public:
	class AActor*                                KeepIconActor;                                     // 0xCD8(0x8)(Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FString>                        ContainerNamesToDestroy;                           // 0xCE0(0x10)(Edit, ZeroConstructor, DisableEditOnTemplate, NativeAccessSpecifierPublic)
	TSubclassOf<class UGameplayEffect>           InfiniteStaminaEffect;                             // 0xCF0(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_22C4[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("ManorHeart");
		return Clss;
	}

	void TravelToNewWorld(const class FString& NewTheaterId);
};

// 0x48 (0x378 - 0x330)
// Class FortniteGame.ManorPortal
class AManorPortal : public AActor
{
public:
	uint8                                        Pad_22C9[0x48];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("ManorPortal");
		return Clss;
	}

	void UnlockPortal(class AFortPlayerController* Player);
	void OpenUnlockMenu(class AFortPlayerController* Player);
	bool IsProfileValidToReadPortalAvailability(class AFortPlayerController* Player);
	bool IsPortalUnlocked(class AFortPlayerController* Player);
	int32 GetPlayerCurrencyAmount(class AFortPlayerController* Player);
	int32 GetCurrencyCost(class AFortPlayerController* Player);
	void BlueprintOnUnlockPortalComplete();
};

// 0x38 (0x60 - 0x28)
// Class FortniteGame.MatchHeartbeatManager
class UMatchHeartbeatManager : public UObject
{
public:
	class AFortGameMode*                         OwningGameMode;                                    // 0x28(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USlowStatReader*                       SlowStatReader;                                    // 0x30(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        ServerMetricsLOD;                                  // 0x38(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_22CA[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        HighFrequencyServerMetricsDurationSec;             // 0x54(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        HighFrequencyEventsLOD;                            // 0x58(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_22CB[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("MatchHeartbeatManager");
		return Clss;
	}

};

// 0x0 (0x28 - 0x28)
// Class FortniteGame.FortMissionEventParams
class UFortMissionEventParams : public UObject
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortMissionEventParams");
		return Clss;
	}

};

// 0x0 (0x28 - 0x28)
// Class FortniteGame.FortStartMissionParams
class UFortStartMissionParams : public UFortMissionEventParams
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortStartMissionParams");
		return Clss;
	}

};

// 0x18 (0x40 - 0x28)
// Class FortniteGame.FortItemCollectedParams
class UFortItemCollectedParams : public UFortMissionEventParams
{
public:
	class UFortWorldItemDefinition*              CollectedItemDefinition;                           // 0x28(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AFortPlayerController*                 CollectedBy;                                       // 0x30(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        AmountCollected;                                   // 0x38(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_22CE[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortItemCollectedParams");
		return Clss;
	}

	void SetParams(class UFortWorldItemDefinition* _CollectedItemDefinition, class AFortPlayerController* _CollectedBy, int32 _AmountCollected, class UFortItemCollectedParams** ThisParam);
	void BreakParams(class UFortWorldItemDefinition** _CollectedItemDefinition, class AFortPlayerController** _CollectedBy, int32* _AmountCollected);
};

// 0x18 (0x40 - 0x28)
// Class FortniteGame.FortItemDroppedParams
class UFortItemDroppedParams : public UFortMissionEventParams
{
public:
	class UFortWorldItemDefinition*              DroppedItemDefinition;                             // 0x28(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AFortPlayerController*                 DroppedBy;                                         // 0x30(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        AmountDropped;                                     // 0x38(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_22D1[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortItemDroppedParams");
		return Clss;
	}

	void SetParams(class UFortWorldItemDefinition* _DroppedItemDefinition, class AFortPlayerController* _DroppedBy, int32 _AmountCollected, class UFortItemDroppedParams** ThisParam);
	void BreakParams(class UFortWorldItemDefinition** _DroppedItemDefinition, class AFortPlayerController** _DroppedBy, int32* _AmountCollected);
};

// 0x18 (0x40 - 0x28)
// Class FortniteGame.FortItemCraftedParams
class UFortItemCraftedParams : public UFortMissionEventParams
{
public:
	class UFortSchematicItemDefinition*          SchematicDefinition;                               // 0x28(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AFortPlayerController*                 CraftedBy;                                         // 0x30(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        AmountCrafted;                                     // 0x38(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bItemWasQuickCrafted;                              // 0x3C(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_22D4[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortItemCraftedParams");
		return Clss;
	}

	void SetParams(class UFortSchematicItemDefinition* _SchematicDefinition, class AFortPlayerController* _CraftedBy, int32 _AmountCrafted, bool _bItemWasQuickCrafted, class UFortItemCraftedParams** ThisParam);
	void BreakParams(class UFortSchematicItemDefinition** _SchematicDefinition, class AFortPlayerController** _CraftedBy, int32* _AmountCrafted, bool* _bItemWasQuickCrafted);
};

// 0x10 (0x38 - 0x28)
// Class FortniteGame.FortEnemyKilledParams
class UFortEnemyKilledParams : public UFortMissionEventParams
{
public:
	class AFortPawn*                             KilledPawn;                                        // 0x28(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AFortPlayerController*                 KilledBy;                                          // 0x30(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortEnemyKilledParams");
		return Clss;
	}

	void SetParams(class AFortPawn* _KilledPawn, class AFortPlayerController* _KilledBy, class UFortEnemyKilledParams** ThisParam);
	void BreakParams(class AFortPawn** _KilledPawn, class AFortPlayerController** _KilledBy);
};

// 0x18 (0x40 - 0x28)
// Class FortniteGame.FortEnemyDamagedParams
class UFortEnemyDamagedParams : public UFortMissionEventParams
{
public:
	class AFortPawn*                             DamagedPawn;                                       // 0x28(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AFortPlayerController*                 DamagedBy;                                         // 0x30(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DamageAmount;                                      // 0x38(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_22D7[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortEnemyDamagedParams");
		return Clss;
	}

	void SetParams(class AFortPawn* _DamagedPawn, class AFortPlayerController* _DamagedBy, float _DamageAmount, class UFortEnemyDamagedParams** ThisParam);
	void BreakParams(class AFortPawn** _DamagedPawn, class AFortPlayerController** _DamagedBy, float* _DamageAmount);
};

// 0x8 (0x30 - 0x28)
// Class FortniteGame.FortNewPlayerParams
class UFortNewPlayerParams : public UFortMissionEventParams
{
public:
	class AFortPlayerController*                 NewPlayerController;                               // 0x28(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortNewPlayerParams");
		return Clss;
	}

	void SetParams(class AFortPlayerController* _NewPlayerController, class UFortNewPlayerParams** ThisParam);
	void BreakParams(class AFortPlayerController** _NewPlayerController);
};

// 0x28 (0x50 - 0x28)
// Class FortniteGame.FortPlayerAbandonParams
class UFortPlayerAbandonParams : public UFortMissionEventParams
{
public:
	struct FUniqueNetIdRepl                      AbandoningPlayerId;                                // 0x28(0x28)(HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortPlayerAbandonParams");
		return Clss;
	}

};

// 0x8 (0x30 - 0x28)
// Class FortniteGame.FortPlayerExitParams
class UFortPlayerExitParams : public UFortMissionEventParams
{
public:
	class AFortPlayerController*                 ExitingPlayerController;                           // 0x28(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortPlayerExitParams");
		return Clss;
	}

	void SetParams(class AFortPlayerController* _ExitingPlayerController, class UFortPlayerExitParams** ThisParam);
	void BreakParams(class AFortPlayerController** _ExitingPlayerController);
};

// 0x8 (0x30 - 0x28)
// Class FortniteGame.FortPlayerSpawnedParams
class UFortPlayerSpawnedParams : public UFortMissionEventParams
{
public:
	class AFortPlayerController*                 SpawnedPlayerController;                           // 0x28(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortPlayerSpawnedParams");
		return Clss;
	}

	void SetParams(class AFortPlayerController* _SpawnedPlayerController, class UFortPlayerSpawnedParams** ThisParam);
	void BreakParams(class AFortPlayerController** _SpawnedPlayerController);
};

// 0x18 (0x40 - 0x28)
// Class FortniteGame.FortPlayerDiedParams
class UFortPlayerDiedParams : public UFortMissionEventParams
{
public:
	class AFortPlayerPawn*                       KilledPlayer;                                      // 0x28(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AController*                           KilledPlayerController;                            // 0x30(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AController*                           KilledBy;                                          // 0x38(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortPlayerDiedParams");
		return Clss;
	}

	void SetParams(class AFortPlayerPawn* _KilledPlayer, class AController* _KilledPlayerController, class AController* _KilledBy, class UFortPlayerDiedParams** ThisParam);
	void BreakParams(class AFortPlayerPawn** _KilledPlayer, class AController** _KilledPlayerController, class AController** _KilledBy);
};

// 0x10 (0x38 - 0x28)
// Class FortniteGame.FortPlayerDBNOEnterParams
class UFortPlayerDBNOEnterParams : public UFortMissionEventParams
{
public:
	class AFortPlayerPawn*                       KilledPlayer;                                      // 0x28(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AController*                           KilledBy;                                          // 0x30(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortPlayerDBNOEnterParams");
		return Clss;
	}

	void SetParams(class AFortPlayerPawn* _KilledPlayer, class AController* _KilledBy, class UFortPlayerDBNOEnterParams** ThisParam);
	void BreakParams(class AFortPlayerPawn** _KilledPlayer, class AController** _KilledBy);
};

// 0x10 (0x38 - 0x28)
// Class FortniteGame.FortPlayerDBNORevivedParams
class UFortPlayerDBNORevivedParams : public UFortMissionEventParams
{
public:
	class AFortPlayerPawn*                       RevivedPlayer;                                     // 0x28(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AController*                           RevivedBy;                                         // 0x30(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortPlayerDBNORevivedParams");
		return Clss;
	}

	void SetParams(class AFortPlayerPawn* _RevivedPlayer, class AController* _RevivedBy, class UFortPlayerDBNORevivedParams** ThisParam);
	void BreakParams(class AFortPlayerPawn** _RevivedPlayer, class AController** _RevivedBy);
};

// 0x10 (0x38 - 0x28)
// Class FortniteGame.FortDayPhaseChangeParams
class UFortDayPhaseChangeParams : public UFortMissionEventParams
{
public:
	class AFortTimeOfDayManager*                 LightingAndFogManager;                             // 0x28(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortDayPhase                     NewDayPhase;                                       // 0x30(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_22DA[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortDayPhaseChangeParams");
		return Clss;
	}

	void SetParams(class AFortTimeOfDayManager* _LightingAndFogManager, enum class EFortDayPhase _NewDayPhase, class UFortDayPhaseChangeParams** ThisParam);
	void BreakParams(class AFortTimeOfDayManager** _LightingAndFogManager, enum class EFortDayPhase* _NewDayPhase);
};

// 0x18 (0x40 - 0x28)
// Class FortniteGame.FortPlayerBuiltParams
class UFortPlayerBuiltParams : public UFortMissionEventParams
{
public:
	class ABuildingActor*                        Building;                                          // 0x28(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortBuildingType                 BuildingType;                                      // 0x30(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_22DD[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AFortPlayerController*                 Builder;                                           // 0x38(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortPlayerBuiltParams");
		return Clss;
	}

	void SetParams(class ABuildingActor* _Building, enum class EFortBuildingType _BuildingType, class AFortPlayerController* _Builder, class UFortPlayerBuiltParams** ThisParam);
	void BreakParams(class ABuildingActor** _Building, enum class EFortBuildingType* _BuildingType, class AFortPlayerController** _Builder);
};

// 0x18 (0x40 - 0x28)
// Class FortniteGame.FortBuildingDestroyedParams
class UFortBuildingDestroyedParams : public UFortMissionEventParams
{
public:
	class ABuildingActor*                        Building;                                          // 0x28(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortBuildingType                 BuildingType;                                      // 0x30(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_22E0[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AController*                           Destroyer;                                         // 0x38(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortBuildingDestroyedParams");
		return Clss;
	}

	void SetParams(class ABuildingActor* _Building, enum class EFortBuildingType _BuildingType, class AController* _Destroyer, class UFortBuildingDestroyedParams** ThisParam);
	void BreakParams(class ABuildingActor** _Building, enum class EFortBuildingType* _BuildingType, class AController** _Destroyer);
};

// 0x20 (0x48 - 0x28)
// Class FortniteGame.FortBuildingEditedParams
class UFortBuildingEditedParams : public UFortMissionEventParams
{
public:
	class ABuildingActor*                        OriginalBuilding;                                  // 0x28(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ABuildingActor*                        NewBuilding;                                       // 0x30(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortBuildingType                 BuildingType;                                      // 0x38(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_22E3[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AFortPlayerController*                 Editor;                                            // 0x40(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortBuildingEditedParams");
		return Clss;
	}

	void SetParams(class ABuildingActor* _OriginalBuilding, class ABuildingActor* _NewBuilding, enum class EFortBuildingType _BuildingType, class AFortPlayerController* _Editor, class UFortBuildingEditedParams** ThisParam);
	void BreakParams(class ABuildingActor** _OriginalBuilding, class ABuildingActor** _NewBuilding, enum class EFortBuildingType* _BuildingType, class AFortPlayerController** _Editor);
};

// 0x20 (0x48 - 0x28)
// Class FortniteGame.FortBuildingUpgradedParams
class UFortBuildingUpgradedParams : public UFortMissionEventParams
{
public:
	class ABuildingActor*                        OriginalBuilding;                                  // 0x28(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ABuildingActor*                        NewBuilding;                                       // 0x30(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortBuildingType                 BuildingType;                                      // 0x38(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_22E6[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AFortPlayerController*                 Editor;                                            // 0x40(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortBuildingUpgradedParams");
		return Clss;
	}

	void SetParams(class ABuildingActor* _OriginalBuilding, class ABuildingActor* _NewBuilding, enum class EFortBuildingType _BuildingType, class AFortPlayerController* _Editor, class UFortBuildingUpgradedParams** ThisParam);
	void BreakParams(class ABuildingActor** _OriginalBuilding, class ABuildingActor** _NewBuilding, enum class EFortBuildingType* _BuildingType, class AFortPlayerController** _Editor);
};

// 0x20 (0x48 - 0x28)
// Class FortniteGame.FortBuildingDamagedParams
class UFortBuildingDamagedParams : public UFortMissionEventParams
{
public:
	class ABuildingActor*                        Building;                                          // 0x28(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortBuildingType                 BuildingType;                                      // 0x30(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_22EB[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AController*                           DamagedBy;                                         // 0x38(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_22EC[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortBuildingDamagedParams");
		return Clss;
	}

	void SetParams(class ABuildingActor* _Building, enum class EFortBuildingType _BuildingType, class AController* _DamagedBy, float _DamageAmount, class UFortBuildingDamagedParams** ThisParam);
	void BreakParams(class ABuildingActor** _Building, enum class EFortBuildingType* _BuildingType, class AController** _DamagedBy, float* _DamageAmount);
};

// 0x8 (0x30 - 0x28)
// Class FortniteGame.FortMissionSucceededParams
class UFortMissionSucceededParams : public UFortMissionEventParams
{
public:
	class AFortMission*                          SucceededMission;                                  // 0x28(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortMissionSucceededParams");
		return Clss;
	}

	void SetParams(class AFortMission* _SucceededMission, class UFortMissionSucceededParams** ThisParam);
	void BreakParams(class AFortMission** _SucceededMission);
};

// 0x8 (0x30 - 0x28)
// Class FortniteGame.FortMissionFailedParams
class UFortMissionFailedParams : public UFortMissionEventParams
{
public:
	class AFortMission*                          FailedMission;                                     // 0x28(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortMissionFailedParams");
		return Clss;
	}

	void SetParams(class AFortMission* _FailedMission, class UFortMissionFailedParams** ThisParam);
	void BreakParams(class AFortMission** _FailedMission);
};

// 0x8 (0x30 - 0x28)
// Class FortniteGame.FortMissionForceSuccessParams
class UFortMissionForceSuccessParams : public UFortMissionEventParams
{
public:
	float                                        FractionCompleted;                                 // 0x28(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_22EE[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortMissionForceSuccessParams");
		return Clss;
	}

	void SetParams(float _FractionCompleted, class UFortMissionForceSuccessParams** ThisParam);
	void BreakParams(float* _FractionCompleted);
};

// 0x8 (0x30 - 0x28)
// Class FortniteGame.FortMissionNeutralCompleteParams
class UFortMissionNeutralCompleteParams : public UFortMissionEventParams
{
public:
	class AFortMission*                          NeutrallyCompletedMission;                         // 0x28(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortMissionNeutralCompleteParams");
		return Clss;
	}

	void SetParams(class AFortMission* _NeutrallyCompletedMission, class UFortMissionNeutralCompleteParams** ThisParam);
	void BreakParams(class AFortMission** _NeutrallyCompletedMission);
};

// 0x8 (0x30 - 0x28)
// Class FortniteGame.FortObjectiveSucceededParams
class UFortObjectiveSucceededParams : public UFortMissionEventParams
{
public:
	class AFortObjectiveBase*                    SucceededObjective;                                // 0x28(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortObjectiveSucceededParams");
		return Clss;
	}

	void SetParams(class AFortObjectiveBase* _SucceededObjective, class UFortObjectiveSucceededParams** ThisParam);
	void BreakParams(class AFortObjectiveBase** _SucceededObjective);
};

// 0x8 (0x30 - 0x28)
// Class FortniteGame.FortObjectiveFailedParams
class UFortObjectiveFailedParams : public UFortMissionEventParams
{
public:
	class AFortObjectiveBase*                    FailedObjective;                                   // 0x28(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortObjectiveFailedParams");
		return Clss;
	}

	void SetParams(class AFortObjectiveBase* _FailedObjective, class UFortObjectiveFailedParams** ThisParam);
	void BreakParams(class AFortObjectiveBase** _FailedObjective);
};

// 0x8 (0x30 - 0x28)
// Class FortniteGame.FortObjectiveNeutralCompleteParams
class UFortObjectiveNeutralCompleteParams : public UFortMissionEventParams
{
public:
	class AFortObjectiveBase*                    NeutrallyCompletedObjective;                       // 0x28(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortObjectiveNeutralCompleteParams");
		return Clss;
	}

	void SetParams(class AFortObjectiveBase* _NeutrallyCompletedObjective, class UFortObjectiveNeutralCompleteParams** ThisParam);
	void BreakParams(class AFortObjectiveBase** _NeutrallyCompletedObjective);
};

// 0x10 (0x38 - 0x28)
// Class FortniteGame.FortToggledCursorModeParams
class UFortToggledCursorModeParams : public UFortMissionEventParams
{
public:
	class AFortPlayerController*                 PlayerThatToggledCursorMode;                       // 0x28(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bInCursorMode;                                     // 0x30(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_22F1[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortToggledCursorModeParams");
		return Clss;
	}

	void SetParams(class AFortPlayerController* _PlayerThatToggledCursorMode, bool InCursorMode, class UFortToggledCursorModeParams** ThisParam);
	void BreakParams(class AFortPlayerController** _PlayerThatToggledCursorMode, bool* InCursorMode);
};

// 0x10 (0x38 - 0x28)
// Class FortniteGame.FortToggledOptionsMenuParams
class UFortToggledOptionsMenuParams : public UFortMissionEventParams
{
public:
	class AFortPlayerController*                 PlayerThatToggledOptionsMenu;                      // 0x28(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bInOptionsMenu;                                    // 0x30(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_22F4[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortToggledOptionsMenuParams");
		return Clss;
	}

	void SetParams(class AFortPlayerController* _PlayerThatToggledOptionsMenu, bool Opened, class UFortToggledOptionsMenuParams** ThisParam);
	void BreakParams(class AFortPlayerController** _PlayerThatToggledOptionsMenu, bool* Opened);
};

// 0x18 (0x40 - 0x28)
// Class FortniteGame.FortToggledEditModeParams
class UFortToggledEditModeParams : public UFortMissionEventParams
{
public:
	class AFortPlayerController*                 PlayerThatToggledEditMode;                         // 0x28(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ABuildingSMActor*                      EditableActor;                                     // 0x30(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bInEditMode;                                       // 0x38(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_22F7[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortToggledEditModeParams");
		return Clss;
	}

	void SetParams(class AFortPlayerController* _PlayerThatToggledEditMode, class ABuildingSMActor* InEditableActor, bool InEditMode, class UFortToggledEditModeParams** ThisParam);
	void BreakParams(class AFortPlayerController** _PlayerThatToggledEditMode, class ABuildingSMActor** EditableActor, bool* InEditMode);
};

// 0x0 (0x28 - 0x28)
// Class FortniteGame.FortShutdownParams
class UFortShutdownParams : public UFortMissionEventParams
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortShutdownParams");
		return Clss;
	}

};

// 0x8 (0x30 - 0x28)
// Class FortniteGame.FortPvPVictoryParams
class UFortPvPVictoryParams : public UFortMissionEventParams
{
public:
	enum class EFortTeam                         WinningTeam;                                       // 0x28(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_22F8[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortPvPVictoryParams");
		return Clss;
	}

};

// 0x8 (0x30 - 0x28)
// Class FortniteGame.FortStartLeavingZoneParams
class UFortStartLeavingZoneParams : public UFortMissionEventParams
{
public:
	class AFortPlayerController*                 PlayerControllerRequestingLeaving;                 // 0x28(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortStartLeavingZoneParams");
		return Clss;
	}

	void BreakParams(class AFortPlayerController** _PlayerControllerRequestingLeaving);
};

// 0x8 (0x30 - 0x28)
// Class FortniteGame.FortRiftCreatedParams
class UFortRiftCreatedParams : public UFortMissionEventParams
{
public:
	class ABuildingRift*                         Rift;                                              // 0x28(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortRiftCreatedParams");
		return Clss;
	}

};

// 0x8 (0x30 - 0x28)
// Class FortniteGame.FortRiftDestroyedParams
class UFortRiftDestroyedParams : public UFortMissionEventParams
{
public:
	class ABuildingRift*                         Rift;                                              // 0x28(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortRiftDestroyedParams");
		return Clss;
	}

};

// 0x10 (0x38 - 0x28)
// Class FortniteGame.FortRiftBeginOverlapPlayerParams
class UFortRiftBeginOverlapPlayerParams : public UFortMissionEventParams
{
public:
	class ABuildingRift*                         Rift;                                              // 0x28(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AFortPlayerPawn*                       Player;                                            // 0x30(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortRiftBeginOverlapPlayerParams");
		return Clss;
	}

};

// 0x10 (0x38 - 0x28)
// Class FortniteGame.FortRiftEndOverlapPlayerParams
class UFortRiftEndOverlapPlayerParams : public UFortMissionEventParams
{
public:
	class ABuildingRift*                         Rift;                                              // 0x28(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AFortPlayerPawn*                       Player;                                            // 0x30(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortRiftEndOverlapPlayerParams");
		return Clss;
	}

};

// 0x8 (0x30 - 0x28)
// Class FortniteGame.FortNewPlayerHasBegunPlayParams
class UFortNewPlayerHasBegunPlayParams : public UFortMissionEventParams
{
public:
	class AFortPlayerController*                 NewPlayerPC;                                       // 0x28(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortNewPlayerHasBegunPlayParams");
		return Clss;
	}

	void SetParams(class AFortPlayerController* _NewPlayerPC, class UFortNewPlayerHasBegunPlayParams** ThisParam);
	void BreakParams(class AFortPlayerController** _NewPlayerPC);
};

// 0x8 (0x30 - 0x28)
// Class FortniteGame.FortPlayerReconnectedParams
class UFortPlayerReconnectedParams : public UFortMissionEventParams
{
public:
	class AFortPlayerController*                 ReconnectedPlayerPC;                               // 0x28(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortPlayerReconnectedParams");
		return Clss;
	}

	void SetParams(class AFortPlayerController* _ReconnectedPlayerPC, class UFortPlayerReconnectedParams** ThisParam);
	void BreakParams(class AFortPlayerController** _ReconnectedPlayerPC);
};

// 0x8 (0x140 - 0x138)
// Class FortniteGame.MovementComp_Tracer
class UMovementComp_Tracer : public UMovementComponent
{
public:
	float                                        Speed;                                             // 0x138(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_22F9[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("MovementComp_Tracer");
		return Clss;
	}

};

// 0x60 (0x90 - 0x30)
// Class FortniteGame.MyTownData
class UMyTownData : public UDataAsset
{
public:
	TArray<struct FMyTownWorkerPersonalityData>  WorkerPersonalities;                               // 0x30(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FMyTownWorkerSetBonusData>     WorkerSetBonuses;                                  // 0x40(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	class UFortPersistentResourceItemDefinition* PersonnelXpItemDefinition;                         // 0x50(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFortPersistentResourceItemDefinition* HeroXpItemDefinition;                              // 0x58(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFortPersistentResourceItemDefinition* VoucherItemDefinition;                             // 0x60(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFortPersistentResourceItemDefinition* SchematicXpItemDefinition;                         // 0x68(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFortCurrencyItemDefinition*           CurrencyItemDefinition;                            // 0x70(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFortTokenType*                        SkillPointItemDefinition;                          // 0x78(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFortTokenType*                        ResearchPointItemDefinition;                       // 0x80(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UGameplayEffect>           TotalRatingGameplayEffect;                         // 0x88(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("MyTownData");
		return Clss;
	}

};

// 0x0 (0x330 - 0x330)
// Class FortniteGame.NavGraphDebugActor
class ANavGraphDebugActor : public AActor
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("NavGraphDebugActor");
		return Clss;
	}

};

// 0x0 (0x80 - 0x80)
// Class FortniteGame.PakWhitelistCommandlet
class UPakWhitelistCommandlet : public UCommandlet
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("PakWhitelistCommandlet");
		return Clss;
	}

};

// 0x130 (0x460 - 0x330)
// Class FortniteGame.PartyDisplayManager
class APartyDisplayManager : public AActor
{
public:
	TArray<class AActor*>                        PlacementActors;                                   // 0x330(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	class AActor*                                VaultPlacementActor;                               // 0x340(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                VaultWeaponPlacementActor;                         // 0x348(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnClickedPartyPlayer;                              // 0x350(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnBeginCursorOverPartyPlayer;                      // 0x360(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnEndCursorOverPartyPlayer;                        // 0x370(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnPrefabForCurrentlyDisplayedItemChanged;          // 0x380(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UMaterialInstance*                     PlayerInMatchHoloMaterial;                         // 0x390(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<int32, struct FHeroSlotInfo>            HeroPlayerPawns;                                   // 0x398(0x50)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_22FE[0x78];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("PartyDisplayManager");
		return Clss;
	}

	void ShowLoading();
	void ShowItem(class UFortItem* ItemToView, struct FGuid& RequestId);
	void SetupPrefabVisuals();
	void ResOutPawnFromLobby(class AFortPlayerPawn* Pawn, int32 PartyIndex);
	void PlayLevelUpEffect();
	void PlayEvolutionEffect();
	void OnPlayerPawnAddedToLobby(class AFortPlayerPawn* Pawn);
	void OnPawnTouchReleased(enum class ETouchIndex FingerIndex, class AActor* TouchedActor);
	void OnPawnEndCursorOver(class AActor* TouchedActor);
	void OnPawnClicked(class AActor* TouchedActor, const struct FKey& ButtonPressed);
	void OnPawnBeginCursorOver(class AActor* TouchedActor);
	void NotifyPrefabChanged(class AActor* PrefabActor, class UFortItem* CurrentItem);
	void HideLoading();
	void HandleLoadingAssetsForItemCompleted(class UFortItem* ItemWhoseAssetsWereLoaded, TArray<class UObject*>& LoadedAssets, struct FGuid& RequestId);
	void HandleItemsShown(TArray<class UFortItem*>& ItemShown, struct FGuid& RequestId);
	class AActor* GetPrefabActorForCurrentDisplayedItem();
	struct FUniqueNetIdRepl GetPlayerIdFromPartyMemberIndex(int32 PartyMemberIndex);
	bool GetPartyMemberIndexByPlayerPawn(class AFortPlayerPawn* PlayerPawn, int32* OutPlayerIndex);
	void GetMeshForCurrentDisplayedItem(class UMeshComponent** OutDisplayedMesh);
	class AFortPlayerPawn* GetHeroPlayerPawnForCurrentDisplayedItem();
	void CharacterCustomizationFinished(class AFortPlayerPawn* Pawn);
	void BeginLoadingAssetsForItem(class UFortItem* ItemToView, TArray<TSoftObjectPtr<class UObject>>& AssetsToLoad, struct FGuid& RequestId);
};

// 0x30 (0x60 - 0x30)
// Class FortniteGame.FortAsyncAction_PartyDisplayManager_SetupPrefabVisuals
class UFortAsyncAction_PartyDisplayManager_SetupPrefabVisuals : public UBlueprintAsyncActionBase
{
public:
	UMulticastDelegateProperty_                  Completed;                                         // 0x30(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_22FF[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UFortItem*                             Item;                                              // 0x48(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2300[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FortAsyncAction_PartyDisplayManager_SetupPrefabVisuals");
		return Clss;
	}

	class UFortAsyncAction_PartyDisplayManager_SetupPrefabVisuals* SetupPrefabVisuals(class APartyDisplayManager* Target, class UFortItem* Item, struct FGuid& RequestId);
	void OnRequestedCustomizationComplete(class AFortPlayerPawn* Pawn);
	void OnPreviousCustomizationComplete(class AFortPlayerPawn* Pawn);
	void Delegate__DelegateSignature(class UFortItem* Item, const struct FGuid& RequestId);
};

// 0x30 (0x4F0 - 0x4C0)
// Class FortniteGame.PetSyncedDanceItemDefinition
class UPetSyncedDanceItemDefinition : public UAthenaDanceItemDefinition
{
public:
	TSoftObjectPtr<class UAnimMontage>           DefaultPetAnimation;                               // 0x4C0(0x28)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2301[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("PetSyncedDanceItemDefinition");
		return Clss;
	}

	TSoftObjectPtr<class UAnimMontage> GetPetAnimation(class UAthenaPetItemDefinition* PetItemDef);
};

// 0x28 (0x68 - 0x40)
// Class FortniteGame.PlayerTrapBonusModMagnitudeCalculation
class UPlayerTrapBonusModMagnitudeCalculation : public UFortGameplayModMagnitudeCalculation
{
public:
	struct FGameplayAttribute                    Attribute;                                         // 0x40(0x20)(Edit, DisableEditOnInstance, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        AttributeDefaultValue;                             // 0x60(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2302[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("PlayerTrapBonusModMagnitudeCalculation");
		return Clss;
	}

};

// 0x90 (0x188 - 0xF8)
// Class FortniteGame.PlaysetLevelStreamComponent
class UPlaysetLevelStreamComponent : public UActorComponent
{
public:
	float                                        MaxStreamInDistance;                               // 0xF8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bAutoLoadLevel : 1;                                // Mask : 0x1 0xFC(0x1)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bAllowUnload : 1;                                  // Mask : 0x2 0xFC(0x1)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2303[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UFortPlaysetItemDefinition*            CurrentPlayset;                                    // 0x100(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2304[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FFortPlaysetStreamingData             ClientPlaysetData;                                 // 0x118(0x2C)(Net, RepNotify, NoDestructor, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2305[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FUniqueNetIdRepl>              PlayersWithValidPlaysetData;                       // 0x148(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	class ULevelStreamingDynamic*                StreamedLevel;                                     // 0x158(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  ClientLoadedPackageName;                           // 0x160(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2306[0x20];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("PlaysetLevelStreamComponent");
		return Clss;
	}

	void SetPlayset(class UFortPlaysetItemDefinition* NewPlayset);
	void OnRep_ClientPlaysetData();
	void OnFinishedUnloading();
	void OnFinishedLoading_Internal();
	void OnFinishedLoading();
	bool IsLoading();
	class UFortPlaysetItemDefinition* GetCurrentPlayset();
	void ClearPlayset();
};

// 0x8 (0x798 - 0x790)
// Class FortniteGame.SBAGrantedBuildingGameplayActor
class ASBAGrantedBuildingGameplayActor : public ABuildingGameplayActor
{
public:
	struct FTeamStrategicBuildingHandle          OwningSBAHandle;                                   // 0x790(0x4)(Transient, NoDestructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_2307[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("SBAGrantedBuildingGameplayActor");
		return Clss;
	}

	class AStrategicBuildingActor* GetOwnerStrategicBuildingActor();
};

// 0x28 (0x50 - 0x28)
// Class FortniteGame.SlowStatReader
class USlowStatReader : public UObject
{
public:
	uint8                                        Pad_2308[0x28];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("SlowStatReader");
		return Clss;
	}

};

// 0x38 (0x60 - 0x28)
// Class FortniteGame.Stat
class UStat : public UObject
{
public:
	class FName                                  StatName;                                          // 0x28(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EStatRecordingPeriod              HighestPeriodToTrack;                              // 0x30(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2309[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        AbsoluteMaxValue;                                  // 0x34(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_230A[0x28];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("Stat");
		return Clss;
	}

};

// 0x78 (0xA0 - 0x28)
// Class FortniteGame.StatManager
class UStatManager : public UObject
{
public:
	TArray<class UStat*>                         Stats;                                             // 0x28(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	class FString                                StatPrefix;                                        // 0x38(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AFortPlayerController*                 FPC;                                               // 0x48(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_230B[0x50];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("StatManager");
		return Clss;
	}

};

// 0x8 (0xCE0 - 0xCD8)
// Class FortniteGame.SupplyDropSpawner
class ASupplyDropSpawner : public ABuildingProp
{
public:
	float                                        MinSpawnHeightOverride;                            // 0xCD8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxSpawnHeightOverride;                            // 0xCDC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("SupplyDropSpawner");
		return Clss;
	}

};

// 0x1B0 (0x4E0 - 0x330)
// Class FortniteGame.ThreatCloud
class AThreatCloud : public AActor
{
public:
	TArray<class UBoxComponent*>                 LightningSourceAreas;                              // 0x330(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	struct FSlateBrush                           MiniMapIconBrush;                                  // 0x340(0x88)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	float                                        MiniMapIconPercent;                                // 0x3C8(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_230D[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FSlateBrush                           MiniMapFarOffIconBrush;                            // 0x3D0(0x88)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FLinearColor                          ActiveTint;                                        // 0x458(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FLinearColor                          InActiveTint;                                      // 0x468(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        ActiveTransitionTime;                              // 0x478(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        DeathTimerDuration;                                // 0x47C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        CloudMiniMapTickInterval;                          // 0x480(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_230E[0x14];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        MiniMapFarOffIconDegreesOfArc;                     // 0x498(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_230F[0xC];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FBox                                  ThreatBoxVolume;                                   // 0x4A8(0x1C)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, NativeAccessSpecifierPrivate)
	float                                        GroundLevelUnderCloud;                             // 0x4C4(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2310[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FVector>                       GoalActorLocations;                                // 0x4D0(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("ThreatCloud");
		return Clss;
	}

	void OnThreatVolumeChanged();
	void OnLightningStrike(struct FVector& StartLocation, struct FVector& EndLocation, class ABuildingRift* Rift, bool bLightningStruckRift);
	void OnCloudStart();
	void OnCloudHiddenChange(bool bCloudsAreHidden);
	void OnCloudDeactivated(enum class EFortThreatDeactivationType DeactivationType);
	void OnCloudActivated();
	void OnBeginDeath();
	void ManualLightningFlash();
	struct FBox GetThreatVolume();
};

// 0x10 (0x388 - 0x378)
// Class FortniteGame.WaterVolume_Shallow
class AWaterVolume_Shallow : public APhysicsVolume
{
public:
	class USoundBase*                            EntrySound;                                        // 0x378(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundBase*                            ExitSound;                                         // 0x380(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("WaterVolume_Shallow");
		return Clss;
	}

};

// 0x0 (0x388 - 0x388)
// Class FortniteGame.WaterVolume_Athena
class AWaterVolume_Athena : public AWaterVolume_Shallow
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("WaterVolume_Athena");
		return Clss;
	}

};

// 0x18 (0x390 - 0x378)
// Class FortniteGame.WaterVolume_Deep
class AWaterVolume_Deep : public APhysicsVolume
{
public:
	class USoundBase*                            EntrySound;                                        // 0x378(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundBase*                            ExitSound;                                         // 0x380(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        DamagePerSec;                                      // 0x388(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2311[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("WaterVolume_Deep");
		return Clss;
	}

};

// 0x58 (0x88 - 0x30)
// Class FortniteGame.WeaponHitNotifyAudioBank
class UWeaponHitNotifyAudioBank : public UDataAsset
{
public:
	class USoundBase*                            SoundBody;                                         // 0x30(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundBase*                            SoundCrit;                                         // 0x38(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundBase*                            SoundShield;                                       // 0x40(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundBase*                            SoundDeath;                                        // 0x48(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundBase*                            SoundDeathCrit;                                    // 0x50(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundBase*                            SoundBodyReceive;                                  // 0x58(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundBase*                            SoundCritReceive;                                  // 0x60(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundBase*                            SoundDeathReceive;                                 // 0x68(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundBase*                            SoundDeathCritReceive;                             // 0x70(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundBase*                            SoundFallReceive;                                  // 0x78(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundBase*                            SoundFallDeathReceive;                             // 0x80(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("WeaponHitNotifyAudioBank");
		return Clss;
	}

};

// 0x18 (0x348 - 0x330)
// Class FortniteGame.WorldMapPin
class AWorldMapPin : public AActor
{
public:
	class USceneComponent*                       SceneComponent;                                    // 0x330(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FString                                TheaterId;                                         // 0x338(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("WorldMapPin");
		return Clss;
	}

	void SetTheaterId(const class FString& NewId);
	void OnTheaterIdSet();
};

// 0x20 (0x350 - 0x330)
// Class FortniteGame.WorldMapPinManager
class AWorldMapPinManager : public AActor
{
public:
	uint8                                        Pad_2312[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AFortStaticMeshActor*                  WorldMapMesh;                                      // 0x338(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class AWorldMapPin*>                  CurrentPins;                                       // 0x340(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("WorldMapPinManager");
		return Clss;
	}

	class AWorldMapPin* CreateWorldMapPin(const class FString& TheaterId);
};

// 0x228 (0x258 - 0x30)
// Class FortniteGame.WorldTheme
class UWorldTheme : public UDataAsset
{
public:
	TArray<struct FTileGroupSelection>           TileGroups;                                        // 0x30(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	class UWorldTileGroup*                       FillerTileGroup;                                   // 0x40(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaxCircuitSize;                                    // 0x48(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2313[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftObjectPtr<class UWorld>                 BorderWorld_I;                                     // 0x50(0x28)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UWorld>                 BorderWorld_IO;                                    // 0x78(0x28)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UWorld>                 BorderWorld_O;                                     // 0xA0(0x28)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UWorld>                 BorderWorld_OO;                                    // 0xC8(0x28)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UWorld>                 BorderWorld_OOO;                                   // 0xF0(0x28)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UWorld>                 BorderWorld_OOOO;                                  // 0x118(0x28)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UWorld>                 BorderWorld_S;                                     // 0x140(0x28)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UWorld>                 BorderWorld_SS;                                    // 0x168(0x28)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UWorld>                 BorderWorld_OS;                                    // 0x190(0x28)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UWorld>                 BorderWorld_SO;                                    // 0x1B8(0x28)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UWorld>                 BorderWorld_SOO;                                   // 0x1E0(0x28)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UWorld>                 BorderWorld_U;                                     // 0x208(0x28)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UWorld>                 BorderWorld_R;                                     // 0x230(0x28)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("WorldTheme");
		return Clss;
	}

};

// 0x20 (0xEE0 - 0xEC0)
// Class FortniteGame.WorldTileFoundation
class AWorldTileFoundation : public ABuildingFoundation
{
public:
	//uint8                                      NumRotations;                                      // 0xEB8(0x1)(Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2314[0x20];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("WorldTileFoundation");
		return Clss;
	}

};

// 0xF8 (0x128 - 0x30)
// Class FortniteGame.WorldTileGroup
class UWorldTileGroup : public UDataAsset
{
public:
	class FString                                TileID;                                            // 0x30(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bOnlyPlaceDiagonalWithAdjacent : 1;                // Mask : 0x1 0x40(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2315[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FTileGroupMapInfo>             FlatMapInfos;                                      // 0x48(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FTileGroupMapInfo>             InnerMapInfos;                                     // 0x58(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FTileGroupMapInfo>             OuterMapInfos;                                     // 0x68(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FTileGroupMapInfo>             StraightMapInfos;                                  // 0x78(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UWorld>                 Sim_FlatWorld;                                     // 0x88(0x28)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UWorld>                 Sim_InnerWorld;                                    // 0xB0(0x28)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UWorld>                 Sim_OuterWorld;                                    // 0xD8(0x28)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UWorld>                 Sim_StraightWorld;                                 // 0x100(0x28)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("WorldTileGroup");
		return Clss;
	}

};

// 0x58 (0x80 - 0x28)
// Class FortniteGame.WorldTileManager
class UWorldTileManager : public UObject
{
public:
	class AFortWorldManager*                     WorldManager;                                      // 0x28(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2316[0x50];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("WorldTileManager");
		return Clss;
	}

};

// 0x38 (0x68 - 0x30)
// Class FortniteGame.WorldTileType
class UWorldTileType : public UDataAsset
{
public:
	class FString                                TileID;                                            // 0x30(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FString>                        TileGroups;                                        // 0x40(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	int32                                        TileWeight;                                        // 0x50(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortTileEdgeType                 North;                                             // 0x54(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortTileEdgeType                 East;                                              // 0x55(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortTileEdgeType                 South;                                             // 0x56(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortTileEdgeType                 West;                                              // 0x57(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FString>                        MapNames;                                          // 0x58(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("WorldTileType");
		return Clss;
	}

};

// 0xB8 (0x3E8 - 0x330)
// Class FortniteGame.WrapPreviewGridActor
class AWrapPreviewGridActor : public AInfo
{
public:
	class UAthenaItemWrapDefinition*             WrapToApply;                                       // 0x330(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	enum class EItemWrapMaterialType             MaterialTypeForRawMeshes;                          // 0x338(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2317[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               SpawnAxisX;                                        // 0x33C(0xC)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FVector                               SpawnAxisY;                                        // 0x348(0xC)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        WidthInItems;                                      // 0x354(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FVector2D                             SpawnSpacing;                                      // 0x358(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FRotator                              SpawnRotation;                                     // 0x360(0xC)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPrivate)
	struct FVector                               IconOffset;                                        // 0x36C(0xC)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bScanForWeapons;                                   // 0x378(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bExcludePrototypeRangedWeapons;                    // 0x379(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bFilterOutRarityDupesForRangedWeapons;             // 0x37A(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EWrapPreviewGridLockerMode        LockerFilterMode;                                  // 0x37B(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bShowOnlyItemsThatDontHaveWrapLockerSlot;          // 0x37C(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bShowWrapMatchIcon;                                // 0x37D(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bHasSectionLimit;                                  // 0x37E(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2318[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        MaterialIndexLimit;                                // 0x380(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2319[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FDirectoryPath                        RangedWeaponPath;                                  // 0x388(0x10)(Edit, Protected, NativeAccessSpecifierProtected)
	TArray<TSubclassOf<class AActor>>            ListOfActorsToSpawn;                               // 0x398(0x10)(Edit, BlueprintVisible, ZeroConstructor, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	TArray<class USkeletalMesh*>                 ListOfMeshesToSpawn;                               // 0x3A8(0x10)(Edit, BlueprintVisible, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<class AActor*>                        SpawnedActors;                                     // 0x3B8(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<class UTexture2D*>                    LockerCategoryMarkers;                             // 0x3C8(0x10)(Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	class UTexture2D*                            FailedToMatchLockerMarker;                         // 0x3D8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        StatusIconSize;                                    // 0x3E0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bStatusIconScreenSizeScaled;                       // 0x3E4(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_231A[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("WrapPreviewGridActor");
		return Clss;
	}

	void SetWrap(class UAthenaItemWrapDefinition* NewWrap);
};

}

#ifdef _MSC_VER
	#pragma pack(pop)
#endif
